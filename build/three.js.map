{"version":3,"file":"three.js","sources":["../src/polyfills.ts","../src/core/EventDispatcher.ts","../src/constants.ts","../src/math/Math.ts","../src/math/Vector2.ts","../src/textures/Texture.ts","../src/math/Vector4.ts","../src/renderers/WebGLRenderTarget.ts","../src/renderers/WebGLRenderTargetCube.ts","../src/math/Quaternion.ts","../src/math/Vector3.ts","../src/math/Euler.ts","../src/math/Matrix4.ts","../src/textures/CubeTexture.ts","../src/renderers/webgl/WebGLUniforms.ts","../src/math/Color.ts","../src/math/Matrix3.ts","../src/renderers/shaders/UniformsUtils.ts","../src/renderers/shaders/ShaderChunk/alphamap_fragment.glsl.ts","../src/renderers/shaders/ShaderChunk/alphamap_pars_fragment.glsl.ts","../src/renderers/shaders/ShaderChunk/alphatest_fragment.glsl.ts","../src/renderers/shaders/ShaderChunk/aomap_fragment.glsl.ts","../src/renderers/shaders/ShaderChunk/aomap_pars_fragment.glsl.ts","../src/renderers/shaders/ShaderChunk/begin_vertex.glsl.ts","../src/renderers/shaders/ShaderChunk/beginnormal_vertex.glsl.ts","../src/renderers/shaders/ShaderChunk/bsdfs.glsl.ts","../src/renderers/shaders/ShaderChunk/bumpmap_pars_fragment.glsl.ts","../src/renderers/shaders/ShaderChunk/clipping_planes_fragment.glsl.ts","../src/renderers/shaders/ShaderChunk/clipping_planes_pars_fragment.glsl.ts","../src/renderers/shaders/ShaderChunk/clipping_planes_pars_vertex.glsl.ts","../src/renderers/shaders/ShaderChunk/clipping_planes_vertex.glsl.ts","../src/renderers/shaders/ShaderChunk/color_fragment.glsl.ts","../src/renderers/shaders/ShaderChunk/color_pars_fragment.glsl.ts","../src/renderers/shaders/ShaderChunk/color_pars_vertex.glsl.ts","../src/renderers/shaders/ShaderChunk/color_vertex.glsl.ts","../src/renderers/shaders/ShaderChunk/common.glsl.ts","../src/renderers/shaders/ShaderChunk/cube_uv_reflection_fragment.glsl.ts","../src/renderers/shaders/ShaderChunk/defaultnormal_vertex.glsl.ts","../src/renderers/shaders/ShaderChunk/displacementmap_pars_vertex.glsl.ts","../src/renderers/shaders/ShaderChunk/displacementmap_vertex.glsl.ts","../src/renderers/shaders/ShaderChunk/emissivemap_fragment.glsl.ts","../src/renderers/shaders/ShaderChunk/emissivemap_pars_fragment.glsl.ts","../src/renderers/shaders/ShaderChunk/encodings_fragment.glsl.ts","../src/renderers/shaders/ShaderChunk/encodings_pars_fragment.glsl.ts","../src/renderers/shaders/ShaderChunk/envmap_fragment.glsl.ts","../src/renderers/shaders/ShaderChunk/envmap_pars_fragment.glsl.ts","../src/renderers/shaders/ShaderChunk/envmap_pars_vertex.glsl.ts","../src/renderers/shaders/ShaderChunk/envmap_vertex.glsl.ts","../src/renderers/shaders/ShaderChunk/fog_fragment.glsl.ts","../src/renderers/shaders/ShaderChunk/fog_pars_fragment.glsl.ts","../src/renderers/shaders/ShaderChunk/lightmap_fragment.glsl.ts","../src/renderers/shaders/ShaderChunk/lightmap_pars_fragment.glsl.ts","../src/renderers/shaders/ShaderChunk/lights_lambert_vertex.glsl.ts","../src/renderers/shaders/ShaderChunk/lights_pars.glsl.ts","../src/renderers/shaders/ShaderChunk/lights_phong_fragment.glsl.ts","../src/renderers/shaders/ShaderChunk/lights_phong_pars_fragment.glsl.ts","../src/renderers/shaders/ShaderChunk/lights_physical_fragment.glsl.ts","../src/renderers/shaders/ShaderChunk/lights_physical_pars_fragment.glsl.ts","../src/renderers/shaders/ShaderChunk/lights_template.glsl.ts","../src/renderers/shaders/ShaderChunk/logdepthbuf_fragment.glsl.ts","../src/renderers/shaders/ShaderChunk/logdepthbuf_pars_fragment.glsl.ts","../src/renderers/shaders/ShaderChunk/logdepthbuf_pars_vertex.glsl.ts","../src/renderers/shaders/ShaderChunk/logdepthbuf_vertex.glsl.ts","../src/renderers/shaders/ShaderChunk/map_fragment.glsl.ts","../src/renderers/shaders/ShaderChunk/map_pars_fragment.glsl.ts","../src/renderers/shaders/ShaderChunk/map_particle_fragment.glsl.ts","../src/renderers/shaders/ShaderChunk/map_particle_pars_fragment.glsl.ts","../src/renderers/shaders/ShaderChunk/metalnessmap_fragment.glsl.ts","../src/renderers/shaders/ShaderChunk/metalnessmap_pars_fragment.glsl.ts","../src/renderers/shaders/ShaderChunk/morphnormal_vertex.glsl.ts","../src/renderers/shaders/ShaderChunk/morphtarget_pars_vertex.glsl.ts","../src/renderers/shaders/ShaderChunk/morphtarget_vertex.glsl.ts","../src/renderers/shaders/ShaderChunk/normal_flip.glsl.ts","../src/renderers/shaders/ShaderChunk/normal_fragment.glsl.ts","../src/renderers/shaders/ShaderChunk/normalmap_pars_fragment.glsl.ts","../src/renderers/shaders/ShaderChunk/packing.glsl.ts","../src/renderers/shaders/ShaderChunk/premultiplied_alpha_fragment.glsl.ts","../src/renderers/shaders/ShaderChunk/project_vertex.glsl.ts","../src/renderers/shaders/ShaderChunk/roughnessmap_fragment.glsl.ts","../src/renderers/shaders/ShaderChunk/roughnessmap_pars_fragment.glsl.ts","../src/renderers/shaders/ShaderChunk/shadowmap_pars_fragment.glsl.ts","../src/renderers/shaders/ShaderChunk/shadowmap_pars_vertex.glsl.ts","../src/renderers/shaders/ShaderChunk/shadowmap_vertex.glsl.ts","../src/renderers/shaders/ShaderChunk/shadowmask_pars_fragment.glsl.ts","../src/renderers/shaders/ShaderChunk/skinbase_vertex.glsl.ts","../src/renderers/shaders/ShaderChunk/skinning_pars_vertex.glsl.ts","../src/renderers/shaders/ShaderChunk/skinning_vertex.glsl.ts","../src/renderers/shaders/ShaderChunk/skinnormal_vertex.glsl.ts","../src/renderers/shaders/ShaderChunk/specularmap_fragment.glsl.ts","../src/renderers/shaders/ShaderChunk/specularmap_pars_fragment.glsl.ts","../src/renderers/shaders/ShaderChunk/tonemapping_fragment.glsl.ts","../src/renderers/shaders/ShaderChunk/tonemapping_pars_fragment.glsl.ts","../src/renderers/shaders/ShaderChunk/uv_pars_fragment.glsl.ts","../src/renderers/shaders/ShaderChunk/uv_pars_vertex.glsl.ts","../src/renderers/shaders/ShaderChunk/uv_vertex.glsl.ts","../src/renderers/shaders/ShaderChunk/uv2_pars_fragment.glsl.ts","../src/renderers/shaders/ShaderChunk/uv2_pars_vertex.glsl.ts","../src/renderers/shaders/ShaderChunk/uv2_vertex.glsl.ts","../src/renderers/shaders/ShaderChunk/worldpos_vertex.glsl.ts","../src/renderers/shaders/ShaderLib/cube_frag.glsl.ts","../src/renderers/shaders/ShaderLib/cube_vert.glsl.ts","../src/renderers/shaders/ShaderLib/depth_frag.glsl.ts","../src/renderers/shaders/ShaderLib/depth_vert.glsl.ts","../src/renderers/shaders/ShaderLib/distanceRGBA_frag.glsl.ts","../src/renderers/shaders/ShaderLib/distanceRGBA_vert.glsl.ts","../src/renderers/shaders/ShaderLib/equirect_frag.glsl.ts","../src/renderers/shaders/ShaderLib/equirect_vert.glsl.ts","../src/renderers/shaders/ShaderLib/linedashed_frag.glsl.ts","../src/renderers/shaders/ShaderLib/linedashed_vert.glsl.ts","../src/renderers/shaders/ShaderLib/meshbasic_frag.glsl.ts","../src/renderers/shaders/ShaderLib/meshbasic_vert.glsl.ts","../src/renderers/shaders/ShaderLib/meshlambert_frag.glsl.ts","../src/renderers/shaders/ShaderLib/meshlambert_vert.glsl.ts","../src/renderers/shaders/ShaderLib/meshphong_frag.glsl.ts","../src/renderers/shaders/ShaderLib/meshphong_vert.glsl.ts","../src/renderers/shaders/ShaderLib/meshphysical_frag.glsl.ts","../src/renderers/shaders/ShaderLib/meshphysical_vert.glsl.ts","../src/renderers/shaders/ShaderLib/normal_frag.glsl.ts","../src/renderers/shaders/ShaderLib/normal_vert.glsl.ts","../src/renderers/shaders/ShaderLib/points_frag.glsl.ts","../src/renderers/shaders/ShaderLib/points_vert.glsl.ts","../src/renderers/shaders/ShaderLib/shadow_frag.glsl.ts","../src/renderers/shaders/ShaderLib/shadow_vert.glsl.ts","../src/renderers/shaders/ShaderChunk.ts","../src/renderers/shaders/UniformsLib.ts","../src/renderers/shaders/ShaderLib.ts","../src/math/Box2.ts","../src/renderers/webgl/plugins/LensFlarePlugin.ts","../src/scenes/Fog.ts","../src/scenes/FogExp2.ts","../src/renderers/webgl/plugins/SpritePlugin.ts","../src/materials/Material.ts","../src/materials/ShaderMaterial.ts","../src/materials/MeshDepthMaterial.ts","../src/core/Face3.ts","../src/core/Layers.ts","../src/core/Object3D.ts","../src/math/Ray.ts","../src/math/Line3.ts","../src/math/Plane.ts","../src/math/Triangle.ts","../src/materials/MultiMaterial.ts","../src/materials/MeshBasicMaterial.ts","../src/core/BufferAttribute.ts","../src/core/InterleavedBufferAttribute.ts","../src/core/DirectGeometry.ts","../src/materials/PointsMaterial.ts","../src/objects/Points.ts","../src/materials/LineBasicMaterial.ts","../src/objects/Line.ts","../src/core/BufferGeometry.ts","../src/objects/Mesh.ts","../src/core/Geometry.ts","../src/math/Box3.ts","../src/math/Sphere.ts","../src/math/Frustum.ts","../src/cameras/Camera.ts","../src/cameras/OrthographicCamera.ts","../src/cameras/PerspectiveCamera.ts","../src/lights/Light.ts","../src/lights/LightShadow.ts","../src/lights/PointLight.ts","../src/lights/SpotLightShadow.ts","../src/textures/DataTexture.ts","../src/objects/Bone.ts","../src/objects/Skeleton.ts","../src/objects/SkinnedMesh.ts","../src/renderers/webgl/WebGLShadowMap.ts","../src/geometries/BoxBufferGeometry.ts","../src/geometries/PlaneBufferGeometry.ts","../src/materials/MeshPhongMaterial.ts","../src/materials/MeshStandardMaterial.ts","../src/materials/MeshLambertMaterial.ts","../src/materials/MeshPhysicalMaterial.ts","../src/materials/MeshNormalMaterial.ts","../src/materials/RawShaderMaterial.ts","../src/materials/LineDashedMaterial.ts","../src/renderers/webgl/WebGLIndexedBufferRenderer.ts","../src/renderers/webgl/WebGLBufferRenderer.ts","../src/renderers/webgl/WebGLLights.ts","../src/renderers/webgl/WebGLShader.ts","../src/renderers/webgl/WebGLProgram.ts","../src/renderers/webgl/WebGLPrograms.ts","../src/renderers/webgl/WebGLGeometries.ts","../src/renderers/webgl/WebGLObjects.ts","../src/textures/DepthTexture.ts","../src/textures/CompressedTexture.ts","../src/renderers/webgl/WebGLTextures.ts","../src/renderers/webgl/WebGLProperties.ts","../src/renderers/webgl/WebGLState.ts","../src/renderers/webgl/WebGLCapabilities.ts","../src/renderers/webgl/WebGLExtensions.ts","../src/renderers/webgl/WebGLClipping.ts","../src/lights/AmbientLight.ts","../src/lights/DirectionalLightShadow.ts","../src/lights/DirectionalLight.ts","../src/lights/HemisphereLight.ts","../src/lights/SpotLight.ts","../src/materials/SpriteMaterial.ts","../src/objects/Sprite.ts","../src/objects/LensFlare.ts","../src/extras/objects/ImmediateRenderObject.ts","../src/objects/LineSegments.ts","../src/core/InstancedBufferGeometry.ts","../src/core/InstancedBufferAttribute.ts","../src/core/InterleavedBuffer.ts","../src/core/InstancedInterleavedBuffer.ts","../src/renderers/WebGLRenderer.ts","../src/scenes/Scene.ts","../src/objects/LOD.ts","../src/objects/Group.ts","../src/textures/VideoTexture.ts","../src/textures/CanvasTexture.ts","../src/geometries/WireframeGeometry.ts","../src/geometries/ParametricBufferGeometry.ts","../src/geometries/ParametricGeometry.ts","../src/geometries/PolyhedronBufferGeometry.ts","../src/geometries/TetrahedronBufferGeometry.ts","../src/geometries/TetrahedronGeometry.ts","../src/geometries/OctahedronBufferGeometry.ts","../src/geometries/OctahedronGeometry.ts","../src/geometries/IcosahedronBufferGeometry.ts","../src/geometries/IcosahedronGeometry.ts","../src/geometries/DodecahedronBufferGeometry.ts","../src/geometries/DodecahedronGeometry.ts","../src/geometries/PolyhedronGeometry.ts","../src/geometries/TubeBufferGeometry.ts","../src/geometries/TubeGeometry.ts","../src/geometries/TorusKnotBufferGeometry.ts","../src/geometries/TorusKnotGeometry.ts","../src/geometries/TorusBufferGeometry.ts","../src/geometries/TorusGeometry.ts","../src/extras/ShapeUtils.ts","../src/geometries/ExtrudeGeometry.ts","../src/extras/core/Curve.ts","../src/extras/curves/LineCurve.ts","../src/extras/CurveUtils.ts","../src/extras/curves/SplineCurve.ts","../src/extras/curves/EllipseCurve.ts","../src/extras/core/CurvePath.ts","../src/extras/curves/CubicBezierCurve.ts","../src/extras/curves/QuadraticBezierCurve.ts","../src/extras/core/Path.ts","../src/geometries/ShapeGeometry.ts","../src/extras/core/Shape.ts","../src/extras/core/ShapePath.ts","../src/extras/core/Font.ts","../src/geometries/TextGeometry.ts","../src/geometries/SphereBufferGeometry.ts","../src/geometries/SphereGeometry.ts","../src/geometries/RingBufferGeometry.ts","../src/geometries/RingGeometry.ts","../src/geometries/PlaneGeometry.ts","../src/geometries/LatheBufferGeometry.ts","../src/geometries/LatheGeometry.ts","../src/geometries/EdgesGeometry.ts","../src/geometries/CylinderBufferGeometry.ts","../src/geometries/CylinderGeometry.ts","../src/geometries/ConeGeometry.ts","../src/geometries/ConeBufferGeometry.ts","../src/geometries/CircleBufferGeometry.ts","../src/geometries/CircleGeometry.ts","../src/geometries/BoxGeometry.ts","../src/materials/ShadowMaterial.ts","../src/loaders/Cache.ts","../src/loaders/LoadingManager.ts","../src/loaders/XHRLoader.ts","../src/loaders/CompressedTextureLoader.ts","../src/loaders/BinaryTextureLoader.ts","../src/loaders/ImageLoader.ts","../src/loaders/CubeTextureLoader.ts","../src/loaders/TextureLoader.ts","../src/animation/AnimationUtils.ts","../src/math/Interpolant.ts","../src/math/interpolants/CubicInterpolant.ts","../src/math/interpolants/LinearInterpolant.ts","../src/math/interpolants/DiscreteInterpolant.ts","../src/animation/KeyframeTrack.ts","../src/animation/tracks/StringKeyframeTrack.ts","../src/animation/tracks/BooleanKeyframeTrack.ts","../src/math/interpolants/QuaternionLinearInterpolant.ts","../src/animation/tracks/QuaternionKeyframeTrack.ts","../src/animation/tracks/ColorKeyframeTrack.ts","../src/animation/tracks/VectorKeyframeTrack.ts","../src/animation/tracks/NumberKeyframeTrack.ts","../src/animation/KeyframeTrackUtils.ts","../src/animation/AnimationClip.ts","../src/loaders/MaterialLoader.ts","../src/loaders/BufferGeometryLoader.ts","../src/loaders/Loader.ts","../src/loaders/JSONLoader.ts","../src/loaders/ObjectLoader.ts","../src/loaders/FontLoader.ts","../src/audio/AudioContext.ts","../src/loaders/AudioLoader.ts","../src/cameras/StereoCamera.ts","../src/cameras/CubeCamera.ts","../src/audio/AudioListener.ts","../src/audio/Audio.ts","../src/audio/PositionalAudio.ts","../src/audio/AudioAnalyser.ts","../src/animation/PropertyMixer.ts","../src/animation/AnimationObjectGroup.ts","../src/animation/PropertyBinding.ts","../src/animation/AnimationAction.ts","../src/animation/AnimationMixer.ts","../src/core/Uniform.ts","../src/core/Raycaster.ts","../src/core/Clock.ts","../src/math/Spline.ts","../src/math/Spherical.ts","../src/extras/objects/MorphBlendMesh.ts","../src/extras/helpers/VertexNormalsHelper.ts","../src/extras/helpers/SpotLightHelper.ts","../src/extras/helpers/SkeletonHelper.ts","../src/extras/helpers/PointLightHelper.ts","../src/extras/helpers/HemisphereLightHelper.ts","../src/extras/helpers/GridHelper.ts","../src/extras/helpers/FaceNormalsHelper.ts","../src/extras/helpers/DirectionalLightHelper.ts","../src/extras/helpers/CameraHelper.ts","../src/extras/helpers/BoundingBoxHelper.ts","../src/extras/helpers/BoxHelper.ts","../src/extras/helpers/ArrowHelper.ts","../src/extras/helpers/AxisHelper.ts","../src/extras/curves/CatmullRomCurve3.ts","../src/extras/curves/ClosedSplineCurve3.ts","../src/extras/curves/SplineCurve3.ts","../src/extras/curves/CubicBezierCurve3.ts","../src/extras/curves/QuadraticBezierCurve3.ts","../src/extras/curves/LineCurve3.ts","../src/extras/curves/ArcCurve.ts","../src/extras/SceneUtils.ts","../src/Three.Legacy.ts"],"sourcesContent":["// Polyfills\nif (Number.EPSILON === undefined) {\n  ///Number.EPSILON = Math.pow(2, - 52);\n  Object.defineProperty(Number, 'EPSILON', { value: Math.pow(2, - 52) });\n}\n//\nif (Math.sign === undefined) {\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sign\n  Math.sign = function(x) {\n    return (x < 0) ? - 1 : (x > 0) ? 1 : + x;\n  };\n}\nif (Function.prototype.name === undefined) {\n  // Missing in IE9-11.\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name\n  Object.defineProperty(Function.prototype, 'name', {\n    get: function(/*this: Function*/) {\n      return this.toString().match(/^\\s*function\\s*(\\S*)\\s*\\(/)[1];\n    }\n  });\n}\nif (Object.assign === undefined) {\n  // Missing in IE.\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n  (function() {\n    Object.assign = function(target/*: any*/) {\n      'use strict';\n      if (target === undefined || target === null) {\n        throw new TypeError('Cannot convert undefined or null to object');\n      }\n      let output = Object(target);\n      for (let index = 1; index < arguments.length; index ++) {\n        let source = arguments[index];\n        if (source !== undefined && source !== null) {\n          for (let nextKey in source) {\n            if (Object.prototype.hasOwnProperty.call(source, nextKey)) {\n              output[nextKey] = source[nextKey];\n            }\n          }\n        }\n      }\n      return output;\n    };\n  })();\n}\n","/**\n * https://github.com/mrdoob/eventdispatcher.js/\n */\nexport class EventDispatcher {\n  _listeners: any;\n  addEventListener(type: string, listener: (event: any) => void): void {\n    if (this._listeners === undefined) this._listeners = {};\n    const listeners = this._listeners;\n    if (listeners[type] === undefined) {\n      listeners[type] = [];\n    }\n    if (listeners[type].indexOf(listener) === - 1) {\n      listeners[type].push(listener);\n    }\n  }\n  hasEventListener(type: string, listener: (event: any) => void): boolean {\n    if (this._listeners === undefined) return false;\n    const listeners = this._listeners;\n    if (listeners[type] !== undefined && listeners[type].indexOf(listener) !== - 1) {\n      return true;\n    }\n    return false;\n  }\n  removeEventListener(type: string, listener: (event: any) => void): void {\n    if (this._listeners === undefined) return;\n    const listeners = this._listeners;\n    const listenerArray = listeners[type];\n    if (listenerArray !== undefined) {\n      const index = listenerArray.indexOf(listener);\n      if (index !== - 1) {\n        listenerArray.splice(index, 1);\n      }\n    }\n  }\n  dispatchEvent(event: any): void {\n    if (this._listeners === undefined) return;\n    const listeners = this._listeners;\n    const listenerArray = listeners[event.type];\n    if (listenerArray !== undefined) {\n      event.target = this;\n      const array = [];\n      const length = listenerArray.length;\n      for (let i = 0; i < length; i ++) {\n        array[i] = listenerArray[i];\n      }\n      for (let i = 0; i < length; i ++) {\n        array[i].call(this, event);\n      }\n    }\n  }\n  apply(target: any): void {\n    console.warn(\"THREE.EventDispatcher: .apply is deprecated, \" +\n        \"just inherit or Object.assign the prototype to mix-in.\");\n    Object.assign(target, this);\n  }\n}\n","export const REVISION = \"82\";\n//\nexport enum MOUSE { LEFT = 0, MIDDLE = 1, RIGHT = 2 }\n//\nexport enum CullFace {\n  None = 0,\n  Back = 1,\n  Front = 2,\n  FrontBack = 3\n}\nexport const CullFaceNone = CullFace.None;\nexport const CullFaceBack = CullFace.Back;\nexport const CullFaceFront = CullFace.Front;\nexport const CullFaceFrontBack = CullFace.FrontBack;\n//\nexport enum FrontFaceDirection {\n  CW = 0,\n  CCW = 1\n}\nexport const FrontFaceDirectionCW: FrontFaceDirection = FrontFaceDirection.CW;\nexport const FrontFaceDirectionCCW: FrontFaceDirection = FrontFaceDirection.CCW;\n//\nexport enum ShadowMap {\n  Basic = 0,\n  PCF = 1,\n  PCFSoft = 2\n}\nexport const BasicShadowMap: ShadowMap = ShadowMap.Basic;\nexport const PCFShadowMap: ShadowMap = ShadowMap.PCF;\nexport const PCFSoftShadowMap: ShadowMap = ShadowMap.PCFSoft;\n//\nexport enum SideMode {\n  Front = 0,\n  Back = 1,\n  Double = 2\n}\nexport const FrontSide: SideMode = SideMode.Front;\nexport const BackSide: SideMode = SideMode.Back;\nexport const DoubleSide: SideMode = SideMode.Double;\n//\nexport enum ShadingMode {\n  Flat = 1,\n  Smooth = 2\n}\nexport const FlatShading: ShadingMode = ShadingMode.Flat;\nexport const SmoothShading: ShadingMode = ShadingMode.Smooth;\n//\nexport enum ColorsMode {\n  None = 0,\n  Face = 1,\n  Vertex = 2\n}\nexport const NoColors: ColorsMode = ColorsMode.None;\nexport const FaceColors: ColorsMode = ColorsMode.Face;\nexport const VertexColors: ColorsMode = ColorsMode.Vertex;\n//\nexport enum BlendingMode {\n  None = 0,\n  Normal = 1,\n  Additive = 2,\n  Subtractive = 3,\n  Multiply = 4,\n  Custom = 5\n}\nexport const NoBlending: BlendingMode = BlendingMode.None;\nexport const NormalBlending: BlendingMode = BlendingMode.Normal;\nexport const AdditiveBlending: BlendingMode = BlendingMode.Additive;\nexport const SubtractiveBlending: BlendingMode = BlendingMode.Subtractive;\nexport const MultiplyBlending: BlendingMode = BlendingMode.Multiply;\nexport const CustomBlending: BlendingMode = BlendingMode.Custom;\n//\nexport enum BlendingEquation {\n  Add = 100,\n  Subtract = 101,\n  ReverseSubtract = 102,\n  Min = 103,\n  Max = 104\n}\nexport const AddEquation: BlendingEquation = BlendingEquation.Add;\nexport const SubtractEquation: BlendingEquation = BlendingEquation.Subtract;\nexport const ReverseSubtractEquation: BlendingEquation = BlendingEquation.ReverseSubtract;\nexport const MinEquation: BlendingEquation = BlendingEquation.Min;\nexport const MaxEquation: BlendingEquation = BlendingEquation.Max;\n//\nexport enum BlendingFactor {\n  Zero = 200,\n  One = 201,\n  SrcColor = 202,\n  OneMinusSrcColor = 203,\n  SrcAlpha = 204,\n  OneMinusSrcAlpha = 205,\n  DstAlpha = 206,\n  OneMinusDstAlpha = 207,\n  DstColor = 208,\n  OneMinusDstColor = 209,\n  SrcAlphaSaturate = 210,\n}\nexport const ZeroFactor: BlendingFactor = BlendingFactor.Zero;\nexport const OneFactor: BlendingFactor = BlendingFactor.One;\nexport const SrcColorFactor: BlendingFactor = BlendingFactor.SrcColor;\nexport const OneMinusSrcColorFactor: BlendingFactor = BlendingFactor.OneMinusSrcColor;\nexport const SrcAlphaFactor: BlendingFactor = BlendingFactor.SrcAlpha;\nexport const OneMinusSrcAlphaFactor: BlendingFactor = BlendingFactor.OneMinusSrcAlpha;\nexport const DstAlphaFactor: BlendingFactor = BlendingFactor.DstAlpha;\nexport const OneMinusDstAlphaFactor: BlendingFactor = BlendingFactor.OneMinusDstAlpha;\nexport const DstColorFactor: BlendingFactor = BlendingFactor.DstColor;\nexport const OneMinusDstColorFactor: BlendingFactor = BlendingFactor.OneMinusDstColor;\nexport const SrcAlphaSaturateFactor: BlendingFactor = BlendingFactor.SrcAlphaSaturate;\n//\nexport enum DepthFunction {\n  Never = 0,\n  Always = 1,\n  Less = 2,\n  LessEqual = 3,\n  Equal = 4,\n  GreaterEqual = 5,\n  Greater = 6,\n  NotEqual = 7\n}\nexport const NeverDepth: DepthFunction = DepthFunction.Never;\nexport const AlwaysDepth: DepthFunction = DepthFunction.Always;\nexport const LessDepth: DepthFunction = DepthFunction.Less;\nexport const LessEqualDepth: DepthFunction = DepthFunction.LessEqual;\nexport const EqualDepth: DepthFunction = DepthFunction.Equal;\nexport const GreaterEqualDepth: DepthFunction = DepthFunction.GreaterEqual;\nexport const GreaterDepth: DepthFunction = DepthFunction.Greater;\nexport const NotEqualDepth: DepthFunction = DepthFunction.NotEqual;\n//\nexport enum BlendingOperation {\n  Multiply = 0,\n  Mix = 1,\n  Add = 2\n}\nexport const MultiplyOperation: BlendingOperation = BlendingOperation.Multiply;\nexport const MixOperation: BlendingOperation = BlendingOperation.Mix;\nexport const AddOperation: BlendingOperation = BlendingOperation.Add;\n//\nexport enum ToneMapping {\n  None = 0,\n  Linear = 1,\n  Reinhard = 2,\n  Uncharted2 = 3,\n  Cineon = 4\n}\nexport const NoToneMapping: ToneMapping = ToneMapping.None;\nexport const LinearToneMapping: ToneMapping = ToneMapping.Linear;\nexport const ReinhardToneMapping: ToneMapping = ToneMapping.Reinhard;\nexport const Uncharted2ToneMapping: ToneMapping = ToneMapping.Uncharted2;\nexport const CineonToneMapping: ToneMapping = ToneMapping.Cineon;\n//\nexport enum TextureMapping {\n  UV = 300,\n  CubeReflection = 301,\n  CubeRefraction = 302,\n  EquirectangularReflection = 303,\n  EquirectangularRefraction = 304,\n  SphericalReflection = 305,\n  CubeUVReflection = 306,\n  CubeUVRefraction = 307\n}\nexport const UVMapping: TextureMapping = TextureMapping.UV;\nexport const CubeReflectionMapping: TextureMapping = TextureMapping.CubeReflection;\nexport const CubeRefractionMapping: TextureMapping = TextureMapping.CubeRefraction;\nexport const EquirectangularReflectionMapping: TextureMapping = TextureMapping.EquirectangularReflection;\nexport const EquirectangularRefractionMapping: TextureMapping = TextureMapping.EquirectangularRefraction;\nexport const SphericalReflectionMapping: TextureMapping = TextureMapping.SphericalReflection;\nexport const CubeUVReflectionMapping: TextureMapping = TextureMapping.CubeUVReflection;\nexport const CubeUVRefractionMapping: TextureMapping = TextureMapping.CubeUVRefraction;\n//\nexport enum TextureWrapping {\n  Repeat = 1000,\n  ClampToEdge = 1001,\n  MirroredRepeat = 1002\n}\nexport const RepeatWrapping: TextureWrapping = TextureWrapping.Repeat;\nexport const ClampToEdgeWrapping: TextureWrapping = TextureWrapping.ClampToEdge;\nexport const MirroredRepeatWrapping: TextureWrapping = TextureWrapping.MirroredRepeat;\n//\nexport enum TextureFilter {\n  Nearest = 1003,\n  NearestMipMapNearest = 1004,\n  NearestMipMapLinear = 1005,\n  Linear = 1006,\n  LinearMipMapNearest = 1007,\n  LinearMipMapLinear = 1008\n}\nexport const NearestFilter: TextureFilter = TextureFilter.Nearest;\nexport const NearestMipMapNearestFilter: TextureFilter = TextureFilter.NearestMipMapNearest;\nexport const NearestMipMapLinearFilter: TextureFilter = TextureFilter.NearestMipMapLinear;\nexport const LinearFilter: TextureFilter = TextureFilter.Linear;\nexport const LinearMipMapNearestFilter: TextureFilter = TextureFilter.LinearMipMapNearest;\nexport const LinearMipMapLinearFilter: TextureFilter = TextureFilter.LinearMipMapLinear;\n//\nexport enum TextureType {\n  UnsignedByte = 1009,\n  Byte = 1010,\n  Short = 1011,\n  UnsignedShort = 1012,\n  Int = 1013,\n  UnsignedInt = 1014,\n  Float = 1015,\n  HalfFloat = 1016,\n  UnsignedShort4444 = 1017,\n  UnsignedShort5551 = 1018,\n  UnsignedShort565 = 1019,\n  UnsignedInt248 = 1020\n}\nexport const UnsignedByteType: TextureType = TextureType.UnsignedByte;\nexport const ByteType: TextureType = TextureType.Byte;\nexport const ShortType: TextureType = TextureType.Short;\nexport const UnsignedShortType: TextureType = TextureType.UnsignedShort;\nexport const IntType: TextureType = TextureType.Int;\nexport const UnsignedIntType: TextureType = TextureType.UnsignedInt;\nexport const FloatType: TextureType = TextureType.Float;\nexport const HalfFloatType: TextureType = TextureType.HalfFloat;\nexport const UnsignedShort4444Type: TextureType = TextureType.UnsignedShort4444;\nexport const UnsignedShort5551Type: TextureType = TextureType.UnsignedShort5551;\nexport const UnsignedShort565Type: TextureType = TextureType.UnsignedShort565;\nexport const UnsignedInt248Type: TextureType = TextureType.UnsignedInt248;\n//\nexport enum TextureFormat {\n  Alpha = 1021,\n  RGB = 1022,\n  RGBA = 1023,\n  Luminance = 1024,\n  LuminanceAlpha = 1025,\n  RGBE = RGBA,\n  Depth = 1026,\n  DepthStencil = 1027,\n  RGB_S3TC_DXT1 = 2001,\n  RGBA_S3TC_DXT1 = 2002,\n  RGBA_S3TC_DXT3 = 2003,\n  RGBA_S3TC_DXT5 = 2004,\n  RGB_PVRTC_4BPPV1 = 2100,\n  RGB_PVRTC_2BPPV1 = 2101,\n  RGBA_PVRTC_4BPPV1 = 2102,\n  RGBA_PVRTC_2BPPV1 = 2103,\n  RGB_ETC1 = 2151,\n}\nexport const AlphaFormat: TextureFormat = TextureFormat.Alpha;\nexport const RGBFormat: TextureFormat = TextureFormat.RGB;\nexport const RGBAFormat: TextureFormat = TextureFormat.RGBA;\nexport const LuminanceFormat: TextureFormat = TextureFormat.Luminance;\nexport const LuminanceAlphaFormat: TextureFormat = TextureFormat.LuminanceAlpha;\nexport const RGBEFormat: TextureFormat = TextureFormat.RGBE;\nexport const DepthFormat: TextureFormat = TextureFormat.Depth;\nexport const DepthStencilFormat: TextureFormat = TextureFormat.DepthStencil;\nexport const RGB_S3TC_DXT1_Format: TextureFormat = TextureFormat.RGB_S3TC_DXT1;\nexport const RGBA_S3TC_DXT1_Format: TextureFormat = TextureFormat.RGBA_S3TC_DXT1;\nexport const RGBA_S3TC_DXT3_Format: TextureFormat = TextureFormat.RGBA_S3TC_DXT3;\nexport const RGBA_S3TC_DXT5_Format: TextureFormat = TextureFormat.RGBA_S3TC_DXT5;\nexport const RGB_PVRTC_4BPPV1_Format: TextureFormat = TextureFormat.RGB_PVRTC_4BPPV1;\nexport const RGB_PVRTC_2BPPV1_Format: TextureFormat = TextureFormat.RGB_PVRTC_2BPPV1;\nexport const RGBA_PVRTC_4BPPV1_Format: TextureFormat = TextureFormat.RGBA_PVRTC_4BPPV1;\nexport const RGBA_PVRTC_2BPPV1_Format: TextureFormat = TextureFormat.RGBA_PVRTC_2BPPV1;\nexport const RGB_ETC1_Format: TextureFormat = TextureFormat.RGB_ETC1;\n//\nexport enum LoopMode {\n  Once = 2200,\n  Repeat = 2201,\n  PingPong = 2202\n}\nexport const LoopOnce: LoopMode = LoopMode.Once;\nexport const LoopRepeat: LoopMode = LoopMode.Repeat;\nexport const LoopPingPong: LoopMode = LoopMode.PingPong;\n//\nexport enum InterpolateMode {\n  Discrete = 2300,\n  Linear = 2301,\n  Smooth = 2302\n}\nexport const InterpolateDiscrete: InterpolateMode = InterpolateMode.Discrete;\nexport const InterpolateLinear: InterpolateMode = InterpolateMode.Linear;\nexport const InterpolateSmooth: InterpolateMode = InterpolateMode.Smooth;\n//\nexport enum EndingMode {\n  ZeroCurvature = 2400,\n  ZeroSlope = 2401,\n  WrapAround = 2402\n}\nexport const ZeroCurvatureEnding: EndingMode = EndingMode.ZeroCurvature;\nexport const ZeroSlopeEnding: EndingMode = EndingMode.ZeroSlope;\nexport const WrapAroundEnding: EndingMode = EndingMode.WrapAround;\n//\nexport enum DrawMode {\n  Triangles = 0,\n  TriangleStrip = 1,\n  TriangleFan = 2\n}\nexport const TrianglesDrawMode: DrawMode = DrawMode.Triangles;\nexport const TriangleStripDrawMode: DrawMode = DrawMode.TriangleStrip;\nexport const TriangleFanDrawMode: DrawMode = DrawMode.TriangleFan;\n//\nexport enum TextureEncoding {\n  Linear = 3000,\n  sRGB = 3001,\n  Gamma = 3007,\n  RGBE = 3002,\n  LogLuv = 3003,\n  RGBM7 = 3004,\n  RGBM16 = 3005,\n  RGBD = 3006\n}\nexport const LinearEncoding: TextureEncoding = TextureEncoding.Linear;\nexport const sRGBEncoding: TextureEncoding = TextureEncoding.sRGB;\nexport const GammaEncoding: TextureEncoding = TextureEncoding.Gamma;\nexport const RGBEEncoding: TextureEncoding = TextureEncoding.RGBE;\nexport const LogLuvEncoding: TextureEncoding = TextureEncoding.LogLuv;\nexport const RGBM7Encoding: TextureEncoding = TextureEncoding.RGBM7;\nexport const RGBM16Encoding: TextureEncoding = TextureEncoding.RGBM16;\nexport const RGBDEncoding: TextureEncoding = TextureEncoding.RGBD;\n//\nexport enum DepthPacking {\n  Basic = 3200,\n  RGBA = 3201\n}\nexport const BasicDepthPacking: DepthPacking = DepthPacking.Basic;\nexport const RGBADepthPacking: DepthPacking = DepthPacking.RGBA;\n","/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\nexport class _Math {\n  static DEG2RAD: number = Math.PI / 180;\n  static RAD2DEG: number = 180 / Math.PI;\n  private static generateUUID_chars: string[] = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'.split('');\n  private static generateUUID_uuid: string[] = new Array(36);\n  private static generateUUID_rnd: number = 0;\n  static generateUUID(): string {\n    const chars: string[] = _Math.generateUUID_chars;\n    const uuid: string[] = _Math.generateUUID_uuid;\n    for (let i = 0; i < 36; i ++) {\n      if (i === 8 || i === 13 || i === 18 || i === 23) {\n        uuid[i] = '-';\n      } else if (i === 14) {\n        uuid[i] = '4';\n      } else {\n        let rnd: number = _Math.generateUUID_rnd;\n        if (rnd <= 0x02) rnd = 0x2000000 + (Math.random() * 0x1000000) | 0;\n        const r: number = rnd & 0xf;\n        _Math.generateUUID_rnd = rnd >> 4;\n        uuid[i] = chars[(i === 19) ? (r & 0x3) | 0x8 : r];\n      }\n    }\n    return uuid.join('');\n  }\n  static clamp(value: number, min: number, max: number): number {\n    return Math.max(min, Math.min(max, value));\n  }\n  // compute euclidian modulo of m % n\n  // https://en.wikipedia.org/wiki/Modulo_operation\n  static euclideanModulo(n: number, m: number): number {\n    return ((n % m) + m) % m;\n  }\n  // Linear mapping from range <a1, a2> to range <b1, b2>\n  static mapLinear(x: number, a1: number, a2: number, b1: number, b2: number): number {\n    return b1 + (x - a1) * (b2 - b1) / (a2 - a1);\n  }\n  // https://en.wikipedia.org/wiki/Linear_interpolation\n  static lerp(x: number, y: number, t: number): number {\n    return (1 - t) * x + t * y;\n  }\n  // http://en.wikipedia.org/wiki/Smoothstep\n  static smoothstep(x: number, min: number, max: number): number {\n    if (x <= min) return 0;\n    if (x >= max) return 1;\n    x = (x - min) / (max - min);\n    return x * x * (3 - 2 * x);\n  }\n  static smootherstep(x: number, min: number, max: number): number {\n    if (x <= min) return 0;\n    if (x >= max) return 1;\n    x = (x - min) / (max - min);\n    return x * x * x * (x * (x * 6 - 15) + 10);\n  }\n  static random16(): number {\n    console.warn('THREE.Math.random16() has been deprecated. Use Math.random() instead.');\n    return Math.random();\n  }\n  // Random integer from <low, high> interval\n  static randInt(low: number, high: number): number {\n    return low + Math.floor(Math.random() * (high - low + 1));\n  }\n  // Random float from <low, high> interval\n  static randFloat(low: number, high: number): number {\n    return low + Math.random() * (high - low);\n  }\n  // Random float from <-range/2, range/2> interval\n  static randFloatSpread(range: number): number {\n    return range * (0.5 - Math.random());\n  }\n  static degToRad(degrees: number): number {\n    return degrees * _Math.DEG2RAD;\n  }\n  static radToDeg(radians: number): number {\n    return radians * _Math.RAD2DEG;\n  }\n  static isPowerOfTwo(value: number): boolean {\n    return (value & (value - 1)) === 0 && value !== 0;\n  }\n  static nearestPowerOfTwo(value: number): number {\n    return Math.pow(2, Math.round(Math.log(value) / Math.LN2));\n  }\n  static nextPowerOfTwo(value: number): number {\n    value --;\n    value |= value >> 1;\n    value |= value >> 2;\n    value |= value >> 4;\n    value |= value >> 8;\n    value |= value >> 16;\n    value ++;\n    return value;\n  }\n}\n","/**\n * @author mrdoob / http://mrdoob.com/\n * @author philogb / http://blog.thejit.org/\n * @author egraether / http://egraether.com/\n * @author zz85 / http://www.lab4games.net/zz85/blog\n */\nexport class Vector2 {\n  x: number;\n  y: number;\n  readonly isVector2: boolean = true;\n  constructor(x: number = 0, y: number = 0) {\n    this.x = x;\n    this.y = y;\n  }\n  get width(): number { return this.x; }\n  set width(value: number) { this.x = value; }\n  get height(): number { return this.y; }\n  set height(value: number) { this.y = value; }\n  set(x: number, y: number): Vector2 {\n    this.x = x;\n    this.y = y;\n    return this;\n  }\n  setScalar(scalar: number): Vector2 {\n    this.x = scalar;\n    this.y = scalar;\n    return this;\n  }\n  setX(x: number): Vector2 {\n    this.x = x;\n    return this;\n  }\n  setY(y: number): Vector2 {\n    this.y = y;\n    return this;\n  }\n  setComponent(index: number, value: number): Vector2 {\n    switch (index) {\n      case 0: this.x = value; break;\n      case 1: this.y = value; break;\n      default: throw new Error('index is out of range: ' + index);\n    }\n    return this;\n  }\n  getComponent(index: number): number {\n    switch (index) {\n      case 0: return this.x;\n      case 1: return this.y;\n      default: throw new Error('index is out of range: ' + index);\n    }\n  }\n  clone(): Vector2 {\n    return new (this.constructor as any)().copy(this);\n  }\n  copy(v: Vector2): Vector2 {\n    this.x = v.x;\n    this.y = v.y;\n    return this;\n  }\n  add(v: Vector2, w?: Vector2): Vector2 {\n    if (w !== undefined) {\n      console.warn('THREE.Vector2: .add() now only accepts one argument. Use .addVectors(a, b) instead.');\n      return this.addVectors(v, w);\n    }\n    this.x += v.x;\n    this.y += v.y;\n    return this;\n  }\n  addScalar(s: number): Vector2 {\n    this.x += s;\n    this.y += s;\n    return this;\n  }\n  addVectors(a: Vector2, b: Vector2): Vector2 {\n    this.x = a.x + b.x;\n    this.y = a.y + b.y;\n    return this;\n  }\n  addScaledVector(v: Vector2, s: number): Vector2 {\n    this.x += v.x * s;\n    this.y += v.y * s;\n    return this;\n  }\n  sub(v: Vector2, w?: Vector2): Vector2 {\n    if (w !== undefined) {\n      console.warn('THREE.Vector2: .sub() now only accepts one argument. Use .subVectors(a, b) instead.');\n      return this.subVectors(v, w);\n    }\n    this.x -= v.x;\n    this.y -= v.y;\n    return this;\n  }\n  subScalar(s: number): Vector2 {\n    this.x -= s;\n    this.y -= s;\n    return this;\n  }\n  subVectors(a: Vector2, b: Vector2): Vector2 {\n    this.x = a.x - b.x;\n    this.y = a.y - b.y;\n    return this;\n  }\n  multiply(v: Vector2): Vector2 {\n    this.x *= v.x;\n    this.y *= v.y;\n    return this;\n  }\n  multiplyScalar(scalar: number): Vector2 {\n    if (isFinite(scalar)) {\n      this.x *= scalar;\n      this.y *= scalar;\n    } else {\n      this.x = 0;\n      this.y = 0;\n    }\n    return this;\n  }\n  divide(v: Vector2): Vector2 {\n    this.x /= v.x;\n    this.y /= v.y;\n    return this;\n  }\n  divideScalar(scalar: number): Vector2 {\n    return this.multiplyScalar(1 / scalar);\n  }\n  min(v: Vector2): Vector2 {\n    this.x = Math.min(this.x, v.x);\n    this.y = Math.min(this.y, v.y);\n    return this;\n  }\n  max(v: Vector2): Vector2 {\n    this.x = Math.max(this.x, v.x);\n    this.y = Math.max(this.y, v.y);\n    return this;\n  }\n  clamp(min: Vector2, max: Vector2): Vector2 {\n    // This function assumes min < max, if this assumption isn't true it will not operate correctly\n    this.x = Math.max(min.x, Math.min(max.x, this.x));\n    this.y = Math.max(min.y, Math.min(max.y, this.y));\n    return this;\n  }\n  private static clampScalar_min = new Vector2();\n  private static clampScalar_max = new Vector2();\n  clampScalar(minVal: number, maxVal: number): Vector2 {\n    const min: Vector2 = Vector2.clampScalar_min.set(minVal, minVal);\n    const max: Vector2 = Vector2.clampScalar_max.set(maxVal, maxVal);\n    return this.clamp(min, max);\n  }\n  clampLength(min: number, max: number): Vector2 {\n    const length: number = this.length();\n    return this.multiplyScalar(Math.max(min, Math.min(max, length)) / length);\n  }\n  floor(): Vector2 {\n    this.x = Math.floor(this.x);\n    this.y = Math.floor(this.y);\n    return this;\n  }\n  ceil(): Vector2 {\n    this.x = Math.ceil(this.x);\n    this.y = Math.ceil(this.y);\n    return this;\n  }\n  round(): Vector2 {\n    this.x = Math.round(this.x);\n    this.y = Math.round(this.y);\n    return this;\n  }\n  roundToZero(): Vector2 {\n    this.x = (this.x < 0) ? Math.ceil(this.x) : Math.floor(this.x);\n    this.y = (this.y < 0) ? Math.ceil(this.y) : Math.floor(this.y);\n    return this;\n  }\n  negate(): Vector2 {\n    this.x = - this.x;\n    this.y = - this.y;\n    return this;\n  }\n  dot(v: Vector2): number {\n    return this.x * v.x + this.y * v.y;\n  }\n  lengthSq(): number {\n    return this.x * this.x + this.y * this.y;\n  }\n  length(): number {\n    return Math.sqrt(this.x * this.x + this.y * this.y);\n  }\n  lengthManhattan(): number {\n    return Math.abs(this.x) + Math.abs(this.y);\n  }\n  normalize(): Vector2 {\n    return this.divideScalar(this.length());\n  }\n  angle(): number {\n    // computes the angle in radians with respect to the positive x-axis\n    let angle: number = Math.atan2(this.y, this.x);\n    if (angle < 0) angle += 2 * Math.PI;\n    return angle;\n  }\n  distanceTo(v: Vector2): number {\n    return Math.sqrt(this.distanceToSquared(v));\n  }\n  distanceToSquared(v: Vector2): number {\n    const dx: number = this.x - v.x, dy: number = this.y - v.y;\n    return dx * dx + dy * dy;\n  }\n  distanceToManhattan(v: Vector2): number {\n    return Math.abs(this.x - v.x) + Math.abs(this.y - v.y);\n  }\n  setLength(length: number): Vector2 {\n    return this.multiplyScalar(length / this.length());\n  }\n  lerp(v: Vector2, alpha: number): Vector2 {\n    this.x += (v.x - this.x) * alpha;\n    this.y += (v.y - this.y) * alpha;\n    return this;\n  }\n  lerpVectors(v1: Vector2, v2: Vector2, alpha: number): Vector2 {\n    return this.subVectors(v2, v1).multiplyScalar(alpha).add(v1);\n  }\n  equals(v: Vector2): boolean {\n    return ((v.x === this.x) && (v.y === this.y));\n  }\n  fromArray(array: Float32Array | number[], offset: number = 0): Vector2 {\n    this.x = array[offset];\n    this.y = array[offset + 1];\n    return this;\n  }\n  toArray(array: Float32Array | number[] = [], offset: number = 0): Float32Array | number[] {\n    array[offset] = this.x;\n    array[offset + 1] = this.y;\n    return array;\n  }\n  fromAttribute(attribute: any, index: number, offset: number = 0): Vector2 {\n    index = index * attribute.itemSize + offset;\n    this.x = attribute.array[index];\n    this.y = attribute.array[index + 1];\n    return this;\n  }\n  rotateAround(center: Vector2, angle: number): Vector2 {\n    const c: number = Math.cos(angle), s: number = Math.sin(angle);\n    const x: number = this.x - center.x;\n    const y: number = this.y - center.y;\n    this.x = x * c - y * s + center.x;\n    this.y = x * s + y * c + center.y;\n    return this;\n  }\n}\n","import { EventDispatcher } from \"../core/EventDispatcher\";\nimport { TextureMapping, TextureWrapping, TextureEncoding, TextureType, TextureFormat, TextureFilter } from \"../constants\";\nimport { _Math } from \"../math/Math\";\nimport { Vector2 } from \"../math/Vector2\";\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author szimek / https://github.com/szimek/\n */\nexport class Texture extends EventDispatcher {\n  id: number = TextureIdCount();\n  uuid: string = _Math.generateUUID();\n  name: string = '';\n  sourceFile: string = '';\n  image: any;\n  mipmaps: any[] = [];\n  mapping: TextureMapping;\n  wrapS: TextureWrapping;\n  wrapT: TextureWrapping;\n  magFilter: TextureFilter;\n  minFilter: TextureFilter;\n  anisotropy: number;\n  format: TextureFormat;\n  type: TextureType;\n  offset: Vector2 = new Vector2(0, 0);\n  repeat: Vector2 = new Vector2(1, 1);\n  generateMipmaps: boolean = true;\n  premultiplyAlpha: boolean = false;\n  flipY: boolean = true;\n  unpackAlignment: number = 4; // valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n  // Values of encoding !== THREE.TextureEncoding.Linear only supported on map, envMap and emissiveMap.\n  //\n  // Also changing the encoding after already used by a Material will not automatically make the Material\n  // update.  You need to explicitly call Material.needsUpdate to trigger it to recompile.\n  encoding: TextureEncoding;\n  version: number = 0;\n  onUpdate: (texture: Texture) => void = null;\n  readonly isTexture: boolean = true;\n  static DEFAULT_IMAGE: any = undefined;\n  static DEFAULT_MAPPING: TextureMapping = TextureMapping.UV;\n  constructor(image: any = Texture.DEFAULT_IMAGE, mapping: TextureMapping = Texture.DEFAULT_MAPPING, wrapS: TextureWrapping = TextureWrapping.ClampToEdge, wrapT: TextureWrapping = TextureWrapping.ClampToEdge, magFilter: TextureFilter = TextureFilter.Linear, minFilter: TextureFilter = TextureFilter.LinearMipMapLinear, format: TextureFormat = TextureFormat.RGBA, type: TextureType = TextureType.UnsignedByte, anisotropy: number = 1, encoding: TextureEncoding = TextureEncoding.Linear) {\n    super();\n    this.image = image;\n    this.mapping = mapping;\n    this.wrapS = wrapS;\n    this.wrapT = wrapT;\n    this.magFilter = magFilter;\n    this.minFilter = minFilter;\n    this.anisotropy = anisotropy;\n    this.format = format;\n    this.type = type;\n    this.encoding = encoding;\n  }\n  set needsUpdate(value: boolean) {\n    if (value === true) this.version ++;\n  }\n  clone(): this {\n    return new (this.constructor as any)().copy(this);\n  }\n  copy(source: this): this {\n    this.image = source.image;\n    this.mipmaps = source.mipmaps.slice(0);\n    this.mapping = source.mapping;\n    this.wrapS = source.wrapS;\n    this.wrapT = source.wrapT;\n    this.magFilter = source.magFilter;\n    this.minFilter = source.minFilter;\n    this.anisotropy = source.anisotropy;\n    this.format = source.format;\n    this.type = source.type;\n    this.offset.copy(source.offset);\n    this.repeat.copy(source.repeat);\n    this.generateMipmaps = source.generateMipmaps;\n    this.premultiplyAlpha = source.premultiplyAlpha;\n    this.flipY = source.flipY;\n    this.unpackAlignment = source.unpackAlignment;\n    this.encoding = source.encoding;\n    return this;\n  }\n  toJSON(meta: any): any {\n    if (meta.textures[ this.uuid ] !== undefined) {\n      return meta.textures[ this.uuid ];\n    }\n    function getDataURL(image: HTMLCanvasElement | HTMLImageElement | HTMLVideoElement): string {\n      let canvas: HTMLCanvasElement;\n      if (image instanceof HTMLCanvasElement) {\n        canvas = image;\n      } else {\n        canvas = <HTMLCanvasElement> document.createElementNS('http://www.w3.org/1999/xhtml', 'canvas');\n        canvas.width = image.width;\n        canvas.height = image.height;\n        canvas.getContext('2d').drawImage(image, 0, 0, image.width, image.height);\n      }\n      if (canvas.width > 2048 || canvas.height > 2048) {\n        return canvas.toDataURL('image/jpeg', 0.6);\n      } else {\n        return canvas.toDataURL('image/png');\n      }\n    }\n    const output: any = {\n      metadata: {\n        version: 4.4,\n        type: 'Texture',\n        generator: 'Texture.toJSON'\n      },\n      uuid: this.uuid,\n      name: this.name,\n      mapping: this.mapping,\n      repeat: [ this.repeat.x, this.repeat.y ],\n      offset: [ this.offset.x, this.offset.y ],\n      wrap: [ this.wrapS, this.wrapT ],\n      minFilter: this.minFilter,\n      magFilter: this.magFilter,\n      anisotropy: this.anisotropy,\n      flipY: this.flipY\n    };\n    if (this.image !== undefined) {\n      // TODO: Move to THREE.Image\n      const image = this.image;\n      if (image.uuid === undefined) {\n        image.uuid = _Math.generateUUID(); // UGH\n      }\n      if (meta.images[ image.uuid ] === undefined) {\n        meta.images[ image.uuid ] = {\n          uuid: image.uuid,\n          url: getDataURL(image)\n        };\n      }\n      output.image = image.uuid;\n    }\n    meta.textures[ this.uuid ] = output;\n    return output;\n  }\n  dispose(): void {\n    this.dispatchEvent({ type: 'dispose' });\n  }\n  transformUv(uv: Vector2): void {\n    if (this.mapping !== TextureMapping.UV)  return;\n    uv.multiply(this.repeat);\n    uv.add(this.offset);\n    if (uv.x < 0 || uv.x > 1) {\n      switch (this.wrapS) {\n        case TextureWrapping.Repeat:\n          uv.x = uv.x - Math.floor(uv.x);\n          break;\n        case TextureWrapping.ClampToEdge:\n          uv.x = uv.x < 0 ? 0 : 1;\n          break;\n        case TextureWrapping.MirroredRepeat:\n          if (Math.abs(Math.floor(uv.x) % 2) === 1) {\n            uv.x = Math.ceil(uv.x) - uv.x;\n          } else {\n            uv.x = uv.x - Math.floor(uv.x);\n          }\n          break;\n      }\n    }\n    if (uv.y < 0 || uv.y > 1) {\n      switch (this.wrapT) {\n        case TextureWrapping.Repeat:\n          uv.y = uv.y - Math.floor(uv.y);\n          break;\n        case TextureWrapping.ClampToEdge:\n          uv.y = uv.y < 0 ? 0 : 1;\n          break;\n        case TextureWrapping.MirroredRepeat:\n          if (Math.abs(Math.floor(uv.y) % 2) === 1) {\n            uv.y = Math.ceil(uv.y) - uv.y;\n          } else {\n            uv.y = uv.y - Math.floor(uv.y);\n          }\n          break;\n      }\n    }\n    if (this.flipY) {\n      uv.y = 1 - uv.y;\n    }\n  }\n}\nlet count: number = 0;\nexport function TextureIdCount(): number { return count++; };\n","/**\n * @author supereggbert / http://www.paulbrunt.co.uk/\n * @author philogb / http://blog.thejit.org/\n * @author mikael emtinger / http://gomo.se/\n * @author egraether / http://egraether.com/\n * @author WestLangley / http://github.com/WestLangley\n */\nimport { Matrix4 } from \"./Matrix4\";\nimport { Quaternion } from \"./Quaternion\";\nexport class Vector4 {\n  x: number;\n  y: number;\n  z: number;\n  w: number;\n  readonly isVector4: boolean = true;\n  constructor(x: number = 0, y: number = 0, z: number = 0, w: number = 1) {\n    this.x = x;\n    this.y = y;\n    this.z = z;\n    this.w = w;\n  }\n  set(x: number, y: number, z: number, w: number): Vector4 {\n    this.x = x;\n    this.y = y;\n    this.z = z;\n    this.w = w;\n    return this;\n  }\n  setScalar(scalar: number): Vector4 {\n    this.x = scalar;\n    this.y = scalar;\n    this.z = scalar;\n    this.w = scalar;\n    return this;\n  }\n  setX(x: number): Vector4 {\n    this.x = x;\n    return this;\n  }\n  setY(y: number): Vector4 {\n    this.y = y;\n    return this;\n  }\n  setZ(z: number): Vector4 {\n    this.z = z;\n    return this;\n  }\n  setW(w: number): Vector4 {\n    this.w = w;\n    return this;\n  }\n  setComponent(index: number, value: number): Vector4 {\n    switch (index) {\n      case 0: this.x = value; break;\n      case 1: this.y = value; break;\n      case 2: this.z = value; break;\n      case 3: this.w = value; break;\n      default: throw new Error('index is out of range: ' + index);\n    }\n    return this;\n  }\n  getComponent(index: number): number {\n    switch (index) {\n      case 0: return this.x;\n      case 1: return this.y;\n      case 2: return this.z;\n      case 3: return this.w;\n      default: throw new Error('index is out of range: ' + index);\n    }\n  }\n  clone(): Vector4 {\n    return new (this.constructor as any)(this.x, this.y, this.z, this.w);\n  }\n  copy(v: Vector4): Vector4 {\n    this.x = v.x;\n    this.y = v.y;\n    this.z = v.z;\n    this.w = v.w;\n    return this;\n  }\n  add(v: Vector4, w?: Vector4): Vector4 {\n    if (w !== undefined) {\n      console.warn('THREE.Vector4: .add() now only accepts one argument. Use .addVectors(a, b) instead.');\n      return this.addVectors(v, w);\n    }\n    this.x += v.x;\n    this.y += v.y;\n    this.z += v.z;\n    this.w += v.w;\n    return this;\n  }\n  addScalar(s: number): Vector4 {\n    this.x += s;\n    this.y += s;\n    this.z += s;\n    this.w += s;\n    return this;\n  }\n  addVectors(a: Vector4, b: Vector4): Vector4 {\n    this.x = a.x + b.x;\n    this.y = a.y + b.y;\n    this.z = a.z + b.z;\n    this.w = a.w + b.w;\n    return this;\n  }\n  addScaledVector(v: Vector4, s: number): Vector4 {\n    this.x += v.x * s;\n    this.y += v.y * s;\n    this.z += v.z * s;\n    this.w += v.w * s;\n    return this;\n  }\n  sub(v: Vector4, w?: Vector4): Vector4 {\n    if (w !== undefined) {\n      console.warn('THREE.Vector4: .sub() now only accepts one argument. Use .subVectors(a, b) instead.');\n      return this.subVectors(v, w);\n    }\n    this.x -= v.x;\n    this.y -= v.y;\n    this.z -= v.z;\n    this.w -= v.w;\n    return this;\n  }\n  subScalar(s: number): Vector4 {\n    this.x -= s;\n    this.y -= s;\n    this.z -= s;\n    this.w -= s;\n    return this;\n  }\n  subVectors(a: Vector4, b: Vector4): Vector4 {\n    this.x = a.x - b.x;\n    this.y = a.y - b.y;\n    this.z = a.z - b.z;\n    this.w = a.w - b.w;\n    return this;\n  }\n  multiplyScalar(scalar: number): Vector4 {\n    if (isFinite(scalar)) {\n      this.x *= scalar;\n      this.y *= scalar;\n      this.z *= scalar;\n      this.w *= scalar;\n    } else {\n      this.x = 0;\n      this.y = 0;\n      this.z = 0;\n      this.w = 0;\n    }\n    return this;\n  }\n  applyMatrix4(m: Matrix4): Vector4 {\n    const x = this.x, y = this.y, z = this.z, w = this.w;\n    const e: Float32Array = m.elements;\n    this.x = e[0] * x + e[4] * y + e[8] * z + e[12] * w;\n    this.y = e[1] * x + e[5] * y + e[9] * z + e[13] * w;\n    this.z = e[2] * x + e[6] * y + e[10] * z + e[14] * w;\n    this.w = e[3] * x + e[7] * y + e[11] * z + e[15] * w;\n    return this;\n  }\n  divideScalar(scalar: number): Vector4 {\n    return this.multiplyScalar(1 / scalar);\n  }\n  setAxisAngleFromQuaternion(q: Quaternion): Vector4 {\n    // http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n    // q is assumed to be normalized\n    this.w = 2 * Math.acos(q.w);\n    const s = Math.sqrt(1 - q.w * q.w);\n    if (s < 0.0001) {\n       this.x = 1;\n       this.y = 0;\n       this.z = 0;\n    } else {\n       this.x = q.x / s;\n       this.y = q.y / s;\n       this.z = q.z / s;\n    }\n    return this;\n  }\n  setAxisAngleFromRotationMatrix(m: Matrix4): Vector4 {\n    // http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n    // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n    let angle, x, y, z;    // variables for result\n    const epsilon = 0.01,    // margin to allow for rounding errors\n      epsilon2 = 0.1,    // margin to distinguish between 0 and 180 degrees\n      te = m.elements,\n      m11 = te[0], m12 = te[4], m13 = te[8],\n      m21 = te[1], m22 = te[5], m23 = te[9],\n      m31 = te[2], m32 = te[6], m33 = te[10];\n    if ((Math.abs(m12 - m21) < epsilon) &&\n         (Math.abs(m13 - m31) < epsilon) &&\n         (Math.abs(m23 - m32) < epsilon)) {\n      // singularity found\n      // first check for identity matrix which must have +1 for all terms\n      // in leading diagonal and zero in other terms\n      if ((Math.abs(m12 + m21) < epsilon2) &&\n           (Math.abs(m13 + m31) < epsilon2) &&\n           (Math.abs(m23 + m32) < epsilon2) &&\n           (Math.abs(m11 + m22 + m33 - 3) < epsilon2)) {\n        // this singularity is identity matrix so angle = 0\n        this.set(1, 0, 0, 0);\n        return this; // zero angle, arbitrary axis\n      }\n      // otherwise this singularity is angle = 180\n      angle = Math.PI;\n      const xx = (m11 + 1) / 2;\n      const yy = (m22 + 1) / 2;\n      const zz = (m33 + 1) / 2;\n      const xy = (m12 + m21) / 4;\n      const xz = (m13 + m31) / 4;\n      const yz = (m23 + m32) / 4;\n      if ((xx > yy) && (xx > zz)) {\n        // m11 is the largest diagonal term\n        if (xx < epsilon) {\n          x = 0;\n          y = 0.707106781;\n          z = 0.707106781;\n        } else {\n          x = Math.sqrt(xx);\n          y = xy / x;\n          z = xz / x;\n        }\n      } else if (yy > zz) {\n        // m22 is the largest diagonal term\n        if (yy < epsilon) {\n          x = 0.707106781;\n          y = 0;\n          z = 0.707106781;\n        } else {\n          y = Math.sqrt(yy);\n          x = xy / y;\n          z = yz / y;\n        }\n      } else {\n        // m33 is the largest diagonal term so base result on this\n        if (zz < epsilon) {\n          x = 0.707106781;\n          y = 0.707106781;\n          z = 0;\n        } else {\n          z = Math.sqrt(zz);\n          x = xz / z;\n          y = yz / z;\n        }\n      }\n      this.set(x, y, z, angle);\n      return this; // return 180 deg rotation\n    }\n    // as we have reached here there are no singularities so we can handle normally\n    let s = Math.sqrt((m32 - m23) * (m32 - m23) +\n                       (m13 - m31) * (m13 - m31) +\n                       (m21 - m12) * (m21 - m12)); // used to normalize\n    if (Math.abs(s) < 0.001) s = 1;\n    // prevent divide by zero, should not happen if matrix is orthogonal and should be\n    // caught by singularity test above, but I've left it in just in case\n    this.x = (m32 - m23) / s;\n    this.y = (m13 - m31) / s;\n    this.z = (m21 - m12) / s;\n    this.w = Math.acos((m11 + m22 + m33 - 1) / 2);\n    return this;\n  }\n  min(v: Vector4): Vector4 {\n    this.x = Math.min(this.x, v.x);\n    this.y = Math.min(this.y, v.y);\n    this.z = Math.min(this.z, v.z);\n    this.w = Math.min(this.w, v.w);\n    return this;\n  }\n  max(v: Vector4): Vector4 {\n    this.x = Math.max(this.x, v.x);\n    this.y = Math.max(this.y, v.y);\n    this.z = Math.max(this.z, v.z);\n    this.w = Math.max(this.w, v.w);\n    return this;\n  }\n  clamp(min: Vector4, max: Vector4): Vector4 {\n    // This function assumes min < max, if this assumption isn't true it will not operate correctly\n    this.x = Math.max(min.x, Math.min(max.x, this.x));\n    this.y = Math.max(min.y, Math.min(max.y, this.y));\n    this.z = Math.max(min.z, Math.min(max.z, this.z));\n    this.w = Math.max(min.w, Math.min(max.w, this.w));\n    return this;\n  }\n  private static _clampScalar_min = new Vector4();\n  private static _clampScalar_max = new Vector4();\n  clampScalar(minVal: number, maxVal: number): Vector4 {\n    const min = Vector4._clampScalar_min, max = Vector4._clampScalar_max;\n    min.set(minVal, minVal, minVal, minVal);\n    max.set(maxVal, maxVal, maxVal, maxVal);\n    return this.clamp(min, max);\n  }\n  floor(): Vector4 {\n    this.x = Math.floor(this.x);\n    this.y = Math.floor(this.y);\n    this.z = Math.floor(this.z);\n    this.w = Math.floor(this.w);\n    return this;\n  }\n  ceil(): Vector4 {\n    this.x = Math.ceil(this.x);\n    this.y = Math.ceil(this.y);\n    this.z = Math.ceil(this.z);\n    this.w = Math.ceil(this.w);\n    return this;\n  }\n  round(): Vector4 {\n    this.x = Math.round(this.x);\n    this.y = Math.round(this.y);\n    this.z = Math.round(this.z);\n    this.w = Math.round(this.w);\n    return this;\n  }\n  roundToZero(): Vector4 {\n    this.x = (this.x < 0) ? Math.ceil(this.x) : Math.floor(this.x);\n    this.y = (this.y < 0) ? Math.ceil(this.y) : Math.floor(this.y);\n    this.z = (this.z < 0) ? Math.ceil(this.z) : Math.floor(this.z);\n    this.w = (this.w < 0) ? Math.ceil(this.w) : Math.floor(this.w);\n    return this;\n  }\n  negate(): Vector4 {\n    this.x = - this.x;\n    this.y = - this.y;\n    this.z = - this.z;\n    this.w = - this.w;\n    return this;\n  }\n  dot(v: Vector4): number {\n    return this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n  }\n  lengthSq(): number {\n    return this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n  }\n  length(): number {\n    return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);\n  }\n  lengthManhattan(): number {\n    return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z) + Math.abs(this.w);\n  }\n  normalize(): Vector4 {\n    return this.divideScalar(this.length());\n  }\n  setLength(length: number): Vector4 {\n    return this.multiplyScalar(length / this.length());\n  }\n  lerp(v: Vector4, alpha: number): Vector4 {\n    this.x += (v.x - this.x) * alpha;\n    this.y += (v.y - this.y) * alpha;\n    this.z += (v.z - this.z) * alpha;\n    this.w += (v.w - this.w) * alpha;\n    return this;\n  }\n  lerpVectors(v1: Vector4, v2: Vector4, alpha: number): Vector4 {\n    return this.subVectors(v2, v1).multiplyScalar(alpha).add(v1);\n  }\n  equals(v: Vector4) {\n    return ((v.x === this.x) && (v.y === this.y) && (v.z === this.z) && (v.w === this.w));\n  }\n  fromArray(array: Float32Array | number[], offset: number = 0): Vector4 {\n    this.x = array[offset];\n    this.y = array[offset + 1];\n    this.z = array[offset + 2];\n    this.w = array[offset + 3];\n    return this;\n  }\n  toArray(array: Float32Array | number[] = [], offset: number = 0): Float32Array | number[] {\n    array[offset] = this.x;\n    array[offset + 1] = this.y;\n    array[offset + 2] = this.z;\n    array[offset + 3] = this.w;\n    return array;\n  }\n  fromAttribute(attribute: any, index: number, offset: number = 0): Vector4 {\n    index = index * attribute.itemSize + offset;\n    this.x = attribute.array[index];\n    this.y = attribute.array[index + 1];\n    this.z = attribute.array[index + 2];\n    this.w = attribute.array[index + 3];\n    return this;\n  }\n}\n","/**\n * @author szimek / https://github.com/szimek/\n * @author alteredq / http://alteredqualia.com/\n * @author Marius Kintel / https://github.com/kintel\n */\nimport { EventDispatcher } from \"../core/EventDispatcher\";\nimport { Texture } from \"../textures/Texture\";\nimport { TextureFilter } from \"../constants\";\nimport { Vector2 } from \"../math/Vector2\";\nimport { Vector4 } from \"../math/Vector4\";\nimport { _Math } from \"../math/Math\";\nexport class WebGLRenderTarget extends EventDispatcher {\n  uuid: string;\n  width: number;\n  height: number;\n  scissor: Vector4;\n  scissorTest: boolean;\n  viewport: Vector4;\n  texture: Texture;\n  depthBuffer: boolean;\n  stencilBuffer: boolean;\n  depthTexture: Texture;\n  readonly isWebGLRenderTarget: boolean = true;\n  /*\n   In options, we can specify:\n   * Texture parameters for an auto-generated target texture\n   * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n  */\n  constructor(width: number, height: number, options?: any) {\n    super();\n    this.uuid = _Math.generateUUID();\n    this.width = width;\n    this.height = height;\n    this.scissor = new Vector4(0, 0, width, height);\n    this.scissorTest = false;\n    this.viewport = new Vector4(0, 0, width, height);\n    options = options || {};\n    if (options.minFilter === undefined) options.minFilter = TextureFilter.Linear;\n    this.texture = new Texture(undefined, undefined, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding);\n    this.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\n    this.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : true;\n    this.depthTexture = options.depthTexture !== undefined ? options.depthTexture : null;\n  }\n  setSize(width: number, height: number): void {\n    if (this.width !== width || this.height !== height) {\n      this.width = width;\n      this.height = height;\n      this.dispose();\n    }\n    this.viewport.set(0, 0, width, height);\n    this.scissor.set(0, 0, width, height);\n  }\n  clone(): this {\n    return new (this.constructor as any)().copy(this);\n  }\n  copy(source: this): this {\n    this.width = source.width;\n    this.height = source.height;\n    this.viewport.copy(source.viewport);\n    this.texture = source.texture.clone();\n    this.depthBuffer = source.depthBuffer;\n    this.stencilBuffer = source.stencilBuffer;\n    this.depthTexture = source.depthTexture;\n    return this;\n  }\n  dispose(): void {\n    this.dispatchEvent({ type: 'dispose' });\n  }\n  get wrapS(): number {\n    console.warn(\"THREE.WebGLRenderTarget .wrapS is now .texture.wrapS.\");\n    return this.texture.wrapS;\n  }\n  set wrapS(value: number) {\n    console.warn(\"THREE.WebGLRenderTarget .wrapS is now .texture.wrapS.\");\n    this.texture.wrapS = value;\n  }\n  get wrapT(): number {\n    console.warn(\"THREE.WebGLRenderTarget .wrapT is now .texture.wrapT.\");\n    return this.texture.wrapT;\n  }\n  set wrapT(value: number) {\n    console.warn(\"THREE.WebGLRenderTarget .wrapT is now .texture.wrapT.\");\n    this.texture.wrapT = value;\n  }\n  get magFilter(): number {\n    console.warn(\"THREE.WebGLRenderTarget .magFilter is now .texture.magFilter.\");\n    return this.texture.magFilter;\n  }\n  set magFilter(value: number) {\n    console.warn(\"THREE.WebGLRenderTarget .magFilter is now .texture.magFilter.\");\n    this.texture.magFilter = value;\n  }\n  get minFilter(): number {\n    console.warn(\"THREE.WebGLRenderTarget .minFilter is now .texture.minFilter.\");\n    return this.texture.minFilter;\n  }\n  set minFilter(value: number) {\n    console.warn(\"THREE.WebGLRenderTarget .minFilter is now .texture.minFilter.\");\n    this.texture.minFilter = value;\n  }\n  get anisotropy(): number {\n    console.warn(\"THREE.WebGLRenderTarget .anisotropy is now .texture.anisotropy.\");\n    return this.texture.anisotropy;\n  }\n  set anisotropy(value: number) {\n    console.warn(\"THREE.WebGLRenderTarget .anisotropy is now .texture.anisotropy.\");\n    this.texture.anisotropy = value;\n  }\n  get offset(): Vector2 {\n    console.warn(\"THREE.WebGLRenderTarget .offset is now .texture.offset.\");\n    return this.texture.offset;\n  }\n  set offset(value: Vector2) {\n    console.warn(\"THREE.WebGLRenderTarget .offset is now .texture.offset.\");\n    this.texture.offset = value;\n  }\n  get repeat(): Vector2 {\n    console.warn(\"THREE.WebGLRenderTarget .repeat is now .texture.repeat.\");\n    return this.texture.repeat;\n  }\n  set repeat(value: Vector2) {\n    console.warn(\"THREE.WebGLRenderTarget .repeat is now .texture.repeat.\");\n    this.texture.repeat = value;\n  }\n  get format(): number {\n    console.warn(\"THREE.WebGLRenderTarget .format is now .texture.format.\");\n    return this.texture.format;\n  }\n  set format(value: number) {\n    console.warn(\"THREE.WebGLRenderTarget .format is now .texture.format.\");\n    this.texture.format = value;\n  }\n  get type(): number {\n    console.warn(\"THREE.WebGLRenderTarget .type is now .texture.type.\");\n    return this.texture.type;\n  }\n  set type(value: number) {\n    console.warn(\"THREE.WebGLRenderTarget .type is now .texture.type.\");\n    this.texture.type = value;\n  }\n  get generateMipmaps(): boolean {\n    console.warn(\"THREE.WebGLRenderTarget .generateMipmaps is now .texture.generateMipmaps.\");\n    return this.texture.generateMipmaps;\n  }\n  set generateMipmaps(value: boolean) {\n    console.warn(\"THREE.WebGLRenderTarget .generateMipmaps is now .texture.generateMipmaps.\");\n    this.texture.generateMipmaps = value;\n  }\n}\n","/**\n * @author alteredq / http://alteredqualia.com\n */\nimport { WebGLRenderTarget } from \"./WebGLRenderTarget\";\nexport class WebGLRenderTargetCube extends WebGLRenderTarget {\n  activeCubeFace: number = 0; // PX 0, NX 1, PY 2, NY 3, PZ 4, NZ 5\n  activeMipMapLevel: number = 0;\n  readonly isWebGLRenderTargetCube: boolean = true;\n  constructor(width: number, height: number, options?: any) {\n    super(width, height, options);\n  }\n}\n","import { Vector3 } from \"./Vector3\";\nimport { Matrix4 } from \"./Matrix4\";\nimport { Euler } from \"./Euler\";\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author bhouston / http://clara.io\n */\nexport class Quaternion {\n  _x: number;\n  _y: number;\n  _z: number;\n  _w: number;\n  onChangeCallback: () => void = function(): void {};\n  constructor(x: number = 0, y: number = 0, z: number = 0, w: number = 1) {\n    this._x = x;\n    this._y = y;\n    this._z = z;\n    this._w = w;\n  }\n  get x(): number { return this._x; }\n  set x(value: number) { this._x = value; this.onChangeCallback(); }\n  get y(): number { return this._y; }\n  set y(value: number) { this._y = value; this.onChangeCallback(); }\n  get z(): number { return this._z; }\n  set z(value: number) { this._z = value; this.onChangeCallback(); }\n  get w(): number { return this._w; }\n  set w(value: number) { this._w = value; this.onChangeCallback(); }\n  set(x: number, y: number, z: number, w: number): Quaternion {\n    this._x = x;\n    this._y = y;\n    this._z = z;\n    this._w = w;\n    this.onChangeCallback();\n    return this;\n  }\n  clone(): Quaternion {\n    return new (this.constructor as any)(this._x, this._y, this._z, this._w);\n  }\n  copy(quaternion: Quaternion): Quaternion {\n    this._x = quaternion.x;\n    this._y = quaternion.y;\n    this._z = quaternion.z;\n    this._w = quaternion.w;\n    this.onChangeCallback();\n    return this;\n  }\n  setFromEuler(euler: Euler, update: boolean = true): Quaternion {\n    // http://www.mathworks.com/matlabcentral/fileexchange/\n    //   20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n    //  content/SpinCalc.m\n    const c1 = Math.cos(euler._x / 2);\n    const c2 = Math.cos(euler._y / 2);\n    const c3 = Math.cos(euler._z / 2);\n    const s1 = Math.sin(euler._x / 2);\n    const s2 = Math.sin(euler._y / 2);\n    const s3 = Math.sin(euler._z / 2);\n    const order = euler.order;\n    if (order === 'XYZ') {\n      this._x = s1 * c2 * c3 + c1 * s2 * s3;\n      this._y = c1 * s2 * c3 - s1 * c2 * s3;\n      this._z = c1 * c2 * s3 + s1 * s2 * c3;\n      this._w = c1 * c2 * c3 - s1 * s2 * s3;\n    } else if (order === 'YXZ') {\n      this._x = s1 * c2 * c3 + c1 * s2 * s3;\n      this._y = c1 * s2 * c3 - s1 * c2 * s3;\n      this._z = c1 * c2 * s3 - s1 * s2 * c3;\n      this._w = c1 * c2 * c3 + s1 * s2 * s3;\n    } else if (order === 'ZXY') {\n      this._x = s1 * c2 * c3 - c1 * s2 * s3;\n      this._y = c1 * s2 * c3 + s1 * c2 * s3;\n      this._z = c1 * c2 * s3 + s1 * s2 * c3;\n      this._w = c1 * c2 * c3 - s1 * s2 * s3;\n    } else if (order === 'ZYX') {\n      this._x = s1 * c2 * c3 - c1 * s2 * s3;\n      this._y = c1 * s2 * c3 + s1 * c2 * s3;\n      this._z = c1 * c2 * s3 - s1 * s2 * c3;\n      this._w = c1 * c2 * c3 + s1 * s2 * s3;\n    } else if (order === 'YZX') {\n      this._x = s1 * c2 * c3 + c1 * s2 * s3;\n      this._y = c1 * s2 * c3 + s1 * c2 * s3;\n      this._z = c1 * c2 * s3 - s1 * s2 * c3;\n      this._w = c1 * c2 * c3 - s1 * s2 * s3;\n    } else if (order === 'XZY') {\n      this._x = s1 * c2 * c3 - c1 * s2 * s3;\n      this._y = c1 * s2 * c3 - s1 * c2 * s3;\n      this._z = c1 * c2 * s3 + s1 * s2 * c3;\n      this._w = c1 * c2 * c3 + s1 * s2 * s3;\n    }\n    if (update !== false) this.onChangeCallback();\n    return this;\n  }\n  setFromAxisAngle(axis: Vector3, angle: number): Quaternion {\n    // http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n    // assumes axis is normalized\n    const halfAngle = angle / 2, s = Math.sin(halfAngle);\n    this._x = axis.x * s;\n    this._y = axis.y * s;\n    this._z = axis.z * s;\n    this._w = Math.cos(halfAngle);\n    this.onChangeCallback();\n    return this;\n  }\n  setFromRotationMatrix(m: Matrix4): Quaternion {\n    // http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n    // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n    const te: Float32Array = m.elements,\n      m11 = te[0], m12 = te[4], m13 = te[8],\n      m21 = te[1], m22 = te[5], m23 = te[9],\n      m31 = te[2], m32 = te[6], m33 = te[10],\n      trace = m11 + m22 + m33;\n    let s;\n    if (trace > 0) {\n      s = 0.5 / Math.sqrt(trace + 1.0);\n      this._w = 0.25 / s;\n      this._x = (m32 - m23) * s;\n      this._y = (m13 - m31) * s;\n      this._z = (m21 - m12) * s;\n    } else if (m11 > m22 && m11 > m33) {\n      s = 2.0 * Math.sqrt(1.0 + m11 - m22 - m33);\n      this._w = (m32 - m23) / s;\n      this._x = 0.25 * s;\n      this._y = (m12 + m21) / s;\n      this._z = (m13 + m31) / s;\n    } else if (m22 > m33) {\n      s = 2.0 * Math.sqrt(1.0 + m22 - m11 - m33);\n      this._w = (m13 - m31) / s;\n      this._x = (m12 + m21) / s;\n      this._y = 0.25 * s;\n      this._z = (m23 + m32) / s;\n    } else {\n      s = 2.0 * Math.sqrt(1.0 + m33 - m11 - m22);\n      this._w = (m21 - m12) / s;\n      this._x = (m13 + m31) / s;\n      this._y = (m23 + m32) / s;\n      this._z = 0.25 * s;\n    }\n    this.onChangeCallback();\n    return this;\n  }\n  private static _setFromUnitVectors_v1: Vector3;\n  setFromUnitVectors(vFrom: Vector3, vTo: Vector3): Quaternion {\n    // http://lolengine.net/blog/2014/02/24/quaternion-from-two-vectors-final\n    // assumes direction vectors vFrom and vTo are normalized\n    const v1 = Quaternion._setFromUnitVectors_v1 = (Quaternion._setFromUnitVectors_v1 || new Vector3());\n    const EPS = 0.000001;\n    let r = vFrom.dot(vTo) + 1;\n    if (r < EPS) {\n      r = 0;\n      if (Math.abs(vFrom.x) > Math.abs(vFrom.z)) {\n        v1.set(- vFrom.y, vFrom.x, 0);\n      } else {\n        v1.set(0, - vFrom.z, vFrom.y);\n      }\n    } else {\n      v1.crossVectors(vFrom, vTo);\n    }\n    this._x = v1.x;\n    this._y = v1.y;\n    this._z = v1.z;\n    this._w = r;\n    return this.normalize();\n  }\n  inverse(): Quaternion {\n    return this.conjugate().normalize();\n  }\n  conjugate(): Quaternion {\n    this._x *= - 1;\n    this._y *= - 1;\n    this._z *= - 1;\n    this.onChangeCallback();\n    return this;\n  }\n  dot(v: Quaternion): number {\n    return this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n  }\n  lengthSq(): number {\n    return this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n  }\n  length(): number {\n    return Math.sqrt(this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w);\n  }\n  normalize(): Quaternion {\n    let l = this.length();\n    if (l === 0) {\n      this._x = 0;\n      this._y = 0;\n      this._z = 0;\n      this._w = 1;\n    } else {\n      l = 1 / l;\n      this._x = this._x * l;\n      this._y = this._y * l;\n      this._z = this._z * l;\n      this._w = this._w * l;\n    }\n    this.onChangeCallback();\n    return this;\n  }\n  multiply(q: Quaternion, p?: Quaternion): Quaternion {\n    if (p !== undefined) {\n      console.warn('THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions(a, b) instead.');\n      return this.multiplyQuaternions(q, p);\n    }\n    return this.multiplyQuaternions(this, q);\n  }\n  premultiply(q: Quaternion): Quaternion {\n    return this.multiplyQuaternions(q, this);\n  }\n  multiplyQuaternions(a: Quaternion, b: Quaternion): Quaternion {\n    // from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n    const qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\n    const qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\n    this._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n    this._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n    this._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n    this._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n    this.onChangeCallback();\n    return this;\n  }\n  slerp(qb: Quaternion, t: number): Quaternion {\n    if (t === 0) return this;\n    if (t === 1) return this.copy(qb);\n    const x = this._x, y = this._y, z = this._z, w = this._w;\n    // http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n    let cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n    if (cosHalfTheta < 0) {\n      this._w = - qb._w;\n      this._x = - qb._x;\n      this._y = - qb._y;\n      this._z = - qb._z;\n      cosHalfTheta = - cosHalfTheta;\n    } else {\n      this.copy(qb);\n    }\n    if (cosHalfTheta >= 1.0) {\n      this._w = w;\n      this._x = x;\n      this._y = y;\n      this._z = z;\n      return this;\n    }\n    const sinHalfTheta = Math.sqrt(1.0 - cosHalfTheta * cosHalfTheta);\n    if (Math.abs(sinHalfTheta) < 0.001) {\n      this._w = 0.5 * (w + this._w);\n      this._x = 0.5 * (x + this._x);\n      this._y = 0.5 * (y + this._y);\n      this._z = 0.5 * (z + this._z);\n      return this;\n    }\n    const halfTheta = Math.atan2(sinHalfTheta, cosHalfTheta);\n    const ratioA = Math.sin((1 - t) * halfTheta) / sinHalfTheta,\n    ratioB = Math.sin(t * halfTheta) / sinHalfTheta;\n    this._w = (w * ratioA + this._w * ratioB);\n    this._x = (x * ratioA + this._x * ratioB);\n    this._y = (y * ratioA + this._y * ratioB);\n    this._z = (z * ratioA + this._z * ratioB);\n    this.onChangeCallback();\n    return this;\n  }\n  equals(quaternion: Quaternion): boolean {\n    return (quaternion._x === this._x) && (quaternion._y === this._y) && (quaternion._z === this._z) && (quaternion._w === this._w);\n  }\n  fromArray(array: Float32Array | number[], offset: number = 0): Quaternion {\n    this._x = array[offset];\n    this._y = array[offset + 1];\n    this._z = array[offset + 2];\n    this._w = array[offset + 3];\n    this.onChangeCallback();\n    return this;\n  }\n  toArray(array: Float32Array | number[] = [], offset: number = 0): Float32Array | number[] {\n    array[offset] = this._x;\n    array[offset + 1] = this._y;\n    array[offset + 2] = this._z;\n    array[offset + 3] = this._w;\n    return array;\n  }\n  onChange(callback: () => void): Quaternion {\n    this.onChangeCallback = callback;\n    return this;\n  }\n  static slerp(qa: Quaternion, qb: Quaternion, qm: Quaternion, t: number): Quaternion {\n    return qm.copy(qa).slerp(qb, t);\n  }\n  static slerpFlat(dst: number[] | Float32Array | Float64Array, dstOffset: number, src0: number[] | Float32Array | Float64Array, srcOffset0: number, src1: number[] | Float32Array | Float64Array, srcOffset1: number, t: number): void {\n    // fuzz-free, array-based Quaternion SLERP operation\n    let x0 = src0[srcOffset0 + 0],\n      y0 = src0[srcOffset0 + 1],\n      z0 = src0[srcOffset0 + 2],\n      w0 = src0[srcOffset0 + 3];\n    const x1 = src1[srcOffset1 + 0],\n      y1 = src1[srcOffset1 + 1],\n      z1 = src1[srcOffset1 + 2],\n      w1 = src1[srcOffset1 + 3];\n    if (w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1) {\n      let s = 1 - t,\n        cos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n        dir = (cos >= 0 ? 1 : - 1),\n        sqrSin = 1 - cos * cos;\n      // Skip the Slerp for tiny steps to avoid numeric problems:\n      if (sqrSin > Number.EPSILON) {\n        const sin = Math.sqrt(sqrSin),\n          len = Math.atan2(sin, cos * dir);\n        s = Math.sin(s * len) / sin;\n        t = Math.sin(t * len) / sin;\n      }\n      const tDir = t * dir;\n      x0 = x0 * s + x1 * tDir;\n      y0 = y0 * s + y1 * tDir;\n      z0 = z0 * s + z1 * tDir;\n      w0 = w0 * s + w1 * tDir;\n      // Normalize in case we just did a lerp:\n      if (s === 1 - t) {\n        const f = 1 / Math.sqrt(x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0);\n        x0 *= f;\n        y0 *= f;\n        z0 *= f;\n        w0 *= f;\n      }\n    }\n    dst[dstOffset] = x0;\n    dst[dstOffset + 1] = y0;\n    dst[dstOffset + 2] = z0;\n    dst[dstOffset + 3] = w0;\n  }\n  multiplyVector3(vector: Vector3): Vector3 {\n    console.warn(\"THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion(quaternion) instead.\");\n    return vector.applyQuaternion(this);\n  }\n}\n","import { _Math } from \"./Math\";\nimport { Vector2 } from \"./Vector2\";\nimport { Matrix3 } from \"./Matrix3\";\nimport { Matrix4 } from \"./Matrix4\";\nimport { Quaternion } from \"./Quaternion\";\nimport { Euler } from \"./Euler\";\nimport { Spherical } from \"./Spherical\";\nimport { Camera } from \"../cameras/Camera\";\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author *kile / http://kile.stravaganza.org/\n * @author philogb / http://blog.thejit.org/\n * @author mikael emtinger / http://gomo.se/\n * @author egraether / http://egraether.com/\n * @author WestLangley / http://github.com/WestLangley\n */\nexport class Vector3 {\n  x: number;\n  y: number;\n  z: number;\n  index: number; // PolyhedronGeometry\n  uv: Vector2;\n  readonly isVector3: boolean = true;\n  constructor(x: number = 0, y: number = 0, z: number = 0) {\n    this.x = x;\n    this.y = y;\n    this.z = z;\n  }\n  set(x: number, y: number, z: number): Vector3 {\n    this.x = x;\n    this.y = y;\n    this.z = z;\n    return this;\n  }\n  setScalar(scalar: number): Vector3 {\n    this.x = scalar;\n    this.y = scalar;\n    this.z = scalar;\n    return this;\n  }\n  setX(x: number): Vector3 {\n    this.x = x;\n    return this;\n  }\n  setY(y: number): Vector3 {\n    this.y = y;\n    return this;\n  }\n  setZ(z: number): Vector3 {\n    this.z = z;\n    return this;\n  }\n  setComponent(index: number, value: number): Vector3 {\n    switch (index) {\n      case 0: this.x = value; break;\n      case 1: this.y = value; break;\n      case 2: this.z = value; break;\n      default: throw new Error('index is out of range: ' + index);\n    }\n    return this;\n  }\n  getComponent(index: number): number {\n    switch (index) {\n      case 0: return this.x;\n      case 1: return this.y;\n      case 2: return this.z;\n      default: throw new Error('index is out of range: ' + index);\n    }\n  }\n  clone(): Vector3 {\n    return new (this.constructor as any)(this.x, this.y, this.z);\n  }\n  copy(v: Vector3): Vector3 {\n    this.x = v.x;\n    this.y = v.y;\n    this.z = v.z;\n    return this;\n  }\n  add(v: Vector3, w?: Vector3) {\n    if (w !== undefined) {\n      console.warn('THREE.Vector3: .add() now only accepts one argument. Use .addVectors(a, b) instead.');\n      return this.addVectors(v, w);\n    }\n    this.x += v.x;\n    this.y += v.y;\n    this.z += v.z;\n    return this;\n  }\n  addScalar(s: number): Vector3 {\n    this.x += s;\n    this.y += s;\n    this.z += s;\n    return this;\n  }\n  addVectors(a: Vector3, b: Vector3): Vector3 {\n    this.x = a.x + b.x;\n    this.y = a.y + b.y;\n    this.z = a.z + b.z;\n    return this;\n  }\n  addScaledVector(v: Vector3, s: number): Vector3 {\n    this.x += v.x * s;\n    this.y += v.y * s;\n    this.z += v.z * s;\n    return this;\n  }\n  sub(v: Vector3, w?: Vector3): Vector3 {\n    if (w !== undefined) {\n      console.warn('THREE.Vector3: .sub() now only accepts one argument. Use .subVectors(a, b) instead.');\n      return this.subVectors(v, w);\n    }\n    this.x -= v.x;\n    this.y -= v.y;\n    this.z -= v.z;\n    return this;\n  }\n  subScalar(s: number): Vector3 {\n    this.x -= s;\n    this.y -= s;\n    this.z -= s;\n    return this;\n  }\n  subVectors(a: Vector3, b: Vector3): Vector3 {\n    this.x = a.x - b.x;\n    this.y = a.y - b.y;\n    this.z = a.z - b.z;\n    return this;\n  }\n  multiply(v: Vector3, w?: Vector3): Vector3 {\n    if (w !== undefined) {\n      console.warn('THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors(a, b) instead.');\n      return this.multiplyVectors(v, w);\n    }\n    this.x *= v.x;\n    this.y *= v.y;\n    this.z *= v.z;\n    return this;\n  }\n  multiplyScalar(scalar: number): Vector3 {\n    if (isFinite(scalar)) {\n      this.x *= scalar;\n      this.y *= scalar;\n      this.z *= scalar;\n    } else {\n      this.x = 0;\n      this.y = 0;\n      this.z = 0;\n    }\n    return this;\n  }\n  multiplyVectors(a: Vector3, b: Vector3): Vector3 {\n    this.x = a.x * b.x;\n    this.y = a.y * b.y;\n    this.z = a.z * b.z;\n    return this;\n  }\n  private static _applyEuler_quaternion = new Quaternion();\n  applyEuler(euler: Euler): Vector3 {\n    const quaternion = Vector3._applyEuler_quaternion;\n    return this.applyQuaternion(quaternion.setFromEuler(euler));\n  }\n  private static _applyAxisAngle_quaternion = new Quaternion();\n  applyAxisAngle(axis: Vector3, angle: number): Vector3 {\n    const quaternion = Vector3._applyAxisAngle_quaternion;\n    return this.applyQuaternion(quaternion.setFromAxisAngle(axis, angle));\n  }\n  applyMatrix3(m: Matrix3): Vector3 {\n    const x = this.x, y = this.y, z = this.z;\n    const e: Float32Array = m.elements;\n    this.x = e[0] * x + e[3] * y + e[6] * z;\n    this.y = e[1] * x + e[4] * y + e[7] * z;\n    this.z = e[2] * x + e[5] * y + e[8] * z;\n    return this;\n  }\n  applyMatrix4(m: Matrix4): Vector3 {\n    // input: THREE.Matrix4 affine matrix\n    const x = this.x, y = this.y, z = this.z;\n    const e: Float32Array = m.elements;\n    this.x = e[0] * x + e[4] * y + e[8]  * z + e[12];\n    this.y = e[1] * x + e[5] * y + e[9]  * z + e[13];\n    this.z = e[2] * x + e[6] * y + e[10] * z + e[14];\n    return this;\n  }\n  applyProjection(m: Matrix4): Vector3 {\n    // input: THREE.Matrix4 projection matrix\n    const x = this.x, y = this.y, z = this.z;\n    const e: Float32Array = m.elements;\n    const d = 1 / (e[3] * x + e[7] * y + e[11] * z + e[15]); // perspective divide\n    this.x = (e[0] * x + e[4] * y + e[8]  * z + e[12]) * d;\n    this.y = (e[1] * x + e[5] * y + e[9]  * z + e[13]) * d;\n    this.z = (e[2] * x + e[6] * y + e[10] * z + e[14]) * d;\n    return this;\n  }\n  applyQuaternion(q: Quaternion): Vector3 {\n    const x = this.x, y = this.y, z = this.z;\n    const qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n    // calculate quat * vector\n    const ix =  qw * x + qy * z - qz * y;\n    const iy =  qw * y + qz * x - qx * z;\n    const iz =  qw * z + qx * y - qy * x;\n    const iw = - qx * x - qy * y - qz * z;\n    // calculate result * inverse quat\n    this.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\n    this.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\n    this.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\n    return this;\n  }\n  private static _project_matrix: Matrix4;\n  project(camera: Camera): Vector3 {\n    const matrix = Vector3._project_matrix = (Vector3._project_matrix || new Matrix4());\n    matrix.multiplyMatrices(camera.projectionMatrix, matrix.getInverse(camera.matrixWorld));\n    return this.applyProjection(matrix);\n  }\n  private static _unproject_matrix: Matrix4;\n  unproject(camera: Camera): Vector3 {\n    const matrix = Vector3._unproject_matrix = (Vector3._unproject_matrix || new Matrix4());\n    matrix.multiplyMatrices(camera.matrixWorld, matrix.getInverse(camera.projectionMatrix));\n    return this.applyProjection(matrix);\n  }\n  transformDirection(m: Matrix4): Vector3 {\n    // input: THREE.Matrix4 affine matrix\n    // vector interpreted as a direction\n    const x = this.x, y = this.y, z = this.z;\n    const e: Float32Array = m.elements;\n    this.x = e[0] * x + e[4] * y + e[8]  * z;\n    this.y = e[1] * x + e[5] * y + e[9]  * z;\n    this.z = e[2] * x + e[6] * y + e[10] * z;\n    return this.normalize();\n  }\n  divide(v: Vector3): Vector3 {\n    this.x /= v.x;\n    this.y /= v.y;\n    this.z /= v.z;\n    return this;\n  }\n  divideScalar(scalar: number): Vector3 {\n    return this.multiplyScalar(1 / scalar);\n  }\n  min(v: Vector3): Vector3 {\n    this.x = Math.min(this.x, v.x);\n    this.y = Math.min(this.y, v.y);\n    this.z = Math.min(this.z, v.z);\n    return this;\n  }\n  max(v: Vector3): Vector3 {\n    this.x = Math.max(this.x, v.x);\n    this.y = Math.max(this.y, v.y);\n    this.z = Math.max(this.z, v.z);\n    return this;\n  }\n  clamp(min: Vector3, max: Vector3): Vector3 {\n    // This function assumes min < max, if this assumption isn't true it will not operate correctly\n    this.x = Math.max(min.x, Math.min(max.x, this.x));\n    this.y = Math.max(min.y, Math.min(max.y, this.y));\n    this.z = Math.max(min.z, Math.min(max.z, this.z));\n    return this;\n  }\n  private static _clampScalar_min = new Vector3();\n  private static _clampScalar_max = new Vector3();\n  clampScalar(minVal: number, maxVal: number): Vector3 {\n    const min = Vector3._clampScalar_min, max = Vector3._clampScalar_max;\n    min.set(minVal, minVal, minVal);\n    max.set(maxVal, maxVal, maxVal);\n    return this.clamp(min, max);\n  }\n  clampLength(min: number, max: number): Vector3 {\n    const length = this.length();\n    return this.multiplyScalar(Math.max(min, Math.min(max, length)) / length);\n  }\n  floor(): Vector3 {\n    this.x = Math.floor(this.x);\n    this.y = Math.floor(this.y);\n    this.z = Math.floor(this.z);\n    return this;\n  }\n  ceil(): Vector3 {\n    this.x = Math.ceil(this.x);\n    this.y = Math.ceil(this.y);\n    this.z = Math.ceil(this.z);\n    return this;\n  }\n  round(): Vector3 {\n    this.x = Math.round(this.x);\n    this.y = Math.round(this.y);\n    this.z = Math.round(this.z);\n    return this;\n  }\n  roundToZero(): Vector3 {\n    this.x = (this.x < 0) ? Math.ceil(this.x) : Math.floor(this.x);\n    this.y = (this.y < 0) ? Math.ceil(this.y) : Math.floor(this.y);\n    this.z = (this.z < 0) ? Math.ceil(this.z) : Math.floor(this.z);\n    return this;\n  }\n  negate(): Vector3 {\n    this.x = - this.x;\n    this.y = - this.y;\n    this.z = - this.z;\n    return this;\n  }\n  dot(v: Vector3): number {\n    return this.x * v.x + this.y * v.y + this.z * v.z;\n  }\n  lengthSq(): number {\n    return this.x * this.x + this.y * this.y + this.z * this.z;\n  }\n  length(): number {\n    return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n  }\n  lengthManhattan(): number {\n    return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z);\n  }\n  normalize(): Vector3 {\n    return this.divideScalar(this.length());\n  }\n  setLength(length: number): Vector3 {\n    return this.multiplyScalar(length / this.length());\n  }\n  lerp(v: Vector3, alpha: number): Vector3 {\n    this.x += (v.x - this.x) * alpha;\n    this.y += (v.y - this.y) * alpha;\n    this.z += (v.z - this.z) * alpha;\n    return this;\n  }\n  lerpVectors(v1: Vector3, v2: Vector3, alpha: number): Vector3 {\n    return this.subVectors(v2, v1).multiplyScalar(alpha).add(v1);\n  }\n  cross(v: Vector3, w?: Vector3): Vector3 {\n    if (w !== undefined) {\n      console.warn('THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors(a, b) instead.');\n      return this.crossVectors(v, w);\n    }\n    const x = this.x, y = this.y, z = this.z;\n    this.x = y * v.z - z * v.y;\n    this.y = z * v.x - x * v.z;\n    this.z = x * v.y - y * v.x;\n    return this;\n  }\n  crossVectors(a: Vector3, b: Vector3): Vector3 {\n    const ax = a.x, ay = a.y, az = a.z;\n    const bx = b.x, by = b.y, bz = b.z;\n    this.x = ay * bz - az * by;\n    this.y = az * bx - ax * bz;\n    this.z = ax * by - ay * bx;\n    return this;\n  }\n  projectOnVector(vector: Vector3): Vector3 {\n    const scalar = vector.dot(this) / vector.lengthSq();\n    return this.copy(vector).multiplyScalar(scalar);\n  }\n  private static _projectOnPlane_v1 = new Vector3();\n  projectOnPlane(planeNormal: Vector3): Vector3 {\n    const v1 = Vector3._projectOnPlane_v1;\n    v1.copy(this).projectOnVector(planeNormal);\n    return this.sub(v1);\n  }\n  private static _reflect_v1 = new Vector3();\n  reflect(normal: Vector3): Vector3 {\n    // reflect incident vector off plane orthogonal to normal\n    // normal is assumed to have unit length\n    const v1 = Vector3._reflect_v1;\n    return this.sub(v1.copy(normal).multiplyScalar(2 * this.dot(normal)));\n  }\n  angleTo(v: Vector3): number {\n    const theta = this.dot(v) / (Math.sqrt(this.lengthSq() * v.lengthSq()));\n    // clamp, to handle numerical problems\n    return Math.acos(_Math.clamp(theta, - 1, 1));\n  }\n  distanceTo(v: Vector3): number {\n    return Math.sqrt(this.distanceToSquared(v));\n  }\n  distanceToSquared(v: Vector3): number {\n    const dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n    return dx * dx + dy * dy + dz * dz;\n  }\n  distanceToManhattan(v: Vector3): number {\n    return Math.abs(this.x - v.x) + Math.abs(this.y - v.y) + Math.abs(this.z - v.z);\n  }\n  setFromSpherical(s: Spherical): Vector3 {\n    const sinPhiRadius = Math.sin(s.phi) * s.radius;\n    this.x = sinPhiRadius * Math.sin(s.theta);\n    this.y = Math.cos(s.phi) * s.radius;\n    this.z = sinPhiRadius * Math.cos(s.theta);\n    return this;\n  }\n  setFromMatrixPosition(m: Matrix4): Vector3 {\n    return this.setFromMatrixColumn(m, 3);\n  }\n  setFromMatrixScale(m: Matrix4): Vector3 {\n    const sx = this.setFromMatrixColumn(m, 0).length();\n    const sy = this.setFromMatrixColumn(m, 1).length();\n    const sz = this.setFromMatrixColumn(m, 2).length();\n    this.x = sx;\n    this.y = sy;\n    this.z = sz;\n    return this;\n  }\n  setFromMatrixColumn(m: Matrix4, index: number): Vector3 {\n    //if (typeof m === 'number') {\n    //  console.warn('THREE.Vector3: setFromMatrixColumn now expects (matrix, index).');\n    //  const temp = m;\n    //  m = index;\n    //  index = temp;\n    //}\n    return this.fromArray(m.elements, index * 4);\n  }\n  equals(v: Vector3): boolean {\n    return ((v.x === this.x) && (v.y === this.y) && (v.z === this.z));\n  }\n  fromArray(array: Float32Array | number[], offset: number = 0): Vector3 {\n    this.x = array[offset];\n    this.y = array[offset + 1];\n    this.z = array[offset + 2];\n    return this;\n  }\n  toArray(array: Float32Array | number[] = [], offset: number = 0): Float32Array | number[] {\n    array[offset] = this.x;\n    array[offset + 1] = this.y;\n    array[offset + 2] = this.z;\n    return array;\n  }\n  fromAttribute(attribute: any, index: number, offset: number = 0): Vector3 {\n    index = index * attribute.itemSize + offset;\n    this.x = attribute.array[index];\n    this.y = attribute.array[index + 1];\n    this.z = attribute.array[index + 2];\n    return this;\n  }\n  setEulerFromRotationMatrix(): void {\n    console.error(\"THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.\");\n  }\n  setEulerFromQuaternion(): void {\n    console.error(\"THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.\");\n  }\n  getPositionFromMatrix(m: Matrix4): Vector3 {\n    console.warn(\"THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().\");\n    return this.setFromMatrixPosition(m);\n  }\n  getScaleFromMatrix(m: Matrix4): Vector3 {\n    console.warn(\"THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().\");\n    return this.setFromMatrixScale(m);\n  }\n  getColumnFromMatrix(index: number, matrix: Matrix4): Vector3 {\n    console.warn(\"THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().\");\n    return this.setFromMatrixColumn(matrix, index);\n  }\n}\n","import { Quaternion } from \"./Quaternion\";\nimport { Vector3 } from \"./Vector3\";\nimport { Matrix4 } from \"./Matrix4\";\nimport { _Math } from \"./Math\";\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author bhouston / http://clara.io\n */\nexport class Euler {\n  _x: number;\n  _y: number;\n  _z: number;\n  _order: string = Euler.DefaultOrder;\n  onChangeCallback: () => void = function(): void {};\n  readonly isEuler: boolean = true;\n  static DefaultOrder: string = 'XYZ';\n  static RotationOrders: string[] = [ 'XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX' ];\n  constructor(x: number = 0, y: number = 0, z: number = 0, order: string = Euler.DefaultOrder) {\n    this._x = x;\n    this._y = y;\n    this._z = z;\n    this._order = order;\n  }\n  get x(): number {\n    return this._x;\n  }\n  set x(value: number) {\n    this._x = value;\n    this.onChangeCallback();\n  }\n  get y(): number {\n    return this._y;\n  }\n  set y(value: number) {\n    this._y = value;\n    this.onChangeCallback();\n  }\n  get z(): number {\n    return this._z;\n  }\n  set z(value: number) {\n    this._z = value;\n    this.onChangeCallback();\n  }\n  get order(): string {\n    return this._order;\n  }\n  set order(value: string) {\n    this._order = value;\n    this.onChangeCallback();\n  }\n  set(x: number, y: number, z: number, order: string = this._order): Euler {\n    this._x = x;\n    this._y = y;\n    this._z = z;\n    this._order = order;\n    this.onChangeCallback();\n    return this;\n  }\n  clone(): Euler {\n    return new (this.constructor as any)(this._x, this._y, this._z, this._order);\n  }\n  copy(euler: Euler): Euler {\n    this._x = euler._x;\n    this._y = euler._y;\n    this._z = euler._z;\n    this._order = euler._order;\n    this.onChangeCallback();\n    return this;\n  }\n  setFromRotationMatrix(m: Matrix4, order: string = this._order, update: boolean = true): Euler {\n    const clamp = _Math.clamp;\n    // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n    const te: Float32Array = m.elements;\n    const m11 = te[0], m12 = te[4], m13 = te[8];\n    const m21 = te[1], m22 = te[5], m23 = te[9];\n    const m31 = te[2], m32 = te[6], m33 = te[10];\n    if (order === 'XYZ') {\n      this._y = Math.asin(clamp(m13, - 1, 1));\n      if (Math.abs(m13) < 0.99999) {\n        this._x = Math.atan2(- m23, m33);\n        this._z = Math.atan2(- m12, m11);\n      } else {\n        this._x = Math.atan2(m32, m22);\n        this._z = 0;\n      }\n    } else if (order === 'YXZ') {\n      this._x = Math.asin(- clamp(m23, - 1, 1));\n      if (Math.abs(m23) < 0.99999) {\n        this._y = Math.atan2(m13, m33);\n        this._z = Math.atan2(m21, m22);\n      } else {\n        this._y = Math.atan2(- m31, m11);\n        this._z = 0;\n      }\n    } else if (order === 'ZXY') {\n      this._x = Math.asin(clamp(m32, - 1, 1));\n      if (Math.abs(m32) < 0.99999) {\n        this._y = Math.atan2(- m31, m33);\n        this._z = Math.atan2(- m12, m22);\n      } else {\n        this._y = 0;\n        this._z = Math.atan2(m21, m11);\n      }\n    } else if (order === 'ZYX') {\n      this._y = Math.asin(- clamp(m31, - 1, 1));\n      if (Math.abs(m31) < 0.99999) {\n        this._x = Math.atan2(m32, m33);\n        this._z = Math.atan2(m21, m11);\n      } else {\n        this._x = 0;\n        this._z = Math.atan2(- m12, m22);\n      }\n    } else if (order === 'YZX') {\n      this._z = Math.asin(clamp(m21, - 1, 1));\n      if (Math.abs(m21) < 0.99999) {\n        this._x = Math.atan2(- m23, m22);\n        this._y = Math.atan2(- m31, m11);\n      } else {\n        this._x = 0;\n        this._y = Math.atan2(m13, m33);\n      }\n    } else if (order === 'XZY') {\n      this._z = Math.asin(- clamp(m12, - 1, 1));\n      if (Math.abs(m12) < 0.99999) {\n        this._x = Math.atan2(m32, m22);\n        this._y = Math.atan2(m13, m11);\n      } else {\n        this._x = Math.atan2(- m23, m33);\n        this._y = 0;\n      }\n    } else {\n      console.warn('THREE.Euler: .setFromRotationMatrix() given unsupported order: ' + order);\n    }\n    this._order = order;\n    if (update !== false) this.onChangeCallback();\n    return this;\n  }\n  private static _setFromQuaternion_matrix: Matrix4;\n  setFromQuaternion(q: Quaternion, order: string, update: boolean = false): Euler {\n    const matrix = Euler._setFromQuaternion_matrix || (Euler._setFromQuaternion_matrix = new Matrix4());\n    matrix.makeRotationFromQuaternion(q);\n    return this.setFromRotationMatrix(matrix, order, update);\n  }\n  setFromVector3(v: Vector3, order: string = this._order): Euler {\n    return this.set(v.x, v.y, v.z, order);\n  }\n  private static _reorder_q: Quaternion;\n  reorder(newOrder: string): Euler {\n    // WARNING: this discards revolution information -bhouston\n    const q = Euler._reorder_q || (Euler._reorder_q = new Quaternion());\n    q.setFromEuler(this);\n    return this.setFromQuaternion(q, newOrder);\n  }\n  equals(euler: Euler): boolean {\n    return (euler._x === this._x) && (euler._y === this._y) && (euler._z === this._z) && (euler._order === this._order);\n  }\n  fromArray(array: any[]): Euler {\n    this._x = array[0];\n    this._y = array[1];\n    this._z = array[2];\n    if (array[3] !== undefined) this._order = array[3];\n    this.onChangeCallback();\n    return this;\n  }\n  toArray(array: any[] = [], offset: number = 0): any[] {\n    array[offset] = this._x;\n    array[offset + 1] = this._y;\n    array[offset + 2] = this._z;\n    array[offset + 3] = this._order;\n    return array;\n  }\n  toVector3(result: Vector3 = new Vector3()): Vector3 {\n    return result.set(this._x, this._y, this._z);\n  }\n  onChange(callback: () => void): Euler {\n    this.onChangeCallback = callback;\n    return this;\n  }\n}\n","import { _Math } from \"./Math\";\nimport { Vector3 } from \"./Vector3\";\nimport { Vector4 } from \"./Vector4\";\nimport { Euler } from \"./Euler\";\nimport { Quaternion } from \"./Quaternion\";\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author supereggbert / http://www.paulbrunt.co.uk/\n * @author philogb / http://blog.thejit.org/\n * @author jordi_ros / http://plattsoft.com\n * @author D1plo1d / http://github.com/D1plo1d\n * @author alteredq / http://alteredqualia.com/\n * @author mikael emtinger / http://gomo.se/\n * @author timknip / http://www.floorplanner.com/\n * @author bhouston / http://clara.io\n * @author WestLangley / http://github.com/WestLangley\n */\nexport class Matrix4 {\n  elements: Float32Array;\n  readonly isMatrix4: boolean = true;\n  constructor() {\n    this.elements = new Float32Array([\n      1, 0, 0, 0,\n      0, 1, 0, 0,\n      0, 0, 1, 0,\n      0, 0, 0, 1\n    ]);\n    if (arguments.length > 0) {\n      console.error('THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.');\n    }\n  }\n  set(n11: number, n12: number, n13: number, n14: number, n21: number, n22: number, n23: number, n24: number, n31: number, n32: number, n33: number, n34: number, n41: number, n42: number, n43: number, n44: number): Matrix4 {\n    const te: Float32Array = this.elements;\n    te[0] = n11; te[4] = n12; te[8] = n13; te[12] = n14;\n    te[1] = n21; te[5] = n22; te[9] = n23; te[13] = n24;\n    te[2] = n31; te[6] = n32; te[10] = n33; te[14] = n34;\n    te[3] = n41; te[7] = n42; te[11] = n43; te[15] = n44;\n    return this;\n  }\n  identity(): Matrix4 {\n    this.set(\n      1, 0, 0, 0,\n      0, 1, 0, 0,\n      0, 0, 1, 0,\n      0, 0, 0, 1\n    );\n    return this;\n  }\n  clone(): Matrix4 {\n    return new (this.constructor as any)().fromArray(this.elements);\n  }\n  copy(m: Matrix4): Matrix4 {\n    this.elements.set(m.elements);\n    return this;\n  }\n  copyPosition(m: Matrix4): Matrix4 {\n    const te: Float32Array = this.elements;\n    const me: Float32Array = m.elements;\n    te[12] = me[12];\n    te[13] = me[13];\n    te[14] = me[14];\n    return this;\n  }\n  extractBasis(xAxis: Vector3, yAxis: Vector3, zAxis: Vector3): Matrix4 {\n    xAxis.setFromMatrixColumn(this, 0);\n    yAxis.setFromMatrixColumn(this, 1);\n    zAxis.setFromMatrixColumn(this, 2);\n    return this;\n  }\n  makeBasis(xAxis: Vector3, yAxis: Vector3, zAxis: Vector3): Matrix4 {\n    this.set(\n      xAxis.x, yAxis.x, zAxis.x, 0,\n      xAxis.y, yAxis.y, zAxis.y, 0,\n      xAxis.z, yAxis.z, zAxis.z, 0,\n      0,       0,       0,       1\n    );\n    return this;\n  }\n  private static _extractRotation_v1 = new Vector3();\n  extractRotation(m: Matrix4): Matrix4 {\n    const v1 = Matrix4._extractRotation_v1;\n    const te: Float32Array = this.elements;\n    const me: Float32Array = m.elements;\n    const scaleX = 1 / v1.setFromMatrixColumn(m, 0).length();\n    const scaleY = 1 / v1.setFromMatrixColumn(m, 1).length();\n    const scaleZ = 1 / v1.setFromMatrixColumn(m, 2).length();\n    te[0] = me[0] * scaleX;\n    te[1] = me[1] * scaleX;\n    te[2] = me[2] * scaleX;\n    te[4] = me[4] * scaleY;\n    te[5] = me[5] * scaleY;\n    te[6] = me[6] * scaleY;\n    te[8] = me[8] * scaleZ;\n    te[9] = me[9] * scaleZ;\n    te[10] = me[10] * scaleZ;\n    return this;\n  }\n  makeRotationFromEuler(euler: Euler): Matrix4 {\n    if ((euler && euler instanceof Euler) === false) {\n      console.error('THREE.Matrix: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.');\n    }\n    const te: Float32Array = this.elements;\n    const x = euler.x, y = euler.y, z = euler.z;\n    const a = Math.cos(x), b = Math.sin(x);\n    const c = Math.cos(y), d = Math.sin(y);\n    const e = Math.cos(z), f = Math.sin(z);\n    if (euler.order === 'XYZ') {\n      const ae = a * e, af = a * f, be = b * e, bf = b * f;\n      te[0] = c * e;\n      te[4] = - c * f;\n      te[8] = d;\n      te[1] = af + be * d;\n      te[5] = ae - bf * d;\n      te[9] = - b * c;\n      te[2] = bf - ae * d;\n      te[6] = be + af * d;\n      te[10] = a * c;\n    } else if (euler.order === 'YXZ') {\n      const ce = c * e, cf = c * f, de = d * e, df = d * f;\n      te[0] = ce + df * b;\n      te[4] = de * b - cf;\n      te[8] = a * d;\n      te[1] = a * f;\n      te[5] = a * e;\n      te[9] = - b;\n      te[2] = cf * b - de;\n      te[6] = df + ce * b;\n      te[10] = a * c;\n    } else if (euler.order === 'ZXY') {\n      const ce = c * e, cf = c * f, de = d * e, df = d * f;\n      te[0] = ce - df * b;\n      te[4] = - a * f;\n      te[8] = de + cf * b;\n      te[1] = cf + de * b;\n      te[5] = a * e;\n      te[9] = df - ce * b;\n      te[2] = - a * d;\n      te[6] = b;\n      te[10] = a * c;\n    } else if (euler.order === 'ZYX') {\n      const ae = a * e, af = a * f, be = b * e, bf = b * f;\n      te[0] = c * e;\n      te[4] = be * d - af;\n      te[8] = ae * d + bf;\n      te[1] = c * f;\n      te[5] = bf * d + ae;\n      te[9] = af * d - be;\n      te[2] = - d;\n      te[6] = b * c;\n      te[10] = a * c;\n    } else if (euler.order === 'YZX') {\n      const ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n      te[0] = c * e;\n      te[4] = bd - ac * f;\n      te[8] = bc * f + ad;\n      te[1] = f;\n      te[5] = a * e;\n      te[9] = - b * e;\n      te[2] = - d * e;\n      te[6] = ad * f + bc;\n      te[10] = ac - bd * f;\n    } else if (euler.order === 'XZY') {\n      const ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n      te[0] = c * e;\n      te[4] = - f;\n      te[8] = d * e;\n      te[1] = ac * f + bd;\n      te[5] = a * e;\n      te[9] = ad * f - bc;\n      te[2] = bc * f - ad;\n      te[6] = b * e;\n      te[10] = bd * f + ac;\n    }\n    // last column\n    te[3] = 0;\n    te[7] = 0;\n    te[11] = 0;\n    // bottom row\n    te[12] = 0;\n    te[13] = 0;\n    te[14] = 0;\n    te[15] = 1;\n    return this;\n  }\n  makeRotationFromQuaternion(q: Quaternion): Matrix4 {\n    const te: Float32Array = this.elements;\n    const x = q.x, y = q.y, z = q.z, w = q.w;\n    const x2 = x + x, y2 = y + y, z2 = z + z;\n    const xx = x * x2, xy = x * y2, xz = x * z2;\n    const yy = y * y2, yz = y * z2, zz = z * z2;\n    const wx = w * x2, wy = w * y2, wz = w * z2;\n    te[0] = 1 - (yy + zz);\n    te[4] = xy - wz;\n    te[8] = xz + wy;\n    te[1] = xy + wz;\n    te[5] = 1 - (xx + zz);\n    te[9] = yz - wx;\n    te[2] = xz - wy;\n    te[6] = yz + wx;\n    te[10] = 1 - (xx + yy);\n    // last column\n    te[3] = 0;\n    te[7] = 0;\n    te[11] = 0;\n    // bottom row\n    te[12] = 0;\n    te[13] = 0;\n    te[14] = 0;\n    te[15] = 1;\n    return this;\n  }\n  private static _lookAt_x = new Vector3();\n  private static _lookAt_y = new Vector3();\n  private static _lookAt_z = new Vector3();\n  lookAt(eye: Vector3, target: Vector3, up: Vector3): Matrix4 {\n    const x = Matrix4._lookAt_x;\n    const y = Matrix4._lookAt_y;\n    const z = Matrix4._lookAt_z;\n    const te: Float32Array = this.elements;\n    z.subVectors(eye, target).normalize();\n    if (z.lengthSq() === 0) {\n      z.z = 1;\n    }\n    x.crossVectors(up, z).normalize();\n    if (x.lengthSq() === 0) {\n      z.z += 0.0001;\n      x.crossVectors(up, z).normalize();\n    }\n    y.crossVectors(z, x);\n    te[0] = x.x; te[4] = y.x; te[8] = z.x;\n    te[1] = x.y; te[5] = y.y; te[9] = z.y;\n    te[2] = x.z; te[6] = y.z; te[10] = z.z;\n    return this;\n  }\n  multiply(m: Matrix4, n?: Matrix4): Matrix4 {\n    if (n !== undefined) {\n      console.warn('THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices(a, b) instead.');\n      return this.multiplyMatrices(m, n);\n    }\n    return this.multiplyMatrices(this, m);\n  }\n  premultiply(m: Matrix4): Matrix4 {\n    return this.multiplyMatrices(m, this);\n  }\n  multiplyMatrices(a: Matrix4, b: Matrix4): Matrix4 {\n    const ae: Float32Array = a.elements;\n    const be: Float32Array = b.elements;\n    const te: Float32Array = this.elements;\n    const a11 = ae[0], a12 = ae[4], a13 = ae[8], a14 = ae[12];\n    const a21 = ae[1], a22 = ae[5], a23 = ae[9], a24 = ae[13];\n    const a31 = ae[2], a32 = ae[6], a33 = ae[10], a34 = ae[14];\n    const a41 = ae[3], a42 = ae[7], a43 = ae[11], a44 = ae[15];\n    const b11 = be[0], b12 = be[4], b13 = be[8], b14 = be[12];\n    const b21 = be[1], b22 = be[5], b23 = be[9], b24 = be[13];\n    const b31 = be[2], b32 = be[6], b33 = be[10], b34 = be[14];\n    const b41 = be[3], b42 = be[7], b43 = be[11], b44 = be[15];\n    te[0] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n    te[4] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n    te[8] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n    te[12] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n    te[1] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n    te[5] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n    te[9] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n    te[13] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n    te[2] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n    te[6] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n    te[10] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n    te[14] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n    te[3] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n    te[7] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n    te[11] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n    te[15] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n    return this;\n  }\n  multiplyToArray(a: Matrix4, b: Matrix4, r: Float32Array | number[]): Matrix4 {\n    const te: Float32Array = this.elements;\n    this.multiplyMatrices(a, b);\n    r[0] = te[0]; r[1] = te[1]; r[2] = te[2]; r[3] = te[3];\n    r[4] = te[4]; r[5] = te[5]; r[6] = te[6]; r[7] = te[7];\n    r[8]  = te[8]; r[9]  = te[9]; r[10] = te[10]; r[11] = te[11];\n    r[12] = te[12]; r[13] = te[13]; r[14] = te[14]; r[15] = te[15];\n    return this;\n  }\n  multiplyScalar(s: number): Matrix4 {\n    const te: Float32Array = this.elements;\n    te[0] *= s; te[4] *= s; te[8] *= s; te[12] *= s;\n    te[1] *= s; te[5] *= s; te[9] *= s; te[13] *= s;\n    te[2] *= s; te[6] *= s; te[10] *= s; te[14] *= s;\n    te[3] *= s; te[7] *= s; te[11] *= s; te[15] *= s;\n    return this;\n  }\n  private static _applyToVector3Array_v1 = new Vector3();\n  applyToVector3Array(array: Float32Array | number[], offset: number = 0, length: number = array.length): Float32Array | number[] {\n    const v1 = Matrix4._applyToVector3Array_v1;\n    for (let i = 0, j = offset; i < length; i += 3, j += 3) {\n      v1.fromArray(array, j);\n      v1.applyMatrix4(this);\n      v1.toArray(array, j);\n    }\n    return array;\n  }\n  private static _applyToBuffer_v1 = new Vector3();\n  applyToBuffer(buffer: any, offset: number = 0, length: number = buffer.length / buffer.itemSize): any {\n    const v1 = Matrix4._applyToBuffer_v1;\n    for (let i = 0, j = offset; i < length; i ++, j ++) {\n      v1.x = buffer.getX(j);\n      v1.y = buffer.getY(j);\n      v1.z = buffer.getZ(j);\n      v1.applyMatrix4(this);\n      buffer.setXYZ(j, v1.x, v1.y, v1.z);\n    }\n    return buffer;\n  }\n  determinant(): number {\n    const te: Float32Array = this.elements;\n    const n11 = te[0], n12 = te[4], n13 = te[8], n14 = te[12];\n    const n21 = te[1], n22 = te[5], n23 = te[9], n24 = te[13];\n    const n31 = te[2], n32 = te[6], n33 = te[10], n34 = te[14];\n    const n41 = te[3], n42 = te[7], n43 = te[11], n44 = te[15];\n    //TODO: make this more efficient\n    //(based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm)\n    return (\n      n41 * (\n        + n14 * n23 * n32\n         - n13 * n24 * n32\n         - n14 * n22 * n33\n         + n12 * n24 * n33\n         + n13 * n22 * n34\n         - n12 * n23 * n34\n      ) +\n      n42 * (\n        + n11 * n23 * n34\n         - n11 * n24 * n33\n         + n14 * n21 * n33\n         - n13 * n21 * n34\n         + n13 * n24 * n31\n         - n14 * n23 * n31\n      ) +\n      n43 * (\n        + n11 * n24 * n32\n         - n11 * n22 * n34\n         - n14 * n21 * n32\n         + n12 * n21 * n34\n         + n14 * n22 * n31\n         - n12 * n24 * n31\n      ) +\n      n44 * (\n        - n13 * n22 * n31\n         - n11 * n23 * n32\n         + n11 * n22 * n33\n         + n13 * n21 * n32\n         - n12 * n21 * n33\n         + n12 * n23 * n31\n      )\n    );\n  }\n  transpose(): Matrix4 {\n    const te: Float32Array = this.elements;\n    let tmp;\n    tmp = te[1]; te[1] = te[4]; te[4] = tmp;\n    tmp = te[2]; te[2] = te[8]; te[8] = tmp;\n    tmp = te[6]; te[6] = te[9]; te[9] = tmp;\n    tmp = te[3]; te[3] = te[12]; te[12] = tmp;\n    tmp = te[7]; te[7] = te[13]; te[13] = tmp;\n    tmp = te[11]; te[11] = te[14]; te[14] = tmp;\n    return this;\n  }\n  flattenToArrayOffset(array: Float32Array | number[] = [], offset: number = 0): Float32Array | number[] {\n    console.warn(\"THREE.Matrix3: .flattenToArrayOffset is deprecated \" +\n        \"- just use .toArray instead.\");\n    return this.toArray(array, offset);\n  }\n  private static _getPosition_v1 = new Vector3();\n  getPosition(): Vector3 {\n    const v1 = Matrix4._getPosition_v1;\n    console.warn('THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition(matrix) instead.');\n    return v1.setFromMatrixColumn(this, 3);\n  }\n  setPosition(v: Vector3): Matrix4 {\n    const te: Float32Array = this.elements;\n    te[12] = v.x;\n    te[13] = v.y;\n    te[14] = v.z;\n    return this;\n  }\n  getInverse(m: Matrix4, throwOnDegenerate: boolean = false): Matrix4 {\n    // based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n    const te: Float32Array = this.elements,\n      me: Float32Array = m.elements,\n      n11 = me[0], n21 = me[1], n31 = me[2], n41 = me[3],\n      n12 = me[4], n22 = me[5], n32 = me[6], n42 = me[7],\n      n13 = me[8], n23 = me[9], n33 = me[10], n43 = me[11],\n      n14 = me[12], n24 = me[13], n34 = me[14], n44 = me[15],\n      t11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n      t12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n      t13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n      t14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n    const det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n    if (det === 0) {\n      const msg = \"THREE.Matrix4.getInverse(): can't invert matrix, determinant is 0\";\n      if (throwOnDegenerate === true) {\n        throw new Error(msg);\n      } else {\n        console.warn(msg);\n      }\n      return this.identity();\n    }\n    const detInv = 1 / det;\n    te[0] = t11 * detInv;\n    te[1] = (n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44) * detInv;\n    te[2] = (n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44) * detInv;\n    te[3] = (n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43) * detInv;\n    te[4] = t12 * detInv;\n    te[5] = (n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44) * detInv;\n    te[6] = (n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44) * detInv;\n    te[7] = (n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43) * detInv;\n    te[8] = t13 * detInv;\n    te[9] = (n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44) * detInv;\n    te[10] = (n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44) * detInv;\n    te[11] = (n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43) * detInv;\n    te[12] = t14 * detInv;\n    te[13] = (n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34) * detInv;\n    te[14] = (n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34) * detInv;\n    te[15] = (n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33) * detInv;\n    return this;\n  }\n  scale(v: Vector3): Matrix4 {\n    const te: Float32Array = this.elements;\n    const x = v.x, y = v.y, z = v.z;\n    te[0] *= x; te[4] *= y; te[8] *= z;\n    te[1] *= x; te[5] *= y; te[9] *= z;\n    te[2] *= x; te[6] *= y; te[10] *= z;\n    te[3] *= x; te[7] *= y; te[11] *= z;\n    return this;\n  }\n  getMaxScaleOnAxis(): number {\n    const te: Float32Array = this.elements;\n    const scaleXSq = te[0] * te[0] + te[1] * te[1] + te[2] * te[2];\n    const scaleYSq = te[4] * te[4] + te[5] * te[5] + te[6] * te[6];\n    const scaleZSq = te[8] * te[8] + te[9] * te[9] + te[10] * te[10];\n    return Math.sqrt(Math.max(scaleXSq, scaleYSq, scaleZSq));\n  }\n  makeTranslation(x: number, y: number, z: number): Matrix4 {\n    this.set(\n      1, 0, 0, x,\n      0, 1, 0, y,\n      0, 0, 1, z,\n      0, 0, 0, 1\n    );\n    return this;\n  }\n  makeRotationX(theta: number): Matrix4 {\n    const c = Math.cos(theta), s = Math.sin(theta);\n    this.set(\n      1, 0,  0, 0,\n      0, c, - s, 0,\n      0, s,  c, 0,\n      0, 0,  0, 1\n    );\n    return this;\n  }\n  makeRotationY(theta: number): Matrix4 {\n    const c = Math.cos(theta), s = Math.sin(theta);\n    this.set(\n       c, 0, s, 0,\n       0, 1, 0, 0,\n      - s, 0, c, 0,\n       0, 0, 0, 1\n    );\n    return this;\n  }\n  makeRotationZ(theta: number): Matrix4 {\n    const c = Math.cos(theta), s = Math.sin(theta);\n    this.set(\n      c, - s, 0, 0,\n      s,  c, 0, 0,\n      0,  0, 1, 0,\n      0,  0, 0, 1\n    );\n    return this;\n  }\n  makeRotationAxis(axis: Vector3, angle: number): Matrix4 {\n    // Based on http://www.gamedev.net/reference/articles/article1199.asp\n    const c = Math.cos(angle);\n    const s = Math.sin(angle);\n    const t = 1 - c;\n    const x = axis.x, y = axis.y, z = axis.z;\n    const tx = t * x, ty = t * y;\n    this.set(\n      tx * x + c, tx * y - s * z, tx * z + s * y, 0,\n      tx * y + s * z, ty * y + c, ty * z - s * x, 0,\n      tx * z - s * y, ty * z + s * x, t * z * z + c, 0,\n      0, 0, 0, 1\n    );\n     return this;\n  }\n  makeScale(x: number, y: number, z: number): Matrix4 {\n    this.set(\n      x, 0, 0, 0,\n      0, y, 0, 0,\n      0, 0, z, 0,\n      0, 0, 0, 1\n    );\n    return this;\n  }\n  compose(position: Vector3, quaternion: Quaternion, scale: Vector3): Matrix4 {\n    this.makeRotationFromQuaternion(quaternion);\n    this.scale(scale);\n    this.setPosition(position);\n    return this;\n  }\n  private static _decompose_vector = new Vector3();\n  private static _decompose_matrix = new Matrix4();\n  decompose(position: Vector3, quaternion: Quaternion, scale: Vector3): Matrix4 {\n    const vector = Matrix4._decompose_vector, matrix = Matrix4._decompose_matrix;\n    const te: Float32Array = this.elements;\n    let sx = vector.set(te[0], te[1], te[2]).length();\n    const sy = vector.set(te[4], te[5], te[6]).length();\n    const sz = vector.set(te[8], te[9], te[10]).length();\n    // if determine is negative, we need to invert one scale\n    const det = this.determinant();\n    if (det < 0) {\n      sx = - sx;\n    }\n    position.x = te[12];\n    position.y = te[13];\n    position.z = te[14];\n    // scale the rotation part\n    matrix.elements.set(this.elements); // at this point matrix is incomplete so we can't use .copy()\n    const invSX = 1 / sx;\n    const invSY = 1 / sy;\n    const invSZ = 1 / sz;\n    matrix.elements[0] *= invSX;\n    matrix.elements[1] *= invSX;\n    matrix.elements[2] *= invSX;\n    matrix.elements[4] *= invSY;\n    matrix.elements[5] *= invSY;\n    matrix.elements[6] *= invSY;\n    matrix.elements[8] *= invSZ;\n    matrix.elements[9] *= invSZ;\n    matrix.elements[10] *= invSZ;\n    quaternion.setFromRotationMatrix(matrix);\n    scale.x = sx;\n    scale.y = sy;\n    scale.z = sz;\n    return this;\n  }\n  makeFrustum(left: number, right: number, bottom: number, top: number, near: number, far: number): Matrix4 {\n    const te: Float32Array = this.elements;\n    const x = 2 * near / (right - left);\n    const y = 2 * near / (top - bottom);\n    const a = (right + left) / (right - left);\n    const b = (top + bottom) / (top - bottom);\n    const c = - (far + near) / (far - near);\n    const d = - 2 * far * near / (far - near);\n    te[0] = x;  te[4] = 0;  te[8] = a;  te[12] = 0;\n    te[1] = 0;  te[5] = y;  te[9] = b;  te[13] = 0;\n    te[2] = 0;  te[6] = 0;  te[10] = c;  te[14] = d;\n    te[3] = 0;  te[7] = 0;  te[11] = - 1;  te[15] = 0;\n    return this;\n  }\n  makePerspective(fov: number, aspect: number, near: number, far: number): Matrix4 {\n    const ymax = near * Math.tan(_Math.DEG2RAD * fov * 0.5);\n    const ymin = - ymax;\n    const xmin = ymin * aspect;\n    const xmax = ymax * aspect;\n    return this.makeFrustum(xmin, xmax, ymin, ymax, near, far);\n  }\n  makeOrthographic(left: number, right: number, top: number, bottom: number, near: number, far: number): Matrix4 {\n    const te: Float32Array = this.elements;\n    const w = 1.0 / (right - left);\n    const h = 1.0 / (top - bottom);\n    const p = 1.0 / (far - near);\n    const x = (right + left) * w;\n    const y = (top + bottom) * h;\n    const z = (far + near) * p;\n    te[0] = 2 * w;  te[4] = 0;  te[8] = 0;  te[12] = - x;\n    te[1] = 0;  te[5] = 2 * h;  te[9] = 0;  te[13] = - y;\n    te[2] = 0;  te[6] = 0;  te[10] = - 2 * p;  te[14] = - z;\n    te[3] = 0;  te[7] = 0;  te[11] = 0;  te[15] = 1;\n    return this;\n  }\n  equals(matrix: Matrix4): boolean {\n    const te: Float32Array = this.elements;\n    const me: Float32Array = matrix.elements;\n    for (let i = 0; i < 16; i ++) {\n      if (te[i] !== me[i]) return false;\n    }\n    return true;\n  }\n  fromArray(array: Float32Array | number[], offset: number = 0): Matrix4 {\n    for (let i = 0; i < 16; i ++) {\n      this.elements[i] = array[i + offset];\n    }\n    return this;\n  }\n  toArray(array: Float32Array | number[] = [], offset: number = 0): Float32Array | number[] {\n    const te: Float32Array = this.elements;\n    array[offset] = te[0];\n    array[offset + 1] = te[1];\n    array[offset + 2] = te[2];\n    array[offset + 3] = te[3];\n    array[offset + 4] = te[4];\n    array[offset + 5] = te[5];\n    array[offset + 6] = te[6];\n    array[offset + 7] = te[7];\n    array[offset + 8]  = te[8];\n    array[offset + 9]  = te[9];\n    array[offset + 10] = te[10];\n    array[offset + 11] = te[11];\n    array[offset + 12] = te[12];\n    array[offset + 13] = te[13];\n    array[offset + 14] = te[14];\n    array[offset + 15] = te[15];\n    return array;\n  }\n  extractPosition(m: Matrix4): Matrix4 {\n    console.warn(\"THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().\");\n    return this.copyPosition(m);\n  }\n  setRotationFromQuaternion(q: Quaternion): Matrix4 {\n    console.warn(\"THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().\");\n    return this.makeRotationFromQuaternion(q);\n  }\n  multiplyVector3(vector: Vector3): Vector3 {\n    console.warn(\"THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4(matrix) or vector.applyProjection(matrix) instead.\");\n    return vector.applyProjection(this);\n  }\n  multiplyVector4(vector: Vector4): Vector4 {\n    console.warn(\"THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4(matrix) instead.\");\n    return vector.applyMatrix4(this);\n  }\n  multiplyVector3Array(a: Float32Array | number[]): Float32Array | number[] {\n    console.warn(\"THREE.Matrix4: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array(array) instead.\");\n    return this.applyToVector3Array(a);\n  }\n  rotateAxis(v: Vector3): void {\n    console.warn(\"THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection(matrix) instead.\");\n    v.transformDirection(this);\n  }\n  crossVector(vector: Vector3): Vector3 {\n    console.warn(\"THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4(matrix) instead.\");\n    return vector.applyMatrix4(this);\n  }\n  translate(v: Vector3): void {\n    console.error(\"THREE.Matrix4: .translate() has been removed.\");\n  }\n  rotateX(angle: number): void {\n    console.error(\"THREE.Matrix4: .rotateX() has been removed.\");\n  }\n  rotateY(angle: number): void {\n    console.error(\"THREE.Matrix4: .rotateY() has been removed.\");\n  }\n  rotateZ(angle: number): void {\n    console.error(\"THREE.Matrix4: .rotateZ() has been removed.\");\n  }\n  rotateByAxis(axis: Vector3, angle: number): void {\n    console.error(\"THREE.Matrix4: .rotateByAxis() has been removed.\");\n  }\n}\n","import { Texture } from \"./Texture\";\nimport { TextureMapping, TextureWrapping, TextureEncoding, TextureType, TextureFormat, TextureFilter } from \"../constants\";\n/**\n * @author mrdoob / http://mrdoob.com/\n */\nexport class CubeTexture extends Texture {\n  readonly isCubeTexture: boolean = true;\n  constructor(images: any[] = [], mapping: TextureMapping = TextureMapping.CubeReflection, wrapS?: TextureWrapping, wrapT?: TextureWrapping, magFilter?: TextureFilter, minFilter?: TextureFilter, format?: TextureFormat, type?: TextureType, anisotropy?: number, encoding?: TextureEncoding) {\n    super(images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding);\n    this.flipY = false;\n  }\n  get images(): any[] { return this.image; }\n  set images(value: any[]) { this.image = value; }\n}\n","/**\n * @author tschw\n *\n * Uniforms of a program.\n * Those form a tree structure with a special top-level container for the root,\n * which you get by calling 'new WebGLUniforms(gl, program, renderer)'.\n *\n *\n * Properties of inner nodes including the top-level container:\n *\n * .seq - array of nested uniforms\n * .map - nested uniforms by name\n *\n *\n * Methods of all nodes except the top-level container:\n *\n * .setValue(gl, value, [renderer])\n *\n *     uploads a uniform value(s)\n *    the 'renderer' parameter is needed for sampler uniforms\n *\n *\n * Static methods of the top-level container (renderer factorizations):\n *\n * .upload(gl, seq, values, renderer)\n *\n *     sets uniforms in 'seq' to 'values[id].value'\n *\n * .seqWithValue(seq, values) : filteredSeq\n *\n *     filters 'seq' entries with corresponding entry in values\n *\n *\n * Methods of the top-level container (renderer factorizations):\n *\n * .setValue(gl, name, value)\n *\n *     sets uniform with  name 'name' to 'value'\n *\n * .set(gl, obj, prop)\n *\n *     sets uniform from object and property with same name than uniform\n *\n * .setOptional(gl, obj, prop)\n *\n *     like .set for an optional property of the object\n *\n */\nimport { CubeTexture } from \"../../textures/CubeTexture\";\nimport { Texture } from \"../../textures/Texture\";\nconst emptyTexture = new Texture();\nconst emptyCubeTexture = new CubeTexture();\n// --- Base for inner nodes (including the root) ---\nclass UniformContainer {\n  seq: any[] = [];\n  map: any[] = [];\n}\n// --- Utilities ---\n// Array Caches (provide typed arrays for temporary by size)\nconst arrayCacheF32: any[] = [];\nconst arrayCacheI32: any[] = [];\n// Flattening for arrays of vectors and matrices\nfunction flatten(array: any, nBlocks: number, blockSize: number): Float32Array {\n  const firstElem = array[0];\n  if (firstElem <= 0 || firstElem > 0) return array;\n  // unoptimized: ! isNaN(firstElem)\n  // see http://jacksondunstan.com/articles/983\n  const n = nBlocks * blockSize;\n  let r = arrayCacheF32[n];\n  if (r === undefined) {\n    r = new Float32Array(n);\n    arrayCacheF32[n] = r;\n  }\n  if (nBlocks !== 0) {\n    firstElem.toArray(r, 0);\n    for (let i = 1, offset = 0; i !== nBlocks; ++ i) {\n      offset += blockSize;\n      array[i].toArray(r, offset);\n    }\n  }\n  return r;\n}\n// Texture unit allocation\nfunction allocTexUnits(renderer: any, n: number): any {\n  let r = arrayCacheI32[n];\n  if (r === undefined) {\n    r = new Int32Array(n);\n    arrayCacheI32[n] = r;\n  }\n  for (let i = 0; i !== n; ++ i)\n    r[i] = renderer.allocTextureUnit();\n  return r;\n}\n// --- Uniform Classes ---\nclass SingleUniform {\n  id: any;\n  addr: any;\n  setValue: any;\n  constructor(id: any, activeInfo: any, addr: any) {\n    this.id = id;\n    this.addr = addr;\n    this.setValue = this.getSingularSetter(activeInfo.type);\n    // this.path = activeInfo.name; // DEBUG\n  }\n  // Note: Defining these methods externally, because they come in a bunch\n  // and this way their names minify.\n  // Single scalar\n  private setValue1f(gl: WebGLRenderingContext, v: any): void { gl.uniform1f(this.addr, v); }\n  private setValue1i(gl: WebGLRenderingContext, v: any): void { gl.uniform1i(this.addr, v); }\n  // Single float vector (from flat array or THREE.VectorN)\n  private setValue2fv(gl: WebGLRenderingContext, v: any): void {\n    if (v.x === undefined) gl.uniform2fv(this.addr, v);\n    else gl.uniform2f(this.addr, v.x, v.y);\n  }\n  private setValue3fv(gl: WebGLRenderingContext, v: any): void {\n    if (v.x !== undefined)\n      gl.uniform3f(this.addr, v.x, v.y, v.z);\n    else if (v.r !== undefined)\n      gl.uniform3f(this.addr, v.r, v.g, v.b);\n    else\n      gl.uniform3fv(this.addr, v);\n  }\n  private setValue4fv(gl: WebGLRenderingContext, v: any): void {\n    if (v.x === undefined) gl.uniform4fv(this.addr, v);\n    else gl.uniform4f(this.addr, v.x, v.y, v.z, v.w);\n  }\n  // Single matrix (from flat array or MatrixN)\n  private setValue2fm(gl: WebGLRenderingContext, v: any): void {\n    gl.uniformMatrix2fv(this.addr, false, v.elements || v);\n  }\n  private setValue3fm(gl: WebGLRenderingContext, v: any): void {\n    gl.uniformMatrix3fv(this.addr, false, v.elements || v);\n  }\n  private setValue4fm(gl: WebGLRenderingContext, v: any): void {\n    gl.uniformMatrix4fv(this.addr, false, v.elements || v);\n  }\n  // Single texture (2D / Cube)\n  private setValueT1(gl: WebGLRenderingContext, v: any, renderer: any): void {\n    const unit = renderer.allocTextureUnit();\n    gl.uniform1i(this.addr, unit);\n    renderer.setTexture2D(v || emptyTexture, unit);\n  }\n  private setValueT6(gl: WebGLRenderingContext, v: any, renderer: any): void {\n    const unit = renderer.allocTextureUnit();\n    gl.uniform1i(this.addr, unit);\n    renderer.setTextureCube(v || emptyCubeTexture, unit);\n  }\n  // Integer / Boolean vectors or arrays thereof (always flat arrays)\n  private setValue2iv(gl: WebGLRenderingContext, v: any): void { gl.uniform2iv(this.addr, v); }\n  private setValue3iv(gl: WebGLRenderingContext, v: any): void { gl.uniform3iv(this.addr, v); }\n  private setValue4iv(gl: WebGLRenderingContext, v: any): void { gl.uniform4iv(this.addr, v); }\n  // Helper to pick the right setter for the singular case\n  private getSingularSetter(type: number): any {\n    switch (type) {\n      case 0x1406: return this.setValue1f; // FLOAT\n      case 0x8b50: return this.setValue2fv; // _VEC2\n      case 0x8b51: return this.setValue3fv; // _VEC3\n      case 0x8b52: return this.setValue4fv; // _VEC4\n      case 0x8b5a: return this.setValue2fm; // _MAT2\n      case 0x8b5b: return this.setValue3fm; // _MAT3\n      case 0x8b5c: return this.setValue4fm; // _MAT4\n      case 0x8b5e: return this.setValueT1; // SAMPLER_2D\n      case 0x8b60: return this.setValueT6; // SAMPLER_CUBE\n      case 0x1404: case 0x8b56: return this.setValue1i; // INT, BOOL\n      case 0x8b53: case 0x8b57: return this.setValue2iv; // _VEC2\n      case 0x8b54: case 0x8b58: return this.setValue3iv; // _VEC3\n      case 0x8b55: case 0x8b59: return this.setValue4iv; // _VEC4\n    }\n  }\n}\nclass PureArrayUniform {\n  id: any;\n  addr: any;\n  size: any;\n  setValue: any;\n  constructor(id: any, activeInfo: any, addr: any) {\n    this.id = id;\n    this.addr = addr;\n    this.size = activeInfo.size;\n    this.setValue = this.getPureArraySetter(activeInfo.type);\n    // this.path = activeInfo.name; // DEBUG\n  }\n  // Array of scalars\n  private setValue1fv(gl: WebGLRenderingContext, v: any): void { gl.uniform1fv(this.addr, v); }\n  private setValue1iv(gl: WebGLRenderingContext, v: any): void { gl.uniform1iv(this.addr, v); }\n  // Array of vectors (flat or from THREE classes)\n  private setValueV2a(gl: WebGLRenderingContext, v: any): void {\n    gl.uniform2fv(this.addr, flatten(v, this.size, 2));\n  }\n  private setValueV3a(gl: WebGLRenderingContext, v: any): void {\n    gl.uniform3fv(this.addr, flatten(v, this.size, 3));\n  }\n  private setValueV4a(gl: WebGLRenderingContext, v: any): void {\n    gl.uniform4fv(this.addr, flatten(v, this.size, 4));\n  }\n  // Array of matrices (flat or from THREE clases)\n  private setValueM2a(gl: WebGLRenderingContext, v: any): void {\n    gl.uniformMatrix2fv(this.addr, false, flatten(v, this.size, 4));\n  }\n  private setValueM3a(gl: WebGLRenderingContext, v: any): void {\n    gl.uniformMatrix3fv(this.addr, false, flatten(v, this.size, 9));\n  }\n  private setValueM4a(gl: WebGLRenderingContext, v: any): void {\n    gl.uniformMatrix4fv(this.addr, false, flatten(v, this.size, 16));\n  }\n  // Array of textures (2D / Cube)\n  private setValueT1a(gl: WebGLRenderingContext, v: any, renderer: any): void {\n    const n = v.length,\n      units = allocTexUnits(renderer, n);\n    gl.uniform1iv(this.addr, units);\n    for (let i = 0; i !== n; ++ i) {\n      renderer.setTexture2D(v[i] || emptyTexture, units[i]);\n    }\n  }\n  private setValueT6a(gl: WebGLRenderingContext, v: any, renderer: any): void {\n    const n = v.length,\n      units = allocTexUnits(renderer, n);\n    gl.uniform1iv(this.addr, units);\n    for (let i = 0; i !== n; ++ i) {\n      renderer.setTextureCube(v[i] || emptyCubeTexture, units[i]);\n    }\n  }\n  // Integer / Boolean vectors or arrays thereof (always flat arrays)\n  private setValue2iv(gl: WebGLRenderingContext, v: any): void { gl.uniform2iv(this.addr, v); }\n  private setValue3iv(gl: WebGLRenderingContext, v: any): void { gl.uniform3iv(this.addr, v); }\n  private setValue4iv(gl: WebGLRenderingContext, v: any): void { gl.uniform4iv(this.addr, v); }\n  // Helper to pick the right setter for a pure (bottom-level) array\n  private getPureArraySetter(type: number): any {\n    switch (type) {\n      case 0x1406: return this.setValue1fv; // FLOAT\n      case 0x8b50: return this.setValueV2a; // _VEC2\n      case 0x8b51: return this.setValueV3a; // _VEC3\n      case 0x8b52: return this.setValueV4a; // _VEC4\n      case 0x8b5a: return this.setValueM2a; // _MAT2\n      case 0x8b5b: return this.setValueM3a; // _MAT3\n      case 0x8b5c: return this.setValueM4a; // _MAT4\n      case 0x8b5e: return this.setValueT1a; // SAMPLER_2D\n      case 0x8b60: return this.setValueT6a; // SAMPLER_CUBE\n      case 0x1404: case 0x8b56: return this.setValue1iv; // INT, BOOL\n      case 0x8b53: case 0x8b57: return this.setValue2iv; // _VEC2\n      case 0x8b54: case 0x8b58: return this.setValue3iv; // _VEC3\n      case 0x8b55: case 0x8b59: return this.setValue4iv; // _VEC4\n    }\n  }\n}\nclass StructuredUniform extends UniformContainer {\n  id: any;\n  constructor(id: any) {\n    super(); // mix-in\n    this.id = id;\n  }\n  setValue(gl: WebGLRenderingContext, value: any) {\n    // Note: Don't need an extra 'renderer' parameter, since samplers\n    // are not allowed in structured uniforms.\n    const seq = this.seq;\n    for (let i = 0, n = seq.length; i !== n; ++ i) {\n      const u = seq[i];\n      u.setValue(gl, value[u.id]);\n    }\n  }\n}\n// --- Top-level ---\n// Parser - builds up the property tree from the path strings\nconst RePathPart: RegExp = /([\\w\\d_]+)(\\])?(\\[|\\.)?/g;\n// extracts\n//   - the identifier (member name or array index)\n//  - followed by an optional right bracket (found when array index)\n//  - followed by an optional left bracket or dot (type of subscript)\n//\n// Note: These portions can be read in a non-overlapping fashion and\n// allow straightforward parsing of the hierarchy that WebGL encodes\n// in the uniform names.\nfunction addUniform(container: any, uniformObject: any) {\n  container.seq.push(uniformObject);\n  container.map[uniformObject.id] = uniformObject;\n}\nfunction parseUniform(activeInfo: any, addr: any, container: any) {\n  const path = activeInfo.name;\n  const pathLength = path.length;\n  // reset RegExp object, because of the early exit of a previous run\n  RePathPart.lastIndex = 0;\n  for (; ; ) {\n    const match = RePathPart.exec(path);\n    const matchEnd = RePathPart.lastIndex;\n    let id = match[1];\n    const idIsIndex = match[2] === ']';\n    const subscript = match[3];\n    //if (idIsIndex) id = id | 0; // convert to integer\n    if (idIsIndex) id = parseInt(id, 10).toString(); // convert to integer\n    if (subscript === undefined ||\n        subscript === '[' && matchEnd + 2 === pathLength) {\n      // bare name or \"pure\" bottom-level array \"[0]\" suffix\n      addUniform(container, subscript === undefined ?\n          new SingleUniform(id, activeInfo, addr) :\n          new PureArrayUniform(id, activeInfo, addr));\n      break;\n    } else {\n      // step into inner node / create it in case it doesn't exist\n      const map = container.map;\n      let next = map[id];\n      if (next === undefined) {\n        next = new StructuredUniform(id);\n        addUniform(container, next);\n      }\n      container = next;\n    }\n  }\n}\n// Root Container\nexport class WebGLUniforms extends UniformContainer {\n  renderer: any;\n  constructor(gl: WebGLRenderingContext, program: any, renderer: any) {\n    super();\n    this.renderer = renderer;\n    const n = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\n    for (let i = 0; i !== n; ++ i) {\n      const info = gl.getActiveUniform(program, i),\n        path = info.name,\n        addr = gl.getUniformLocation(program, path);\n      parseUniform(info, addr, this);\n    }\n  }\n  setValue(gl: WebGLRenderingContext, name: any, value: any): void {\n    const u = this.map[name];\n    if (u !== undefined) u.setValue(gl, value, this.renderer);\n  }\n  set(gl: WebGLRenderingContext, object: any, name: any): void {\n    const u = this.map[name];\n    if (u !== undefined) u.setValue(gl, object[name], this.renderer);\n  }\n  setOptional(gl: WebGLRenderingContext, object: any, name: any): void {\n    const v = object[name];\n    if (v !== undefined) this.setValue(gl, name, v);\n  }\n  // Static interface\n  static upload(gl: WebGLRenderingContext, seq: any, values: any, renderer: any): void {\n    for (let i = 0, n = seq.length; i !== n; ++ i) {\n      const u = seq[i],\n        v = values[u.id];\n      if (v.needsUpdate !== false) {\n        // note: always updating when .needsUpdate is undefined\n        u.setValue(gl, v.value, renderer);\n      }\n    }\n  }\n  static seqWithValue(seq: any, values: any): any[] {\n    const r = [];\n    for (let i = 0, n = seq.length; i !== n; ++ i) {\n      const u = seq[i];\n      if (u.id in values) r.push(u);\n    }\n    return r;\n  }\n}\n","import { _Math } from \"./Math\";\n/**\n * @author mrdoob / http://mrdoob.com/\n */\nexport class Color {\n  r: number = 1;\n  g: number = 1;\n  b: number = 1;\n  readonly isColor: boolean = true;\n  constructor(r?: Color | string | number, g?: number, b?: number) {\n    //if (g === undefined && b === undefined) {\n    //  // r is THREE.Color, hex or string\n    //  this.set(r);\n    //}\n    //this.setRGB(r, g, b);\n    if (r instanceof Color) {\n      this.copy(r);\n    } else if (typeof(r) === 'string') {\n      this.setStyle(r);\n    } else if (typeof(r) === 'number') {\n      if (typeof(g) === 'number' && typeof(b) === 'number') {\n        this.setRGB(r, g, b);\n      } else {\n        this.setHex(r);\n      }\n    }\n  }\n  set(value: Color | number | string): Color {\n    if (value && value instanceof Color) {\n      this.copy(value);\n    } else if (typeof(value) === 'number') {\n      this.setHex(value);\n    } else if (typeof(value) === 'string') {\n      this.setStyle(value);\n    }\n    return this;\n  }\n  setScalar(scalar: number): Color {\n    this.r = scalar;\n    this.g = scalar;\n    this.b = scalar;\n    return this;\n  }\n  setHex(hex: number): Color {\n    hex = Math.floor(hex);\n    this.r = (hex >> 16 & 255) / 255;\n    this.g = (hex >> 8 & 255) / 255;\n    this.b = (hex & 255) / 255;\n    return this;\n  }\n  setRGB(r: number, g: number, b: number): Color {\n    this.r = r;\n    this.g = g;\n    this.b = b;\n    return this;\n  }\n  setHSL(h: number, s: number, l: number): Color {\n    function hue2rgb(p: number, q: number, t: number): number {\n      if (t < 0) t += 1;\n      if (t > 1) t -= 1;\n      if (t < 1 / 6) return p + (q - p) * 6 * t;\n      if (t < 1 / 2) return q;\n      if (t < 2 / 3) return p + (q - p) * 6 * (2 / 3 - t);\n      return p;\n    }\n    // h,s,l ranges are in 0.0 - 1.0\n    h = _Math.euclideanModulo(h, 1);\n    s = _Math.clamp(s, 0, 1);\n    l = _Math.clamp(l, 0, 1);\n    if (s === 0) {\n      this.r = this.g = this.b = l;\n    } else {\n      const p = l <= 0.5 ? l * (1 + s) : l + s - (l * s);\n      const q = (2 * l) - p;\n      this.r = hue2rgb(q, p, h + 1 / 3);\n      this.g = hue2rgb(q, p, h);\n      this.b = hue2rgb(q, p, h - 1 / 3);\n    }\n    return this;\n  }\n  setStyle(style: string): Color {\n    function handleAlpha(alpha: string): void {\n      if (alpha === undefined) return;\n      if (parseFloat(alpha) < 1) {\n        console.warn('THREE.Color: Alpha component of ' + style + ' will be ignored.');\n      }\n    }\n    let m;\n    if (m = /^((?:rgb|hsl)a?)\\(\\s*([^\\)]*)\\)/.exec(style)) {\n      // rgb / hsl\n      let color;\n      const name = m[1];\n      const components = m[2];\n      switch (name) {\n        case 'rgb':\n        case 'rgba':\n          if (color = /^(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec(components)) {\n            // rgb(255,0,0) rgba(255,0,0,0.5)\n            this.r = Math.min(255, parseInt(color[1], 10)) / 255;\n            this.g = Math.min(255, parseInt(color[2], 10)) / 255;\n            this.b = Math.min(255, parseInt(color[3], 10)) / 255;\n            handleAlpha(color[5]);\n            return this;\n          }\n          if (color = /^(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec(components)) {\n            // rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n            this.r = Math.min(100, parseInt(color[1], 10)) / 100;\n            this.g = Math.min(100, parseInt(color[2], 10)) / 100;\n            this.b = Math.min(100, parseInt(color[3], 10)) / 100;\n            handleAlpha(color[5]);\n            return this;\n          }\n          break;\n        case 'hsl':\n        case 'hsla':\n          if (color = /^([0-9]*\\.?[0-9]+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec(components)) {\n            // hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n            const h = parseFloat(color[1]) / 360;\n            const s = parseInt(color[2], 10) / 100;\n            const l = parseInt(color[3], 10) / 100;\n            handleAlpha(color[5]);\n            return this.setHSL(h, s, l);\n          }\n          break;\n      }\n    } else if (m = /^\\#([A-Fa-f0-9]+)$/.exec(style)) {\n      // hex color\n      const hex = m[1];\n      const size = hex.length;\n      if (size === 3) {\n        // #ff0\n        this.r = parseInt(hex.charAt(0) + hex.charAt(0), 16) / 255;\n        this.g = parseInt(hex.charAt(1) + hex.charAt(1), 16) / 255;\n        this.b = parseInt(hex.charAt(2) + hex.charAt(2), 16) / 255;\n        return this;\n      } else if (size === 6) {\n        // #ff0000\n        this.r = parseInt(hex.charAt(0) + hex.charAt(1), 16) / 255;\n        this.g = parseInt(hex.charAt(2) + hex.charAt(3), 16) / 255;\n        this.b = parseInt(hex.charAt(4) + hex.charAt(5), 16) / 255;\n        return this;\n      }\n    }\n    if (style && style.length > 0) {\n      // color keywords\n      const hex = ColorKeywords[style];\n      if (hex !== undefined) {\n        // red\n        this.setHex(hex);\n      } else {\n        // unknown color\n        console.warn('THREE.Color: Unknown color ' + style);\n      }\n    }\n    return this;\n  }\n  clone(): Color {\n    return new (this.constructor as any)().copy(this);\n  }\n  copy(color: Color): Color {\n    this.r = color.r;\n    this.g = color.g;\n    this.b = color.b;\n    return this;\n  }\n  copyGammaToLinear(color: Color, gammaFactor: number = 2.0): Color {\n    this.r = Math.pow(color.r, gammaFactor);\n    this.g = Math.pow(color.g, gammaFactor);\n    this.b = Math.pow(color.b, gammaFactor);\n    return this;\n  }\n  copyLinearToGamma(color: Color, gammaFactor = 2.0): Color {\n    const safeInverse = (gammaFactor > 0) ? (1.0 / gammaFactor) : 1.0;\n    this.r = Math.pow(color.r, safeInverse);\n    this.g = Math.pow(color.g, safeInverse);\n    this.b = Math.pow(color.b, safeInverse);\n    return this;\n  }\n  convertGammaToLinear(): Color {\n    const r = this.r, g = this.g, b = this.b;\n    this.r = r * r;\n    this.g = g * g;\n    this.b = b * b;\n    return this;\n  }\n  convertLinearToGamma(): Color {\n    this.r = Math.sqrt(this.r);\n    this.g = Math.sqrt(this.g);\n    this.b = Math.sqrt(this.b);\n    return this;\n  }\n  getHex(): number {\n    return (this.r * 255) << 16 ^ (this.g * 255) << 8 ^ (this.b * 255) << 0;\n  }\n  getHexString(): string {\n    return ('000000' + this.getHex().toString(16)).slice(- 6);\n  }\n  getHSL(hsl: any = { h: 0, s: 0, l: 0 }): any {\n    // h,s,l ranges are in 0.0 - 1.0\n    const r = this.r, g = this.g, b = this.b;\n    const max = Math.max(r, g, b);\n    const min = Math.min(r, g, b);\n    let hue, saturation;\n    const lightness = (min + max) / 2.0;\n    if (min === max) {\n      hue = 0;\n      saturation = 0;\n    } else {\n      const delta = max - min;\n      saturation = lightness <= 0.5 ? delta / (max + min) : delta / (2 - max - min);\n      switch (max) {\n        case r: hue = (g - b) / delta + (g < b ? 6 : 0); break;\n        case g: hue = (b - r) / delta + 2; break;\n        case b: hue = (r - g) / delta + 4; break;\n      }\n      hue /= 6;\n    }\n    hsl.h = hue;\n    hsl.s = saturation;\n    hsl.l = lightness;\n    return hsl;\n  }\n  getStyle(): string {\n    return 'rgb(' + ((this.r * 255) | 0) + ',' + ((this.g * 255) | 0) + ',' + ((this.b * 255) | 0) + ')';\n  }\n  offsetHSL(h: number, s: number, l: number): Color {\n    const hsl = this.getHSL();\n    hsl.h += h; hsl.s += s; hsl.l += l;\n    this.setHSL(hsl.h, hsl.s, hsl.l);\n    return this;\n  }\n  add(color: Color): Color {\n    this.r += color.r;\n    this.g += color.g;\n    this.b += color.b;\n    return this;\n  }\n  addColors(color1: Color, color2: Color): Color {\n    this.r = color1.r + color2.r;\n    this.g = color1.g + color2.g;\n    this.b = color1.b + color2.b;\n    return this;\n  }\n  addScalar(s: number): Color {\n    this.r += s;\n    this.g += s;\n    this.b += s;\n    return this;\n  }\n  sub(color: Color): Color {\n    this.r = Math.max(0, this.r - color.r);\n    this.g = Math.max(0, this.g - color.g);\n    this.b = Math.max(0, this.b - color.b);\n    return this;\n  }\n  multiply(color: Color): Color {\n    this.r *= color.r;\n    this.g *= color.g;\n    this.b *= color.b;\n    return this;\n  }\n  multiplyScalar(s: number): Color {\n    this.r *= s;\n    this.g *= s;\n    this.b *= s;\n    return this;\n  }\n  lerp(color: Color, alpha: number): Color {\n    this.r += (color.r - this.r) * alpha;\n    this.g += (color.g - this.g) * alpha;\n    this.b += (color.b - this.b) * alpha;\n    return this;\n  }\n  equals(c: Color): boolean {\n    return (c.r === this.r) && (c.g === this.g) && (c.b === this.b);\n  }\n  fromArray(array: Float32Array | number[], offset: number = 0): Color {\n    this.r = array[offset];\n    this.g = array[offset + 1];\n    this.b = array[offset + 2];\n    return this;\n  }\n  toArray(array: Float32Array | number[] = [], offset: number = 0): Float32Array | number[] {\n    array[offset] = this.r;\n    array[offset + 1] = this.g;\n    array[offset + 2] = this.b;\n    return array;\n  }\n  toJSON(meta: any): any {\n    return this.getHex();\n  }\n}\nexport const ColorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\n'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\n'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\n'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\n'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\n'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\n'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\n'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\n'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\n'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\n'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\n'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\n'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\n'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\n'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\n'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\n'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\n'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\n'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\n'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\n'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\n'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\n'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\n'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\n","import { Vector3 } from \"./Vector3\";\nimport { Matrix4 } from \"./Matrix4\";\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author bhouston / http://clara.io\n * @author tschw\n */\nexport class Matrix3 {\n  elements: Float32Array = new Float32Array([\n    1, 0, 0,\n    0, 1, 0,\n    0, 0, 1\n  ]);\n  readonly isMatrix3: boolean = true;\n  constructor() {\n    if (arguments.length > 0) {\n      console.error('THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.');\n    }\n  }\n  set(n11: number, n12: number, n13: number, n21: number, n22: number, n23: number, n31: number, n32: number, n33: number): Matrix3 {\n    const te: Float32Array = this.elements;\n    te[0] = n11; te[1] = n21; te[2] = n31;\n    te[3] = n12; te[4] = n22; te[5] = n32;\n    te[6] = n13; te[7] = n23; te[8] = n33;\n    return this;\n  }\n  identity(): Matrix3 {\n    this.set(\n      1, 0, 0,\n      0, 1, 0,\n      0, 0, 1\n    );\n    return this;\n  }\n  clone(): Matrix3 {\n    return new (this.constructor as any)().fromArray(this.elements);\n  }\n  copy(m: Matrix3): Matrix3 {\n    const me: Float32Array = m.elements;\n    this.set(\n      me[0], me[3], me[6],\n      me[1], me[4], me[7],\n      me[2], me[5], me[8]\n    );\n    return this;\n  }\n  setFromMatrix4(m: Matrix4): Matrix3 {\n    const me: Float32Array = m.elements;\n    this.set(\n      me[0], me[4], me[8],\n      me[1], me[5], me[9],\n      me[2], me[6], me[10]\n    );\n    return this;\n  }\n  private static applyToVector3Array_v1 = new Vector3();\n  applyToVector3Array(array: Float32Array | number[], offset: number = 0, length: number = array.length): Float32Array | number[] {\n    const v1 = Matrix3.applyToVector3Array_v1;\n    for (let i = 0, j = offset; i < length; i += 3, j += 3) {\n      v1.fromArray(array, j);\n      v1.applyMatrix3(this);\n      v1.toArray(array, j);\n    }\n    return array;\n  }\n  private static applyToBuffer_v1 = new Vector3();\n  applyToBuffer(buffer: any, offset: number = 0, length: number = buffer.length / buffer.itemSize) {\n    const v1 = Matrix3.applyToBuffer_v1;\n    for (let i = 0, j = offset; i < length; i ++, j ++) {\n      v1.x = buffer.getX(j);\n      v1.y = buffer.getY(j);\n      v1.z = buffer.getZ(j);\n      v1.applyMatrix3(this);\n      buffer.setXYZ(j, v1.x, v1.y, v1.z);\n    }\n    return buffer;\n  }\n  multiplyScalar(s: number): Matrix3 {\n    const te: Float32Array = this.elements;\n    te[0] *= s; te[3] *= s; te[6] *= s;\n    te[1] *= s; te[4] *= s; te[7] *= s;\n    te[2] *= s; te[5] *= s; te[8] *= s;\n    return this;\n  }\n  determinant(): number {\n    const te: Float32Array = this.elements;\n    const a = te[0], b = te[1], c = te[2],\n      d = te[3], e = te[4], f = te[5],\n      g = te[6], h = te[7], i = te[8];\n    return a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n  }\n  getInverse(matrix: Matrix3 = new Matrix3(), throwOnDegenerate: boolean = false): Matrix3 {\n    const me: Float32Array = matrix.elements,\n      te: Float32Array = this.elements,\n      n11 = me[0], n21 = me[1], n31 = me[2],\n      n12 = me[3], n22 = me[4], n32 = me[5],\n      n13 = me[6], n23 = me[7], n33 = me[8],\n      t11 = n33 * n22 - n32 * n23,\n      t12 = n32 * n13 - n33 * n12,\n      t13 = n23 * n12 - n22 * n13,\n      det = n11 * t11 + n21 * t12 + n31 * t13;\n    if (det === 0) {\n      const msg = \"THREE.Matrix3.getInverse(): can't invert matrix, determinant is 0\";\n      if (throwOnDegenerate === true) {\n        throw new Error(msg);\n      } else {\n        console.warn(msg);\n      }\n      return this.identity();\n    }\n    const detInv = 1 / det;\n    te[0] = t11 * detInv;\n    te[1] = (n31 * n23 - n33 * n21) * detInv;\n    te[2] = (n32 * n21 - n31 * n22) * detInv;\n    te[3] = t12 * detInv;\n    te[4] = (n33 * n11 - n31 * n13) * detInv;\n    te[5] = (n31 * n12 - n32 * n11) * detInv;\n    te[6] = t13 * detInv;\n    te[7] = (n21 * n13 - n23 * n11) * detInv;\n    te[8] = (n22 * n11 - n21 * n12) * detInv;\n    return this;\n  }\n  transpose(): Matrix3 {\n    let tmp;\n    const m: Float32Array = this.elements;\n    tmp = m[1]; m[1] = m[3]; m[3] = tmp;\n    tmp = m[2]; m[2] = m[6]; m[6] = tmp;\n    tmp = m[5]; m[5] = m[7]; m[7] = tmp;\n    return this;\n  }\n  flattenToArrayOffset(array: Float32Array | number[] = [], offset: number): Float32Array | number[] {\n    console.warn(\"THREE.Matrix3: .flattenToArrayOffset is deprecated \" +\n        \"- just use .toArray instead.\");\n    return this.toArray(array, offset);\n  }\n  getNormalMatrix(matrix4: Matrix4): Matrix3 {\n    return this.setFromMatrix4(matrix4).getInverse(this).transpose();\n  }\n  transposeIntoArray(r: Float32Array | number[]): Matrix3 {\n    const m: Float32Array = this.elements;\n    r[0] = m[0];\n    r[1] = m[3];\n    r[2] = m[6];\n    r[3] = m[1];\n    r[4] = m[4];\n    r[5] = m[7];\n    r[6] = m[2];\n    r[7] = m[5];\n    r[8] = m[8];\n    return this;\n  }\n  fromArray(array: Float32Array | number[], offset: number = 0): Matrix3 {\n    for (let i = 0; i < 9; i ++) {\n      this.elements[i] = array[i + offset];\n    }\n    return this;\n  }\n  toArray(array: Float32Array | number[] = [], offset: number = 0): Float32Array | number[] {\n    const te: Float32Array = this.elements;\n    array[offset] = te[0];\n    array[offset + 1] = te[1];\n    array[offset + 2] = te[2];\n    array[offset + 3] = te[3];\n    array[offset + 4] = te[4];\n    array[offset + 5] = te[5];\n    array[offset + 6] = te[6];\n    array[offset + 7] = te[7];\n    array[offset + 8]  = te[8];\n    return array;\n  }\n  multiplyVector3(vector: Vector3): Vector3 {\n    console.warn(\"THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3(matrix) instead.\");\n    return vector.applyMatrix3(this);\n  }\n  multiplyVector3Array(a: Float32Array | number[]): Float32Array | number[] {\n    console.warn(\"THREE.Matrix3: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array(array) instead.\");\n    return this.applyToVector3Array(a);\n  }\n}\n","/**\n * Uniform Utilities\n */\nimport { Color } from \"../../math/Color\";\nimport { Vector2 } from \"../../math/Vector2\";\nimport { Vector3 } from \"../../math/Vector3\";\nimport { Vector4 } from \"../../math/Vector4\";\nimport { Matrix3 } from \"../../math/Matrix3\";\nimport { Matrix4 } from \"../../math/Matrix4\";\nimport { Texture } from \"../../textures/Texture\";\nexport class UniformsUtils {\n  static merge(uniforms: any): any {\n    const merged = {};\n    for (let u = 0; u < uniforms.length; u ++) {\n      const tmp = UniformsUtils.clone(uniforms[u]);\n      for (let p in tmp) {\n        merged[p] = tmp[p];\n      }\n    }\n    return merged;\n  }\n  static clone(uniforms_src: any): any {\n    const uniforms_dst = {};\n    for (let u in uniforms_src) {\n      uniforms_dst[u] = {};\n      for (let p in uniforms_src[u]) {\n        const parameter_src = uniforms_src[u][p];\n        if (parameter_src && (parameter_src instanceof Color ||\n          parameter_src instanceof Matrix3 || parameter_src instanceof Matrix4 ||\n          parameter_src instanceof Vector2 || parameter_src instanceof Vector3 || parameter_src instanceof Vector4 ||\n          parameter_src instanceof Texture)) {\n          uniforms_dst[u][p] = parameter_src.clone();\n        } else if (Array.isArray(parameter_src)) {\n          uniforms_dst[u][p] = parameter_src.slice();\n        } else {\n          uniforms_dst[u][p] = parameter_src;\n        }\n      }\n    }\n    return uniforms_dst;\n  }\n}\n","export default [\n\"#ifdef USE_ALPHAMAP\",\n\"\",\n\"\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\",\n\"\",\n\"#endif\",\n\"\",\n].join('\\n');","export default [\n\"#ifdef USE_ALPHAMAP\",\n\"\",\n\"\tuniform sampler2D alphaMap;\",\n\"\",\n\"#endif\",\n\"\",\n].join('\\n');","export default [\n\"#ifdef ALPHATEST\",\n\"\",\n\"\tif ( diffuseColor.a < ALPHATEST ) discard;\",\n\"\",\n\"#endif\",\n\"\",\n].join('\\n');","export default [\n\"#ifdef USE_AOMAP\",\n\"\",\n\"\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\",\n\"\",\n\"\treflectedLight.indirectDiffuse *= ambientOcclusion;\",\n\"\",\n\"\t#if defined( USE_ENVMAP ) && defined( PHYSICAL )\",\n\"\",\n\"\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\",\n\"\",\n\"\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\",\n\"\",\n\"\t#endif\",\n\"\",\n\"#endif\",\n\"\",\n].join('\\n');","export default [\n\"#ifdef USE_AOMAP\",\n\"\",\n\"\tuniform sampler2D aoMap;\",\n\"\tuniform float aoMapIntensity;\",\n\"\",\n\"#endif\",\n].join('\\n');","export default [\n\"\",\n\"vec3 transformed = vec3( position );\",\n\"\",\n].join('\\n');","export default [\n\"\",\n\"vec3 objectNormal = vec3( normal );\",\n\"\",\n].join('\\n');","export default [\n\"bool testLightInRange( const in float lightDistance, const in float cutoffDistance ) {\",\n\"\",\n\"\treturn any( bvec2( cutoffDistance == 0.0, lightDistance < cutoffDistance ) );\",\n\"\",\n\"}\",\n\"\",\n\"float punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\",\n\"\",\n\"\t\tif( decayExponent > 0.0 ) {\",\n\"\",\n\"#if defined ( PHYSICALLY_CORRECT_LIGHTS )\",\n\"\",\n\"\t\t\t// based upon Frostbite 3 Moving to Physically-based Rendering\",\n\"\t\t\t// page 32, equation 26: E[window1]\",\n\"\t\t\t// http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr_v2.pdf\",\n\"\t\t\t// this is intended to be used on spot and point lights who are represented as luminous intensity\",\n\"\t\t\t// but who must be converted to luminous irradiance for surface lighting calculation\",\n\"\t\t\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\",\n\"\t\t\tfloat maxDistanceCutoffFactor = pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\",\n\"\t\t\treturn distanceFalloff * maxDistanceCutoffFactor;\",\n\"\",\n\"#else\",\n\"\",\n\"\t\t\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\",\n\"\",\n\"#endif\",\n\"\",\n\"\t\t}\",\n\"\",\n\"\t\treturn 1.0;\",\n\"}\",\n\"\",\n\"vec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\",\n\"\",\n\"\treturn RECIPROCAL_PI * diffuseColor;\",\n\"\",\n\"} // validated\",\n\"\",\n\"\",\n\"vec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\",\n\"\",\n\"\t// Original approximation by Christophe Schlick '94\",\n\"\t//;float fresnel = pow( 1.0 - dotLH, 5.0 );\",\n\"\",\n\"\t// Optimized variant (presented by Epic at SIGGRAPH '13)\",\n\"\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\",\n\"\",\n\"\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\",\n\"\",\n\"} // validated\",\n\"\",\n\"\",\n\"// Microfacet Models for Refraction through Rough Surfaces - equation (34)\",\n\"// http://graphicrants.blogspot.com/2013/08/specular-brdf-reference.html\",\n\"// alpha is \\\"roughness squared\\\" in Disney’s reparameterization\",\n\"float G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\",\n\"\",\n\"\t// geometry term = G(l)⋅G(v) / 4(n⋅l)(n⋅v)\",\n\"\",\n\"\tfloat a2 = pow2( alpha );\",\n\"\",\n\"\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\",\n\"\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\",\n\"\",\n\"\treturn 1.0 / ( gl * gv );\",\n\"\",\n\"} // validated\",\n\"\",\n\"// from page 12, listing 2 of http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr_v2.pdf\",\n\"float G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\",\n\"\",\n\"\tfloat a2 = pow2( alpha );\",\n\"\",\n\"\t// dotNL and dotNV are explicitly swapped. This is not a mistake.\",\n\"\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\",\n\"\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\",\n\"\",\n\"\treturn 0.5 / max( gv + gl, EPSILON );\",\n\"}\",\n\"\",\n\"\",\n\"\",\n\"// Microfacet Models for Refraction through Rough Surfaces - equation (33)\",\n\"// http://graphicrants.blogspot.com/2013/08/specular-brdf-reference.html\",\n\"// alpha is \\\"roughness squared\\\" in Disney’s reparameterization\",\n\"float D_GGX( const in float alpha, const in float dotNH ) {\",\n\"\",\n\"\tfloat a2 = pow2( alpha );\",\n\"\",\n\"\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0; // avoid alpha = 0 with dotNH = 1\",\n\"\",\n\"\treturn RECIPROCAL_PI * a2 / pow2( denom );\",\n\"\",\n\"}\",\n\"\",\n\"\",\n\"// GGX Distribution, Schlick Fresnel, GGX-Smith Visibility\",\n\"vec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\",\n\"\",\n\"\tfloat alpha = pow2( roughness ); // UE4's roughness\",\n\"\",\n\"\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\",\n\"\",\n\"\tfloat dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\",\n\"\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\",\n\"\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\",\n\"\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\",\n\"\",\n\"\tvec3 F = F_Schlick( specularColor, dotLH );\",\n\"\",\n\"\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\",\n\"\",\n\"\tfloat D = D_GGX( alpha, dotNH );\",\n\"\",\n\"\treturn F * ( G * D );\",\n\"\",\n\"} // validated\",\n\"\",\n\"\",\n\"// ref: https://www.unrealengine.com/blog/physically-based-shading-on-mobile - environmentBRDF for GGX on mobile\",\n\"vec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\",\n\"\",\n\"\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\",\n\"\",\n\"\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\",\n\"\",\n\"\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\",\n\"\",\n\"\tvec4 r = roughness * c0 + c1;\",\n\"\",\n\"\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\",\n\"\",\n\"\tvec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\",\n\"\",\n\"\treturn specularColor * AB.x + AB.y;\",\n\"\",\n\"} // validated\",\n\"\",\n\"\",\n\"float G_BlinnPhong_Implicit( /* const in float dotNL, const in float dotNV */ ) {\",\n\"\",\n\"\t// geometry term is (n dot l)(n dot v) / 4(n dot l)(n dot v)\",\n\"\treturn 0.25;\",\n\"\",\n\"}\",\n\"\",\n\"float D_BlinnPhong( const in float shininess, const in float dotNH ) {\",\n\"\",\n\"\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\",\n\"\",\n\"}\",\n\"\",\n\"vec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\",\n\"\",\n\"\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\",\n\"\",\n\"\t//float dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\",\n\"\t//float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\",\n\"\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\",\n\"\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\",\n\"\",\n\"\tvec3 F = F_Schlick( specularColor, dotLH );\",\n\"\",\n\"\tfloat G = G_BlinnPhong_Implicit( /* dotNL, dotNV */ );\",\n\"\",\n\"\tfloat D = D_BlinnPhong( shininess, dotNH );\",\n\"\",\n\"\treturn F * ( G * D );\",\n\"\",\n\"} // validated\",\n\"\",\n\"// source: http://simonstechblog.blogspot.ca/2011/12/microfacet-brdf.html\",\n\"float GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\",\n\"\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\",\n\"}\",\n\"\",\n\"float BlinnExponentToGGXRoughness( const in float blinnExponent ) {\",\n\"\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\",\n\"}\",\n\"\",\n].join('\\n');","export default [\n\"#ifdef USE_BUMPMAP\",\n\"\",\n\"\tuniform sampler2D bumpMap;\",\n\"\tuniform float bumpScale;\",\n\"\",\n\"\t// Derivative maps - bump mapping unparametrized surfaces by Morten Mikkelsen\",\n\"\t// http://mmikkelsen3d.blogspot.sk/2011/07/derivative-maps.html\",\n\"\",\n\"\t// Evaluate the derivative of the height w.r.t. screen-space using forward differencing (listing 2)\",\n\"\",\n\"\tvec2 dHdxy_fwd() {\",\n\"\",\n\"\t\tvec2 dSTdx = dFdx( vUv );\",\n\"\t\tvec2 dSTdy = dFdy( vUv );\",\n\"\",\n\"\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\",\n\"\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\",\n\"\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\",\n\"\",\n\"\t\treturn vec2( dBx, dBy );\",\n\"\",\n\"\t}\",\n\"\",\n\"\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\",\n\"\",\n\"\t\tvec3 vSigmaX = dFdx( surf_pos );\",\n\"\t\tvec3 vSigmaY = dFdy( surf_pos );\",\n\"\t\tvec3 vN = surf_norm;\t\t// normalized\",\n\"\",\n\"\t\tvec3 R1 = cross( vSigmaY, vN );\",\n\"\t\tvec3 R2 = cross( vN, vSigmaX );\",\n\"\",\n\"\t\tfloat fDet = dot( vSigmaX, R1 );\",\n\"\",\n\"\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\",\n\"\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\",\n\"\",\n\"\t}\",\n\"\",\n\"#endif\",\n\"\",\n].join('\\n');","export default [\n\"#if NUM_CLIPPING_PLANES > 0\",\n\"\",\n\"\tfor ( int i = 0; i < NUM_CLIPPING_PLANES; ++ i ) {\",\n\"\",\n\"\t\tvec4 plane = clippingPlanes[ i ];\",\n\"\t\tif ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;\",\n\"\",\n\"\t}\",\n\"\",\n\"#endif\",\n\"\",\n].join('\\n');","export default [\n\"#if NUM_CLIPPING_PLANES > 0\",\n\"\",\n\"\t#if ! defined( PHYSICAL ) && ! defined( PHONG )\",\n\"\t\tvarying vec3 vViewPosition;\",\n\"\t#endif\",\n\"\",\n\"\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\",\n\"\",\n\"#endif\",\n\"\",\n].join('\\n');","export default [\n\"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\",\n\"\tvarying vec3 vViewPosition;\",\n\"#endif\",\n\"\",\n].join('\\n');","export default [\n\"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\",\n\"\tvViewPosition = - mvPosition.xyz;\",\n\"#endif\",\n\"\",\n\"\",\n].join('\\n');","export default [\n\"#ifdef USE_COLOR\",\n\"\",\n\"\tdiffuseColor.rgb *= vColor;\",\n\"\",\n\"#endif\",\n].join('\\n');","export default [\n\"#ifdef USE_COLOR\",\n\"\",\n\"\tvarying vec3 vColor;\",\n\"\",\n\"#endif\",\n\"\",\n].join('\\n');","export default [\n\"#ifdef USE_COLOR\",\n\"\",\n\"\tvarying vec3 vColor;\",\n\"\",\n\"#endif\",\n].join('\\n');","export default [\n\"#ifdef USE_COLOR\",\n\"\",\n\"\tvColor.xyz = color.xyz;\",\n\"\",\n\"#endif\",\n].join('\\n');","export default [\n\"#define PI 3.14159265359\",\n\"#define PI2 6.28318530718\",\n\"#define RECIPROCAL_PI 0.31830988618\",\n\"#define RECIPROCAL_PI2 0.15915494\",\n\"#define LOG2 1.442695\",\n\"#define EPSILON 1e-6\",\n\"\",\n\"#define saturate(a) clamp( a, 0.0, 1.0 )\",\n\"#define whiteCompliment(a) ( 1.0 - saturate( a ) )\",\n\"\",\n\"float pow2( const in float x ) { return x*x; }\",\n\"float pow3( const in float x ) { return x*x*x; }\",\n\"float pow4( const in float x ) { float x2 = x*x; return x2*x2; }\",\n\"float average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\",\n\"// expects values in the range of [0,1]x[0,1], returns values in the [0,1] range.\",\n\"// do not collapse into a single function per: http://byteblacksmith.com/improvements-to-the-canonical-one-liner-glsl-rand-for-opengl-es-2-0/\",\n\"highp float rand( const in vec2 uv ) {\",\n\"\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\",\n\"\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\",\n\"\treturn fract(sin(sn) * c);\",\n\"}\",\n\"\",\n\"struct IncidentLight {\",\n\"\tvec3 color;\",\n\"\tvec3 direction;\",\n\"\tbool visible;\",\n\"};\",\n\"\",\n\"struct ReflectedLight {\",\n\"\tvec3 directDiffuse;\",\n\"\tvec3 directSpecular;\",\n\"\tvec3 indirectDiffuse;\",\n\"\tvec3 indirectSpecular;\",\n\"};\",\n\"\",\n\"struct GeometricContext {\",\n\"\tvec3 position;\",\n\"\tvec3 normal;\",\n\"\tvec3 viewDir;\",\n\"};\",\n\"\",\n\"\",\n\"vec3 transformDirection( in vec3 dir, in mat4 matrix ) {\",\n\"\",\n\"\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\",\n\"\",\n\"}\",\n\"\",\n\"// http://en.wikibooks.org/wiki/GLSL_Programming/Applying_Matrix_Transformations\",\n\"vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\",\n\"\",\n\"\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\",\n\"\",\n\"}\",\n\"\",\n\"vec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\",\n\"\",\n\"\tfloat distance = dot( planeNormal, point - pointOnPlane );\",\n\"\",\n\"\treturn - distance * planeNormal + point;\",\n\"\",\n\"}\",\n\"\",\n\"float sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\",\n\"\",\n\"\treturn sign( dot( point - pointOnPlane, planeNormal ) );\",\n\"\",\n\"}\",\n\"\",\n\"vec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\",\n\"\",\n\"\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\",\n\"\",\n\"}\",\n\"\",\n].join('\\n');","export default [\n\"#ifdef ENVMAP_TYPE_CUBE_UV\",\n\"\",\n\"#define cubeUV_textureSize (1024.0)\",\n\"\",\n\"int getFaceFromDirection(vec3 direction) {\",\n\"\tvec3 absDirection = abs(direction);\",\n\"\tint face = -1;\",\n\"\tif( absDirection.x > absDirection.z ) {\",\n\"\t\tif(absDirection.x > absDirection.y )\",\n\"\t\t\tface = direction.x > 0.0 ? 0 : 3;\",\n\"\t\telse\",\n\"\t\t\tface = direction.y > 0.0 ? 1 : 4;\",\n\"\t}\",\n\"\telse {\",\n\"\t\tif(absDirection.z > absDirection.y )\",\n\"\t\t\tface = direction.z > 0.0 ? 2 : 5;\",\n\"\t\telse\",\n\"\t\t\tface = direction.y > 0.0 ? 1 : 4;\",\n\"\t}\",\n\"\treturn face;\",\n\"}\",\n\"#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)\",\n\"#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))\",\n\"\",\n\"vec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\",\n\"\tfloat scale = exp2(cubeUV_maxLods1 - roughnessLevel);\",\n\"\tfloat dxRoughness = dFdx(roughness);\",\n\"\tfloat dyRoughness = dFdy(roughness);\",\n\"\tvec3 dx = dFdx( vec * scale * dxRoughness );\",\n\"\tvec3 dy = dFdy( vec * scale * dyRoughness );\",\n\"\tfloat d = max( dot( dx, dx ), dot( dy, dy ) );\",\n\"\t// Clamp the value to the max mip level counts. hard coded to 6 mips\",\n\"\td = clamp(d, 1.0, cubeUV_rangeClamp);\",\n\"\tfloat mipLevel = 0.5 * log2(d);\",\n\"\treturn vec2(floor(mipLevel), fract(mipLevel));\",\n\"}\",\n\"\",\n\"#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)\",\n\"#define cubeUV_rcpTextureSize (1.0 / cubeUV_textureSize)\",\n\"\",\n\"vec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\",\n\"\tmipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\",\n\"\tfloat a = 16.0 * cubeUV_rcpTextureSize;\",\n\"\",\n\"\tvec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\",\n\"\tvec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;\",\n\"\t// float powScale = exp2(roughnessLevel + mipLevel);\",\n\"\tfloat powScale = exp2_packed.x * exp2_packed.y;\",\n\"\t// float scale =  1.0 / exp2(roughnessLevel + 2.0 + mipLevel);\",\n\"\tfloat scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\",\n\"\t// float mipOffset = 0.75*(1.0 - 1.0/exp2(mipLevel))/exp2(roughnessLevel);\",\n\"\tfloat mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\",\n\"\",\n\"\tbool bRes = mipLevel == 0.0;\",\n\"\tscale =  bRes && (scale < a) ? a : scale;\",\n\"\",\n\"\tvec3 r;\",\n\"\tvec2 offset;\",\n\"\tint face = getFaceFromDirection(direction);\",\n\"\",\n\"\tfloat rcpPowScale = 1.0 / powScale;\",\n\"\",\n\"\tif( face == 0) {\",\n\"\t\tr = vec3(direction.x, -direction.z, direction.y);\",\n\"\t\toffset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\",\n\"\t\toffset.y = bRes && (offset.y < 2.0*a) ?  a : offset.y;\",\n\"\t}\",\n\"\telse if( face == 1) {\",\n\"\t\tr = vec3(direction.y, direction.x, direction.z);\",\n\"\t\toffset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\",\n\"\t\toffset.y = bRes && (offset.y < 2.0*a) ?  a : offset.y;\",\n\"\t}\",\n\"\telse if( face == 2) {\",\n\"\t\tr = vec3(direction.z, direction.x, direction.y);\",\n\"\t\toffset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\",\n\"\t\toffset.y = bRes && (offset.y < 2.0*a) ?  a : offset.y;\",\n\"\t}\",\n\"\telse if( face == 3) {\",\n\"\t\tr = vec3(direction.x, direction.z, direction.y);\",\n\"\t\toffset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\",\n\"\t\toffset.y = bRes && (offset.y < 2.0*a) ?  0.0 : offset.y;\",\n\"\t}\",\n\"\telse if( face == 4) {\",\n\"\t\tr = vec3(direction.y, direction.x, -direction.z);\",\n\"\t\toffset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\",\n\"\t\toffset.y = bRes && (offset.y < 2.0*a) ?  0.0 : offset.y;\",\n\"\t}\",\n\"\telse {\",\n\"\t\tr = vec3(direction.z, -direction.x, direction.y);\",\n\"\t\toffset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\",\n\"\t\toffset.y = bRes && (offset.y < 2.0*a) ?  0.0 : offset.y;\",\n\"\t}\",\n\"\tr = normalize(r);\",\n\"\tfloat texelOffset = 0.5 * cubeUV_rcpTextureSize;\",\n\"\tvec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;\",\n\"\tvec2 base = offset + vec2( texelOffset );\",\n\"\treturn base + s * ( scale - 2.0 * texelOffset );\",\n\"}\",\n\"\",\n\"#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)\",\n\"\",\n\"vec4 textureCubeUV(vec3 reflectedDirection, float roughness ) {\",\n\"\tfloat roughnessVal = roughness* cubeUV_maxLods3;\",\n\"\tfloat r1 = floor(roughnessVal);\",\n\"\tfloat r2 = r1 + 1.0;\",\n\"\tfloat t = fract(roughnessVal);\",\n\"\tvec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\",\n\"\tfloat s = mipInfo.y;\",\n\"\tfloat level0 = mipInfo.x;\",\n\"\tfloat level1 = level0 + 1.0;\",\n\"\tlevel1 = level1 > 5.0 ? 5.0 : level1;\",\n\"\",\n\"\t// round to nearest mipmap if we are not interpolating.\",\n\"\tlevel0 += min( floor( s + 0.5 ), 5.0 );\",\n\"\",\n\"\t// Tri linear interpolation.\",\n\"\tvec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\",\n\"\tvec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\",\n\"\",\n\"\tvec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\",\n\"\tvec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\",\n\"\",\n\"\tvec4 result = mix(color10, color20, t);\",\n\"\",\n\"\treturn vec4(result.rgb, 1.0);\",\n\"}\",\n\"\",\n\"#endif\",\n\"\",\n].join('\\n');","export default [\n\"#ifdef FLIP_SIDED\",\n\"\",\n\"\tobjectNormal = -objectNormal;\",\n\"\",\n\"#endif\",\n\"\",\n\"vec3 transformedNormal = normalMatrix * objectNormal;\",\n\"\",\n].join('\\n');","export default [\n\"#ifdef USE_DISPLACEMENTMAP\",\n\"\",\n\"\tuniform sampler2D displacementMap;\",\n\"\tuniform float displacementScale;\",\n\"\tuniform float displacementBias;\",\n\"\",\n\"#endif\",\n\"\",\n].join('\\n');","export default [\n\"#ifdef USE_DISPLACEMENTMAP\",\n\"\",\n\"\ttransformed += normal * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\",\n\"\",\n\"#endif\",\n\"\",\n].join('\\n');","export default [\n\"#ifdef USE_EMISSIVEMAP\",\n\"\",\n\"\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\",\n\"\",\n\"\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\",\n\"\",\n\"\ttotalEmissiveRadiance *= emissiveColor.rgb;\",\n\"\",\n\"#endif\",\n\"\",\n].join('\\n');","export default [\n\"#ifdef USE_EMISSIVEMAP\",\n\"\",\n\"\tuniform sampler2D emissiveMap;\",\n\"\",\n\"#endif\",\n\"\",\n].join('\\n');","export default [\n\"  gl_FragColor = linearToOutputTexel( gl_FragColor );\",\n\"\",\n].join('\\n');","export default [\n\"// For a discussion of what this is, please read this: http://lousodrome.net/blog/light/2013/05/26/gamma-correct-and-hdr-rendering-in-a-32-bits-buffer/\",\n\"\",\n\"vec4 LinearToLinear( in vec4 value ) {\",\n\"  return value;\",\n\"}\",\n\"\",\n\"vec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\",\n\"  return vec4( pow( value.xyz, vec3( gammaFactor ) ), value.w );\",\n\"}\",\n\"vec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\",\n\"  return vec4( pow( value.xyz, vec3( 1.0 / gammaFactor ) ), value.w );\",\n\"}\",\n\"\",\n\"vec4 sRGBToLinear( in vec4 value ) {\",\n\"  return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.w );\",\n\"}\",\n\"vec4 LinearTosRGB( in vec4 value ) {\",\n\"  return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.w );\",\n\"}\",\n\"\",\n\"vec4 RGBEToLinear( in vec4 value ) {\",\n\"  return vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\",\n\"}\",\n\"vec4 LinearToRGBE( in vec4 value ) {\",\n\"  float maxComponent = max( max( value.r, value.g ), value.b );\",\n\"  float fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\",\n\"  return vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\",\n\"//  return vec4( value.brg, ( 3.0 + 128.0 ) / 256.0 );\",\n\"}\",\n\"\",\n\"// reference: http://iwasbeingirony.blogspot.ca/2010/06/difference-between-rgbm-and-rgbd.html\",\n\"vec4 RGBMToLinear( in vec4 value, in float maxRange ) {\",\n\"  return vec4( value.xyz * value.w * maxRange, 1.0 );\",\n\"}\",\n\"vec4 LinearToRGBM( in vec4 value, in float maxRange ) {\",\n\"  float maxRGB = max( value.x, max( value.g, value.b ) );\",\n\"  float M      = clamp( maxRGB / maxRange, 0.0, 1.0 );\",\n\"  M            = ceil( M * 255.0 ) / 255.0;\",\n\"  return vec4( value.rgb / ( M * maxRange ), M );\",\n\"}\",\n\"\",\n\"// reference: http://iwasbeingirony.blogspot.ca/2010/06/difference-between-rgbm-and-rgbd.html\",\n\"vec4 RGBDToLinear( in vec4 value, in float maxRange ) {\",\n\"    return vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\",\n\"}\",\n\"vec4 LinearToRGBD( in vec4 value, in float maxRange ) {\",\n\"    float maxRGB = max( value.x, max( value.g, value.b ) );\",\n\"    float D      = max( maxRange / maxRGB, 1.0 );\",\n\"    D            = min( floor( D ) / 255.0, 1.0 );\",\n\"    return vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\",\n\"}\",\n\"\",\n\"// LogLuv reference: http://graphicrants.blogspot.ca/2009/04/rgbm-color-encoding.html\",\n\"\",\n\"// M matrix, for encoding\",\n\"const mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\",\n\"vec4 LinearToLogLuv( in vec4 value )  {\",\n\"  vec3 Xp_Y_XYZp = value.rgb * cLogLuvM;\",\n\"  Xp_Y_XYZp = max(Xp_Y_XYZp, vec3(1e-6, 1e-6, 1e-6));\",\n\"  vec4 vResult;\",\n\"  vResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\",\n\"  float Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\",\n\"  vResult.w = fract(Le);\",\n\"  vResult.z = (Le - (floor(vResult.w*255.0))/255.0)/255.0;\",\n\"  return vResult;\",\n\"}\",\n\"\",\n\"// Inverse M matrix, for decoding\",\n\"const mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\",\n\"vec4 LogLuvToLinear( in vec4 value ) {\",\n\"  float Le = value.z * 255.0 + value.w;\",\n\"  vec3 Xp_Y_XYZp;\",\n\"  Xp_Y_XYZp.y = exp2((Le - 127.0) / 2.0);\",\n\"  Xp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\",\n\"  Xp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\",\n\"  vec3 vRGB = Xp_Y_XYZp.rgb * cLogLuvInverseM;\",\n\"  return vec4( max(vRGB, 0.0), 1.0 );\",\n\"}\",\n\"\",\n].join('\\n');","export default [\n\"#ifdef USE_ENVMAP\",\n\"\",\n\"\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\",\n\"\",\n\"\t\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\",\n\"\",\n\"\t\t// Transforming Normal Vectors with the Inverse Transformation\",\n\"\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\",\n\"\",\n\"\t\t#ifdef ENVMAP_MODE_REFLECTION\",\n\"\",\n\"\t\t\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\",\n\"\",\n\"\t\t#else\",\n\"\",\n\"\t\t\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\",\n\"\",\n\"\t\t#endif\",\n\"\",\n\"\t#else\",\n\"\",\n\"\t\tvec3 reflectVec = vReflect;\",\n\"\",\n\"\t#endif\",\n\"\",\n\"\t#ifdef ENVMAP_TYPE_CUBE\",\n\"\",\n\"\t\tvec4 envColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\",\n\"\",\n\"\t#elif defined( ENVMAP_TYPE_EQUIREC )\",\n\"\",\n\"\t\tvec2 sampleUV;\",\n\"\t\tsampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\",\n\"\t\tsampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\",\n\"\t\tvec4 envColor = texture2D( envMap, sampleUV );\",\n\"\",\n\"\t#elif defined( ENVMAP_TYPE_SPHERE )\",\n\"\",\n\"\t\tvec3 reflectView = flipNormal * normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\",\n\"\t\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\",\n\"\",\n\"\t#else\",\n\"\",\n\"\t\tvec4 envColor = vec4( 0.0 );\",\n\"\",\n\"\t#endif\",\n\"\",\n\"\tenvColor = envMapTexelToLinear( envColor );\",\n\"\",\n\"\t#ifdef ENVMAP_BLENDING_MULTIPLY\",\n\"\",\n\"\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\",\n\"\",\n\"\t#elif defined( ENVMAP_BLENDING_MIX )\",\n\"\",\n\"\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\",\n\"\",\n\"\t#elif defined( ENVMAP_BLENDING_ADD )\",\n\"\",\n\"\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\",\n\"\",\n\"\t#endif\",\n\"\",\n\"#endif\",\n\"\",\n].join('\\n');","export default [\n\"#if defined( USE_ENVMAP ) || defined( PHYSICAL )\",\n\"\tuniform float reflectivity;\",\n\"\tuniform float envMapIntenstiy;\",\n\"#endif\",\n\"\",\n\"#ifdef USE_ENVMAP\",\n\"\",\n\"\t#if ! defined( PHYSICAL ) && ( defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) )\",\n\"\t\tvarying vec3 vWorldPosition;\",\n\"\t#endif\",\n\"\",\n\"\t#ifdef ENVMAP_TYPE_CUBE\",\n\"\t\tuniform samplerCube envMap;\",\n\"\t#else\",\n\"\t\tuniform sampler2D envMap;\",\n\"\t#endif\",\n\"\tuniform float flipEnvMap;\",\n\"\",\n\"\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( PHYSICAL )\",\n\"\t\tuniform float refractionRatio;\",\n\"\t#else\",\n\"\t\tvarying vec3 vReflect;\",\n\"\t#endif\",\n\"\",\n\"#endif\",\n\"\",\n].join('\\n');","export default [\n\"#ifdef USE_ENVMAP\",\n\"\",\n\"\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\",\n\"\t\tvarying vec3 vWorldPosition;\",\n\"\",\n\"\t#else\",\n\"\",\n\"\t\tvarying vec3 vReflect;\",\n\"\t\tuniform float refractionRatio;\",\n\"\",\n\"\t#endif\",\n\"\",\n\"#endif\",\n\"\",\n].join('\\n');","export default [\n\"#ifdef USE_ENVMAP\",\n\"\",\n\"\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\",\n\"\",\n\"\t\tvWorldPosition = worldPosition.xyz;\",\n\"\",\n\"\t#else\",\n\"\",\n\"\t\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\",\n\"\",\n\"\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\",\n\"\",\n\"\t\t#ifdef ENVMAP_MODE_REFLECTION\",\n\"\",\n\"\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\",\n\"\",\n\"\t\t#else\",\n\"\",\n\"\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\",\n\"\",\n\"\t\t#endif\",\n\"\",\n\"\t#endif\",\n\"\",\n\"#endif\",\n\"\",\n].join('\\n');","export default [\n\"#ifdef USE_FOG\",\n\"\",\n\"\t#ifdef USE_LOGDEPTHBUF_EXT\",\n\"\",\n\"\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\",\n\"\",\n\"\t#else\",\n\"\",\n\"\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\",\n\"\",\n\"\t#endif\",\n\"\",\n\"\t#ifdef FOG_EXP2\",\n\"\",\n\"\t\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * depth * depth * LOG2 ) );\",\n\"\",\n\"\t#else\",\n\"\",\n\"\t\tfloat fogFactor = smoothstep( fogNear, fogFar, depth );\",\n\"\",\n\"\t#endif\",\n\"\",\n\"\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\",\n\"\",\n\"#endif\",\n\"\",\n].join('\\n');","export default [\n\"#ifdef USE_FOG\",\n\"\",\n\"\tuniform vec3 fogColor;\",\n\"\",\n\"\t#ifdef FOG_EXP2\",\n\"\",\n\"\t\tuniform float fogDensity;\",\n\"\",\n\"\t#else\",\n\"\",\n\"\t\tuniform float fogNear;\",\n\"\t\tuniform float fogFar;\",\n\"\t#endif\",\n\"\",\n\"#endif\",\n].join('\\n');","export default [\n\"#ifdef USE_LIGHTMAP\",\n\"\",\n\"\treflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity; // factor of PI should not be present; included here to prevent breakage\",\n\"\",\n\"#endif\",\n\"\",\n].join('\\n');","export default [\n\"#ifdef USE_LIGHTMAP\",\n\"\",\n\"\tuniform sampler2D lightMap;\",\n\"\tuniform float lightMapIntensity;\",\n\"\",\n\"#endif\",\n].join('\\n');","export default [\n\"vec3 diffuse = vec3( 1.0 );\",\n\"\",\n\"GeometricContext geometry;\",\n\"geometry.position = mvPosition.xyz;\",\n\"geometry.normal = normalize( transformedNormal );\",\n\"geometry.viewDir = normalize( -mvPosition.xyz );\",\n\"\",\n\"GeometricContext backGeometry;\",\n\"backGeometry.position = geometry.position;\",\n\"backGeometry.normal = -geometry.normal;\",\n\"backGeometry.viewDir = geometry.viewDir;\",\n\"\",\n\"vLightFront = vec3( 0.0 );\",\n\"\",\n\"#ifdef DOUBLE_SIDED\",\n\"\tvLightBack = vec3( 0.0 );\",\n\"#endif\",\n\"\",\n\"IncidentLight directLight;\",\n\"float dotNL;\",\n\"vec3 directLightColor_Diffuse;\",\n\"\",\n\"#if NUM_POINT_LIGHTS > 0\",\n\"\",\n\"\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\",\n\"\",\n\"\t\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\",\n\"\",\n\"\t\tdotNL = dot( geometry.normal, directLight.direction );\",\n\"\t\tdirectLightColor_Diffuse = PI * directLight.color;\",\n\"\",\n\"\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\",\n\"\",\n\"\t\t#ifdef DOUBLE_SIDED\",\n\"\",\n\"\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\",\n\"\",\n\"\t\t#endif\",\n\"\",\n\"\t}\",\n\"\",\n\"#endif\",\n\"\",\n\"#if NUM_SPOT_LIGHTS > 0\",\n\"\",\n\"\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\",\n\"\",\n\"\t\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\",\n\"\",\n\"\t\tdotNL = dot( geometry.normal, directLight.direction );\",\n\"\t\tdirectLightColor_Diffuse = PI * directLight.color;\",\n\"\",\n\"\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\",\n\"\",\n\"\t\t#ifdef DOUBLE_SIDED\",\n\"\",\n\"\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\",\n\"\",\n\"\t\t#endif\",\n\"\t}\",\n\"\",\n\"#endif\",\n\"\",\n\"#if NUM_DIR_LIGHTS > 0\",\n\"\",\n\"\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\",\n\"\",\n\"\t\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\",\n\"\",\n\"\t\tdotNL = dot( geometry.normal, directLight.direction );\",\n\"\t\tdirectLightColor_Diffuse = PI * directLight.color;\",\n\"\",\n\"\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\",\n\"\",\n\"\t\t#ifdef DOUBLE_SIDED\",\n\"\",\n\"\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\",\n\"\",\n\"\t\t#endif\",\n\"\",\n\"\t}\",\n\"\",\n\"#endif\",\n\"\",\n\"#if NUM_HEMI_LIGHTS > 0\",\n\"\",\n\"\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\",\n\"\",\n\"\t\tvLightFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\",\n\"\",\n\"\t\t#ifdef DOUBLE_SIDED\",\n\"\",\n\"\t\t\tvLightBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\",\n\"\",\n\"\t\t#endif\",\n\"\",\n\"\t}\",\n\"\",\n\"#endif\",\n\"\",\n].join('\\n');","export default [\n\"uniform vec3 ambientLightColor;\",\n\"\",\n\"vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\",\n\"\",\n\"\tvec3 irradiance = ambientLightColor;\",\n\"\",\n\"\t#ifndef PHYSICALLY_CORRECT_LIGHTS\",\n\"\",\n\"\t\tirradiance *= PI;\",\n\"\",\n\"\t#endif\",\n\"\",\n\"\treturn irradiance;\",\n\"\",\n\"}\",\n\"\",\n\"#if NUM_DIR_LIGHTS > 0\",\n\"\",\n\"\tstruct DirectionalLight {\",\n\"\t\tvec3 direction;\",\n\"\t\tvec3 color;\",\n\"\",\n\"\t\tint shadow;\",\n\"\t\tfloat shadowBias;\",\n\"\t\tfloat shadowRadius;\",\n\"\t\tvec2 shadowMapSize;\",\n\"\t};\",\n\"\",\n\"\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\",\n\"\",\n\"\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\",\n\"\",\n\"\t\tdirectLight.color = directionalLight.color;\",\n\"\t\tdirectLight.direction = directionalLight.direction;\",\n\"\t\tdirectLight.visible = true;\",\n\"\",\n\"\t}\",\n\"\",\n\"#endif\",\n\"\",\n\"\",\n\"#if NUM_POINT_LIGHTS > 0\",\n\"\",\n\"\tstruct PointLight {\",\n\"\t\tvec3 position;\",\n\"\t\tvec3 color;\",\n\"\t\tfloat distance;\",\n\"\t\tfloat decay;\",\n\"\",\n\"\t\tint shadow;\",\n\"\t\tfloat shadowBias;\",\n\"\t\tfloat shadowRadius;\",\n\"\t\tvec2 shadowMapSize;\",\n\"\t};\",\n\"\",\n\"\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\",\n\"\",\n\"\t// directLight is an out parameter as having it as a return value caused compiler errors on some devices\",\n\"\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\",\n\"\",\n\"\t\tvec3 lVector = pointLight.position - geometry.position;\",\n\"\t\tdirectLight.direction = normalize( lVector );\",\n\"\",\n\"\t\tfloat lightDistance = length( lVector );\",\n\"\",\n\"\t\tif ( testLightInRange( lightDistance, pointLight.distance ) ) {\",\n\"\",\n\"\t\t\tdirectLight.color = pointLight.color;\",\n\"\t\t\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\",\n\"\",\n\"\t\t\tdirectLight.visible = true;\",\n\"\",\n\"\t\t} else {\",\n\"\",\n\"\t\t\tdirectLight.color = vec3( 0.0 );\",\n\"\t\t\tdirectLight.visible = false;\",\n\"\",\n\"\t\t}\",\n\"\",\n\"\t}\",\n\"\",\n\"#endif\",\n\"\",\n\"\",\n\"#if NUM_SPOT_LIGHTS > 0\",\n\"\",\n\"\tstruct SpotLight {\",\n\"\t\tvec3 position;\",\n\"\t\tvec3 direction;\",\n\"\t\tvec3 color;\",\n\"\t\tfloat distance;\",\n\"\t\tfloat decay;\",\n\"\t\tfloat coneCos;\",\n\"\t\tfloat penumbraCos;\",\n\"\",\n\"\t\tint shadow;\",\n\"\t\tfloat shadowBias;\",\n\"\t\tfloat shadowRadius;\",\n\"\t\tvec2 shadowMapSize;\",\n\"\t};\",\n\"\",\n\"\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\",\n\"\",\n\"\t// directLight is an out parameter as having it as a return value caused compiler errors on some devices\",\n\"\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\",\n\"\",\n\"\t\tvec3 lVector = spotLight.position - geometry.position;\",\n\"\t\tdirectLight.direction = normalize( lVector );\",\n\"\",\n\"\t\tfloat lightDistance = length( lVector );\",\n\"\t\tfloat angleCos = dot( directLight.direction, spotLight.direction );\",\n\"\",\n\"\t\tif ( all( bvec2( angleCos > spotLight.coneCos, testLightInRange( lightDistance, spotLight.distance ) ) ) ) {\",\n\"\",\n\"\t\t\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\",\n\"\",\n\"\t\t\tdirectLight.color = spotLight.color;\",\n\"\t\t\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\",\n\"\",\n\"\t\t\tdirectLight.visible = true;\",\n\"\",\n\"\t\t} else {\",\n\"\",\n\"\t\t\tdirectLight.color = vec3( 0.0 );\",\n\"\t\t\tdirectLight.visible = false;\",\n\"\",\n\"\t\t}\",\n\"\",\n\"\t}\",\n\"\",\n\"#endif\",\n\"\",\n\"\",\n\"#if NUM_HEMI_LIGHTS > 0\",\n\"\",\n\"\tstruct HemisphereLight {\",\n\"\t\tvec3 direction;\",\n\"\t\tvec3 skyColor;\",\n\"\t\tvec3 groundColor;\",\n\"\t};\",\n\"\",\n\"\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\",\n\"\",\n\"\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\",\n\"\",\n\"\t\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\",\n\"\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\",\n\"\",\n\"\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\",\n\"\",\n\"\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\",\n\"\",\n\"\t\t\tirradiance *= PI;\",\n\"\",\n\"\t\t#endif\",\n\"\",\n\"\t\treturn irradiance;\",\n\"\",\n\"\t}\",\n\"\",\n\"#endif\",\n\"\",\n\"\",\n\"#if defined( USE_ENVMAP ) && defined( PHYSICAL )\",\n\"\",\n\"\tvec3 getLightProbeIndirectIrradiance( /*const in SpecularLightProbe specularLightProbe,*/ const in GeometricContext geometry, const in int maxMIPLevel ) {\",\n\"\",\n\"\t\t#include <normal_flip>\",\n\"\",\n\"\t\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\",\n\"\",\n\"\t\t#ifdef ENVMAP_TYPE_CUBE\",\n\"\",\n\"\t\t\tvec3 queryVec = flipNormal * vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\",\n\"\",\n\"\t\t\t// TODO: replace with properly filtered cubemaps and access the irradiance LOD level, be it the last LOD level\",\n\"\t\t\t// of a specular cubemap, or just the default level of a specially created irradiance cubemap.\",\n\"\",\n\"\t\t\t#ifdef TEXTURE_LOD_EXT\",\n\"\",\n\"\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\",\n\"\",\n\"\t\t\t#else\",\n\"\",\n\"\t\t\t\t// force the bias high to get the last LOD level as it is the most blurred.\",\n\"\t\t\t\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\",\n\"\",\n\"\t\t\t#endif\",\n\"\",\n\"\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\",\n\"\",\n\"\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\",\n\"\",\n\"\t\t\tvec3 queryVec = flipNormal * vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\",\n\"\t\t\tvec4 envMapColor = textureCubeUV( queryVec, 1.0 );\",\n\"\",\n\"\t\t#else\",\n\"\",\n\"\t\t\tvec4 envMapColor = vec4( 0.0 );\",\n\"\",\n\"\t\t#endif\",\n\"\",\n\"\t\treturn PI * envMapColor.rgb * envMapIntensity;\",\n\"\",\n\"\t}\",\n\"\",\n\"\t// taken from here: http://casual-effects.blogspot.ca/2011/08/plausible-environment-lighting-in-two.html\",\n\"\tfloat getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\",\n\"\",\n\"\t\t//float envMapWidth = pow( 2.0, maxMIPLevelScalar );\",\n\"\t\t//float desiredMIPLevel = log2( envMapWidth * sqrt( 3.0 ) ) - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\",\n\"\",\n\"\t\tfloat maxMIPLevelScalar = float( maxMIPLevel );\",\n\"\t\tfloat desiredMIPLevel = maxMIPLevelScalar - 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\",\n\"\",\n\"\t\t// clamp to allowable LOD ranges.\",\n\"\t\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\",\n\"\",\n\"\t}\",\n\"\",\n\"\tvec3 getLightProbeIndirectRadiance( /*const in SpecularLightProbe specularLightProbe,*/ const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\",\n\"\",\n\"\t\t#ifdef ENVMAP_MODE_REFLECTION\",\n\"\",\n\"\t\t\tvec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\",\n\"\",\n\"\t\t#else\",\n\"\",\n\"\t\t\tvec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );\",\n\"\",\n\"\t\t#endif\",\n\"\",\n\"\t\t#include <normal_flip>\",\n\"\",\n\"\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\",\n\"\",\n\"\t\tfloat specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\",\n\"\",\n\"\t\t#ifdef ENVMAP_TYPE_CUBE\",\n\"\",\n\"\t\t\tvec3 queryReflectVec = flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\",\n\"\",\n\"\t\t\t#ifdef TEXTURE_LOD_EXT\",\n\"\",\n\"\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\",\n\"\",\n\"\t\t\t#else\",\n\"\",\n\"\t\t\t\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\",\n\"\",\n\"\t\t\t#endif\",\n\"\",\n\"\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\",\n\"\",\n\"\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\",\n\"\",\n\"\t\t\tvec3 queryReflectVec = flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\",\n\"\t\t\tvec4 envMapColor = textureCubeUV(queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent));\",\n\"\",\n\"\t\t#elif defined( ENVMAP_TYPE_EQUIREC )\",\n\"\",\n\"\t\t\tvec2 sampleUV;\",\n\"\t\t\tsampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\",\n\"\t\t\tsampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\",\n\"\",\n\"\t\t\t#ifdef TEXTURE_LOD_EXT\",\n\"\",\n\"\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\",\n\"\",\n\"\t\t\t#else\",\n\"\",\n\"\t\t\t\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\",\n\"\",\n\"\t\t\t#endif\",\n\"\",\n\"\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\",\n\"\",\n\"\t\t#elif defined( ENVMAP_TYPE_SPHERE )\",\n\"\",\n\"\t\t\tvec3 reflectView = flipNormal * normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\",\n\"\",\n\"\t\t\t#ifdef TEXTURE_LOD_EXT\",\n\"\",\n\"\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\",\n\"\",\n\"\t\t\t#else\",\n\"\",\n\"\t\t\t\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\",\n\"\",\n\"\t\t\t#endif\",\n\"\",\n\"\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\",\n\"\",\n\"\t\t#endif\",\n\"\",\n\"\t\treturn envMapColor.rgb * envMapIntensity;\",\n\"\",\n\"\t}\",\n\"\",\n\"#endif\",\n\"\",\n].join('\\n');","export default [\n\"BlinnPhongMaterial material;\",\n\"material.diffuseColor = diffuseColor.rgb;\",\n\"material.specularColor = specular;\",\n\"material.specularShininess = shininess;\",\n\"material.specularStrength = specularStrength;\",\n\"\",\n].join('\\n');","export default [\n\"varying vec3 vViewPosition;\",\n\"\",\n\"#ifndef FLAT_SHADED\",\n\"\",\n\"\tvarying vec3 vNormal;\",\n\"\",\n\"#endif\",\n\"\",\n\"\",\n\"struct BlinnPhongMaterial {\",\n\"\",\n\"\tvec3\tdiffuseColor;\",\n\"\tvec3\tspecularColor;\",\n\"\tfloat\tspecularShininess;\",\n\"\tfloat\tspecularStrength;\",\n\"\",\n\"};\",\n\"\",\n\"void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\",\n\"\",\n\"\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\",\n\"\",\n\"\tvec3 irradiance = dotNL * directLight.color;\",\n\"\",\n\"\t#ifndef PHYSICALLY_CORRECT_LIGHTS\",\n\"\",\n\"\t\tirradiance *= PI; // punctual light\",\n\"\",\n\"\t#endif\",\n\"\",\n\"\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\",\n\"\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\",\n\"\",\n\"}\",\n\"\",\n\"void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\",\n\"\",\n\"\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\",\n\"\",\n\"}\",\n\"\",\n\"#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\",\n\"#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\",\n\"\",\n\"#define Material_LightProbeLOD( material )\t(0)\",\n\"\",\n].join('\\n');","export default [\n\"PhysicalMaterial material;\",\n\"material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\",\n\"material.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\",\n\"#ifdef STANDARD\",\n\"\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\",\n\"#else\",\n\"\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\",\n\"\tmaterial.clearCoat = saturate( clearCoat ); // Burley clearcoat model\",\n\"\tmaterial.clearCoatRoughness = clamp( clearCoatRoughness, 0.04, 1.0 );\",\n\"#endif\",\n\"\",\n].join('\\n');","export default [\n\"struct PhysicalMaterial {\",\n\"\",\n\"\tvec3\tdiffuseColor;\",\n\"\tfloat\tspecularRoughness;\",\n\"\tvec3\tspecularColor;\",\n\"\",\n\"\t#ifndef STANDARD\",\n\"\t\tfloat clearCoat;\",\n\"\t\tfloat clearCoatRoughness;\",\n\"\t#endif\",\n\"\",\n\"};\",\n\"\",\n\"#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\",\n\"#define DEFAULT_SPECULAR_COEFFICIENT 0.04\",\n\"\",\n\"// Clear coat directional hemishperical reflectance (this approximation should be improved)\",\n\"float clearCoatDHRApprox( const in float roughness, const in float dotNL ) {\",\n\"\",\n\"\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\",\n\"\",\n\"}\",\n\"\",\n\"void RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\",\n\"\",\n\"\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\",\n\"\",\n\"\tvec3 irradiance = dotNL * directLight.color;\",\n\"\",\n\"\t#ifndef PHYSICALLY_CORRECT_LIGHTS\",\n\"\",\n\"\t\tirradiance *= PI; // punctual light\",\n\"\",\n\"\t#endif\",\n\"\",\n\"\t#ifndef STANDARD\",\n\"\t\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\",\n\"\t#else\",\n\"\t\tfloat clearCoatDHR = 0.0;\",\n\"\t#endif\",\n\"\",\n\"\treflectedLight.directSpecular += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );\",\n\"\treflectedLight.directDiffuse += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\",\n\"\",\n\"\t#ifndef STANDARD\",\n\"\",\n\"\t\treflectedLight.directSpecular += irradiance * material.clearCoat * BRDF_Specular_GGX( directLight, geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\",\n\"\",\n\"\t#endif\",\n\"\",\n\"}\",\n\"\",\n\"void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\",\n\"\",\n\"\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\",\n\"\",\n\"}\",\n\"\",\n\"void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 clearCoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\",\n\"\",\n\"\t#ifndef STANDARD\",\n\"\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\",\n\"\t\tfloat dotNL = dotNV;\",\n\"\t\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\",\n\"\t#else\",\n\"\t\tfloat clearCoatDHR = 0.0;\",\n\"\t#endif\",\n\"\",\n\"\treflectedLight.indirectSpecular += ( 1.0 - clearCoatDHR ) * radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );\",\n\"\",\n\"\t#ifndef STANDARD\",\n\"\",\n\"\t\treflectedLight.indirectSpecular += clearCoatRadiance * material.clearCoat * BRDF_Specular_GGX_Environment( geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\",\n\"\",\n\"\t#endif\",\n\"\",\n\"}\",\n\"\",\n\"#define RE_Direct\t\t\t\tRE_Direct_Physical\",\n\"#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\",\n\"#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\",\n\"\",\n\"#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )\",\n\"#define Material_ClearCoat_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.clearCoatRoughness )\",\n\"\",\n\"// ref: http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr_v2.pdf\",\n\"float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\",\n\"\",\n\"\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\",\n\"\",\n\"}\",\n\"\",\n].join('\\n');","export default [\n\"//\",\n\"// This is a template that can be used to light a material, it uses pluggable RenderEquations (RE)\",\n\"//   for specific lighting scenarios.\",\n\"//\",\n\"// Instructions for use:\",\n\"//  - Ensure that both RE_Direct, RE_IndirectDiffuse and RE_IndirectSpecular are defined\",\n\"//  - If you have defined an RE_IndirectSpecular, you need to also provide a Material_LightProbeLOD. <---- ???\",\n\"//  - Create a material parameter that is to be passed as the third parameter to your lighting functions.\",\n\"//\",\n\"// TODO:\",\n\"//  - Add area light support.\",\n\"//  - Add sphere light support.\",\n\"//  - Add diffuse light probe (irradiance cubemap) support.\",\n\"//\",\n\"\",\n\"GeometricContext geometry;\",\n\"\",\n\"geometry.position = - vViewPosition;\",\n\"geometry.normal = normal;\",\n\"geometry.viewDir = normalize( vViewPosition );\",\n\"\",\n\"IncidentLight directLight;\",\n\"\",\n\"#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\",\n\"\",\n\"\tPointLight pointLight;\",\n\"\",\n\"\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\",\n\"\",\n\"\t\tpointLight = pointLights[ i ];\",\n\"\",\n\"\t\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\",\n\"\",\n\"\t\t#ifdef USE_SHADOWMAP\",\n\"\t\tdirectLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ] ) : 1.0;\",\n\"\t\t#endif\",\n\"\",\n\"\t\tRE_Direct( directLight, geometry, material, reflectedLight );\",\n\"\",\n\"\t}\",\n\"\",\n\"#endif\",\n\"\",\n\"#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\",\n\"\",\n\"\tSpotLight spotLight;\",\n\"\",\n\"\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\",\n\"\",\n\"\t\tspotLight = spotLights[ i ];\",\n\"\",\n\"\t\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\",\n\"\",\n\"\t\t#ifdef USE_SHADOWMAP\",\n\"\t\tdirectLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\",\n\"\t\t#endif\",\n\"\",\n\"\t\tRE_Direct( directLight, geometry, material, reflectedLight );\",\n\"\",\n\"\t}\",\n\"\",\n\"#endif\",\n\"\",\n\"#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\",\n\"\",\n\"\tDirectionalLight directionalLight;\",\n\"\",\n\"\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\",\n\"\",\n\"\t\tdirectionalLight = directionalLights[ i ];\",\n\"\",\n\"\t\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\",\n\"\",\n\"\t\t#ifdef USE_SHADOWMAP\",\n\"\t\tdirectLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\",\n\"\t\t#endif\",\n\"\",\n\"\t\tRE_Direct( directLight, geometry, material, reflectedLight );\",\n\"\",\n\"\t}\",\n\"\",\n\"#endif\",\n\"\",\n\"#if defined( RE_IndirectDiffuse )\",\n\"\",\n\"\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\",\n\"\",\n\"\t#ifdef USE_LIGHTMAP\",\n\"\",\n\"\t\tvec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\",\n\"\",\n\"\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\",\n\"\",\n\"\t\t\tlightMapIrradiance *= PI; // factor of PI should not be present; included here to prevent breakage\",\n\"\",\n\"\t\t#endif\",\n\"\",\n\"\t\tirradiance += lightMapIrradiance;\",\n\"\",\n\"\t#endif\",\n\"\",\n\"\t#if ( NUM_HEMI_LIGHTS > 0 )\",\n\"\",\n\"\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\",\n\"\",\n\"\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\",\n\"\",\n\"\t\t}\",\n\"\",\n\"\t#endif\",\n\"\",\n\"\t#if defined( USE_ENVMAP ) && defined( PHYSICAL ) && defined( ENVMAP_TYPE_CUBE_UV )\",\n\"\",\n\"\t\t// TODO, replace 8 with the real maxMIPLevel\",\n\"\t \tirradiance += getLightProbeIndirectIrradiance( /*lightProbe,*/ geometry, 8 );\",\n\"\",\n\"\t#endif\",\n\"\",\n\"\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\",\n\"\",\n\"#endif\",\n\"\",\n\"#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\",\n\"\",\n\"\t// TODO, replace 8 with the real maxMIPLevel\",\n\"\tvec3 radiance = getLightProbeIndirectRadiance( /*specularLightProbe,*/ geometry, Material_BlinnShininessExponent( material ), 8 );\",\n\"\",\n\"\t#ifndef STANDARD\",\n\"\t\tvec3 clearCoatRadiance = getLightProbeIndirectRadiance( /*specularLightProbe,*/ geometry, Material_ClearCoat_BlinnShininessExponent( material ), 8 );\",\n\"\t#else\",\n\"\t\tvec3 clearCoatRadiance = vec3( 0.0 );\",\n\"\t#endif\",\n\"\t\t\",\n\"\tRE_IndirectSpecular( radiance, clearCoatRadiance, geometry, material, reflectedLight );\",\n\"\",\n\"#endif\",\n\"\",\n].join('\\n');","export default [\n\"#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\",\n\"\",\n\"\tgl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\",\n\"\",\n\"#endif\",\n].join('\\n');","export default [\n\"#ifdef USE_LOGDEPTHBUF\",\n\"\",\n\"\tuniform float logDepthBufFC;\",\n\"\",\n\"\t#ifdef USE_LOGDEPTHBUF_EXT\",\n\"\",\n\"\t\tvarying float vFragDepth;\",\n\"\",\n\"\t#endif\",\n\"\",\n\"#endif\",\n\"\",\n].join('\\n');","export default [\n\"#ifdef USE_LOGDEPTHBUF\",\n\"\",\n\"\t#ifdef USE_LOGDEPTHBUF_EXT\",\n\"\",\n\"\t\tvarying float vFragDepth;\",\n\"\",\n\"\t#endif\",\n\"\",\n\"\tuniform float logDepthBufFC;\",\n\"\",\n\"#endif\",\n].join('\\n');","export default [\n\"#ifdef USE_LOGDEPTHBUF\",\n\"\",\n\"\tgl_Position.z = log2(max( EPSILON, gl_Position.w + 1.0 )) * logDepthBufFC;\",\n\"\",\n\"\t#ifdef USE_LOGDEPTHBUF_EXT\",\n\"\",\n\"\t\tvFragDepth = 1.0 + gl_Position.w;\",\n\"\",\n\"\t#else\",\n\"\",\n\"\t\tgl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\",\n\"\",\n\"\t#endif\",\n\"\",\n\"#endif\",\n\"\",\n].join('\\n');","export default [\n\"#ifdef USE_MAP\",\n\"\",\n\"\tvec4 texelColor = texture2D( map, vUv );\",\n\"\",\n\"\ttexelColor = mapTexelToLinear( texelColor );\",\n\"\tdiffuseColor *= texelColor;\",\n\"\",\n\"#endif\",\n\"\",\n].join('\\n');","export default [\n\"#ifdef USE_MAP\",\n\"\",\n\"\tuniform sampler2D map;\",\n\"\",\n\"#endif\",\n\"\",\n].join('\\n');","export default [\n\"#ifdef USE_MAP\",\n\"\",\n\"\tvec4 mapTexel = texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) * offsetRepeat.zw + offsetRepeat.xy );\",\n\"\tdiffuseColor *= mapTexelToLinear( mapTexel );\",\n\"\",\n\"#endif\",\n\"\",\n].join('\\n');","export default [\n\"#ifdef USE_MAP\",\n\"\",\n\"\tuniform vec4 offsetRepeat;\",\n\"\tuniform sampler2D map;\",\n\"\",\n\"#endif\",\n\"\",\n].join('\\n');","export default [\n\"float metalnessFactor = metalness;\",\n\"\",\n\"#ifdef USE_METALNESSMAP\",\n\"\",\n\"\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\",\n\"\tmetalnessFactor *= texelMetalness.r;\",\n\"\",\n\"#endif\",\n\"\",\n].join('\\n');","export default [\n\"#ifdef USE_METALNESSMAP\",\n\"\",\n\"\tuniform sampler2D metalnessMap;\",\n\"\",\n\"#endif\",\n].join('\\n');","export default [\n\"#ifdef USE_MORPHNORMALS\",\n\"\",\n\"\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\",\n\"\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\",\n\"\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\",\n\"\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\",\n\"\",\n\"#endif\",\n\"\",\n].join('\\n');","export default [\n\"#ifdef USE_MORPHTARGETS\",\n\"\",\n\"\t#ifndef USE_MORPHNORMALS\",\n\"\",\n\"\tuniform float morphTargetInfluences[ 8 ];\",\n\"\",\n\"\t#else\",\n\"\",\n\"\tuniform float morphTargetInfluences[ 4 ];\",\n\"\",\n\"\t#endif\",\n\"\",\n\"#endif\",\n].join('\\n');","export default [\n\"#ifdef USE_MORPHTARGETS\",\n\"\",\n\"\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\",\n\"\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\",\n\"\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\",\n\"\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\",\n\"\",\n\"\t#ifndef USE_MORPHNORMALS\",\n\"\",\n\"\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\",\n\"\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\",\n\"\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\",\n\"\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\",\n\"\",\n\"\t#endif\",\n\"\",\n\"#endif\",\n\"\",\n].join('\\n');","export default [\n\"#ifdef DOUBLE_SIDED\",\n\"\tfloat flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\",\n\"#else\",\n\"\tfloat flipNormal = 1.0;\",\n\"#endif\",\n\"\",\n].join('\\n');","export default [\n\"#ifdef FLAT_SHADED\",\n\"\",\n\"\t// Workaround for Adreno/Nexus5 not able able to do dFdx( vViewPosition ) ...\",\n\"\",\n\"\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\",\n\"\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\",\n\"\tvec3 normal = normalize( cross( fdx, fdy ) );\",\n\"\",\n\"#else\",\n\"\",\n\"\tvec3 normal = normalize( vNormal ) * flipNormal;\",\n\"\",\n\"#endif\",\n\"\",\n\"#ifdef USE_NORMALMAP\",\n\"\",\n\"\tnormal = perturbNormal2Arb( -vViewPosition, normal );\",\n\"\",\n\"#elif defined( USE_BUMPMAP )\",\n\"\",\n\"\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\",\n\"\",\n\"#endif\",\n\"\",\n].join('\\n');","export default [\n\"#ifdef USE_NORMALMAP\",\n\"\",\n\"\tuniform sampler2D normalMap;\",\n\"\tuniform vec2 normalScale;\",\n\"\",\n\"\t// Per-Pixel Tangent Space Normal Mapping\",\n\"\t// http://hacksoflife.blogspot.ch/2009/11/per-pixel-tangent-space-normal-mapping.html\",\n\"\",\n\"\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\",\n\"\",\n\"\t\tvec3 q0 = dFdx( eye_pos.xyz );\",\n\"\t\tvec3 q1 = dFdy( eye_pos.xyz );\",\n\"\t\tvec2 st0 = dFdx( vUv.st );\",\n\"\t\tvec2 st1 = dFdy( vUv.st );\",\n\"\",\n\"\t\tvec3 S = normalize( q0 * st1.t - q1 * st0.t );\",\n\"\t\tvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\",\n\"\t\tvec3 N = normalize( surf_norm );\",\n\"\",\n\"\t\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\",\n\"\t\tmapN.xy = normalScale * mapN.xy;\",\n\"\t\tmat3 tsn = mat3( S, T, N );\",\n\"\t\treturn normalize( tsn * mapN );\",\n\"\",\n\"\t}\",\n\"\",\n\"#endif\",\n\"\",\n].join('\\n');","export default [\n\"vec3 packNormalToRGB( const in vec3 normal ) {\",\n\"  return normalize( normal ) * 0.5 + 0.5;\",\n\"}\",\n\"\",\n\"vec3 unpackRGBToNormal( const in vec3 rgb ) {\",\n\"  return 1.0 - 2.0 * rgb.xyz;\",\n\"}\",\n\"\",\n\"const float PackUpscale = 256. / 255.; // fraction -> 0..1 (including 1)\",\n\"const float UnpackDownscale = 255. / 256.; // 0..1 -> fraction (excluding 1)\",\n\"\",\n\"const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\",\n\"const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\",\n\"\",\n\"const float ShiftRight8 = 1. / 256.;\",\n\"\",\n\"vec4 packDepthToRGBA( const in float v ) {\",\n\"\",\n\"\tvec4 r = vec4( fract( v * PackFactors ), v );\",\n\"\tr.yzw -= r.xyz * ShiftRight8; // tidy overflow\",\n\"\treturn r * PackUpscale;\",\n\"\",\n\"}\",\n\"\",\n\"float unpackRGBAToDepth( const in vec4 v ) {\",\n\"\",\n\"\treturn dot( v, UnpackFactors );\",\n\"\",\n\"}\",\n\"\",\n\"// NOTE: viewZ/eyeZ is < 0 when in front of the camera per OpenGL conventions\",\n\"\",\n\"float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\",\n\"  return ( viewZ + near ) / ( near - far );\",\n\"}\",\n\"float orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\",\n\"  return linearClipZ * ( near - far ) - near;\",\n\"}\",\n\"\",\n\"float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\",\n\"  return (( near + viewZ ) * far ) / (( far - near ) * viewZ );\",\n\"}\",\n\"float perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\",\n\"  return ( near * far ) / ( ( far - near ) * invClipZ - far );\",\n\"}\",\n\"\",\n].join('\\n');","export default [\n\"#ifdef PREMULTIPLIED_ALPHA\",\n\"\",\n\"\t// Get get normal blending with premultipled, use with CustomBlending, OneFactor, OneMinusSrcAlphaFactor, AddEquation.\",\n\"\tgl_FragColor.rgb *= gl_FragColor.a;\",\n\"\",\n\"#endif\",\n\"\",\n].join('\\n');","export default [\n\"#ifdef USE_SKINNING\",\n\"\",\n\"\tvec4 mvPosition = modelViewMatrix * skinned;\",\n\"\",\n\"#else\",\n\"\",\n\"\tvec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\",\n\"\",\n\"#endif\",\n\"\",\n\"gl_Position = projectionMatrix * mvPosition;\",\n\"\",\n].join('\\n');","export default [\n\"float roughnessFactor = roughness;\",\n\"\",\n\"#ifdef USE_ROUGHNESSMAP\",\n\"\",\n\"\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\",\n\"\troughnessFactor *= texelRoughness.r;\",\n\"\",\n\"#endif\",\n\"\",\n].join('\\n');","export default [\n\"#ifdef USE_ROUGHNESSMAP\",\n\"\",\n\"\tuniform sampler2D roughnessMap;\",\n\"\",\n\"#endif\",\n].join('\\n');","export default [\n\"#ifdef USE_SHADOWMAP\",\n\"\",\n\"\t#if NUM_DIR_LIGHTS > 0\",\n\"\",\n\"\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];\",\n\"\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\",\n\"\",\n\"\t#endif\",\n\"\",\n\"\t#if NUM_SPOT_LIGHTS > 0\",\n\"\",\n\"\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];\",\n\"\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\",\n\"\",\n\"\t#endif\",\n\"\",\n\"\t#if NUM_POINT_LIGHTS > 0\",\n\"\",\n\"\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];\",\n\"\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\",\n\"\",\n\"\t#endif\",\n\"\",\n\"\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\",\n\"\",\n\"\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\",\n\"\",\n\"\t}\",\n\"\",\n\"\tfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\",\n\"\",\n\"\t\tconst vec2 offset = vec2( 0.0, 1.0 );\",\n\"\",\n\"\t\tvec2 texelSize = vec2( 1.0 ) / size;\",\n\"\t\tvec2 centroidUV = floor( uv * size + 0.5 ) / size;\",\n\"\",\n\"\t\tfloat lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\",\n\"\t\tfloat lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\",\n\"\t\tfloat rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\",\n\"\t\tfloat rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\",\n\"\",\n\"\t\tvec2 f = fract( uv * size + 0.5 );\",\n\"\",\n\"\t\tfloat a = mix( lb, lt, f.y );\",\n\"\t\tfloat b = mix( rb, rt, f.y );\",\n\"\t\tfloat c = mix( a, b, f.x );\",\n\"\",\n\"\t\treturn c;\",\n\"\",\n\"\t}\",\n\"\",\n\"\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\",\n\"\",\n\"\t\tshadowCoord.xyz /= shadowCoord.w;\",\n\"\t\tshadowCoord.z += shadowBias;\",\n\"\",\n\"\t\t// if ( something && something ) breaks ATI OpenGL shader compiler\",\n\"\t\t// if ( all( something, something ) ) using this instead\",\n\"\",\n\"\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\",\n\"\t\tbool inFrustum = all( inFrustumVec );\",\n\"\",\n\"\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\",\n\"\",\n\"\t\tbool frustumTest = all( frustumTestVec );\",\n\"\",\n\"\t\tif ( frustumTest ) {\",\n\"\",\n\"\t\t#if defined( SHADOWMAP_TYPE_PCF )\",\n\"\",\n\"\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\",\n\"\",\n\"\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\",\n\"\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\",\n\"\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\",\n\"\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\",\n\"\",\n\"\t\t\treturn (\",\n\"\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\",\n\"\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\",\n\"\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\",\n\"\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\",\n\"\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\",\n\"\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\",\n\"\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\",\n\"\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\",\n\"\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\",\n\"\t\t\t) * ( 1.0 / 9.0 );\",\n\"\",\n\"\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\",\n\"\",\n\"\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\",\n\"\",\n\"\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\",\n\"\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\",\n\"\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\",\n\"\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\",\n\"\",\n\"\t\t\treturn (\",\n\"\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\",\n\"\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\",\n\"\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\",\n\"\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\",\n\"\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\",\n\"\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\",\n\"\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\",\n\"\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\",\n\"\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\",\n\"\t\t\t) * ( 1.0 / 9.0 );\",\n\"\",\n\"\t\t#else // no percentage-closer filtering:\",\n\"\",\n\"\t\t\treturn texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\",\n\"\",\n\"\t\t#endif\",\n\"\",\n\"\t\t}\",\n\"\",\n\"\t\treturn 1.0;\",\n\"\",\n\"\t}\",\n\"\",\n\"\t// cubeToUV() maps a 3D direction vector suitable for cube texture mapping to a 2D\",\n\"\t// vector suitable for 2D texture mapping. This code uses the following layout for the\",\n\"\t// 2D texture:\",\n\"\t//\",\n\"\t// xzXZ\",\n\"\t//  y Y\",\n\"\t//\",\n\"\t// Y - Positive y direction\",\n\"\t// y - Negative y direction\",\n\"\t// X - Positive x direction\",\n\"\t// x - Negative x direction\",\n\"\t// Z - Positive z direction\",\n\"\t// z - Negative z direction\",\n\"\t//\",\n\"\t// Source and test bed:\",\n\"\t// https://gist.github.com/tschw/da10c43c467ce8afd0c4\",\n\"\",\n\"\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\",\n\"\",\n\"\t\t// Number of texels to avoid at the edge of each square\",\n\"\",\n\"\t\tvec3 absV = abs( v );\",\n\"\",\n\"\t\t// Intersect unit cube\",\n\"\",\n\"\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\",\n\"\t\tabsV *= scaleToCube;\",\n\"\",\n\"\t\t// Apply scale to avoid seams\",\n\"\",\n\"\t\t// two texels less per square (one texel will do for NEAREST)\",\n\"\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\",\n\"\",\n\"\t\t// Unwrap\",\n\"\",\n\"\t\t// space: -1 ... 1 range for each square\",\n\"\t\t//\",\n\"\t\t// #X##\t\tdim    := ( 4 , 2 )\",\n\"\t\t//  # #\t\tcenter := ( 1 , 1 )\",\n\"\",\n\"\t\tvec2 planar = v.xy;\",\n\"\",\n\"\t\tfloat almostATexel = 1.5 * texelSizeY;\",\n\"\t\tfloat almostOne = 1.0 - almostATexel;\",\n\"\",\n\"\t\tif ( absV.z >= almostOne ) {\",\n\"\",\n\"\t\t\tif ( v.z > 0.0 )\",\n\"\t\t\t\tplanar.x = 4.0 - v.x;\",\n\"\",\n\"\t\t} else if ( absV.x >= almostOne ) {\",\n\"\",\n\"\t\t\tfloat signX = sign( v.x );\",\n\"\t\t\tplanar.x = v.z * signX + 2.0 * signX;\",\n\"\",\n\"\t\t} else if ( absV.y >= almostOne ) {\",\n\"\",\n\"\t\t\tfloat signY = sign( v.y );\",\n\"\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\",\n\"\t\t\tplanar.y = v.z * signY - 2.0;\",\n\"\",\n\"\t\t}\",\n\"\",\n\"\t\t// Transform to UV space\",\n\"\",\n\"\t\t// scale := 0.5 / dim\",\n\"\t\t// translate := ( center + 0.5 ) / dim\",\n\"\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\",\n\"\",\n\"\t}\",\n\"\",\n\"\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\",\n\"\",\n\"\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\",\n\"\",\n\"\t\t// for point lights, the uniform @vShadowCoord is re-purposed to hold\",\n\"\t\t// the distance from the light to the world-space position of the fragment.\",\n\"\t\tvec3 lightToPosition = shadowCoord.xyz;\",\n\"\",\n\"\t\t// bd3D = base direction 3D\",\n\"\t\tvec3 bd3D = normalize( lightToPosition );\",\n\"\t\t// dp = distance from light to fragment position\",\n\"\t\tfloat dp = ( length( lightToPosition ) - shadowBias ) / 1000.0;\",\n\"\",\n\"\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\",\n\"\",\n\"\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\",\n\"\",\n\"\t\t\treturn (\",\n\"\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\",\n\"\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\",\n\"\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\",\n\"\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\",\n\"\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\",\n\"\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\",\n\"\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\",\n\"\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\",\n\"\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\",\n\"\t\t\t) * ( 1.0 / 9.0 );\",\n\"\",\n\"\t\t#else // no percentage-closer filtering\",\n\"\",\n\"\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\",\n\"\",\n\"\t\t#endif\",\n\"\",\n\"\t}\",\n\"\",\n\"#endif\",\n\"\",\n].join('\\n');","export default [\n\"#ifdef USE_SHADOWMAP\",\n\"\",\n\"\t#if NUM_DIR_LIGHTS > 0\",\n\"\",\n\"\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];\",\n\"\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\",\n\"\",\n\"\t#endif\",\n\"\",\n\"\t#if NUM_SPOT_LIGHTS > 0\",\n\"\",\n\"\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];\",\n\"\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\",\n\"\",\n\"\t#endif\",\n\"\",\n\"\t#if NUM_POINT_LIGHTS > 0\",\n\"\",\n\"\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];\",\n\"\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\",\n\"\",\n\"\t#endif\",\n\"\",\n\"#endif\",\n\"\",\n].join('\\n');","export default [\n\"#ifdef USE_SHADOWMAP\",\n\"\",\n\"\t#if NUM_DIR_LIGHTS > 0\",\n\"\",\n\"\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\",\n\"\",\n\"\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\",\n\"\",\n\"\t}\",\n\"\",\n\"\t#endif\",\n\"\",\n\"\t#if NUM_SPOT_LIGHTS > 0\",\n\"\",\n\"\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\",\n\"\",\n\"\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\",\n\"\",\n\"\t}\",\n\"\",\n\"\t#endif\",\n\"\",\n\"\t#if NUM_POINT_LIGHTS > 0\",\n\"\",\n\"\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\",\n\"\",\n\"\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\",\n\"\",\n\"\t}\",\n\"\",\n\"\t#endif\",\n\"\",\n\"#endif\",\n\"\",\n].join('\\n');","export default [\n\"float getShadowMask() {\",\n\"\",\n\"\tfloat shadow = 1.0;\",\n\"\",\n\"\t#ifdef USE_SHADOWMAP\",\n\"\",\n\"\t#if NUM_DIR_LIGHTS > 0\",\n\"\",\n\"\tDirectionalLight directionalLight;\",\n\"\",\n\"\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\",\n\"\",\n\"\t\tdirectionalLight = directionalLights[ i ];\",\n\"\t\tshadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\",\n\"\",\n\"\t}\",\n\"\",\n\"\t#endif\",\n\"\",\n\"\t#if NUM_SPOT_LIGHTS > 0\",\n\"\",\n\"\tSpotLight spotLight;\",\n\"\",\n\"\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\",\n\"\",\n\"\t\tspotLight = spotLights[ i ];\",\n\"\t\tshadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\",\n\"\",\n\"\t}\",\n\"\",\n\"\t#endif\",\n\"\",\n\"\t#if NUM_POINT_LIGHTS > 0\",\n\"\",\n\"\tPointLight pointLight;\",\n\"\",\n\"\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\",\n\"\",\n\"\t\tpointLight = pointLights[ i ];\",\n\"\t\tshadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ] ) : 1.0;\",\n\"\",\n\"\t}\",\n\"\",\n\"\t#endif\",\n\"\",\n\"\t#endif\",\n\"\",\n\"\treturn shadow;\",\n\"\",\n\"}\",\n\"\",\n].join('\\n');","export default [\n\"#ifdef USE_SKINNING\",\n\"\",\n\"\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\",\n\"\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\",\n\"\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\",\n\"\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\",\n\"\",\n\"#endif\",\n].join('\\n');","export default [\n\"#ifdef USE_SKINNING\",\n\"\",\n\"\tuniform mat4 bindMatrix;\",\n\"\tuniform mat4 bindMatrixInverse;\",\n\"\",\n\"\t#ifdef BONE_TEXTURE\",\n\"\",\n\"\t\tuniform sampler2D boneTexture;\",\n\"\t\tuniform int boneTextureWidth;\",\n\"\t\tuniform int boneTextureHeight;\",\n\"\",\n\"\t\tmat4 getBoneMatrix( const in float i ) {\",\n\"\",\n\"\t\t\tfloat j = i * 4.0;\",\n\"\t\t\tfloat x = mod( j, float( boneTextureWidth ) );\",\n\"\t\t\tfloat y = floor( j / float( boneTextureWidth ) );\",\n\"\",\n\"\t\t\tfloat dx = 1.0 / float( boneTextureWidth );\",\n\"\t\t\tfloat dy = 1.0 / float( boneTextureHeight );\",\n\"\",\n\"\t\t\ty = dy * ( y + 0.5 );\",\n\"\",\n\"\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\",\n\"\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\",\n\"\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\",\n\"\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\",\n\"\",\n\"\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\",\n\"\",\n\"\t\t\treturn bone;\",\n\"\",\n\"\t\t}\",\n\"\",\n\"\t#else\",\n\"\",\n\"\t\tuniform mat4 boneMatrices[ MAX_BONES ];\",\n\"\",\n\"\t\tmat4 getBoneMatrix( const in float i ) {\",\n\"\",\n\"\t\t\tmat4 bone = boneMatrices[ int(i) ];\",\n\"\t\t\treturn bone;\",\n\"\",\n\"\t\t}\",\n\"\",\n\"\t#endif\",\n\"\",\n\"#endif\",\n\"\",\n].join('\\n');","export default [\n\"#ifdef USE_SKINNING\",\n\"\",\n\"\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\",\n\"\",\n\"\tvec4 skinned = vec4( 0.0 );\",\n\"\tskinned += boneMatX * skinVertex * skinWeight.x;\",\n\"\tskinned += boneMatY * skinVertex * skinWeight.y;\",\n\"\tskinned += boneMatZ * skinVertex * skinWeight.z;\",\n\"\tskinned += boneMatW * skinVertex * skinWeight.w;\",\n\"\tskinned  = bindMatrixInverse * skinned;\",\n\"\",\n\"#endif\",\n\"\",\n].join('\\n');","export default [\n\"#ifdef USE_SKINNING\",\n\"\",\n\"\tmat4 skinMatrix = mat4( 0.0 );\",\n\"\tskinMatrix += skinWeight.x * boneMatX;\",\n\"\tskinMatrix += skinWeight.y * boneMatY;\",\n\"\tskinMatrix += skinWeight.z * boneMatZ;\",\n\"\tskinMatrix += skinWeight.w * boneMatW;\",\n\"\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\",\n\"\",\n\"\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\",\n\"\",\n\"#endif\",\n\"\",\n].join('\\n');","export default [\n\"float specularStrength;\",\n\"\",\n\"#ifdef USE_SPECULARMAP\",\n\"\",\n\"\tvec4 texelSpecular = texture2D( specularMap, vUv );\",\n\"\tspecularStrength = texelSpecular.r;\",\n\"\",\n\"#else\",\n\"\",\n\"\tspecularStrength = 1.0;\",\n\"\",\n\"#endif\",\n].join('\\n');","export default [\n\"#ifdef USE_SPECULARMAP\",\n\"\",\n\"\tuniform sampler2D specularMap;\",\n\"\",\n\"#endif\",\n].join('\\n');","export default [\n\"#if defined( TONE_MAPPING )\",\n\"\",\n\"  gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\",\n\"\",\n\"#endif\",\n\"\",\n].join('\\n');","export default [\n\"#define saturate(a) clamp( a, 0.0, 1.0 )\",\n\"\",\n\"uniform float toneMappingExposure;\",\n\"uniform float toneMappingWhitePoint;\",\n\"\",\n\"// exposure only\",\n\"vec3 LinearToneMapping( vec3 color ) {\",\n\"\",\n\"  return toneMappingExposure * color;\",\n\"\",\n\"}\",\n\"\",\n\"// source: https://www.cs.utah.edu/~reinhard/cdrom/\",\n\"vec3 ReinhardToneMapping( vec3 color ) {\",\n\"\",\n\"  color *= toneMappingExposure;\",\n\"  return saturate( color / ( vec3( 1.0 ) + color ) );\",\n\"\",\n\"}\",\n\"\",\n\"// source: http://filmicgames.com/archives/75\",\n\"#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\",\n\"vec3 Uncharted2ToneMapping( vec3 color ) {\",\n\"\",\n\"  // John Hable's filmic operator from Uncharted 2 video game\",\n\"  color *= toneMappingExposure;\",\n\"  return saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\",\n\"\",\n\"}\",\n\"\",\n\"// source: http://filmicgames.com/archives/75\",\n\"vec3 OptimizedCineonToneMapping( vec3 color ) {\",\n\"\",\n\"  // optimized filmic operator by Jim Hejl and Richard Burgess-Dawson\",\n\"  color *= toneMappingExposure;\",\n\"  color = max( vec3( 0.0 ), color - 0.004 );\",\n\"  return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\",\n\"\",\n\"}\",\n\"\",\n].join('\\n');","export default [\n\"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\",\n\"\",\n\"\tvarying vec2 vUv;\",\n\"\",\n\"#endif\",\n].join('\\n');","export default [\n\"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\",\n\"\",\n\"\tvarying vec2 vUv;\",\n\"\tuniform vec4 offsetRepeat;\",\n\"\",\n\"#endif\",\n\"\",\n].join('\\n');","export default [\n\"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\",\n\"\",\n\"\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\",\n\"\",\n\"#endif\",\n].join('\\n');","export default [\n\"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\",\n\"\",\n\"\tvarying vec2 vUv2;\",\n\"\",\n\"#endif\",\n].join('\\n');","export default [\n\"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\",\n\"\",\n\"\tattribute vec2 uv2;\",\n\"\tvarying vec2 vUv2;\",\n\"\",\n\"#endif\",\n].join('\\n');","export default [\n\"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\",\n\"\",\n\"\tvUv2 = uv2;\",\n\"\",\n\"#endif\",\n].join('\\n');","export default [\n\"#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( PHYSICAL ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\",\n\"\",\n\"\t#ifdef USE_SKINNING\",\n\"\",\n\"\t\tvec4 worldPosition = modelMatrix * skinned;\",\n\"\",\n\"\t#else\",\n\"\",\n\"\t\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\",\n\"\",\n\"\t#endif\",\n\"\",\n\"#endif\",\n\"\",\n].join('\\n');","export default [\n\"uniform samplerCube tCube;\",\n\"uniform float tFlip;\",\n\"uniform float opacity;\",\n\"\",\n\"varying vec3 vWorldPosition;\",\n\"\",\n\"#include <common>\",\n\"\",\n\"void main() {\",\n\"\",\n\"\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\",\n\"\tgl_FragColor.a *= opacity;\",\n\"\",\n\"}\",\n\"\",\n].join('\\n');","export default [\n\"varying vec3 vWorldPosition;\",\n\"\",\n\"#include <common>\",\n\"\",\n\"void main() {\",\n\"\",\n\"\tvWorldPosition = transformDirection( position, modelMatrix );\",\n\"\",\n\"\t#include <begin_vertex>\",\n\"\t#include <project_vertex>\",\n\"\",\n\"}\",\n\"\",\n].join('\\n');","export default [\n\"#if DEPTH_PACKING == 3200\",\n\"\",\n\"\tuniform float opacity;\",\n\"\",\n\"#endif\",\n\"\",\n\"#include <common>\",\n\"#include <packing>\",\n\"#include <uv_pars_fragment>\",\n\"#include <map_pars_fragment>\",\n\"#include <alphamap_pars_fragment>\",\n\"#include <logdepthbuf_pars_fragment>\",\n\"#include <clipping_planes_pars_fragment>\",\n\"\",\n\"void main() {\",\n\"\",\n\"\t#include <clipping_planes_fragment>\",\n\"\",\n\"\tvec4 diffuseColor = vec4( 1.0 );\",\n\"\",\n\"\t#if DEPTH_PACKING == 3200\",\n\"\",\n\"\t\tdiffuseColor.a = opacity;\",\n\"\",\n\"\t#endif\",\n\"\",\n\"\t#include <map_fragment>\",\n\"\t#include <alphamap_fragment>\",\n\"\t#include <alphatest_fragment>\",\n\"\",\n\"\t#include <logdepthbuf_fragment>\",\n\"\",\n\"\t#if DEPTH_PACKING == 3200\",\n\"\",\n\"\t\tgl_FragColor = vec4( vec3( gl_FragCoord.z ), opacity );\",\n\"\",\n\"\t#elif DEPTH_PACKING == 3201\",\n\"\",\n\"\t\tgl_FragColor = packDepthToRGBA( gl_FragCoord.z );\",\n\"\",\n\"\t#endif\",\n\"\",\n\"}\",\n\"\",\n].join('\\n');","export default [\n\"#include <common>\",\n\"#include <uv_pars_vertex>\",\n\"#include <displacementmap_pars_vertex>\",\n\"#include <morphtarget_pars_vertex>\",\n\"#include <skinning_pars_vertex>\",\n\"#include <logdepthbuf_pars_vertex>\",\n\"#include <clipping_planes_pars_vertex>\",\n\"\",\n\"void main() {\",\n\"\",\n\"\t#include <uv_vertex>\",\n\"\",\n\"\t#include <skinbase_vertex>\",\n\"\",\n\"\t#include <begin_vertex>\",\n\"\t#include <displacementmap_vertex>\",\n\"\t#include <morphtarget_vertex>\",\n\"\t#include <skinning_vertex>\",\n\"\t#include <project_vertex>\",\n\"\t#include <logdepthbuf_vertex>\",\n\"\t#include <clipping_planes_vertex>\",\n\"\",\n\"}\",\n\"\",\n].join('\\n');","export default [\n\"uniform vec3 lightPos;\",\n\"varying vec4 vWorldPosition;\",\n\"\",\n\"#include <common>\",\n\"#include <packing>\",\n\"#include <clipping_planes_pars_fragment>\",\n\"\",\n\"void main () {\",\n\"\",\n\"\t#include <clipping_planes_fragment>\",\n\"\",\n\"\tgl_FragColor = packDepthToRGBA( length( vWorldPosition.xyz - lightPos.xyz ) / 1000.0 );\",\n\"\",\n\"}\",\n\"\",\n].join('\\n');","export default [\n\"varying vec4 vWorldPosition;\",\n\"\",\n\"#include <common>\",\n\"#include <morphtarget_pars_vertex>\",\n\"#include <skinning_pars_vertex>\",\n\"#include <clipping_planes_pars_vertex>\",\n\"\",\n\"void main() {\",\n\"\",\n\"\t#include <skinbase_vertex>\",\n\"\t#include <begin_vertex>\",\n\"\t#include <morphtarget_vertex>\",\n\"\t#include <skinning_vertex>\",\n\"\t#include <project_vertex>\",\n\"\t#include <worldpos_vertex>\",\n\"\t#include <clipping_planes_vertex>\",\n\"\",\n\"\tvWorldPosition = worldPosition;\",\n\"\",\n\"}\",\n\"\",\n].join('\\n');","export default [\n\"uniform sampler2D tEquirect;\",\n\"uniform float tFlip;\",\n\"\",\n\"varying vec3 vWorldPosition;\",\n\"\",\n\"#include <common>\",\n\"\",\n\"void main() {\",\n\"\",\n\"\t// \tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\",\n\"\tvec3 direction = normalize( vWorldPosition );\",\n\"\tvec2 sampleUV;\",\n\"\tsampleUV.y = saturate( tFlip * direction.y * -0.5 + 0.5 );\",\n\"\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\",\n\"\tgl_FragColor = texture2D( tEquirect, sampleUV );\",\n\"\",\n\"}\",\n\"\",\n].join('\\n');","export default [\n\"varying vec3 vWorldPosition;\",\n\"\",\n\"#include <common>\",\n\"\",\n\"void main() {\",\n\"\",\n\"\tvWorldPosition = transformDirection( position, modelMatrix );\",\n\"\",\n\"\t#include <begin_vertex>\",\n\"\t#include <project_vertex>\",\n\"\",\n\"}\",\n\"\",\n].join('\\n');","export default [\n\"uniform vec3 diffuse;\",\n\"uniform float opacity;\",\n\"\",\n\"uniform float dashSize;\",\n\"uniform float totalSize;\",\n\"\",\n\"varying float vLineDistance;\",\n\"\",\n\"#include <common>\",\n\"#include <color_pars_fragment>\",\n\"#include <fog_pars_fragment>\",\n\"#include <logdepthbuf_pars_fragment>\",\n\"#include <clipping_planes_pars_fragment>\",\n\"\",\n\"void main() {\",\n\"\",\n\"\t#include <clipping_planes_fragment>\",\n\"\",\n\"\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\",\n\"\",\n\"\t\tdiscard;\",\n\"\",\n\"\t}\",\n\"\",\n\"\tvec3 outgoingLight = vec3( 0.0 );\",\n\"\tvec4 diffuseColor = vec4( diffuse, opacity );\",\n\"\",\n\"\t#include <logdepthbuf_fragment>\",\n\"\t#include <color_fragment>\",\n\"\",\n\"\toutgoingLight = diffuseColor.rgb; // simple shader\",\n\"\",\n\"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\",\n\"\",\n\"\t#include <premultiplied_alpha_fragment>\",\n\"\t#include <tonemapping_fragment>\",\n\"\t#include <encodings_fragment>\",\n\"\t#include <fog_fragment>\",\n\"\",\n\"}\",\n\"\",\n].join('\\n');","export default [\n\"uniform float scale;\",\n\"attribute float lineDistance;\",\n\"\",\n\"varying float vLineDistance;\",\n\"\",\n\"#include <common>\",\n\"#include <color_pars_vertex>\",\n\"#include <logdepthbuf_pars_vertex>\",\n\"#include <clipping_planes_pars_vertex>\",\n\"\",\n\"void main() {\",\n\"\",\n\"\t#include <color_vertex>\",\n\"\",\n\"\tvLineDistance = scale * lineDistance;\",\n\"\",\n\"\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\",\n\"\tgl_Position = projectionMatrix * mvPosition;\",\n\"\",\n\"\t#include <logdepthbuf_vertex>\",\n\"\t#include <clipping_planes_vertex>\",\n\"\",\n\"}\",\n\"\",\n].join('\\n');","export default [\n\"uniform vec3 diffuse;\",\n\"uniform float opacity;\",\n\"\",\n\"#ifndef FLAT_SHADED\",\n\"\",\n\"\tvarying vec3 vNormal;\",\n\"\",\n\"#endif\",\n\"\",\n\"#include <common>\",\n\"#include <color_pars_fragment>\",\n\"#include <uv_pars_fragment>\",\n\"#include <uv2_pars_fragment>\",\n\"#include <map_pars_fragment>\",\n\"#include <alphamap_pars_fragment>\",\n\"#include <aomap_pars_fragment>\",\n\"#include <envmap_pars_fragment>\",\n\"#include <fog_pars_fragment>\",\n\"#include <specularmap_pars_fragment>\",\n\"#include <logdepthbuf_pars_fragment>\",\n\"#include <clipping_planes_pars_fragment>\",\n\"\",\n\"void main() {\",\n\"\",\n\"\t#include <clipping_planes_fragment>\",\n\"\",\n\"\tvec4 diffuseColor = vec4( diffuse, opacity );\",\n\"\",\n\"\t#include <logdepthbuf_fragment>\",\n\"\t#include <map_fragment>\",\n\"\t#include <color_fragment>\",\n\"\t#include <alphamap_fragment>\",\n\"\t#include <alphatest_fragment>\",\n\"\t#include <specularmap_fragment>\",\n\"\",\n\"\tReflectedLight reflectedLight;\",\n\"\treflectedLight.directDiffuse = vec3( 0.0 );\",\n\"\treflectedLight.directSpecular = vec3( 0.0 );\",\n\"\treflectedLight.indirectDiffuse = diffuseColor.rgb;\",\n\"\treflectedLight.indirectSpecular = vec3( 0.0 );\",\n\"\",\n\"\t#include <aomap_fragment>\",\n\"\",\n\"\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\",\n\"\",\n\"\t#include <normal_flip>\",\n\"\t#include <envmap_fragment>\",\n\"\",\n\"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\",\n\"\",\n\"\t#include <premultiplied_alpha_fragment>\",\n\"\t#include <tonemapping_fragment>\",\n\"\t#include <encodings_fragment>\",\n\"\t#include <fog_fragment>\",\n\"\",\n\"}\",\n\"\",\n].join('\\n');","export default [\n\"#include <common>\",\n\"#include <uv_pars_vertex>\",\n\"#include <uv2_pars_vertex>\",\n\"#include <envmap_pars_vertex>\",\n\"#include <color_pars_vertex>\",\n\"#include <morphtarget_pars_vertex>\",\n\"#include <skinning_pars_vertex>\",\n\"#include <logdepthbuf_pars_vertex>\",\n\"#include <clipping_planes_pars_vertex>\",\n\"\",\n\"void main() {\",\n\"\",\n\"\t#include <uv_vertex>\",\n\"\t#include <uv2_vertex>\",\n\"\t#include <color_vertex>\",\n\"\t#include <skinbase_vertex>\",\n\"\",\n\"\t#ifdef USE_ENVMAP\",\n\"\",\n\"\t#include <beginnormal_vertex>\",\n\"\t#include <morphnormal_vertex>\",\n\"\t#include <skinnormal_vertex>\",\n\"\t#include <defaultnormal_vertex>\",\n\"\",\n\"\t#endif\",\n\"\",\n\"\t#include <begin_vertex>\",\n\"\t#include <morphtarget_vertex>\",\n\"\t#include <skinning_vertex>\",\n\"\t#include <project_vertex>\",\n\"\t#include <logdepthbuf_vertex>\",\n\"\",\n\"\t#include <worldpos_vertex>\",\n\"\t#include <clipping_planes_vertex>\",\n\"\t#include <envmap_vertex>\",\n\"\",\n\"}\",\n\"\",\n].join('\\n');","export default [\n\"uniform vec3 diffuse;\",\n\"uniform vec3 emissive;\",\n\"uniform float opacity;\",\n\"\",\n\"varying vec3 vLightFront;\",\n\"\",\n\"#ifdef DOUBLE_SIDED\",\n\"\",\n\"\tvarying vec3 vLightBack;\",\n\"\",\n\"#endif\",\n\"\",\n\"#include <common>\",\n\"#include <packing>\",\n\"#include <color_pars_fragment>\",\n\"#include <uv_pars_fragment>\",\n\"#include <uv2_pars_fragment>\",\n\"#include <map_pars_fragment>\",\n\"#include <alphamap_pars_fragment>\",\n\"#include <aomap_pars_fragment>\",\n\"#include <lightmap_pars_fragment>\",\n\"#include <emissivemap_pars_fragment>\",\n\"#include <envmap_pars_fragment>\",\n\"#include <bsdfs>\",\n\"#include <lights_pars>\",\n\"#include <fog_pars_fragment>\",\n\"#include <shadowmap_pars_fragment>\",\n\"#include <shadowmask_pars_fragment>\",\n\"#include <specularmap_pars_fragment>\",\n\"#include <logdepthbuf_pars_fragment>\",\n\"#include <clipping_planes_pars_fragment>\",\n\"\",\n\"void main() {\",\n\"\",\n\"\t#include <clipping_planes_fragment>\",\n\"\",\n\"\tvec4 diffuseColor = vec4( diffuse, opacity );\",\n\"\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\",\n\"\tvec3 totalEmissiveRadiance = emissive;\",\n\"\",\n\"\t#include <logdepthbuf_fragment>\",\n\"\t#include <map_fragment>\",\n\"\t#include <color_fragment>\",\n\"\t#include <alphamap_fragment>\",\n\"\t#include <alphatest_fragment>\",\n\"\t#include <specularmap_fragment>\",\n\"\t#include <emissivemap_fragment>\",\n\"\",\n\"\t// accumulation\",\n\"\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\",\n\"\",\n\"\t#include <lightmap_fragment>\",\n\"\",\n\"\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\",\n\"\",\n\"\t#ifdef DOUBLE_SIDED\",\n\"\",\n\"\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\",\n\"\",\n\"\t#else\",\n\"\",\n\"\t\treflectedLight.directDiffuse = vLightFront;\",\n\"\",\n\"\t#endif\",\n\"\",\n\"\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\",\n\"\",\n\"\t// modulation\",\n\"\t#include <aomap_fragment>\",\n\"\",\n\"\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\",\n\"\",\n\"\t#include <normal_flip>\",\n\"\t#include <envmap_fragment>\",\n\"\",\n\"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\",\n\"\",\n\"\t#include <premultiplied_alpha_fragment>\",\n\"\t#include <tonemapping_fragment>\",\n\"\t#include <encodings_fragment>\",\n\"\t#include <fog_fragment>\",\n\"\",\n\"}\",\n\"\",\n].join('\\n');","export default [\n\"#define LAMBERT\",\n\"\",\n\"varying vec3 vLightFront;\",\n\"\",\n\"#ifdef DOUBLE_SIDED\",\n\"\",\n\"\tvarying vec3 vLightBack;\",\n\"\",\n\"#endif\",\n\"\",\n\"#include <common>\",\n\"#include <uv_pars_vertex>\",\n\"#include <uv2_pars_vertex>\",\n\"#include <envmap_pars_vertex>\",\n\"#include <bsdfs>\",\n\"#include <lights_pars>\",\n\"#include <color_pars_vertex>\",\n\"#include <morphtarget_pars_vertex>\",\n\"#include <skinning_pars_vertex>\",\n\"#include <shadowmap_pars_vertex>\",\n\"#include <logdepthbuf_pars_vertex>\",\n\"#include <clipping_planes_pars_vertex>\",\n\"\",\n\"void main() {\",\n\"\",\n\"\t#include <uv_vertex>\",\n\"\t#include <uv2_vertex>\",\n\"\t#include <color_vertex>\",\n\"\",\n\"\t#include <beginnormal_vertex>\",\n\"\t#include <morphnormal_vertex>\",\n\"\t#include <skinbase_vertex>\",\n\"\t#include <skinnormal_vertex>\",\n\"\t#include <defaultnormal_vertex>\",\n\"\",\n\"\t#include <begin_vertex>\",\n\"\t#include <morphtarget_vertex>\",\n\"\t#include <skinning_vertex>\",\n\"\t#include <project_vertex>\",\n\"\t#include <logdepthbuf_vertex>\",\n\"\t#include <clipping_planes_vertex>\",\n\"\",\n\"\t#include <worldpos_vertex>\",\n\"\t#include <envmap_vertex>\",\n\"\t#include <lights_lambert_vertex>\",\n\"\t#include <shadowmap_vertex>\",\n\"\",\n\"}\",\n\"\",\n].join('\\n');","export default [\n\"#define PHONG\",\n\"\",\n\"uniform vec3 diffuse;\",\n\"uniform vec3 emissive;\",\n\"uniform vec3 specular;\",\n\"uniform float shininess;\",\n\"uniform float opacity;\",\n\"\",\n\"#include <common>\",\n\"#include <packing>\",\n\"#include <color_pars_fragment>\",\n\"#include <uv_pars_fragment>\",\n\"#include <uv2_pars_fragment>\",\n\"#include <map_pars_fragment>\",\n\"#include <alphamap_pars_fragment>\",\n\"#include <aomap_pars_fragment>\",\n\"#include <lightmap_pars_fragment>\",\n\"#include <emissivemap_pars_fragment>\",\n\"#include <envmap_pars_fragment>\",\n\"#include <fog_pars_fragment>\",\n\"#include <bsdfs>\",\n\"#include <lights_pars>\",\n\"#include <lights_phong_pars_fragment>\",\n\"#include <shadowmap_pars_fragment>\",\n\"#include <bumpmap_pars_fragment>\",\n\"#include <normalmap_pars_fragment>\",\n\"#include <specularmap_pars_fragment>\",\n\"#include <logdepthbuf_pars_fragment>\",\n\"#include <clipping_planes_pars_fragment>\",\n\"\",\n\"void main() {\",\n\"\",\n\"\t#include <clipping_planes_fragment>\",\n\"\",\n\"\tvec4 diffuseColor = vec4( diffuse, opacity );\",\n\"\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\",\n\"\tvec3 totalEmissiveRadiance = emissive;\",\n\"\",\n\"\t#include <logdepthbuf_fragment>\",\n\"\t#include <map_fragment>\",\n\"\t#include <color_fragment>\",\n\"\t#include <alphamap_fragment>\",\n\"\t#include <alphatest_fragment>\",\n\"\t#include <specularmap_fragment>\",\n\"\t#include <normal_flip>\",\n\"\t#include <normal_fragment>\",\n\"\t#include <emissivemap_fragment>\",\n\"\",\n\"\t// accumulation\",\n\"\t#include <lights_phong_fragment>\",\n\"\t#include <lights_template>\",\n\"\",\n\"\t// modulation\",\n\"\t#include <aomap_fragment>\",\n\"\",\n\"\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\",\n\"\",\n\"\t#include <envmap_fragment>\",\n\"\",\n\"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\",\n\"\",\n\"\t#include <premultiplied_alpha_fragment>\",\n\"\t#include <tonemapping_fragment>\",\n\"\t#include <encodings_fragment>\",\n\"\t#include <fog_fragment>\",\n\"\",\n\"}\",\n\"\",\n].join('\\n');","export default [\n\"#define PHONG\",\n\"\",\n\"varying vec3 vViewPosition;\",\n\"\",\n\"#ifndef FLAT_SHADED\",\n\"\",\n\"\tvarying vec3 vNormal;\",\n\"\",\n\"#endif\",\n\"\",\n\"#include <common>\",\n\"#include <uv_pars_vertex>\",\n\"#include <uv2_pars_vertex>\",\n\"#include <displacementmap_pars_vertex>\",\n\"#include <envmap_pars_vertex>\",\n\"#include <color_pars_vertex>\",\n\"#include <morphtarget_pars_vertex>\",\n\"#include <skinning_pars_vertex>\",\n\"#include <shadowmap_pars_vertex>\",\n\"#include <logdepthbuf_pars_vertex>\",\n\"#include <clipping_planes_pars_vertex>\",\n\"\",\n\"void main() {\",\n\"\",\n\"\t#include <uv_vertex>\",\n\"\t#include <uv2_vertex>\",\n\"\t#include <color_vertex>\",\n\"\",\n\"\t#include <beginnormal_vertex>\",\n\"\t#include <morphnormal_vertex>\",\n\"\t#include <skinbase_vertex>\",\n\"\t#include <skinnormal_vertex>\",\n\"\t#include <defaultnormal_vertex>\",\n\"\",\n\"#ifndef FLAT_SHADED // Normal computed with derivatives when FLAT_SHADED\",\n\"\",\n\"\tvNormal = normalize( transformedNormal );\",\n\"\",\n\"#endif\",\n\"\",\n\"\t#include <begin_vertex>\",\n\"\t#include <displacementmap_vertex>\",\n\"\t#include <morphtarget_vertex>\",\n\"\t#include <skinning_vertex>\",\n\"\t#include <project_vertex>\",\n\"\t#include <logdepthbuf_vertex>\",\n\"\t#include <clipping_planes_vertex>\",\n\"\",\n\"\tvViewPosition = - mvPosition.xyz;\",\n\"\",\n\"\t#include <worldpos_vertex>\",\n\"\t#include <envmap_vertex>\",\n\"\t#include <shadowmap_vertex>\",\n\"\",\n\"}\",\n\"\",\n].join('\\n');","export default [\n\"#define PHYSICAL\",\n\"\",\n\"uniform vec3 diffuse;\",\n\"uniform vec3 emissive;\",\n\"uniform float roughness;\",\n\"uniform float metalness;\",\n\"uniform float opacity;\",\n\"\",\n\"#ifndef STANDARD\",\n\"\tuniform float clearCoat;\",\n\"\tuniform float clearCoatRoughness;\",\n\"#endif\",\n\"\",\n\"uniform float envMapIntensity; // temporary\",\n\"\",\n\"varying vec3 vViewPosition;\",\n\"\",\n\"#ifndef FLAT_SHADED\",\n\"\",\n\"\tvarying vec3 vNormal;\",\n\"\",\n\"#endif\",\n\"\",\n\"#include <common>\",\n\"#include <packing>\",\n\"#include <color_pars_fragment>\",\n\"#include <uv_pars_fragment>\",\n\"#include <uv2_pars_fragment>\",\n\"#include <map_pars_fragment>\",\n\"#include <alphamap_pars_fragment>\",\n\"#include <aomap_pars_fragment>\",\n\"#include <lightmap_pars_fragment>\",\n\"#include <emissivemap_pars_fragment>\",\n\"#include <envmap_pars_fragment>\",\n\"#include <fog_pars_fragment>\",\n\"#include <bsdfs>\",\n\"#include <cube_uv_reflection_fragment>\",\n\"#include <lights_pars>\",\n\"#include <lights_physical_pars_fragment>\",\n\"#include <shadowmap_pars_fragment>\",\n\"#include <bumpmap_pars_fragment>\",\n\"#include <normalmap_pars_fragment>\",\n\"#include <roughnessmap_pars_fragment>\",\n\"#include <metalnessmap_pars_fragment>\",\n\"#include <logdepthbuf_pars_fragment>\",\n\"#include <clipping_planes_pars_fragment>\",\n\"\",\n\"void main() {\",\n\"\",\n\"\t#include <clipping_planes_fragment>\",\n\"\",\n\"\tvec4 diffuseColor = vec4( diffuse, opacity );\",\n\"\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\",\n\"\tvec3 totalEmissiveRadiance = emissive;\",\n\"\",\n\"\t#include <logdepthbuf_fragment>\",\n\"\t#include <map_fragment>\",\n\"\t#include <color_fragment>\",\n\"\t#include <alphamap_fragment>\",\n\"\t#include <alphatest_fragment>\",\n\"\t#include <specularmap_fragment>\",\n\"\t#include <roughnessmap_fragment>\",\n\"\t#include <metalnessmap_fragment>\",\n\"\t#include <normal_flip>\",\n\"\t#include <normal_fragment>\",\n\"\t#include <emissivemap_fragment>\",\n\"\",\n\"\t// accumulation\",\n\"\t#include <lights_physical_fragment>\",\n\"\t#include <lights_template>\",\n\"\",\n\"\t// modulation\",\n\"\t#include <aomap_fragment>\",\n\"\",\n\"\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\",\n\"\",\n\"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\",\n\"\",\n\"\t#include <premultiplied_alpha_fragment>\",\n\"\t#include <tonemapping_fragment>\",\n\"\t#include <encodings_fragment>\",\n\"\t#include <fog_fragment>\",\n\"\",\n\"}\",\n\"\",\n].join('\\n');","export default [\n\"#define PHYSICAL\",\n\"\",\n\"varying vec3 vViewPosition;\",\n\"\",\n\"#ifndef FLAT_SHADED\",\n\"\",\n\"\tvarying vec3 vNormal;\",\n\"\",\n\"#endif\",\n\"\",\n\"#include <common>\",\n\"#include <uv_pars_vertex>\",\n\"#include <uv2_pars_vertex>\",\n\"#include <displacementmap_pars_vertex>\",\n\"#include <color_pars_vertex>\",\n\"#include <morphtarget_pars_vertex>\",\n\"#include <skinning_pars_vertex>\",\n\"#include <shadowmap_pars_vertex>\",\n\"#include <specularmap_pars_fragment>\",\n\"#include <logdepthbuf_pars_vertex>\",\n\"#include <clipping_planes_pars_vertex>\",\n\"\",\n\"void main() {\",\n\"\",\n\"\t#include <uv_vertex>\",\n\"\t#include <uv2_vertex>\",\n\"\t#include <color_vertex>\",\n\"\",\n\"\t#include <beginnormal_vertex>\",\n\"\t#include <morphnormal_vertex>\",\n\"\t#include <skinbase_vertex>\",\n\"\t#include <skinnormal_vertex>\",\n\"\t#include <defaultnormal_vertex>\",\n\"\",\n\"#ifndef FLAT_SHADED // Normal computed with derivatives when FLAT_SHADED\",\n\"\",\n\"\tvNormal = normalize( transformedNormal );\",\n\"\",\n\"#endif\",\n\"\",\n\"\t#include <begin_vertex>\",\n\"\t#include <displacementmap_vertex>\",\n\"\t#include <morphtarget_vertex>\",\n\"\t#include <skinning_vertex>\",\n\"\t#include <project_vertex>\",\n\"\t#include <logdepthbuf_vertex>\",\n\"\t#include <clipping_planes_vertex>\",\n\"\",\n\"\tvViewPosition = - mvPosition.xyz;\",\n\"\",\n\"\t#include <worldpos_vertex>\",\n\"\t#include <shadowmap_vertex>\",\n\"\",\n\"}\",\n\"\",\n].join('\\n');","export default [\n\"uniform float opacity;\",\n\"varying vec3 vNormal;\",\n\"\",\n\"#include <common>\",\n\"#include <packing>\",\n\"#include <logdepthbuf_pars_fragment>\",\n\"#include <clipping_planes_pars_fragment>\",\n\"\",\n\"void main() {\",\n\"\",\n\"\t#include <clipping_planes_fragment>\",\n\"\tgl_FragColor = vec4( packNormalToRGB( vNormal ), opacity );\",\n\"\",\n\"\t#include <logdepthbuf_fragment>\",\n\"\",\n\"}\",\n\"\",\n].join('\\n');","export default [\n\"varying vec3 vNormal;\",\n\"\",\n\"#include <common>\",\n\"#include <morphtarget_pars_vertex>\",\n\"#include <logdepthbuf_pars_vertex>\",\n\"#include <clipping_planes_pars_vertex>\",\n\"\",\n\"void main() {\",\n\"\",\n\"\tvNormal = normalize( normalMatrix * normal );\",\n\"\",\n\"\t#include <begin_vertex>\",\n\"\t#include <morphtarget_vertex>\",\n\"\t#include <project_vertex>\",\n\"\t#include <logdepthbuf_vertex>\",\n\"\t#include <clipping_planes_vertex>\",\n\"\",\n\"}\",\n\"\",\n].join('\\n');","export default [\n\"uniform vec3 diffuse;\",\n\"uniform float opacity;\",\n\"\",\n\"#include <common>\",\n\"#include <packing>\",\n\"#include <color_pars_fragment>\",\n\"#include <map_particle_pars_fragment>\",\n\"#include <fog_pars_fragment>\",\n\"#include <shadowmap_pars_fragment>\",\n\"#include <logdepthbuf_pars_fragment>\",\n\"#include <clipping_planes_pars_fragment>\",\n\"\",\n\"void main() {\",\n\"\",\n\"\t#include <clipping_planes_fragment>\",\n\"\",\n\"\tvec3 outgoingLight = vec3( 0.0 );\",\n\"\tvec4 diffuseColor = vec4( diffuse, opacity );\",\n\"\",\n\"\t#include <logdepthbuf_fragment>\",\n\"\t#include <map_particle_fragment>\",\n\"\t#include <color_fragment>\",\n\"\t#include <alphatest_fragment>\",\n\"\",\n\"\toutgoingLight = diffuseColor.rgb;\",\n\"\",\n\"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\",\n\"\",\n\"\t#include <premultiplied_alpha_fragment>\",\n\"\t#include <tonemapping_fragment>\",\n\"\t#include <encodings_fragment>\",\n\"\t#include <fog_fragment>\",\n\"\",\n\"}\",\n\"\",\n].join('\\n');","export default [\n\"uniform float size;\",\n\"uniform float scale;\",\n\"\",\n\"#include <common>\",\n\"#include <color_pars_vertex>\",\n\"#include <shadowmap_pars_vertex>\",\n\"#include <logdepthbuf_pars_vertex>\",\n\"#include <clipping_planes_pars_vertex>\",\n\"\",\n\"void main() {\",\n\"\",\n\"\t#include <color_vertex>\",\n\"\t#include <begin_vertex>\",\n\"\t#include <project_vertex>\",\n\"\",\n\"\t#ifdef USE_SIZEATTENUATION\",\n\"\t\tgl_PointSize = size * ( scale / - mvPosition.z );\",\n\"\t#else\",\n\"\t\tgl_PointSize = size;\",\n\"\t#endif\",\n\"\",\n\"\t#include <logdepthbuf_vertex>\",\n\"\t#include <clipping_planes_vertex>\",\n\"\t#include <worldpos_vertex>\",\n\"\t#include <shadowmap_vertex>\",\n\"\",\n\"}\",\n\"\",\n].join('\\n');","export default [\n\"uniform float opacity;\",\n\"\",\n\"#include <common>\",\n\"#include <packing>\",\n\"#include <bsdfs>\",\n\"#include <lights_pars>\",\n\"#include <shadowmap_pars_fragment>\",\n\"#include <shadowmask_pars_fragment>\",\n\"\",\n\"void main() {\",\n\"\",\n\"\tgl_FragColor = vec4( 0.0, 0.0, 0.0, opacity * ( 1.0  - getShadowMask() ) );\",\n\"\",\n\"}\",\n\"\",\n].join('\\n');","export default [\n\"#include <shadowmap_pars_vertex>\",\n\"\",\n\"void main() {\",\n\"\",\n\"\t#include <begin_vertex>\",\n\"\t#include <project_vertex>\",\n\"\t#include <worldpos_vertex>\",\n\"\t#include <shadowmap_vertex>\",\n\"\",\n\"}\",\n\"\",\n].join('\\n');","import alphamap_fragment from \"./ShaderChunk/alphamap_fragment.glsl\";\nimport alphamap_pars_fragment from \"./ShaderChunk/alphamap_pars_fragment.glsl\";\nimport alphatest_fragment from \"./ShaderChunk/alphatest_fragment.glsl\";\nimport aomap_fragment from \"./ShaderChunk/aomap_fragment.glsl\";\nimport aomap_pars_fragment from \"./ShaderChunk/aomap_pars_fragment.glsl\";\nimport begin_vertex from \"./ShaderChunk/begin_vertex.glsl\";\nimport beginnormal_vertex from \"./ShaderChunk/beginnormal_vertex.glsl\";\nimport bsdfs from \"./ShaderChunk/bsdfs.glsl\";\nimport bumpmap_pars_fragment from \"./ShaderChunk/bumpmap_pars_fragment.glsl\";\nimport clipping_planes_fragment from \"./ShaderChunk/clipping_planes_fragment.glsl\";\nimport clipping_planes_pars_fragment from \"./ShaderChunk/clipping_planes_pars_fragment.glsl\";\nimport clipping_planes_pars_vertex from \"./ShaderChunk/clipping_planes_pars_vertex.glsl\";\nimport clipping_planes_vertex from \"./ShaderChunk/clipping_planes_vertex.glsl\";\nimport color_fragment from \"./ShaderChunk/color_fragment.glsl\";\nimport color_pars_fragment from \"./ShaderChunk/color_pars_fragment.glsl\";\nimport color_pars_vertex from \"./ShaderChunk/color_pars_vertex.glsl\";\nimport color_vertex from \"./ShaderChunk/color_vertex.glsl\";\nimport common from \"./ShaderChunk/common.glsl\";\nimport cube_uv_reflection_fragment from \"./ShaderChunk/cube_uv_reflection_fragment.glsl\";\nimport defaultnormal_vertex from \"./ShaderChunk/defaultnormal_vertex.glsl\";\nimport displacementmap_pars_vertex from \"./ShaderChunk/displacementmap_pars_vertex.glsl\";\nimport displacementmap_vertex from \"./ShaderChunk/displacementmap_vertex.glsl\";\nimport emissivemap_fragment from \"./ShaderChunk/emissivemap_fragment.glsl\";\nimport emissivemap_pars_fragment from \"./ShaderChunk/emissivemap_pars_fragment.glsl\";\nimport encodings_fragment from \"./ShaderChunk/encodings_fragment.glsl\";\nimport encodings_pars_fragment from \"./ShaderChunk/encodings_pars_fragment.glsl\";\nimport envmap_fragment from \"./ShaderChunk/envmap_fragment.glsl\";\nimport envmap_pars_fragment from \"./ShaderChunk/envmap_pars_fragment.glsl\";\nimport envmap_pars_vertex from \"./ShaderChunk/envmap_pars_vertex.glsl\";\nimport envmap_vertex from \"./ShaderChunk/envmap_vertex.glsl\";\nimport fog_fragment from \"./ShaderChunk/fog_fragment.glsl\";\nimport fog_pars_fragment from \"./ShaderChunk/fog_pars_fragment.glsl\";\nimport lightmap_fragment from \"./ShaderChunk/lightmap_fragment.glsl\";\nimport lightmap_pars_fragment from \"./ShaderChunk/lightmap_pars_fragment.glsl\";\nimport lights_lambert_vertex from \"./ShaderChunk/lights_lambert_vertex.glsl\";\nimport lights_pars from \"./ShaderChunk/lights_pars.glsl\";\nimport lights_phong_fragment from \"./ShaderChunk/lights_phong_fragment.glsl\";\nimport lights_phong_pars_fragment from \"./ShaderChunk/lights_phong_pars_fragment.glsl\";\nimport lights_physical_fragment from \"./ShaderChunk/lights_physical_fragment.glsl\";\nimport lights_physical_pars_fragment from \"./ShaderChunk/lights_physical_pars_fragment.glsl\";\nimport lights_template from \"./ShaderChunk/lights_template.glsl\";\nimport logdepthbuf_fragment from \"./ShaderChunk/logdepthbuf_fragment.glsl\";\nimport logdepthbuf_pars_fragment from \"./ShaderChunk/logdepthbuf_pars_fragment.glsl\";\nimport logdepthbuf_pars_vertex from \"./ShaderChunk/logdepthbuf_pars_vertex.glsl\";\nimport logdepthbuf_vertex from \"./ShaderChunk/logdepthbuf_vertex.glsl\";\nimport map_fragment from \"./ShaderChunk/map_fragment.glsl\";\nimport map_pars_fragment from \"./ShaderChunk/map_pars_fragment.glsl\";\nimport map_particle_fragment from \"./ShaderChunk/map_particle_fragment.glsl\";\nimport map_particle_pars_fragment from \"./ShaderChunk/map_particle_pars_fragment.glsl\";\nimport metalnessmap_fragment from \"./ShaderChunk/metalnessmap_fragment.glsl\";\nimport metalnessmap_pars_fragment from \"./ShaderChunk/metalnessmap_pars_fragment.glsl\";\nimport morphnormal_vertex from \"./ShaderChunk/morphnormal_vertex.glsl\";\nimport morphtarget_pars_vertex from \"./ShaderChunk/morphtarget_pars_vertex.glsl\";\nimport morphtarget_vertex from \"./ShaderChunk/morphtarget_vertex.glsl\";\nimport normal_flip from \"./ShaderChunk/normal_flip.glsl\";\nimport normal_fragment from \"./ShaderChunk/normal_fragment.glsl\";\nimport normalmap_pars_fragment from \"./ShaderChunk/normalmap_pars_fragment.glsl\";\nimport packing from \"./ShaderChunk/packing.glsl\";\nimport premultiplied_alpha_fragment from \"./ShaderChunk/premultiplied_alpha_fragment.glsl\";\nimport project_vertex from \"./ShaderChunk/project_vertex.glsl\";\nimport roughnessmap_fragment from \"./ShaderChunk/roughnessmap_fragment.glsl\";\nimport roughnessmap_pars_fragment from \"./ShaderChunk/roughnessmap_pars_fragment.glsl\";\nimport shadowmap_pars_fragment from \"./ShaderChunk/shadowmap_pars_fragment.glsl\";\nimport shadowmap_pars_vertex from \"./ShaderChunk/shadowmap_pars_vertex.glsl\";\nimport shadowmap_vertex from \"./ShaderChunk/shadowmap_vertex.glsl\";\nimport shadowmask_pars_fragment from \"./ShaderChunk/shadowmask_pars_fragment.glsl\";\nimport skinbase_vertex from \"./ShaderChunk/skinbase_vertex.glsl\";\nimport skinning_pars_vertex from \"./ShaderChunk/skinning_pars_vertex.glsl\";\nimport skinning_vertex from \"./ShaderChunk/skinning_vertex.glsl\";\nimport skinnormal_vertex from \"./ShaderChunk/skinnormal_vertex.glsl\";\nimport specularmap_fragment from \"./ShaderChunk/specularmap_fragment.glsl\";\nimport specularmap_pars_fragment from \"./ShaderChunk/specularmap_pars_fragment.glsl\";\nimport tonemapping_fragment from \"./ShaderChunk/tonemapping_fragment.glsl\";\nimport tonemapping_pars_fragment from \"./ShaderChunk/tonemapping_pars_fragment.glsl\";\nimport uv_pars_fragment from \"./ShaderChunk/uv_pars_fragment.glsl\";\nimport uv_pars_vertex from \"./ShaderChunk/uv_pars_vertex.glsl\";\nimport uv_vertex from \"./ShaderChunk/uv_vertex.glsl\";\nimport uv2_pars_fragment from \"./ShaderChunk/uv2_pars_fragment.glsl\";\nimport uv2_pars_vertex from \"./ShaderChunk/uv2_pars_vertex.glsl\";\nimport uv2_vertex from \"./ShaderChunk/uv2_vertex.glsl\";\nimport worldpos_vertex from \"./ShaderChunk/worldpos_vertex.glsl\";\nimport cube_frag from \"./ShaderLib/cube_frag.glsl\";\nimport cube_vert from \"./ShaderLib/cube_vert.glsl\";\nimport depth_frag from \"./ShaderLib/depth_frag.glsl\";\nimport depth_vert from \"./ShaderLib/depth_vert.glsl\";\nimport distanceRGBA_frag from \"./ShaderLib/distanceRGBA_frag.glsl\";\nimport distanceRGBA_vert from \"./ShaderLib/distanceRGBA_vert.glsl\";\nimport equirect_frag from \"./ShaderLib/equirect_frag.glsl\";\nimport equirect_vert from \"./ShaderLib/equirect_vert.glsl\";\nimport linedashed_frag from \"./ShaderLib/linedashed_frag.glsl\";\nimport linedashed_vert from \"./ShaderLib/linedashed_vert.glsl\";\nimport meshbasic_frag from \"./ShaderLib/meshbasic_frag.glsl\";\nimport meshbasic_vert from \"./ShaderLib/meshbasic_vert.glsl\";\nimport meshlambert_frag from \"./ShaderLib/meshlambert_frag.glsl\";\nimport meshlambert_vert from \"./ShaderLib/meshlambert_vert.glsl\";\nimport meshphong_frag from \"./ShaderLib/meshphong_frag.glsl\";\nimport meshphong_vert from \"./ShaderLib/meshphong_vert.glsl\";\nimport meshphysical_frag from \"./ShaderLib/meshphysical_frag.glsl\";\nimport meshphysical_vert from \"./ShaderLib/meshphysical_vert.glsl\";\nimport normal_frag from \"./ShaderLib/normal_frag.glsl\";\nimport normal_vert from \"./ShaderLib/normal_vert.glsl\";\nimport points_frag from \"./ShaderLib/points_frag.glsl\";\nimport points_vert from \"./ShaderLib/points_vert.glsl\";\nimport shadow_frag from \"./ShaderLib/shadow_frag.glsl\";\nimport shadow_vert from \"./ShaderLib/shadow_vert.glsl\";\nexport const ShaderChunk: any = {\n  alphamap_fragment: alphamap_fragment,\n  alphamap_pars_fragment: alphamap_pars_fragment,\n  alphatest_fragment: alphatest_fragment,\n  aomap_fragment: aomap_fragment,\n  aomap_pars_fragment: aomap_pars_fragment,\n  begin_vertex: begin_vertex,\n  beginnormal_vertex: beginnormal_vertex,\n  bsdfs: bsdfs,\n  bumpmap_pars_fragment: bumpmap_pars_fragment,\n  clipping_planes_fragment: clipping_planes_fragment,\n  clipping_planes_pars_fragment: clipping_planes_pars_fragment,\n  clipping_planes_pars_vertex: clipping_planes_pars_vertex,\n  clipping_planes_vertex: clipping_planes_vertex,\n  color_fragment: color_fragment,\n  color_pars_fragment: color_pars_fragment,\n  color_pars_vertex: color_pars_vertex,\n  color_vertex: color_vertex,\n  common: common,\n  cube_uv_reflection_fragment: cube_uv_reflection_fragment,\n  defaultnormal_vertex: defaultnormal_vertex,\n  displacementmap_pars_vertex: displacementmap_pars_vertex,\n  displacementmap_vertex: displacementmap_vertex,\n  emissivemap_fragment: emissivemap_fragment,\n  emissivemap_pars_fragment: emissivemap_pars_fragment,\n  encodings_fragment: encodings_fragment,\n  encodings_pars_fragment: encodings_pars_fragment,\n  envmap_fragment: envmap_fragment,\n  envmap_pars_fragment: envmap_pars_fragment,\n  envmap_pars_vertex: envmap_pars_vertex,\n  envmap_vertex: envmap_vertex,\n  fog_fragment: fog_fragment,\n  fog_pars_fragment: fog_pars_fragment,\n  lightmap_fragment: lightmap_fragment,\n  lightmap_pars_fragment: lightmap_pars_fragment,\n  lights_lambert_vertex: lights_lambert_vertex,\n  lights_pars: lights_pars,\n  lights_phong_fragment: lights_phong_fragment,\n  lights_phong_pars_fragment: lights_phong_pars_fragment,\n  lights_physical_fragment: lights_physical_fragment,\n  lights_physical_pars_fragment: lights_physical_pars_fragment,\n  lights_template: lights_template,\n  logdepthbuf_fragment: logdepthbuf_fragment,\n  logdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\n  logdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\n  logdepthbuf_vertex: logdepthbuf_vertex,\n  map_fragment: map_fragment,\n  map_pars_fragment: map_pars_fragment,\n  map_particle_fragment: map_particle_fragment,\n  map_particle_pars_fragment: map_particle_pars_fragment,\n  metalnessmap_fragment: metalnessmap_fragment,\n  metalnessmap_pars_fragment: metalnessmap_pars_fragment,\n  morphnormal_vertex: morphnormal_vertex,\n  morphtarget_pars_vertex: morphtarget_pars_vertex,\n  morphtarget_vertex: morphtarget_vertex,\n  normal_flip: normal_flip,\n  normal_fragment: normal_fragment,\n  normalmap_pars_fragment: normalmap_pars_fragment,\n  packing: packing,\n  premultiplied_alpha_fragment: premultiplied_alpha_fragment,\n  project_vertex: project_vertex,\n  roughnessmap_fragment: roughnessmap_fragment,\n  roughnessmap_pars_fragment: roughnessmap_pars_fragment,\n  shadowmap_pars_fragment: shadowmap_pars_fragment,\n  shadowmap_pars_vertex: shadowmap_pars_vertex,\n  shadowmap_vertex: shadowmap_vertex,\n  shadowmask_pars_fragment: shadowmask_pars_fragment,\n  skinbase_vertex: skinbase_vertex,\n  skinning_pars_vertex: skinning_pars_vertex,\n  skinning_vertex: skinning_vertex,\n  skinnormal_vertex: skinnormal_vertex,\n  specularmap_fragment: specularmap_fragment,\n  specularmap_pars_fragment: specularmap_pars_fragment,\n  tonemapping_fragment: tonemapping_fragment,\n  tonemapping_pars_fragment: tonemapping_pars_fragment,\n  uv_pars_fragment: uv_pars_fragment,\n  uv_pars_vertex: uv_pars_vertex,\n  uv_vertex: uv_vertex,\n  uv2_pars_fragment: uv2_pars_fragment,\n  uv2_pars_vertex: uv2_pars_vertex,\n  uv2_vertex: uv2_vertex,\n  worldpos_vertex: worldpos_vertex,\n  cube_frag: cube_frag,\n  cube_vert: cube_vert,\n  depth_frag: depth_frag,\n  depth_vert: depth_vert,\n  distanceRGBA_frag: distanceRGBA_frag,\n  distanceRGBA_vert: distanceRGBA_vert,\n  equirect_frag: equirect_frag,\n  equirect_vert: equirect_vert,\n  linedashed_frag: linedashed_frag,\n  linedashed_vert: linedashed_vert,\n  meshbasic_frag: meshbasic_frag,\n  meshbasic_vert: meshbasic_vert,\n  meshlambert_frag: meshlambert_frag,\n  meshlambert_vert: meshlambert_vert,\n  meshphong_frag: meshphong_frag,\n  meshphong_vert: meshphong_vert,\n  meshphysical_frag: meshphysical_frag,\n  meshphysical_vert: meshphysical_vert,\n  normal_frag: normal_frag,\n  normal_vert: normal_vert,\n  points_frag: points_frag,\n  points_vert: points_vert,\n  shadow_frag: shadow_frag,\n  shadow_vert: shadow_vert\n};\n","/**\n * Uniforms library for shared webgl shaders\n */\nimport { Vector4 } from \"../../math/Vector4\";\nimport { Color } from \"../../math/Color\";\nimport { Vector2 } from \"../../math/Vector2\";\nexport const UniformsLib: any = {\n  common: {\n    diffuse: { value: new Color(0xeeeeee) },\n    opacity: { value: 1.0 },\n    map: { value: null },\n    offsetRepeat: { value: new Vector4(0, 0, 1, 1) },\n    specularMap: { value: null },\n    alphaMap: { value: null },\n    envMap: { value: null },\n    flipEnvMap: { value: - 1 },\n    reflectivity: { value: 1.0 },\n    refractionRatio: { value: 0.98 }\n  },\n  aomap: {\n    aoMap: { value: null },\n    aoMapIntensity: { value: 1 }\n  },\n  lightmap: {\n    lightMap: { value: null },\n    lightMapIntensity: { value: 1 }\n  },\n  emissivemap: {\n    emissiveMap: { value: null }\n  },\n  bumpmap: {\n    bumpMap: { value: null },\n    bumpScale: { value: 1 }\n  },\n  normalmap: {\n    normalMap: { value: null },\n    normalScale: { value: new Vector2(1, 1) }\n  },\n  displacementmap: {\n    displacementMap: { value: null },\n    displacementScale: { value: 1 },\n    displacementBias: { value: 0 }\n  },\n  roughnessmap: {\n    roughnessMap: { value: null }\n  },\n  metalnessmap: {\n    metalnessMap: { value: null }\n  },\n  fog: {\n    fogDensity: { value: 0.00025 },\n    fogNear: { value: 1 },\n    fogFar: { value: 2000 },\n    fogColor: { value: new Color(0xffffff) }\n  },\n  lights: {\n    ambientLightColor: { value: [] },\n    directionalLights: { value: [], properties: {\n      direction: {},\n      color: {},\n      shadow: {},\n      shadowBias: {},\n      shadowRadius: {},\n      shadowMapSize: {}\n    } },\n    directionalShadowMap: { value: [] },\n    directionalShadowMatrix: { value: [] },\n    spotLights: { value: [], properties: {\n      color: {},\n      position: {},\n      direction: {},\n      distance: {},\n      coneCos: {},\n      penumbraCos: {},\n      decay: {},\n      shadow: {},\n      shadowBias: {},\n      shadowRadius: {},\n      shadowMapSize: {}\n    } },\n    spotShadowMap: { value: [] },\n    spotShadowMatrix: { value: [] },\n    pointLights: { value: [], properties: {\n      color: {},\n      position: {},\n      decay: {},\n      distance: {},\n      shadow: {},\n      shadowBias: {},\n      shadowRadius: {},\n      shadowMapSize: {}\n    } },\n    pointShadowMap: { value: [] },\n    pointShadowMatrix: { value: [] },\n    hemisphereLights: { value: [], properties: {\n      direction: {},\n      skyColor: {},\n      groundColor: {}\n    } }\n  },\n  points: {\n    diffuse: { value: new Color(0xeeeeee) },\n    opacity: { value: 1.0 },\n    size: { value: 1.0 },\n    scale: { value: 1.0 },\n    map: { value: null },\n    offsetRepeat: { value: new Vector4(0, 0, 1, 1) }\n  }\n};\n","/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author mikael emtinger / http://gomo.se/\n */\nimport { ShaderChunk } from \"./ShaderChunk\";\nimport { UniformsUtils } from \"./UniformsUtils\";\nimport { Vector3 } from \"../../math/Vector3\";\nimport { UniformsLib } from \"./UniformsLib\";\nimport { Color } from \"../../math/Color\";\nexport const ShaderLib: any = {\n  basic: {\n    uniforms: UniformsUtils.merge([\n      UniformsLib.common,\n      UniformsLib.aomap,\n      UniformsLib.fog\n    ]),\n    vertexShader: ShaderChunk.meshbasic_vert,\n    fragmentShader: ShaderChunk.meshbasic_frag\n  },\n  lambert: {\n    uniforms: UniformsUtils.merge([\n      UniformsLib.common,\n      UniformsLib.aomap,\n      UniformsLib.lightmap,\n      UniformsLib.emissivemap,\n      UniformsLib.fog,\n      UniformsLib.lights,\n      {\n        emissive : { value: new Color(0x000000) }\n      }\n    ]),\n    vertexShader: ShaderChunk.meshlambert_vert,\n    fragmentShader: ShaderChunk.meshlambert_frag\n  },\n  phong: {\n    uniforms: UniformsUtils.merge([\n      UniformsLib.common,\n      UniformsLib.aomap,\n      UniformsLib.lightmap,\n      UniformsLib.emissivemap,\n      UniformsLib.bumpmap,\n      UniformsLib.normalmap,\n      UniformsLib.displacementmap,\n      UniformsLib.fog,\n      UniformsLib.lights,\n      {\n        emissive : { value: new Color(0x000000) },\n        specular : { value: new Color(0x111111) },\n        shininess: { value: 30 }\n      }\n    ]),\n    vertexShader: ShaderChunk.meshphong_vert,\n    fragmentShader: ShaderChunk.meshphong_frag\n  },\n  standard: {\n    uniforms: UniformsUtils.merge([\n      UniformsLib.common,\n      UniformsLib.aomap,\n      UniformsLib.lightmap,\n      UniformsLib.emissivemap,\n      UniformsLib.bumpmap,\n      UniformsLib.normalmap,\n      UniformsLib.displacementmap,\n      UniformsLib.roughnessmap,\n      UniformsLib.metalnessmap,\n      UniformsLib.fog,\n      UniformsLib.lights,\n      {\n        emissive : { value: new Color(0x000000) },\n        roughness: { value: 0.5 },\n        metalness: { value: 0 },\n        envMapIntensity : { value: 1 }, // temporary\n      }\n    ]),\n    vertexShader: ShaderChunk.meshphysical_vert,\n    fragmentShader: ShaderChunk.meshphysical_frag\n  },\n  points: {\n    uniforms: UniformsUtils.merge([\n      UniformsLib.points,\n      UniformsLib.fog\n    ]),\n    vertexShader: ShaderChunk.points_vert,\n    fragmentShader: ShaderChunk.points_frag\n  },\n  dashed: {\n    uniforms: UniformsUtils.merge([\n      UniformsLib.common,\n      UniformsLib.fog,\n      {\n        scale    : { value: 1 },\n        dashSize : { value: 1 },\n        totalSize: { value: 2 }\n      }\n    ]),\n    vertexShader: ShaderChunk.linedashed_vert,\n    fragmentShader: ShaderChunk.linedashed_frag\n  },\n  depth: {\n    uniforms: UniformsUtils.merge([\n      UniformsLib.common,\n      UniformsLib.displacementmap\n    ]),\n    vertexShader: ShaderChunk.depth_vert,\n    fragmentShader: ShaderChunk.depth_frag\n  },\n  normal: {\n    uniforms: {\n      opacity : { value: 1.0 }\n    },\n    vertexShader: ShaderChunk.normal_vert,\n    fragmentShader: ShaderChunk.normal_frag\n  },\n  /* -------------------------------------------------------------------------\n  //  Cube map shader\n   ------------------------------------------------------------------------- */\n  cube: {\n    uniforms: {\n      tCube: { value: null },\n      tFlip: { value: - 1 },\n      opacity: { value: 1.0 }\n    },\n    vertexShader: ShaderChunk.cube_vert,\n    fragmentShader: ShaderChunk.cube_frag\n  },\n  /* -------------------------------------------------------------------------\n  //  Cube map shader\n   ------------------------------------------------------------------------- */\n  equirect: {\n    uniforms: {\n      tEquirect: { value: null },\n      tFlip: { value: - 1 }\n    },\n    vertexShader: ShaderChunk.equirect_vert,\n    fragmentShader: ShaderChunk.equirect_frag\n  },\n  distanceRGBA: {\n    uniforms: {\n      lightPos: { value: new Vector3() }\n    },\n    vertexShader: ShaderChunk.distanceRGBA_vert,\n    fragmentShader: ShaderChunk.distanceRGBA_frag\n  }\n};\nShaderLib.physical = {\n  uniforms: UniformsUtils.merge([\n    ShaderLib.standard.uniforms,\n    {\n      clearCoat: { value: 0 },\n      clearCoatRoughness: { value: 0 }\n    }\n  ]),\n  vertexShader: ShaderChunk.meshphysical_vert,\n  fragmentShader: ShaderChunk.meshphysical_frag\n};\n","import { Vector2 } from \"./Vector2\";\n/**\n * @author bhouston / http://clara.io\n */\nexport class Box2 {\n  min: Vector2;\n  max: Vector2;\n  constructor(min = new Vector2(+ Infinity, + Infinity), max = new Vector2(- Infinity, - Infinity)) {\n    this.min = min;\n    this.max = max;\n  }\n  set(min: Vector2, max: Vector2): Box2 {\n    this.min.copy(min);\n    this.max.copy(max);\n    return this;\n  }\n  setFromPoints(points: Vector2[]): Box2 {\n    this.makeEmpty();\n    for (let i = 0, il = points.length; i < il; i ++) {\n      this.expandByPoint(points[i]);\n    }\n    return this;\n  }\n  private static _setFromCenterAndSize_v1 = new Vector2();\n  setFromCenterAndSize(center: Vector2, size: Vector2): Box2 {\n    const v1 = Box2._setFromCenterAndSize_v1;\n    const halfSize = v1.copy(size).multiplyScalar(0.5);\n    this.min.copy(center).sub(halfSize);\n    this.max.copy(center).add(halfSize);\n    return this;\n  }\n  clone(): Box2 {\n    return new (this.constructor as any)().copy(this);\n  }\n  copy(box: Box2): Box2 {\n    this.min.copy(box.min);\n    this.max.copy(box.max);\n    return this;\n  }\n  makeEmpty(): Box2 {\n    this.min.x = this.min.y = + Infinity;\n    this.max.x = this.max.y = - Infinity;\n    return this;\n  }\n  isEmpty(): boolean {\n    // this is a more robust check for empty than (volume <= 0) because volume can get positive with two negative axes\n    return (this.max.x < this.min.x) || (this.max.y < this.min.y);\n  }\n  getCenter(result: Vector2 = new Vector2()): Vector2 {\n    return this.isEmpty() ? result.set(0, 0) : result.addVectors(this.min, this.max).multiplyScalar(0.5);\n  }\n  getSize(result: Vector2 = new Vector2()): Vector2 {\n    return this.isEmpty() ? result.set(0, 0) : result.subVectors(this.max, this.min);\n  }\n  expandByPoint(point: Vector2): Box2 {\n    this.min.min(point);\n    this.max.max(point);\n    return this;\n  }\n  expandByVector(vector: Vector2): Box2 {\n    this.min.sub(vector);\n    this.max.add(vector);\n    return this;\n  }\n  expandByScalar(scalar: number): Box2 {\n    this.min.addScalar(- scalar);\n    this.max.addScalar(scalar);\n    return this;\n  }\n  containsPoint(point: Vector2): boolean {\n    if (point.x < this.min.x || point.x > this.max.x ||\n         point.y < this.min.y || point.y > this.max.y) {\n      return false;\n    }\n    return true;\n  }\n  containsBox(box: Box2): boolean {\n    if ((this.min.x <= box.min.x) && (box.max.x <= this.max.x) &&\n      (this.min.y <= box.min.y) && (box.max.y <= this.max.y)) {\n      return true;\n    }\n    return false;\n  }\n  getParameter(point: Vector2, result: Vector2 = new Vector2()): Vector2 {\n    // This can potentially have a divide by zero if the box\n    // has a size dimension of 0.\n    return result.set(\n      (point.x - this.min.x) / (this.max.x - this.min.x),\n      (point.y - this.min.y) / (this.max.y - this.min.y)\n    );\n  }\n  intersectsBox(box: Box2): boolean {\n    // using 6 splitting planes to rule out intersections.\n    if (box.max.x < this.min.x || box.min.x > this.max.x ||\n      box.max.y < this.min.y || box.min.y > this.max.y) {\n      return false;\n    }\n    return true;\n  }\n  clampPoint(point: Vector2, result: Vector2 = new Vector2()): Vector2 {\n    return result.copy(point).clamp(this.min, this.max);\n  }\n  private static _distanceToPoint_v1 = new Vector2();\n  distanceToPoint(point: Vector2): number {\n    const v1 = Box2._distanceToPoint_v1;\n    const clampedPoint = v1.copy(point).clamp(this.min, this.max);\n    return clampedPoint.sub(point).length();\n  }\n  intersect(box: Box2): Box2 {\n    this.min.max(box.min);\n    this.max.min(box.max);\n    return this;\n  }\n  union(box: Box2): Box2 {\n    this.min.min(box.min);\n    this.max.max(box.max);\n    return this;\n  }\n  translate(offset: Vector2): Box2 {\n    this.min.add(offset);\n    this.max.add(offset);\n    return this;\n  }\n  equals(box: Box2): boolean {\n    return box.min.equals(this.min) && box.max.equals(this.max);\n  }\n  empty(): boolean {\n    console.warn(\"THREE.Box2: .empty() has been renamed to .isEmpty().\");\n    return this.isEmpty();\n  }\n  center(optionalTarget: Vector2 = new Vector2()): Vector2 {\n    console.warn(\"THREE.Box2: .center() has been renamed to .getCenter().\");\n    return this.getCenter(optionalTarget);\n  }\n  size(optionalTarget: Vector2 = new Vector2()): Vector2 {\n    console.warn(\"THREE.Box2: .size() has been renamed to .getSize().\");\n    return this.getSize(optionalTarget);\n  }\n  isIntersectionBox(box: Box2): boolean {\n    console.warn(\"THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().\");\n    return this.intersectsBox(box);\n  }\n};\n","import { Box2 } from \"../../../math/Box2\";\nimport { Vector2 } from \"../../../math/Vector2\";\nimport { Vector3 } from \"../../../math/Vector3\";\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n */\nexport class LensFlarePlugin {\n  renderer: any;\n  flares: any;\n  vertexBuffer: any;\n  elementBuffer: any;\n  shader: any;\n  program: any;\n  attributes: any;\n  uniforms: any;\n  tempTexture: any;\n  occlusionTexture: any;\n  constructor(renderer: any, flares: any) {\n    this.renderer = renderer;\n    this.flares = flares;\n  }\n  init(): void {\n    const gl: WebGLRenderingContext = this.renderer.context;\n    const state = this.renderer.state;\n    const vertices = new Float32Array([\n      - 1, - 1,  0, 0,\n       1, - 1,  1, 0,\n       1,  1,  1, 1,\n      - 1,  1,  0, 1\n    ]);\n    const faces = new Uint16Array([\n      0, 1, 2,\n      0, 2, 3\n    ]);\n    // buffers\n    const vertexBuffer = this.vertexBuffer = gl.createBuffer();\n    const elementBuffer = this.elementBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW);\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, elementBuffer);\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, faces, gl.STATIC_DRAW);\n    // textures\n    const tempTexture = this.tempTexture = gl.createTexture();\n    const occlusionTexture = this.occlusionTexture = gl.createTexture();\n    state.bindTexture(gl.TEXTURE_2D, tempTexture);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGB, 16, 16, 0, gl.RGB, gl.UNSIGNED_BYTE, null);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    state.bindTexture(gl.TEXTURE_2D, occlusionTexture);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, 16, 16, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    const shader = this.shader = {\n      vertexShader: [\n        \"uniform lowp int renderType;\",\n        \"uniform vec3 screenPosition;\",\n        \"uniform vec2 scale;\",\n        \"uniform float rotation;\",\n        \"uniform sampler2D occlusionMap;\",\n        \"attribute vec2 position;\",\n        \"attribute vec2 uv;\",\n        \"varying vec2 vUV;\",\n        \"varying float vVisibility;\",\n        \"void main() {\",\n          \"vUV = uv;\",\n          \"vec2 pos = position;\",\n          \"if (renderType == 2) {\",\n            \"vec4 visibility = texture2D(occlusionMap, vec2(0.1, 0.1));\",\n            \"visibility += texture2D(occlusionMap, vec2(0.5, 0.1));\",\n            \"visibility += texture2D(occlusionMap, vec2(0.9, 0.1));\",\n            \"visibility += texture2D(occlusionMap, vec2(0.9, 0.5));\",\n            \"visibility += texture2D(occlusionMap, vec2(0.9, 0.9));\",\n            \"visibility += texture2D(occlusionMap, vec2(0.5, 0.9));\",\n            \"visibility += texture2D(occlusionMap, vec2(0.1, 0.9));\",\n            \"visibility += texture2D(occlusionMap, vec2(0.1, 0.5));\",\n            \"visibility += texture2D(occlusionMap, vec2(0.5, 0.5));\",\n            \"vVisibility =        visibility.r / 9.0;\",\n            \"vVisibility *= 1.0 - visibility.g / 9.0;\",\n            \"vVisibility *=       visibility.b / 9.0;\",\n            \"vVisibility *= 1.0 - visibility.a / 9.0;\",\n            \"pos.x = cos(rotation) * position.x - sin(rotation) * position.y;\",\n            \"pos.y = sin(rotation) * position.x + cos(rotation) * position.y;\",\n          \"}\",\n          \"gl_Position = vec4((pos * scale + screenPosition.xy).xy, screenPosition.z, 1.0);\",\n        \"}\"\n      ].join(\"\\n\"),\n      fragmentShader: [\n        \"uniform lowp int renderType;\",\n        \"uniform sampler2D map;\",\n        \"uniform float opacity;\",\n        \"uniform vec3 color;\",\n        \"varying vec2 vUV;\",\n        \"varying float vVisibility;\",\n        \"void main() {\",\n          // pink square\n          \"if (renderType == 0) {\",\n            \"gl_FragColor = vec4(1.0, 0.0, 1.0, 0.0);\",\n          // restore\n          \"} else if (renderType == 1) {\",\n            \"gl_FragColor = texture2D(map, vUV);\",\n          // flare\n          \"} else {\",\n            \"vec4 texture = texture2D(map, vUV);\",\n            \"texture.a *= opacity * vVisibility;\",\n            \"gl_FragColor = texture;\",\n            \"gl_FragColor.rgb *= color;\",\n          \"}\",\n        \"}\"\n      ].join(\"\\n\")\n    };\n    const program = this.program = this.createProgram(shader);\n    this.attributes = {\n      vertex: gl.getAttribLocation (program, \"position\"),\n      uv:     gl.getAttribLocation (program, \"uv\")\n    };\n    this.uniforms = {\n      renderType:     gl.getUniformLocation(program, \"renderType\"),\n      map:            gl.getUniformLocation(program, \"map\"),\n      occlusionMap:   gl.getUniformLocation(program, \"occlusionMap\"),\n      opacity:        gl.getUniformLocation(program, \"opacity\"),\n      color:          gl.getUniformLocation(program, \"color\"),\n      scale:          gl.getUniformLocation(program, \"scale\"),\n      rotation:       gl.getUniformLocation(program, \"rotation\"),\n      screenPosition: gl.getUniformLocation(program, \"screenPosition\")\n    };\n  }\n  /*\n   * Render lens flares\n   * Method: renders 16x16 0xff00ff-colored points scattered over the light source area,\n   *         reads these back and calculates occlusion.\n   */\n  render(scene: any, camera: any, viewport: any): void {\n    const gl: WebGLRenderingContext = this.renderer.context;\n    const state = this.renderer.state;\n    const flares = this.flares;\n    if (flares.length === 0) return;\n    const tempPosition = new Vector3();\n    const invAspect = viewport.w / viewport.z;\n    const halfViewportWidth = viewport.z * 0.5;\n    const halfViewportHeight = viewport.w * 0.5;\n    let size = 16 / viewport.w;\n    const scale = new Vector2(size * invAspect, size);\n    const screenPosition = new Vector3(1, 1, 0);\n    const screenPositionPixels = new Vector2(1, 1);\n    const validArea = new Box2();\n    validArea.min.set(viewport.x, viewport.y);\n    validArea.max.set(viewport.x + (viewport.z - 16), viewport.y + (viewport.w - 16));\n    if (this.program === undefined) {\n      this.init();\n    }\n    const uniforms = this.uniforms;\n    const attributes = this.attributes;\n    gl.useProgram(this.program);\n    state.initAttributes();\n    state.enableAttribute(attributes.vertex);\n    state.enableAttribute(attributes.uv);\n    state.disableUnusedAttributes();\n    // loop through all lens flares to update their occlusion and positions\n    // setup gl and common used attribs/uniforms\n    gl.uniform1i(uniforms.occlusionMap, 0);\n    gl.uniform1i(uniforms.map, 1);\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer);\n    gl.vertexAttribPointer(attributes.vertex, 2, gl.FLOAT, false, 2 * 8, 0);\n    gl.vertexAttribPointer(attributes.uv, 2, gl.FLOAT, false, 2 * 8, 8);\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.elementBuffer);\n    state.disable(gl.CULL_FACE);\n    state.setDepthWrite(false);\n    for (let i = 0, l = flares.length; i < l; i ++) {\n      size = 16 / viewport.w;\n      scale.set(size * invAspect, size);\n      // calc object screen position\n      const flare = flares[i];\n      tempPosition.set(flare.matrixWorld.elements[12], flare.matrixWorld.elements[13], flare.matrixWorld.elements[14]);\n      tempPosition.applyMatrix4(camera.matrixWorldInverse);\n      tempPosition.applyProjection(camera.projectionMatrix);\n      // setup arrays for gl programs\n      screenPosition.copy(tempPosition);\n      // horizontal and vertical coordinate of the lower left corner of the pixels to copy\n      screenPositionPixels.x = viewport.x + (screenPosition.x * halfViewportWidth) + halfViewportWidth - 8;\n      screenPositionPixels.y = viewport.y + (screenPosition.y * halfViewportHeight) + halfViewportHeight - 8;\n      // screen cull\n      if (validArea.containsPoint(screenPositionPixels) === true) {\n        // save current RGB to temp texture\n        state.activeTexture(gl.TEXTURE0);\n        state.bindTexture(gl.TEXTURE_2D, null);\n        state.activeTexture(gl.TEXTURE1);\n        state.bindTexture(gl.TEXTURE_2D, this.tempTexture);\n        gl.copyTexImage2D(gl.TEXTURE_2D, 0, gl.RGB, screenPositionPixels.x, screenPositionPixels.y, 16, 16, 0);\n        // render pink quad\n        gl.uniform1i(uniforms.renderType, 0);\n        gl.uniform2f(uniforms.scale, scale.x, scale.y);\n        gl.uniform3f(uniforms.screenPosition, screenPosition.x, screenPosition.y, screenPosition.z);\n        state.disable(gl.BLEND);\n        state.enable(gl.DEPTH_TEST);\n        gl.drawElements(gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0);\n        // copy result to occlusionMap\n        state.activeTexture(gl.TEXTURE0);\n        state.bindTexture(gl.TEXTURE_2D, this.occlusionTexture);\n        gl.copyTexImage2D(gl.TEXTURE_2D, 0, gl.RGBA, screenPositionPixels.x, screenPositionPixels.y, 16, 16, 0);\n        // restore graphics\n        gl.uniform1i(uniforms.renderType, 1);\n        state.disable(gl.DEPTH_TEST);\n        state.activeTexture(gl.TEXTURE1);\n        state.bindTexture(gl.TEXTURE_2D, this.tempTexture);\n        gl.drawElements(gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0);\n        // update object positions\n        flare.positionScreen.copy(screenPosition);\n        if (flare.customUpdateCallback) {\n          flare.customUpdateCallback(flare);\n        } else {\n          flare.updateLensFlares();\n        }\n        // render flares\n        gl.uniform1i(uniforms.renderType, 2);\n        state.enable(gl.BLEND);\n        for (let j = 0, jl = flare.lensFlares.length; j < jl; j ++) {\n          const sprite = flare.lensFlares[j];\n          if (sprite.opacity > 0.001 && sprite.scale > 0.001) {\n            screenPosition.x = sprite.x;\n            screenPosition.y = sprite.y;\n            screenPosition.z = sprite.z;\n            size = sprite.size * sprite.scale / viewport.w;\n            scale.x = size * invAspect;\n            scale.y = size;\n            gl.uniform3f(uniforms.screenPosition, screenPosition.x, screenPosition.y, screenPosition.z);\n            gl.uniform2f(uniforms.scale, scale.x, scale.y);\n            gl.uniform1f(uniforms.rotation, sprite.rotation);\n            gl.uniform1f(uniforms.opacity, sprite.opacity);\n            gl.uniform3f(uniforms.color, sprite.color.r, sprite.color.g, sprite.color.b);\n            state.setBlending(sprite.blending, sprite.blendEquation, sprite.blendSrc, sprite.blendDst);\n            this.renderer.setTexture2D(sprite.texture, 1);\n            gl.drawElements(gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0);\n          }\n        }\n      }\n    }\n    // restore gl\n    state.enable(gl.CULL_FACE);\n    state.enable(gl.DEPTH_TEST);\n    state.setDepthWrite(true);\n    this.renderer.resetGLState();\n  }\n  createProgram(shader: any): WebGLProgram {\n    const gl: WebGLRenderingContext = this.renderer.context;\n    const program = gl.createProgram();\n    const fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n    const vertexShader = gl.createShader(gl.VERTEX_SHADER);\n    const prefix = \"precision \" + this.renderer.getPrecision() + \" float;\\n\";\n    gl.shaderSource(fragmentShader, prefix + shader.fragmentShader);\n    gl.shaderSource(vertexShader, prefix + shader.vertexShader);\n    gl.compileShader(fragmentShader);\n    gl.compileShader(vertexShader);\n    gl.attachShader(program, fragmentShader);\n    gl.attachShader(program, vertexShader);\n    gl.linkProgram(program);\n    return program;\n  }\n}\n","import { Color } from \"../math/Color\";\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\nexport class Fog {\n  name: string = '';\n  color: Color;\n  near: number;\n  far: number;\n  readonly isFog: boolean = true;\n  constructor(color: number, near: number = 1, far: number = 1000) {\n    this.color = new Color(color);\n    this.near = near;\n    this.far = far;\n  }\n  clone(): this {\n    return new (this.constructor as any)(this.color.getHex(), this.near, this.far);\n  }\n  toJSON(meta: any): any {\n    return {\n      type: 'Fog',\n      color: this.color.getHex(),\n      near: this.near,\n      far: this.far\n    };\n  }\n}\n","import { Color } from \"../math/Color\";\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\nexport class FogExp2 {\n  name: string = '';\n  color: Color;\n  density: number;\n  readonly isFogExp2: boolean = true;\n  constructor(color: number, density: number = 0.00025) {\n    this.color = new Color(color);\n    this.density = density;\n  }\n  clone(): this {\n    return new (this.constructor as any)(this.color.getHex(), this.density);\n  }\n  toJSON(meta: any): any {\n    return {\n      type: 'FogExp2',\n      color: this.color.getHex(),\n      density: this.density\n    };\n  }\n}\n","import { Texture } from \"../../../textures/Texture\";\nimport { Vector3 } from \"../../../math/Vector3\";\nimport { Quaternion } from \"../../../math/Quaternion\";\nimport { Fog } from \"../../../scenes/Fog\";\nimport { FogExp2 } from \"../../../scenes/FogExp2\";\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n */\nexport class SpritePlugin {\n  renderer: any;\n  sprites: any;\n  vertexBuffer: any;\n  elementBuffer: any;\n  program: any;\n  attributes: any;\n  uniforms: any;\n  texture: any;\n  constructor(renderer: any, sprites: any) {\n    this.renderer = renderer;\n    this.sprites = sprites;\n  }\n  init() {\n    const renderer = this.renderer;\n    const gl: WebGLRenderingContext = renderer.context;\n    const vertices = new Float32Array([\n      - 0.5, - 0.5,  0, 0,\n        0.5, - 0.5,  1, 0,\n        0.5,   0.5,  1, 1,\n      - 0.5,   0.5,  0, 1\n    ]);\n    const faces = new Uint16Array([\n      0, 1, 2,\n      0, 2, 3\n    ]);\n    const vertexBuffer = this.vertexBuffer = gl.createBuffer();\n    const elementBuffer = this.elementBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW);\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, elementBuffer);\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, faces, gl.STATIC_DRAW);\n    const program = this.program = this.createProgram();\n    this.attributes = {\n      position:      gl.getAttribLocation (program, 'position'),\n      uv:          gl.getAttribLocation (program, 'uv')\n    };\n    this.uniforms = {\n      uvOffset:      gl.getUniformLocation(program, 'uvOffset'),\n      uvScale:      gl.getUniformLocation(program, 'uvScale'),\n      rotation:      gl.getUniformLocation(program, 'rotation'),\n      scale:        gl.getUniformLocation(program, 'scale'),\n      color:        gl.getUniformLocation(program, 'color'),\n      map:        gl.getUniformLocation(program, 'map'),\n      opacity:      gl.getUniformLocation(program, 'opacity'),\n      modelViewMatrix:   gl.getUniformLocation(program, 'modelViewMatrix'),\n      projectionMatrix:  gl.getUniformLocation(program, 'projectionMatrix'),\n      fogType:      gl.getUniformLocation(program, 'fogType'),\n      fogDensity:      gl.getUniformLocation(program, 'fogDensity'),\n      fogNear:      gl.getUniformLocation(program, 'fogNear'),\n      fogFar:        gl.getUniformLocation(program, 'fogFar'),\n      fogColor:      gl.getUniformLocation(program, 'fogColor'),\n      alphaTest:      gl.getUniformLocation(program, 'alphaTest')\n    };\n    const canvas = <HTMLCanvasElement> document.createElementNS('http://www.w3.org/1999/xhtml', 'canvas');\n    canvas.width = 8;\n    canvas.height = 8;\n    const context = canvas.getContext('2d');\n    context.fillStyle = 'white';\n    context.fillRect(0, 0, 8, 8);\n    const texture = this.texture = new Texture(canvas);\n    texture.needsUpdate = true;\n  }\n  render(scene: any, camera: any) {\n    // decompose matrixWorld\n    const spritePosition = new Vector3();\n    const spriteRotation = new Quaternion();\n    const spriteScale = new Vector3();\n    const renderer = this.renderer;\n    const sprites = this.sprites;\n    const gl: WebGLRenderingContext = renderer.context;\n    const state = renderer.state;\n    if (sprites.length === 0) return;\n    // setup gl\n    if (this.program === undefined) {\n      this.init();\n    }\n    const program = this.program;\n    const attributes = this.attributes;\n    const uniforms = this.uniforms;\n    gl.useProgram(program);\n    state.initAttributes();\n    state.enableAttribute(attributes.position);\n    state.enableAttribute(attributes.uv);\n    state.disableUnusedAttributes();\n    state.disable(gl.CULL_FACE);\n    state.enable(gl.BLEND);\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer);\n    gl.vertexAttribPointer(attributes.position, 2, gl.FLOAT, false, 2 * 8, 0);\n    gl.vertexAttribPointer(attributes.uv, 2, gl.FLOAT, false, 2 * 8, 8);\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.elementBuffer);\n    gl.uniformMatrix4fv(uniforms.projectionMatrix, false, camera.projectionMatrix.elements);\n    state.activeTexture(gl.TEXTURE0);\n    gl.uniform1i(uniforms.map, 0);\n    let oldFogType = 0;\n    let sceneFogType = 0;\n    const fog = scene.fog;\n    if (fog) {\n      gl.uniform3f(uniforms.fogColor, fog.color.r, fog.color.g, fog.color.b);\n      if ((fog && fog instanceof Fog)) {\n        gl.uniform1f(uniforms.fogNear, fog.near);\n        gl.uniform1f(uniforms.fogFar, fog.far);\n        gl.uniform1i(uniforms.fogType, 1);\n        oldFogType = 1;\n        sceneFogType = 1;\n      } else if ((fog && fog instanceof FogExp2)) {\n        gl.uniform1f(uniforms.fogDensity, fog.density);\n        gl.uniform1i(uniforms.fogType, 2);\n        oldFogType = 2;\n        sceneFogType = 2;\n      }\n    } else {\n      gl.uniform1i(uniforms.fogType, 0);\n      oldFogType = 0;\n      sceneFogType = 0;\n    }\n    // update positions and sort\n    for (let i = 0, l = sprites.length; i < l; i ++) {\n      const sprite = sprites[i];\n      sprite.modelViewMatrix.multiplyMatrices(camera.matrixWorldInverse, sprite.matrixWorld);\n      sprite.z = - sprite.modelViewMatrix.elements[14];\n    }\n    sprites.sort(SpritePlugin.painterSortStable);\n    // render all sprites\n    const scale: number[] = [];\n    for (let i = 0, l = sprites.length; i < l; i ++) {\n      const sprite = sprites[i];\n      const material = sprite.material;\n      if (material.visible === false) continue;\n      gl.uniform1f(uniforms.alphaTest, material.alphaTest);\n      gl.uniformMatrix4fv(uniforms.modelViewMatrix, false, sprite.modelViewMatrix.elements);\n      sprite.matrixWorld.decompose(spritePosition, spriteRotation, spriteScale);\n      scale[0] = spriteScale.x;\n      scale[1] = spriteScale.y;\n      let fogType = 0;\n      if (scene.fog && material.fog) {\n        fogType = sceneFogType;\n      }\n      if (oldFogType !== fogType) {\n        gl.uniform1i(uniforms.fogType, fogType);\n        oldFogType = fogType;\n      }\n      if (material.map !== null) {\n        gl.uniform2f(uniforms.uvOffset, material.map.offset.x, material.map.offset.y);\n        gl.uniform2f(uniforms.uvScale, material.map.repeat.x, material.map.repeat.y);\n      } else {\n        gl.uniform2f(uniforms.uvOffset, 0, 0);\n        gl.uniform2f(uniforms.uvScale, 1, 1);\n      }\n      gl.uniform1f(uniforms.opacity, material.opacity);\n      gl.uniform3f(uniforms.color, material.color.r, material.color.g, material.color.b);\n      gl.uniform1f(uniforms.rotation, material.rotation);\n      gl.uniform2fv(uniforms.scale, scale);\n      state.setBlending(material.blending, material.blendEquation, material.blendSrc, material.blendDst);\n      state.setDepthTest(material.depthTest);\n      state.setDepthWrite(material.depthWrite);\n      if (material.map) {\n        renderer.setTexture2D(material.map, 0);\n      } else {\n        renderer.setTexture2D(this.texture, 0);\n      }\n      gl.drawElements(gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0);\n    }\n    // restore gl\n    state.enable(gl.CULL_FACE);\n    renderer.resetGLState();\n  }\n  createProgram() {\n    const renderer = this.renderer;\n    const gl: WebGLRenderingContext = renderer.context;\n    const program = gl.createProgram();\n    const vertexShader = gl.createShader(gl.VERTEX_SHADER);\n    const fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(vertexShader, [\n      'precision ' + renderer.getPrecision() + ' float;',\n      'uniform mat4 modelViewMatrix;',\n      'uniform mat4 projectionMatrix;',\n      'uniform float rotation;',\n      'uniform vec2 scale;',\n      'uniform vec2 uvOffset;',\n      'uniform vec2 uvScale;',\n      'attribute vec2 position;',\n      'attribute vec2 uv;',\n      'varying vec2 vUV;',\n      'void main() {',\n        'vUV = uvOffset + uv * uvScale;',\n        'vec2 alignedPosition = position * scale;',\n        'vec2 rotatedPosition;',\n        'rotatedPosition.x = cos(rotation) * alignedPosition.x - sin(rotation) * alignedPosition.y;',\n        'rotatedPosition.y = sin(rotation) * alignedPosition.x + cos(rotation) * alignedPosition.y;',\n        'vec4 finalPosition;',\n        'finalPosition = modelViewMatrix * vec4(0.0, 0.0, 0.0, 1.0);',\n        'finalPosition.xy += rotatedPosition;',\n        'finalPosition = projectionMatrix * finalPosition;',\n        'gl_Position = finalPosition;',\n      '}'\n    ].join('\\n'));\n    gl.shaderSource(fragmentShader, [\n      'precision ' + renderer.getPrecision() + ' float;',\n      'uniform vec3 color;',\n      'uniform sampler2D map;',\n      'uniform float opacity;',\n      'uniform int fogType;',\n      'uniform vec3 fogColor;',\n      'uniform float fogDensity;',\n      'uniform float fogNear;',\n      'uniform float fogFar;',\n      'uniform float alphaTest;',\n      'varying vec2 vUV;',\n      'void main() {',\n        'vec4 texture = texture2D(map, vUV);',\n        'if (texture.a < alphaTest) discard;',\n        'gl_FragColor = vec4(color * texture.xyz, texture.a * opacity);',\n        'if (fogType > 0) {',\n          'float depth = gl_FragCoord.z / gl_FragCoord.w;',\n          'float fogFactor = 0.0;',\n          'if (fogType == 1) {',\n            'fogFactor = smoothstep(fogNear, fogFar, depth);',\n          '} else {',\n            'const float LOG2 = 1.442695;',\n            'fogFactor = exp2(- fogDensity * fogDensity * depth * depth * LOG2);',\n            'fogFactor = 1.0 - clamp(fogFactor, 0.0, 1.0);',\n          '}',\n          'gl_FragColor = mix(gl_FragColor, vec4(fogColor, gl_FragColor.w), fogFactor);',\n        '}',\n      '}'\n    ].join('\\n'));\n    gl.compileShader(vertexShader);\n    gl.compileShader(fragmentShader);\n    gl.attachShader(program, vertexShader);\n    gl.attachShader(program, fragmentShader);\n    gl.linkProgram(program);\n    return program;\n  }\n  static painterSortStable(a: any, b: any) {\n    if (a.renderOrder !== b.renderOrder) {\n      return a.renderOrder - b.renderOrder;\n    } else if (a.z !== b.z) {\n      return b.z - a.z;\n    } else {\n      return b.id - a.id;\n    }\n  }\n}\n","import { EventDispatcher } from \"../core/EventDispatcher\";\nimport { ColorsMode, SideMode, ShadingMode, DepthFunction, BlendingEquation, BlendingFactor } from \"../constants\";\nimport { BlendingMode } from \"../constants\";\nimport { Color } from \"../math/Color\";\nimport { _Math } from \"../math/Math\";\nimport { Vector3 } from \"../math/Vector3\";\nimport { Plane } from \"../math/Plane\";\nimport { Texture } from \"../textures/Texture\";\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\nexport interface MaterialParameters {\n  fog?: boolean;\n  lights?: boolean;\n  blending?: BlendingMode;\n  side?: SideMode;\n  shading?: ShadingMode;\n  vertexColors?: ColorsMode;\n  opacity?: number;\n  transparent?: boolean;\n  blendSrc?: BlendingFactor;\n  blendDst?: BlendingFactor;\n  blendEquation?: BlendingEquation;\n  blendSrcAlpha?: BlendingFactor;\n  blendDstAlpha?: BlendingFactor;\n  blendEquationAlpha?: BlendingEquation;\n  depthFunc?: DepthFunction;\n  depthTest?: boolean;\n  depthWrite?: boolean;\n  clipping?: boolean;\n  clippingPlanes?: Plane[];\n  clipIntersection?: boolean;\n  clipShadows?: boolean;\n  colorWrite?: boolean;\n  precision?: string;\n  polygonOffset?: boolean;\n  polygonOffsetFactor?: number;\n  polygonOffsetUnits?: number;\n  alphaTest?: number;\n  premultipliedAlpha?: boolean;\n  overdraw?: number;\n  visible?: boolean;\n}\nexport class Material extends EventDispatcher {\n  id: number = MaterialIdCount();\n  uuid: string = _Math.generateUUID();\n  name: string = '';\n  type: string = 'Material';\n  fog: boolean = true;\n  lights: boolean = true;\n  blending: BlendingMode = BlendingMode.Normal;\n  side: SideMode = SideMode.Front;\n  shading: ShadingMode = ShadingMode.Smooth; // THREE.ShadingMode.Flat, THREE.ShadingMode.Smooth\n  vertexColors: ColorsMode = ColorsMode.None; // THREE.ColorsMode.No, THREE.ColorsMode.Vertex, THREE.ColorsMode.Face\n  _opacity: number = 1;\n  transparent: boolean = false;\n  blendSrc: BlendingFactor = BlendingFactor.SrcAlpha;\n  blendDst: BlendingFactor = BlendingFactor.OneMinusSrcAlpha;\n  blendEquation: BlendingEquation = BlendingEquation.Add;\n  blendSrcAlpha: BlendingFactor = null;\n  blendDstAlpha: BlendingFactor = null;\n  blendEquationAlpha: BlendingEquation = null;\n  depthFunc: DepthFunction = DepthFunction.LessEqual;\n  depthTest: boolean = true;\n  depthWrite: boolean = true;\n  clipping: boolean = false;\n  clippingPlanes: Plane[] = null;\n  clipIntersection: boolean = false;\n  clipShadows: boolean = false;\n  colorWrite: boolean = true;\n  precision: string = null; // override the renderer's default precision for this material\n  polygonOffset: boolean = false;\n  polygonOffsetFactor: number = 0;\n  polygonOffsetUnits: number = 0;\n  alphaTest: number = 0;\n  premultipliedAlpha: boolean = false;\n  overdraw: number = 0; // Overdrawn pixels (typically between 0 and 1) for fixing antialiasing gaps in CanvasRenderer\n  visible: boolean = true;\n  _needsUpdate: boolean = true;\n  // {\n  color: any;\n  roughness: any;\n  metalness: any;\n  emissive: any;\n  specular: any;\n  map: any;\n  shininess: any;\n  alphaMap: any;\n  lightMap: any;\n  bumpMap: any;\n  bumpScale: any;\n  normalMap: any;\n  normalScale: any;\n  displacementMap: any;\n  displacementScale: any;\n  displacementBias: any;\n  roughnessMap: any;\n  metalnessMap: any;\n  emissiveMap: any;\n  specularMapl: any;\n  envMap: any;\n  specularMap: any;\n  reflectivity: any;\n  size: any;\n  sizeAttenuation: any;\n  wireframe: any;\n  wireframeLinewidth: any;\n  wireframeLinecap: any;\n  wireframeLinejoin: any;\n  skinning: any;\n  morphTargets: any;\n  materials: any;\n  defaultAttributeValues: any;\n  linewidth: any;\n  morphNormals: any;\n  program: any;\n  uniforms: any;\n  morphTransparency: any;\n  // }\n  readonly isMaterial: boolean = true;\n  readonly isMultiMaterial: boolean = false;\n  constructor() {\n    super();\n  }\n  get opacity(): number {\n    return this._opacity;\n  }\n  set opacity(value: number) {\n    this._opacity = value;\n  }\n  get needsUpdate(): boolean {\n    return this._needsUpdate;\n  }\n  set needsUpdate(value: boolean) {\n    if (value === true) this.update();\n    this._needsUpdate = value;\n  }\n  setValues(values: MaterialParameters): void {\n    if (values === undefined) return;\n    for (let key in values) {\n      let newValue = values[key];\n      if (newValue === undefined) {\n        console.warn(\"THREE.Material: '\" + key + \"' parameter is undefined.\");\n        continue;\n      }\n      let currentValue = this[key];\n      if (currentValue === undefined) {\n        console.warn(\"THREE.\" + this.type + \": '\" + key + \"' is not a property of this material.\");\n        continue;\n      }\n      if ((currentValue && currentValue instanceof Color)) {\n        currentValue.set(newValue);\n      } else if ((currentValue && currentValue instanceof Vector3) && (newValue && newValue instanceof Vector3)) {\n        currentValue.copy(newValue);\n      } else if (key === 'overdraw') {\n        // ensure overdraw is backwards-compatible with legacy boolean type\n        this[key] = Number(newValue);\n      } else {\n        this[key] = newValue;\n      }\n    }\n  }\n  toJSON(meta: any): any {\n    let isRoot = meta === undefined;\n    if (isRoot) {\n      meta = {\n        textures: {},\n        images: {}\n      };\n    }\n    let data: any = {\n      metadata: {\n        version: 4.4,\n        type: 'Material',\n        generator: 'Material.toJSON'\n      }\n    };\n    // standard Material serialization\n    data.uuid = this.uuid;\n    data.type = this.type;\n    if (this.name !== '') data.name = this.name;\n    if ((this.color && this.color instanceof Color)) data.color = this.color.getHex();\n    if (this.roughness !== undefined) data.roughness = this.roughness;\n    if (this.metalness !== undefined) data.metalness = this.metalness;\n    if ((this.emissive && this.emissive instanceof Color)) data.emissive = this.emissive.getHex();\n    if ((this.specular && this.specular instanceof Color)) data.specular = this.specular.getHex();\n    if (this.shininess !== undefined) data.shininess = this.shininess;\n    if ((this.map && this.map instanceof Texture)) data.map = this.map.toJSON(meta).uuid;\n    if ((this.alphaMap && this.alphaMap instanceof Texture)) data.alphaMap = this.alphaMap.toJSON(meta).uuid;\n    if ((this.lightMap && this.lightMap instanceof Texture)) data.lightMap = this.lightMap.toJSON(meta).uuid;\n    if ((this.bumpMap && this.bumpMap instanceof Texture)) {\n      data.bumpMap = this.bumpMap.toJSON(meta).uuid;\n      data.bumpScale = this.bumpScale;\n    }\n    if ((this.normalMap && this.normalMap instanceof Texture)) {\n      data.normalMap = this.normalMap.toJSON(meta).uuid;\n      data.normalScale = this.normalScale.toArray();\n    }\n    if ((this.displacementMap && this.displacementMap instanceof Texture)) {\n      data.displacementMap = this.displacementMap.toJSON(meta).uuid;\n      data.displacementScale = this.displacementScale;\n      data.displacementBias = this.displacementBias;\n    }\n    if ((this.roughnessMap && this.roughnessMap instanceof Texture)) data.roughnessMap = this.roughnessMap.toJSON(meta).uuid;\n    if ((this.metalnessMap && this.metalnessMap instanceof Texture)) data.metalnessMap = this.metalnessMap.toJSON(meta).uuid;\n    if ((this.emissiveMap && this.emissiveMap instanceof Texture)) data.emissiveMap = this.emissiveMap.toJSON(meta).uuid;\n    if ((this.specularMap && this.specularMap instanceof Texture)) data.specularMap = this.specularMap.toJSON(meta).uuid;\n    if ((this.envMap && this.envMap instanceof Texture)) {\n      data.envMap = this.envMap.toJSON(meta).uuid;\n      data.reflectivity = this.reflectivity; // Scale behind envMap\n    }\n    if (this.size !== undefined) data.size = this.size;\n    if (this.sizeAttenuation !== undefined) data.sizeAttenuation = this.sizeAttenuation;\n    if (this.blending !== BlendingMode.Normal) data.blending = this.blending;\n    if (this.shading !== ShadingMode.Smooth) data.shading = this.shading;\n    if (this.side !== SideMode.Front) data.side = this.side;\n    if (this.vertexColors !== ColorsMode.None) data.vertexColors = this.vertexColors;\n    if (this.opacity < 1) data.opacity = this.opacity;\n    if (this.transparent === true) data.transparent = this.transparent;\n    data.depthFunc = this.depthFunc;\n    data.depthTest = this.depthTest;\n    data.depthWrite = this.depthWrite;\n    if (this.alphaTest > 0) data.alphaTest = this.alphaTest;\n    if (this.premultipliedAlpha === true) data.premultipliedAlpha = this.premultipliedAlpha;\n    if (this.wireframe === true) data.wireframe = this.wireframe;\n    if (this.wireframeLinewidth > 1) data.wireframeLinewidth = this.wireframeLinewidth;\n    if (this.wireframeLinecap !== 'round') data.wireframeLinecap = this.wireframeLinecap;\n    if (this.wireframeLinejoin !== 'round') data.wireframeLinejoin = this.wireframeLinejoin;\n    data.skinning = this.skinning;\n    data.morphTargets = this.morphTargets;\n    // TODO: Copied from Object3D.toJSON\n    function extractFromCache(cache: any) {\n      let values = [];\n      for (let key in cache) {\n        let data = cache[key];\n        delete data.metadata;\n        values.push(data);\n      }\n      return values;\n    }\n    if (isRoot) {\n      let textures = extractFromCache(meta.textures);\n      let images = extractFromCache(meta.images);\n      if (textures.length > 0) data.textures = textures;\n      if (images.length > 0) data.images = images;\n    }\n    return data;\n  }\n  clone(): this {\n    return new (this.constructor as any)().copy(this);\n  }\n  copy(source: this): this {\n    this.name = source.name;\n    this.fog = source.fog;\n    this.lights = source.lights;\n    this.blending = source.blending;\n    this.side = source.side;\n    this.shading = source.shading;\n    this.vertexColors = source.vertexColors;\n    this.opacity = source.opacity;\n    this.transparent = source.transparent;\n    this.blendSrc = source.blendSrc;\n    this.blendDst = source.blendDst;\n    this.blendEquation = source.blendEquation;\n    this.blendSrcAlpha = source.blendSrcAlpha;\n    this.blendDstAlpha = source.blendDstAlpha;\n    this.blendEquationAlpha = source.blendEquationAlpha;\n    this.depthFunc = source.depthFunc;\n    this.depthTest = source.depthTest;\n    this.depthWrite = source.depthWrite;\n    this.colorWrite = source.colorWrite;\n    this.precision = source.precision;\n    this.polygonOffset = source.polygonOffset;\n    this.polygonOffsetFactor = source.polygonOffsetFactor;\n    this.polygonOffsetUnits = source.polygonOffsetUnits;\n    this.alphaTest = source.alphaTest;\n    this.premultipliedAlpha = source.premultipliedAlpha;\n    this.overdraw = source.overdraw;\n    this.visible = source.visible;\n    this.clipShadows = source.clipShadows;\n    this.clipIntersection = source.clipIntersection;\n    let srcPlanes = source.clippingPlanes,\n      dstPlanes = null;\n    if (srcPlanes !== null) {\n      let n = srcPlanes.length;\n      dstPlanes = new Array(n);\n      for (let i = 0; i !== n; ++ i)\n        dstPlanes[i] = srcPlanes[i].clone();\n    }\n    this.clippingPlanes = dstPlanes;\n    return this;\n  }\n  update(): void {\n    this.dispatchEvent({ type: 'update' });\n  }\n  dispose(): void {\n    this.dispatchEvent({ type: 'dispose' });\n  }\n  get wrapAround(): boolean {\n    console.warn(\"THREE.\" + this.type + \": .wrapAround has been removed.\");\n    return false;\n  }\n  set wrapAround(value: boolean) {\n    console.warn(\"THREE.\" + this.type + \": .wrapAround has been removed.\");\n  }\n  get wrapRGB(): Color {\n    console.warn(\"THREE.\" + this.type + \": .wrapRGB has been removed.\");\n    return new Color();\n  }\n}\nlet count: number = 0;\nexport function MaterialIdCount(): number { return count++; };\n","import { Material, MaterialParameters } from \"./Material\";\nimport { UniformsUtils } from \"../renderers/shaders/UniformsUtils\";\n/**\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  defines: { \"label\" : \"value\" },\n *  uniforms: { \"parameter1\": { value: 1.0 }, \"parameter2\": { value2: 2 } },\n *\n *  fragmentShader: <string>,\n *  vertexShader: <string>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  lights: <bool>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\nexport interface ShaderMaterialParameters extends MaterialParameters {\n  defines?: any;\n  uniforms?: any;\n\n  fragmentShader?: string;\n  vertexShader?: string;\n\n  wireframe?: boolean;\n  wireframeLinewidth?: number;\n\n  lights?: boolean;\n\n  skinning?: boolean;\n  morphTargets?: boolean;\n  morphNormals?: boolean;\n}\nexport class ShaderMaterial extends Material {\n  defines: any;\n  uniforms: any;\n  vertexShader: string;\n  fragmentShader: string;\n  linewidth: number;\n  extensions: any;\n  defaultAttributeValues: any;\n  index0AttributeName: string;\n  // {\n  numSupportedMorphTargets: number;\n  numSupportedMorphNormals: number;\n  __webglShader: any;\n  faceOffset: number;\n  faceNum: number;\n  combine: number;\n  outlineParameters: any;\n  // }\n  readonly isShaderMaterial: boolean = true;\n  constructor(parameters?: ShaderMaterialParameters) {\n    super();\n    this.type = 'ShaderMaterial';\n    this.defines = {};\n    this.uniforms = {};\n    this.vertexShader = 'void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\\n}';\n    this.fragmentShader = 'void main() {\\n\\tgl_FragColor = vec4(1.0, 0.0, 0.0, 1.0);\\n}';\n    this.linewidth = 1;\n    this.wireframe = false;\n    this.wireframeLinewidth = 1;\n    this.fog = false; // set to use scene fog\n    this.lights = false; // set to use scene lights\n    this.clipping = false; // set to use user-defined clipping planes\n    this.skinning = false; // set to use skinning attribute streams\n    this.morphTargets = false; // set to use morph targets\n    this.morphNormals = false; // set to use morph normals\n    this.extensions = {\n      derivatives: false, // set to use derivatives\n      fragDepth: false, // set to use fragment depth values\n      drawBuffers: false, // set to use draw buffers\n      shaderTextureLOD: false // set to use shader texture LOD\n    };\n    // When rendered geometry doesn't include these attributes but the material does,\n    // use these default values in WebGL. This avoids errors when buffer data is missing.\n    this.defaultAttributeValues = {\n      'color': [1, 1, 1],\n      'uv': [0, 0],\n      'uv2': [0, 0]\n    };\n    this.index0AttributeName = undefined;\n    if (parameters !== undefined) {\n      this.setValues(parameters);\n    }\n  }\n  copy(source: this): this {\n    super.copy(source);\n    this.fragmentShader = source.fragmentShader;\n    this.vertexShader = source.vertexShader;\n    this.uniforms = UniformsUtils.clone(source.uniforms);\n    this.defines = source.defines;\n    this.wireframe = source.wireframe;\n    this.wireframeLinewidth = source.wireframeLinewidth;\n    this.lights = source.lights;\n    this.clipping = source.clipping;\n    this.skinning = source.skinning;\n    this.morphTargets = source.morphTargets;\n    this.morphNormals = source.morphNormals;\n    this.extensions = source.extensions;\n    return this;\n  }\n  toJSON(meta: any): any {\n    let data = super.toJSON(meta);\n    data.uniforms = this.uniforms;\n    data.vertexShader = this.vertexShader;\n    data.fragmentShader = this.fragmentShader;\n    return data;\n  }\n  get derivatives(): boolean {\n    console.warn(\"THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.\");\n    return this.extensions.derivatives;\n  }\n  set derivatives(value: boolean) {\n    console.warn(\"THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.\");\n    this.extensions.derivatives = value;\n  }\n}\n","import { Material, MaterialParameters } from \"./Material\";\nimport { DepthPacking } from \"../constants\";\nimport { Texture } from \"../textures/Texture\";\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author bhouston / https://clara.io\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *\n *  opacity: <float>,\n *\n *  map: new THREE.Texture(<Image>),\n *\n *  alphaMap: new THREE.Texture(<Image>),\n *\n *  displacementMap: new THREE.Texture(<Image>),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>\n * }\n */\nexport interface MeshDepthMaterialParameters extends MaterialParameters {\n  opacity?: number;\n\n  map?: Texture;\n\n  alphaMap?: Texture;\n\n  displacementMap?: Texture;\n  displacementScale?: number;\n  displacementBias?: number;\n\n  wireframe?: boolean;\n  wireframeLinewidth?: number;\n}\nexport class MeshDepthMaterial extends Material {\n  depthPacking: DepthPacking;\n  clipping: boolean;\n  readonly isMeshDepthMaterial: boolean = true;\n  constructor(parameters?: MeshDepthMaterialParameters) {\n    super();\n    this.type = 'MeshDepthMaterial';\n    this.depthPacking = DepthPacking.Basic;\n    this.skinning = false;\n    this.morphTargets = false;\n    this.map = null;\n    this.alphaMap = null;\n    this.displacementMap = null;\n    this.displacementScale = 1;\n    this.displacementBias = 0;\n    this.wireframe = false;\n    this.wireframeLinewidth = 1;\n    this.fog = false;\n    this.lights = false;\n    this.setValues(parameters);\n  }\n  copy(source: this): this {\n    super.copy(source);\n    this.depthPacking = source.depthPacking;\n    this.skinning = source.skinning;\n    this.morphTargets = source.morphTargets;\n    this.map = source.map;\n    this.alphaMap = source.alphaMap;\n    this.displacementMap = source.displacementMap;\n    this.displacementScale = source.displacementScale;\n    this.displacementBias = source.displacementBias;\n    this.wireframe = source.wireframe;\n    this.wireframeLinewidth = source.wireframeLinewidth;\n    return this;\n  };\n}\n","import { Color } from \"../math/Color\";\nimport { Vector3 } from \"../math/Vector3\";\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\nexport class Face3 {\n  a: number;\n  b: number;\n  c: number;\n  normal: Vector3;\n  vertexNormals: Vector3[];\n  color: Color;\n  vertexColors: Color[];\n  materialIndex: number;\n  _id: any; // Geometry\n  __originalFaceNormal: any; // Geometry\n  __originalVertexNormals: any; // Geometry\n  constructor(a?: number, b?: number, c?: number, normal?: Vector3 | Vector3[], color?: Color | Color[], materialIndex?: number) {\n    this.a = a;\n    this.b = b;\n    this.c = c;\n    this.normal = (normal && normal instanceof Vector3) ? normal : new Vector3();\n    this.vertexNormals = Array.isArray(normal) ? normal : [];\n    this.color = (color && color instanceof Color) ? color : new Color();\n    this.vertexColors = Array.isArray(color) ? color : [];\n    this.materialIndex = materialIndex !== undefined ? materialIndex : 0;\n  }\n  clone(): this {\n    return new (this.constructor as any)().copy(this);\n  }\n  copy(source: this): this {\n    this.a = source.a;\n    this.b = source.b;\n    this.c = source.c;\n    this.normal.copy(source.normal);\n    this.color.copy(source.color);\n    this.materialIndex = source.materialIndex;\n    for (let i = 0, il = source.vertexNormals.length; i < il; i ++) {\n      this.vertexNormals[i] = source.vertexNormals[i].clone();\n    }\n    for (let i = 0, il = source.vertexColors.length; i < il; i ++) {\n      this.vertexColors[i] = source.vertexColors[i].clone();\n    }\n    return this;\n  }\n}\n","/**\n * @author mrdoob / http://mrdoob.com/\n */\nexport class Layers {\n  mask: number = 1;\n  set(channel: number): void {\n    this.mask = 1 << channel;\n  }\n  enable(channel: number): void {\n    this.mask |= 1 << channel;\n  }\n  toggle(channel: number): void {\n    this.mask ^= 1 << channel;\n  }\n  disable(channel: number): void {\n    this.mask &= ~ (1 << channel);\n  }\n  test(layers: Layers): boolean {\n    return (this.mask & layers.mask) !== 0;\n  }\n}\n","import { Quaternion } from \"../math/Quaternion\";\nimport { Vector3 } from \"../math/Vector3\";\nimport { Matrix4 } from \"../math/Matrix4\";\nimport { EventDispatcher } from \"./EventDispatcher\";\nimport { Euler } from \"../math/Euler\";\nimport { Layers } from \"./Layers\";\nimport { Matrix3 } from \"../math/Matrix3\";\nimport { _Math } from \"../math/Math\";\nimport { Geometry } from \"./Geometry\";\nimport { BufferGeometry } from \"./BufferGeometry\";\nimport { Material } from \"../materials/Material\";\nimport { MultiMaterial } from \"../materials/MultiMaterial\";\nimport { Raycaster, Intersect } from \"./Raycaster\";\nimport { AnimationClip } from \"../animation/AnimationClip\";\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author elephantatwork / www.elephantatwork.ch\n */\nexport class Object3D extends EventDispatcher {\n  id: number = Object3DIdCount();\n  uuid: string = _Math.generateUUID();\n  name: string = '';\n  type: string = 'Object3D';\n  parent: Object3D = null;\n  children: Object3D[] = [];\n  up: Vector3 = Object3D.DefaultUp.clone();\n  position: Vector3 = new Vector3();\n  rotation: Euler = new Euler();\n  quaternion: Quaternion = new Quaternion();\n  scale: Vector3 = new Vector3(1, 1, 1);\n  modelViewMatrix: Matrix4 = new Matrix4();\n  normalMatrix: Matrix3 = new Matrix3();\n  matrix: Matrix4 = new Matrix4();\n  matrixWorld: Matrix4 = new Matrix4();\n  matrixAutoUpdate: boolean = Object3D.DefaultMatrixAutoUpdate;\n  matrixWorldNeedsUpdate: boolean = false;\n  layers: Layers = new Layers();\n  visible: boolean = true;\n  castShadow: boolean = false;\n  receiveShadow: boolean = false;\n  frustumCulled: boolean = true;\n  renderOrder: number = 0;\n  userData: any = {};\n  onBeforeRender: (renderer, scene, camera, geometry, material, group) => void = function() {};\n  onAfterRender: (renderer, scene, camera, geometry, material, group) => void = function() {};\n  geometry: Geometry | BufferGeometry = undefined;\n  material: Material | MultiMaterial = undefined;\n  animations: AnimationClip[];\n  // {\n  count: any;\n  hasPositions: any; positionArray: any;\n  hasNormals: any; normalArray: any;\n  hasUvs: any; uvArray: any;\n  hasColors: any; colorArray: any;\n  morphTargetInfluences: any;\n  skeleton: any; // WebGLPrograms\n  shadow: any;\n  // }\n  readonly isObject3D: boolean = true;\n  static readonly DefaultUp: Vector3 = new Vector3(0, 1, 0);\n  static readonly DefaultMatrixAutoUpdate: boolean = true;\n  constructor() {\n    super();\n    const rotation = this.rotation;\n    const quaternion = this.quaternion;\n    function onRotationChange() {\n      quaternion.setFromEuler(rotation, false);\n    }\n    function onQuaternionChange() {\n      rotation.setFromQuaternion(quaternion, undefined, false);\n    }\n    rotation.onChange(onRotationChange);\n    quaternion.onChange(onQuaternionChange);\n  }\n  applyMatrix(matrix: Matrix4): void {\n    this.matrix.multiplyMatrices(matrix, this.matrix);\n    this.matrix.decompose(this.position, this.quaternion, this.scale);\n  }\n  setRotationFromAxisAngle(axis: Vector3, angle: number): void {\n    // assumes axis is normalized\n    this.quaternion.setFromAxisAngle(axis, angle);\n  }\n  setRotationFromEuler(euler: Euler): void {\n    this.quaternion.setFromEuler(euler, true);\n  }\n  setRotationFromMatrix(m: Matrix4): void {\n    // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n    this.quaternion.setFromRotationMatrix(m);\n  }\n  setRotationFromQuaternion(q: Quaternion): void {\n    // assumes q is normalized\n    this.quaternion.copy(q);\n  }\n  private static _rotateOnAxis_q1 = new Quaternion();\n  rotateOnAxis(axis: Vector3, angle: number): Object3D {\n    // rotate object on axis in object space\n    // axis is assumed to be normalized\n    const q1 = Object3D._rotateOnAxis_q1;\n    q1.setFromAxisAngle(axis, angle);\n    this.quaternion.multiply(q1);\n    return this;\n  }\n  private static _rotateX_v1 = new Vector3(1, 0, 0);\n  rotateX(angle: number): Object3D {\n    const v1 = Object3D._rotateX_v1;\n    return this.rotateOnAxis(v1, angle);\n  }\n  private static _rotateY_v1 = new Vector3(0, 1, 0);\n  rotateY(angle: number): Object3D {\n    const v1 = Object3D._rotateY_v1;\n    return this.rotateOnAxis(v1, angle);\n  }\n  private static _rotateZ_v1 = new Vector3(0, 0, 1);\n  rotateZ(angle: number): Object3D {\n    const v1 = Object3D._rotateZ_v1;\n    return this.rotateOnAxis(v1, angle);\n  }\n  private static _translateOnAxis_v1 = new Vector3();\n  translateOnAxis(axis: Vector3, distance: number): Object3D {\n    // translate object by distance along axis in object space\n    // axis is assumed to be normalized\n    const v1 = Object3D._translateOnAxis_v1;\n    v1.copy(axis).applyQuaternion(this.quaternion);\n    this.position.add(v1.multiplyScalar(distance));\n    return this;\n  }\n  private static _translateX_v1 = new Vector3(1, 0, 0);\n  translateX(distance: number): Object3D {\n    const v1 = Object3D._translateX_v1;\n    return this.translateOnAxis(v1, distance);\n  }\n  private static _translateY_v1 = new Vector3(0, 1, 0);\n  translateY(distance: number): Object3D {\n    const v1 = Object3D._translateY_v1;\n    return this.translateOnAxis(v1, distance);\n  }\n  private static _translateZ_v1 = new Vector3(0, 0, 1);\n  translateZ(distance: number): Object3D {\n    const v1 = Object3D._translateZ_v1;\n    return this.translateOnAxis(v1, distance);\n  }\n  localToWorld(vector: Vector3): Vector3 {\n    return vector.applyMatrix4(this.matrixWorld);\n  }\n  private static _worldToLocal_m1 = new Matrix4();\n  worldToLocal(vector: Vector3): Vector3 {\n    const m1 = Object3D._worldToLocal_m1;\n    return vector.applyMatrix4(m1.getInverse(this.matrixWorld));\n  }\n  private static _lookAt_m1 = new Matrix4();\n  lookAt(vector: Vector3): void {\n    // This routine does not support objects with rotated and/or translated parent(s)\n    const m1 = Object3D._lookAt_m1;\n    m1.lookAt(vector, this.position, this.up);\n    this.quaternion.setFromRotationMatrix(m1);\n  }\n  add(object: Object3D): Object3D {\n    if (arguments.length > 1) {\n      for (let i = 0; i < arguments.length; i ++) {\n        this.add(arguments[i]);\n      }\n      return this;\n    }\n    if (object === this) {\n      console.error(\"THREE.Object3D.add: object can't be added as a child of itself.\", object);\n      return this;\n    }\n    if ((object && object instanceof Object3D)) {\n      if (object.parent !== null) {\n        object.parent.remove(object);\n      }\n      object.parent = this;\n      object.dispatchEvent({ type: 'added' });\n      this.children.push(object);\n    } else {\n      console.error(\"THREE.Object3D.add: object not an instance of THREE.Object3D.\", object);\n    }\n    return this;\n  }\n  remove(object: Object3D): void {\n    if (arguments.length > 1) {\n      for (let i = 0; i < arguments.length; i ++) {\n        this.remove(arguments[i]);\n      }\n    }\n    const index = this.children.indexOf(object);\n    if (index !== - 1) {\n      object.parent = null;\n      object.dispatchEvent({ type: 'removed' });\n      this.children.splice(index, 1);\n    }\n  }\n  getObjectById(id: number): Object3D {\n    return this.getObjectByProperty('id', id);\n  }\n  getObjectByName(name: string): Object3D {\n    return this.getObjectByProperty('name', name);\n  }\n  getObjectByProperty(name: string, value: number | string): Object3D {\n    if (this[name] === value) return this;\n    for (let i = 0, l = this.children.length; i < l; i ++) {\n      const child = this.children[i];\n      const object = child.getObjectByProperty(name, value);\n      if (object !== undefined) {\n        return object;\n      }\n    }\n    return undefined;\n  }\n  getWorldPosition(result: Vector3 = new Vector3()): Vector3 {\n    this.updateMatrixWorld(true);\n    return result.setFromMatrixPosition(this.matrixWorld);\n  }\n  private static _getWorldQuaternion_position = new Vector3();\n  private static _getWorldQuaternion_scale = new Vector3();\n  getWorldQuaternion(result: Quaternion = new Quaternion()): Quaternion {\n    const position = Object3D._getWorldQuaternion_position;\n    const scale = Object3D._getWorldQuaternion_scale;\n    this.updateMatrixWorld(true);\n    this.matrixWorld.decompose(position, result, scale);\n    return result;\n  }\n  private static _getWorldRotation_quaternion = new Quaternion();\n  getWorldRotation(result: Euler = new Euler()): Euler {\n    const quaternion = Object3D._getWorldRotation_quaternion;\n    this.getWorldQuaternion(quaternion);\n    return result.setFromQuaternion(quaternion, this.rotation.order, false);\n  }\n  private static _getWorldScale_position = new Vector3();\n  private static _getWorldScale_quaternion = new Quaternion();\n  getWorldScale(result: Vector3 = new Vector3()): Vector3 {\n    const position = Object3D._getWorldScale_position;\n    const quaternion = Object3D._getWorldScale_quaternion;\n    this.updateMatrixWorld(true);\n    this.matrixWorld.decompose(position, quaternion, result);\n    return result;\n  }\n  private static _getWorldDirection_quaternion = new Quaternion();\n  getWorldDirection(result: Vector3 = new Vector3()): Vector3 {\n    const quaternion = Object3D._getWorldDirection_quaternion;\n    this.getWorldQuaternion(quaternion);\n    return result.set(0, 0, 1).applyQuaternion(quaternion);\n  }\n  raycast(raycaster: Raycaster, intersects: Intersect[]): Intersect[] {\n    return intersects;\n  }\n  traverse(callback: (object: Object3D) => void): void {\n    callback(this);\n    const children = this.children;\n    for (let i = 0, l = children.length; i < l; i ++) {\n      children[i].traverse(callback);\n    }\n  }\n  traverseVisible(callback: (object: Object3D) => void): void {\n    if (this.visible === false) return;\n    callback(this);\n    const children = this.children;\n    for (let i = 0, l = children.length; i < l; i ++) {\n      children[i].traverseVisible(callback);\n    }\n  }\n  traverseAncestors(callback: (object: Object3D) => void): void {\n    const parent = this.parent;\n    if (parent !== null) {\n      callback(parent);\n      parent.traverseAncestors(callback);\n    }\n  }\n  updateMatrix(): void {\n    this.matrix.compose(this.position, this.quaternion, this.scale);\n    this.matrixWorldNeedsUpdate = true;\n  }\n  updateMatrixWorld(force: boolean = false): void {\n    if (this.matrixAutoUpdate === true) this.updateMatrix();\n    if (this.matrixWorldNeedsUpdate === true || force === true) {\n      if (this.parent === null) {\n        this.matrixWorld.copy(this.matrix);\n      } else {\n        this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix);\n      }\n      this.matrixWorldNeedsUpdate = false;\n      force = true;\n    }\n    // update children\n    const children = this.children;\n    for (let i = 0, l = children.length; i < l; i ++) {\n      children[i].updateMatrixWorld(force);\n    }\n  }\n  toJSON(meta?: any): any {\n    // meta is '' when called from JSON.stringify\n    const isRootObject = (meta === undefined || meta === '');\n    const output: any = {};\n    // meta is a hash used to collect geometries, materials.\n    // not providing it implies that this is the root object\n    // being serialized.\n    if (isRootObject) {\n      // initialize meta obj\n      meta = {\n        geometries: {},\n        materials: {},\n        textures: {},\n        images: {}\n      };\n      output.metadata = {\n        version: 4.4,\n        type: 'Object',\n        generator: 'Object3D.toJSON'\n      };\n    }\n    // standard Object3D serialization\n    const object: any = {};\n    object.uuid = this.uuid;\n    object.type = this.type;\n    if (this.name !== '') object.name = this.name;\n    if (JSON.stringify(this.userData) !== '{}') object.userData = this.userData;\n    if (this.castShadow === true) object.castShadow = true;\n    if (this.receiveShadow === true) object.receiveShadow = true;\n    if (this.visible === false) object.visible = false;\n    object.matrix = this.matrix.toArray();\n    //\n    if (this.geometry !== undefined) {\n      if (meta.geometries[this.geometry.uuid] === undefined) {\n        meta.geometries[this.geometry.uuid] = this.geometry.toJSON(meta);\n      }\n      object.geometry = this.geometry.uuid;\n    }\n    if (this.material !== undefined) {\n      if (meta.materials[this.material.uuid] === undefined) {\n        meta.materials[this.material.uuid] = this.material.toJSON(meta);\n      }\n      object.material = this.material.uuid;\n    }\n    //\n    if (this.children.length > 0) {\n      object.children = [];\n      for (let i = 0; i < this.children.length; i ++) {\n        object.children.push(this.children[i].toJSON(meta).object);\n      }\n    }\n    if (isRootObject) {\n      const geometries = extractFromCache(meta.geometries);\n      const materials = extractFromCache(meta.materials);\n      const textures = extractFromCache(meta.textures);\n      const images = extractFromCache(meta.images);\n      if (geometries.length > 0) output.geometries = geometries;\n      if (materials.length > 0) output.materials = materials;\n      if (textures.length > 0) output.textures = textures;\n      if (images.length > 0) output.images = images;\n    }\n    output.object = object;\n    return output;\n    // extract data from the cache hash\n    // remove metadata on each item\n    // and return as array\n    function extractFromCache(cache: any) {\n      const values = [];\n      for (let key in cache) {\n        const data = cache[key];\n        delete data.metadata;\n        values.push(data);\n      }\n      return values;\n    }\n  }\n  clone(recursive: boolean = true): this {\n    return new (this.constructor as any)().copy(this, recursive);\n  }\n  copy(source: this, recursive: boolean = true): this {\n    this.name = source.name;\n    this.up.copy(source.up);\n    this.position.copy(source.position);\n    this.quaternion.copy(source.quaternion);\n    this.scale.copy(source.scale);\n    this.matrix.copy(source.matrix);\n    this.matrixWorld.copy(source.matrixWorld);\n    this.matrixAutoUpdate = source.matrixAutoUpdate;\n    this.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n    this.visible = source.visible;\n    this.castShadow = source.castShadow;\n    this.receiveShadow = source.receiveShadow;\n    this.frustumCulled = source.frustumCulled;\n    this.renderOrder = source.renderOrder;\n    this.userData = JSON.parse(JSON.stringify(source.userData));\n    if (recursive === true) {\n      for (let i = 0; i < source.children.length; i ++) {\n        const child = source.children[i];\n        this.add(child.clone());\n      }\n    }\n    return this;\n  }\n  getChildByName(name: string): Object3D {\n    console.warn(\"THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().\");\n    return this.getObjectByName(name);\n  }\n  renderDepth(value: number): void {\n    console.warn(\"THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.\");\n  }\n  translate(distance: number, axis: Vector3): Object3D {\n    console.warn(\"THREE.Object3D: .translate() has been removed. Use .translateOnAxis(axis, distance) instead.\");\n    return this.translateOnAxis(axis, distance);\n  }\n  get eulerOrder(): string {\n    console.warn(\"THREE.Object3D: .eulerOrder is now .rotation.order.\");\n    return this.rotation.order;\n  }\n  set eulerOrder(value: string) {\n    console.warn(\"THREE.Object3D: .eulerOrder is now .rotation.order.\");\n    this.rotation.order = value;\n  }\n  get useQuaternion(): boolean {\n    console.warn(\"THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.\");\n    return true;\n  }\n  set useQuaternion(value: boolean) {\n    console.warn(\"THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.\");\n  }\n}\nlet count = 0;\nexport function Object3DIdCount() { return count++; };\n","import { Vector3 } from \"./Vector3\";\nimport { Matrix4 } from \"./Matrix4\";\nimport { Sphere } from \"./Sphere\";\nimport { Plane } from \"./Plane\";\nimport { Box3 } from \"./Box3\";\n/**\n * @author bhouston / http://clara.io\n */\nexport class Ray {\n  origin: Vector3;\n  direction: Vector3;\n  constructor(origin: Vector3 = new Vector3(), direction: Vector3 = new Vector3()) {\n    this.origin = origin;\n    this.direction = direction;\n  }\n  set(origin: Vector3, direction: Vector3) {\n    this.origin.copy(origin);\n    this.direction.copy(direction);\n    return this;\n  }\n  clone(): Ray {\n    return new (this.constructor as any)().copy(this);\n  }\n  copy(ray: Ray): Ray {\n    this.origin.copy(ray.origin);\n    this.direction.copy(ray.direction);\n    return this;\n  }\n  at(t: number, result: Vector3 = new Vector3()): Vector3 {\n    return result.copy(this.direction).multiplyScalar(t).add(this.origin);\n  }\n  lookAt(v: Vector3): Ray {\n    this.direction.copy(v).sub(this.origin).normalize();\n    return this;\n  }\n  private static recast_v1 = new Vector3();\n  recast(t: number): Ray {\n    const v1 = Ray.recast_v1;\n    this.origin.copy(this.at(t, v1));\n    return this;\n  }\n  closestPointToPoint(point: Vector3, result: Vector3 = new Vector3()): Vector3 {\n    result.subVectors(point, this.origin);\n    const directionDistance = result.dot(this.direction);\n    if (directionDistance < 0) {\n      return result.copy(this.origin);\n    }\n    return result.copy(this.direction).multiplyScalar(directionDistance).add(this.origin);\n  }\n  distanceToPoint(point: Vector3): number {\n    return Math.sqrt(this.distanceSqToPoint(point));\n  }\n  private static distanceSqToPoint_v1 = new Vector3();\n  distanceSqToPoint(point: Vector3): number {\n    const v1 = Ray.distanceSqToPoint_v1;\n    const directionDistance = v1.subVectors(point, this.origin).dot(this.direction);\n    // point behind the ray\n    if (directionDistance < 0) {\n      return this.origin.distanceToSquared(point);\n    }\n    v1.copy(this.direction).multiplyScalar(directionDistance).add(this.origin);\n    return v1.distanceToSquared(point);\n  }\n  private static distanceSqToSegment_segCenter = new Vector3();\n  private static distanceSqToSegment_segDir = new Vector3();\n  private static distanceSqToSegment_diff = new Vector3();\n  distanceSqToSegment(v0: Vector3, v1: Vector3, optionalPointOnRay: Vector3, optionalPointOnSegment: Vector3): number {\n    const segCenter = Ray.distanceSqToSegment_segCenter;\n    const segDir = Ray.distanceSqToSegment_segDir;\n    const diff = Ray.distanceSqToSegment_diff;\n    // from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteDistRaySegment.h\n    // It returns the min distance between the ray and the segment\n    // defined by v0 and v1\n    // It can also set two optional targets :\n    // - The closest point on the ray\n    // - The closest point on the segment\n    segCenter.copy(v0).add(v1).multiplyScalar(0.5);\n    segDir.copy(v1).sub(v0).normalize();\n    diff.copy(this.origin).sub(segCenter);\n    const segExtent = v0.distanceTo(v1) * 0.5;\n    const a01 = - this.direction.dot(segDir);\n    const b0 = diff.dot(this.direction);\n    const b1 = - diff.dot(segDir);\n    const c = diff.lengthSq();\n    const det = Math.abs(1 - a01 * a01);\n    let s0, s1, sqrDist, extDet;\n    if (det > 0) {\n      // The ray and segment are not parallel.\n      s0 = a01 * b1 - b0;\n      s1 = a01 * b0 - b1;\n      extDet = segExtent * det;\n      if (s0 >= 0) {\n        if (s1 >= - extDet) {\n          if (s1 <= extDet) {\n            // region 0\n            // Minimum at interior points of ray and segment.\n            const invDet = 1 / det;\n            s0 *= invDet;\n            s1 *= invDet;\n            sqrDist = s0 * (s0 + a01 * s1 + 2 * b0) + s1 * (a01 * s0 + s1 + 2 * b1) + c;\n          } else {\n            // region 1\n            s1 = segExtent;\n            s0 = Math.max(0, - (a01 * s1 + b0));\n            sqrDist = - s0 * s0 + s1 * (s1 + 2 * b1) + c;\n          }\n        } else {\n          // region 5\n          s1 = - segExtent;\n          s0 = Math.max(0, - (a01 * s1 + b0));\n          sqrDist = - s0 * s0 + s1 * (s1 + 2 * b1) + c;\n        }\n      } else {\n        if (s1 <= - extDet) {\n          // region 4\n          s0 = Math.max(0, - (- a01 * segExtent + b0));\n          s1 = (s0 > 0) ? - segExtent : Math.min(Math.max(- segExtent, - b1), segExtent);\n          sqrDist = - s0 * s0 + s1 * (s1 + 2 * b1) + c;\n        } else if (s1 <= extDet) {\n          // region 3\n          s0 = 0;\n          s1 = Math.min(Math.max(- segExtent, - b1), segExtent);\n          sqrDist = s1 * (s1 + 2 * b1) + c;\n        } else {\n          // region 2\n          s0 = Math.max(0, - (a01 * segExtent + b0));\n          s1 = (s0 > 0) ? segExtent : Math.min(Math.max(- segExtent, - b1), segExtent);\n          sqrDist = - s0 * s0 + s1 * (s1 + 2 * b1) + c;\n        }\n      }\n    } else {\n      // Ray and segment are parallel.\n      s1 = (a01 > 0) ? - segExtent : segExtent;\n      s0 = Math.max(0, - (a01 * s1 + b0));\n      sqrDist = - s0 * s0 + s1 * (s1 + 2 * b1) + c;\n    }\n    if (optionalPointOnRay) {\n      optionalPointOnRay.copy(this.direction).multiplyScalar(s0).add(this.origin);\n    }\n    if (optionalPointOnSegment) {\n      optionalPointOnSegment.copy(segDir).multiplyScalar(s1).add(segCenter);\n    }\n    return sqrDist;\n  }\n  private static intersectSphere_v1 = new Vector3();\n  intersectSphere(sphere: Sphere, optionalTarget: Vector3 = new Vector3()): Vector3 {\n    const v1 = Ray.intersectSphere_v1;\n    v1.subVectors(sphere.center, this.origin);\n    const tca = v1.dot(this.direction);\n    const d2 = v1.dot(v1) - tca * tca;\n    const radius2 = sphere.radius * sphere.radius;\n    if (d2 > radius2) return null;\n    const thc = Math.sqrt(radius2 - d2);\n    // t0 = first intersect point - entrance on front of sphere\n    const t0 = tca - thc;\n    // t1 = second intersect point - exit point on back of sphere\n    const t1 = tca + thc;\n    // test to see if both t0 and t1 are behind the ray - if so, return null\n    if (t0 < 0 && t1 < 0) return null;\n    // test to see if t0 is behind the ray:\n    // if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n    // in order to always return an intersect point that is in front of the ray.\n    if (t0 < 0) return this.at(t1, optionalTarget);\n    // else t0 is in front of the ray, so return the first collision point scaled by t0\n    return this.at(t0, optionalTarget);\n  }\n  intersectsSphere(sphere: Sphere): boolean {\n    return this.distanceToPoint(sphere.center) <= sphere.radius;\n  }\n  distanceToPlane(plane: Plane): number {\n    const denominator = plane.normal.dot(this.direction);\n    if (denominator === 0) {\n      // line is coplanar, return origin\n      if (plane.distanceToPoint(this.origin) === 0) {\n        return 0;\n      }\n      // Null is preferable to undefined since undefined means.... it is undefined\n      return null;\n    }\n    const t = - (this.origin.dot(plane.normal) + plane.constant) / denominator;\n    // Return if the ray never intersects the plane\n    return t >= 0 ? t :  null;\n  }\n  intersectPlane(plane: Plane, optionalTarget: Vector3 = new Vector3()): Vector3 {\n    const t = this.distanceToPlane(plane);\n    if (t === null) {\n      return null;\n    }\n    return this.at(t, optionalTarget);\n  }\n  intersectsPlane(plane: Plane): boolean {\n    // check if the ray lies on the plane first\n    const distToPoint = plane.distanceToPoint(this.origin);\n    if (distToPoint === 0) {\n      return true;\n    }\n    const denominator = plane.normal.dot(this.direction);\n    if (denominator * distToPoint < 0) {\n      return true;\n    }\n    // ray origin is behind the plane (and is pointing behind it)\n    return false;\n  }\n  intersectBox(box: Box3, optionalTarget: Vector3 = new Vector3()): Vector3 {\n    let tmin, tmax, tymin, tymax, tzmin, tzmax;\n    const invdirx = 1 / this.direction.x,\n      invdiry = 1 / this.direction.y,\n      invdirz = 1 / this.direction.z;\n    const origin = this.origin;\n    if (invdirx >= 0) {\n      tmin = (box.min.x - origin.x) * invdirx;\n      tmax = (box.max.x - origin.x) * invdirx;\n    } else {\n      tmin = (box.max.x - origin.x) * invdirx;\n      tmax = (box.min.x - origin.x) * invdirx;\n    }\n    if (invdiry >= 0) {\n      tymin = (box.min.y - origin.y) * invdiry;\n      tymax = (box.max.y - origin.y) * invdiry;\n    } else {\n      tymin = (box.max.y - origin.y) * invdiry;\n      tymax = (box.min.y - origin.y) * invdiry;\n    }\n    if ((tmin > tymax) || (tymin > tmax)) return null;\n    // These lines also handle the case where tmin or tmax is NaN\n    // (result of 0 * Infinity). x !== x returns true if x is NaN\n    if (tymin > tmin || tmin !== tmin) tmin = tymin;\n    if (tymax < tmax || tmax !== tmax) tmax = tymax;\n    if (invdirz >= 0) {\n      tzmin = (box.min.z - origin.z) * invdirz;\n      tzmax = (box.max.z - origin.z) * invdirz;\n    } else {\n      tzmin = (box.max.z - origin.z) * invdirz;\n      tzmax = (box.min.z - origin.z) * invdirz;\n    }\n    if ((tmin > tzmax) || (tzmin > tmax)) return null;\n    if (tzmin > tmin || tmin !== tmin) tmin = tzmin;\n    if (tzmax < tmax || tmax !== tmax) tmax = tzmax;\n    //return point closest to the ray (positive side)\n    if (tmax < 0) return null;\n    return this.at(tmin >= 0 ? tmin : tmax, optionalTarget);\n  }\n  private static intersectsBox_v = new Vector3();\n  intersectsBox(box: Box3): boolean {\n    const v = Ray.intersectsBox_v;\n    return this.intersectBox(box, v) !== null;\n  }\n  private static intersectTriangle_diff = new Vector3();\n  private static intersectTriangle_edge1 = new Vector3();\n  private static intersectTriangle_edge2 = new Vector3();\n  private static intersectTriangle_normal = new Vector3();\n  intersectTriangle(a: Vector3, b: Vector3, c: Vector3, backfaceCulling: boolean, optionalTarget: Vector3 = new Vector3()): Vector3 {\n    // Compute the offset origin, edges, and normal.\n    const diff = Ray.intersectTriangle_diff;\n    const edge1 = Ray.intersectTriangle_edge1;\n    const edge2 = Ray.intersectTriangle_edge2;\n    const normal = Ray.intersectTriangle_normal;\n    // from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n    edge1.subVectors(b, a);\n    edge2.subVectors(c, a);\n    normal.crossVectors(edge1, edge2);\n    // Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n    // E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n    //   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n    //   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n    //   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n    let DdN = this.direction.dot(normal);\n    let sign;\n    if (DdN > 0) {\n      if (backfaceCulling) return null;\n      sign = 1;\n    } else if (DdN < 0) {\n      sign = - 1;\n      DdN = - DdN;\n    } else {\n      return null;\n    }\n    diff.subVectors(this.origin, a);\n    const DdQxE2 = sign * this.direction.dot(edge2.crossVectors(diff, edge2));\n    // b1 < 0, no intersection\n    if (DdQxE2 < 0) {\n      return null;\n    }\n    const DdE1xQ = sign * this.direction.dot(edge1.cross(diff));\n    // b2 < 0, no intersection\n    if (DdE1xQ < 0) {\n      return null;\n    }\n    // b1+b2 > 1, no intersection\n    if (DdQxE2 + DdE1xQ > DdN) {\n      return null;\n    }\n    // Line intersects triangle, check if ray does.\n    const QdN = - sign * diff.dot(normal);\n    // t < 0, no intersection\n    if (QdN < 0) {\n      return null;\n    }\n    // Ray intersects triangle.\n    return this.at(QdN / DdN, optionalTarget);\n  }\n  applyMatrix4(matrix4: Matrix4): Ray {\n    this.direction.add(this.origin).applyMatrix4(matrix4);\n    this.origin.applyMatrix4(matrix4);\n    this.direction.sub(this.origin);\n    this.direction.normalize();\n    return this;\n  }\n  equals(ray: Ray): boolean {\n    return ray.origin.equals(this.origin) && ray.direction.equals(this.direction);\n  }\n  isIntersectionBox(box: Box3): boolean {\n    console.warn(\"THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().\");\n    return this.intersectsBox(box);\n  }\n  isIntersectionPlane(plane: Plane): boolean {\n    console.warn(\"THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().\");\n    return this.intersectsPlane(plane);\n  }\n  isIntersectionSphere(sphere: Sphere): boolean {\n    console.warn(\"THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().\");\n    return this.intersectsSphere(sphere);\n  }\n}\n","import { Vector3 } from \"./Vector3\";\nimport { Matrix4 } from \"./Matrix4\";\nimport { _Math } from \"./Math\";\n/**\n * @author bhouston / http://clara.io\n */\nexport class Line3 {\n  start: Vector3;\n  end: Vector3;\n  constructor(start = new Vector3(), end = new Vector3()) {\n    this.start = start;\n    this.end = end;\n  }\n  set(start: Vector3, end: Vector3): Line3 {\n    this.start.copy(start);\n    this.end.copy(end);\n    return this;\n  }\n  clone(): Line3 {\n    return new (this.constructor as any)().copy(this);\n  }\n  copy(line: Line3): Line3 {\n    this.start.copy(line.start);\n    this.end.copy(line.end);\n    return this;\n  }\n  getCenter(result: Vector3 = new Vector3()): Vector3 {\n    return result.addVectors(this.start, this.end).multiplyScalar(0.5);\n  }\n  delta(result: Vector3 = new Vector3()): Vector3 {\n    return result.subVectors(this.end, this.start);\n  }\n  distanceSq(): number {\n    return this.start.distanceToSquared(this.end);\n  }\n  distance(): number {\n    return this.start.distanceTo(this.end);\n  }\n  at(t: number, result: Vector3 = new Vector3()): Vector3 {\n    return this.delta(result).multiplyScalar(t).add(this.start);\n  }\n  private static closestPointToPointParameter_startP = new Vector3();\n  private static closestPointToPointParameter_startEnd = new Vector3();\n  closestPointToPointParameter(point: Vector3, clampToLine: boolean): number {\n    const startP = Line3.closestPointToPointParameter_startP;\n    const startEnd = Line3.closestPointToPointParameter_startEnd;\n    startP.subVectors(point, this.start);\n    startEnd.subVectors(this.end, this.start);\n    const startEnd2 = startEnd.dot(startEnd);\n    const startEnd_startP = startEnd.dot(startP);\n    let t = startEnd_startP / startEnd2;\n    if (clampToLine) {\n      t = _Math.clamp(t, 0, 1);\n    }\n    return t;\n  }\n  closestPointToPoint(point: Vector3, clampToLine: boolean, result: Vector3 = new Vector3()): Vector3 {\n    const t = this.closestPointToPointParameter(point, clampToLine);\n    return this.delta(result).multiplyScalar(t).add(this.start);\n  }\n  applyMatrix4(matrix: Matrix4): Line3 {\n    this.start.applyMatrix4(matrix);\n    this.end.applyMatrix4(matrix);\n    return this;\n  }\n  equals(line: Line3): boolean {\n    return line.start.equals(this.start) && line.end.equals(this.end);\n  }\n  center(result: Vector3): Vector3 {\n    console.warn(\"THREE.Line3: .center() has been renamed to .getCenter().\");\n    return this.getCenter(result);\n  }\n}\n","import { Matrix3 } from \"./Matrix3\";\nimport { Matrix4 } from \"./Matrix4\";\nimport { Vector3 } from \"./Vector3\";\nimport { Line3 } from \"./Line3\";\nimport { Box3 } from \"./Box3\";\nimport { Sphere } from \"./Sphere\";\n/**\n * @author bhouston / http://clara.io\n */\nexport class Plane {\n  normal: Vector3;\n  constant: number;\n  constructor(normal: Vector3 = new Vector3(1, 0, 0), constant: number = 0) {\n    this.normal = normal;\n    this.constant = constant;\n  }\n  set(normal: Vector3, constant: number): Plane {\n    this.normal.copy(normal);\n    this.constant = constant;\n    return this;\n  }\n  setComponents(x: number, y: number, z: number, w: number): Plane {\n    this.normal.set(x, y, z);\n    this.constant = w;\n    return this;\n  }\n  setFromNormalAndCoplanarPoint(normal: Vector3, point: Vector3): Plane {\n    this.normal.copy(normal);\n    this.constant = - point.dot(this.normal);  // must be this.normal, not normal, as this.normal is normalized\n    return this;\n  }\n  private static setFromCoplanarPoints_v1 = new Vector3();\n  private static setFromCoplanarPoints_v2 = new Vector3();\n  setFromCoplanarPoints(a: Vector3, b: Vector3, c: Vector3): Plane {\n    const v1 = Plane.setFromCoplanarPoints_v1;\n    const v2 = Plane.setFromCoplanarPoints_v2;\n    const normal = v1.subVectors(c, b).cross(v2.subVectors(a, b)).normalize();\n    // Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n    this.setFromNormalAndCoplanarPoint(normal, a);\n    return this;\n  }\n  clone(): Plane {\n    return new (this.constructor as any)().copy(this);\n  }\n  copy(plane: Plane): Plane {\n    this.normal.copy(plane.normal);\n    this.constant = plane.constant;\n    return this;\n  }\n  normalize(): Plane {\n    // Note: will lead to a divide by zero if the plane is invalid.\n    const inverseNormalLength = 1.0 / this.normal.length();\n    this.normal.multiplyScalar(inverseNormalLength);\n    this.constant *= inverseNormalLength;\n    return this;\n  }\n  negate(): Plane {\n    this.constant *= - 1;\n    this.normal.negate();\n    return this;\n  }\n  distanceToPoint(point: Vector3): number {\n    return this.normal.dot(point) + this.constant;\n  }\n  distanceToSphere(sphere: Sphere): number {\n    return this.distanceToPoint(sphere.center) - sphere.radius;\n  }\n  projectPoint(point: Vector3, result: Vector3 = new Vector3()): Vector3 {\n    return this.orthoPoint(point, result).sub(point).negate();\n  }\n  orthoPoint(point: Vector3, result: Vector3 = new Vector3()): Vector3 {\n    const perpendicularMagnitude = this.distanceToPoint(point);\n    return result.copy(this.normal).multiplyScalar(perpendicularMagnitude);\n  }\n  private static intersectLine_v1 = new Vector3();\n  intersectLine(line: Line3, result: Vector3 = new Vector3()) {\n    const v1 = Plane.intersectLine_v1;\n    const direction = line.delta(v1);\n    const denominator = this.normal.dot(direction);\n    if (denominator === 0) {\n      // line is coplanar, return origin\n      if (this.distanceToPoint(line.start) === 0) {\n        return result.copy(line.start);\n      }\n      // Unsure if this is the correct method to handle this case.\n      return undefined;\n    }\n    const t = - (line.start.dot(this.normal) + this.constant) / denominator;\n    if (t < 0 || t > 1) {\n      return undefined;\n    }\n    return result.copy(direction).multiplyScalar(t).add(line.start);\n  }\n  intersectsLine(line: Line3): boolean {\n    // Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n    const startSign = this.distanceToPoint(line.start);\n    const endSign = this.distanceToPoint(line.end);\n    return (startSign < 0 && endSign > 0) || (endSign < 0 && startSign > 0);\n  }\n  intersectsBox(box: Box3): boolean {\n    return box.intersectsPlane(this);\n  }\n  intersectsSphere(sphere: Sphere): boolean {\n    return sphere.intersectsPlane(this);\n  }\n  coplanarPoint(result: Vector3 = new Vector3()): Vector3 {\n    return result.copy(this.normal).multiplyScalar(- this.constant);\n  }\n  private static applyMatrix4_v1 = new Vector3();\n  private static applyMatrix4_m1 = new Matrix3();\n  applyMatrix4(matrix: Matrix4, optionalNormalMatrix?: Matrix3): Plane {\n    const v1 = Plane.applyMatrix4_v1;\n    const m1 = Plane.applyMatrix4_m1;\n    const referencePoint = this.coplanarPoint(v1).applyMatrix4(matrix);\n    // transform normal based on theory here:\n    // http://www.songho.ca/opengl/gl_normaltransform.html\n    const normalMatrix = optionalNormalMatrix || m1.getNormalMatrix(matrix);\n    const normal = this.normal.applyMatrix3(normalMatrix).normalize();\n    // recalculate constant (like in setFromNormalAndCoplanarPoint)\n    this.constant = - referencePoint.dot(normal);\n    return this;\n  }\n  translate(offset: Vector3): Plane {\n    this.constant = this.constant - offset.dot(this.normal);\n    return this;\n  }\n  equals(plane: Plane): boolean {\n    return plane.normal.equals(this.normal) && (plane.constant === this.constant);\n  }\n  isIntersectionLine(line: Line3): boolean {\n    console.warn(\"THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().\");\n    return this.intersectsLine(line);\n  }\n}\n","import { Vector3 } from \"./Vector3\";\nimport { Line3 } from \"./Line3\";\nimport { Plane } from \"./Plane\";\n/**\n * @author bhouston / http://clara.io\n * @author mrdoob / http://mrdoob.com/\n */\nexport class Triangle {\n  a: Vector3;\n  b: Vector3;\n  c: Vector3;\n  constructor(a: Vector3 = new Vector3(), b: Vector3 = new Vector3(), c: Vector3 = new Vector3()) {\n    this.a = a;\n    this.b = b;\n    this.c = c;\n  }\n  private static normal_v0 = new Vector3();\n  static normal(a: Vector3, b: Vector3, c: Vector3, result = new Vector3()): Vector3 {\n    const v0 = Triangle.normal_v0;\n    result.subVectors(c, b);\n    v0.subVectors(a, b);\n    result.cross(v0);\n    const resultLengthSq = result.lengthSq();\n    if (resultLengthSq > 0) {\n      return result.multiplyScalar(1 / Math.sqrt(resultLengthSq));\n    }\n    return result.set(0, 0, 0);\n  }\n  // static/instance method to calculate barycentric coordinates\n  // based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n  static barycoordFromPoint(point: Vector3, a: Vector3, b: Vector3, c: Vector3, result: Vector3 = new Vector3()): Vector3 {\n    const v0 = new Vector3();\n    const v1 = new Vector3();\n    const v2 = new Vector3();\n    v0.subVectors(c, a);\n    v1.subVectors(b, a);\n    v2.subVectors(point, a);\n    const dot00 = v0.dot(v0);\n    const dot01 = v0.dot(v1);\n    const dot02 = v0.dot(v2);\n    const dot11 = v1.dot(v1);\n    const dot12 = v1.dot(v2);\n    const denom = (dot00 * dot11 - dot01 * dot01);\n    // collinear or singular triangle\n    if (denom === 0) {\n      // arbitrary location outside of triangle?\n      // not sure if this is the best idea, maybe should be returning undefined\n      return result.set(- 2, - 1, - 1);\n    }\n    const invDenom = 1 / denom;\n    const u = (dot11 * dot02 - dot01 * dot12) * invDenom;\n    const v = (dot00 * dot12 - dot01 * dot02) * invDenom;\n    // barycentric coordinates must always sum to 1\n    return result.set(1 - u - v, v, u);\n  }\n  static containsPoint(point: Vector3, a: Vector3, b: Vector3, c: Vector3): boolean {\n    const v1 = new Vector3();\n    const result = Triangle.barycoordFromPoint(point, a, b, c, v1);\n    return (result.x >= 0) && (result.y >= 0) && ((result.x + result.y) <= 1);\n  }\n  set(a: Vector3, b: Vector3, c: Vector3): Triangle {\n    this.a.copy(a);\n    this.b.copy(b);\n    this.c.copy(c);\n    return this;\n  }\n  setFromPointsAndIndices(points: Vector3[], i0: number, i1: number, i2: number): Triangle {\n    this.a.copy(points[i0]);\n    this.b.copy(points[i1]);\n    this.c.copy(points[i2]);\n    return this;\n  }\n  clone(): Triangle {\n    return new (this.constructor as any)().copy(this);\n  }\n  copy(triangle: Triangle): Triangle {\n    this.a.copy(triangle.a);\n    this.b.copy(triangle.b);\n    this.c.copy(triangle.c);\n    return this;\n  }\n  area(): number {\n    const v0 = new Vector3();\n    const v1 = new Vector3();\n    v0.subVectors(this.c, this.b);\n    v1.subVectors(this.a, this.b);\n    return v0.cross(v1).length() * 0.5;\n  }\n  midpoint(result: Vector3 = new Vector3()): Vector3 {\n    return result.addVectors(this.a, this.b).add(this.c).multiplyScalar(1 / 3);\n  }\n  normal(result: Vector3 = new Vector3()): Vector3 {\n    return Triangle.normal(this.a, this.b, this.c, result);\n  }\n  plane(result: Plane = new Plane()): Plane {\n    return result.setFromCoplanarPoints(this.a, this.b, this.c);\n  }\n  barycoordFromPoint(point: Vector3, result: Vector3 = new Vector3()): Vector3 {\n    return Triangle.barycoordFromPoint(point, this.a, this.b, this.c, result);\n  }\n  containsPoint(point: Vector3): boolean {\n    return Triangle.containsPoint(point, this.a, this.b, this.c);\n  }\n  closestPointToPoint(point: Vector3, result: Vector3 = new Vector3()): Vector3 {\n    const plane = new Plane();\n    const edgeList = [ new Line3(), new Line3(), new Line3() ];\n    const projectedPoint = new Vector3();\n    const closestPoint = new Vector3();\n    let minDistance = Infinity;\n    // project the point onto the plane of the triangle\n    plane.setFromCoplanarPoints(this.a, this.b, this.c);\n    plane.projectPoint(point, projectedPoint);\n    // check if the projection lies within the triangle\n    if (this.containsPoint(projectedPoint) === true) {\n      // if so, this is the closest point\n      result.copy(projectedPoint);\n    } else {\n      // if not, the point falls outside the triangle. the result is the closest point to the triangle's edges or vertices\n      edgeList[0].set(this.a, this.b);\n      edgeList[1].set(this.b, this.c);\n      edgeList[2].set(this.c, this.a);\n      for (let i = 0; i < edgeList.length; i ++) {\n        edgeList[i].closestPointToPoint(projectedPoint, true, closestPoint);\n        const distance = projectedPoint.distanceToSquared(closestPoint);\n        if (distance < minDistance) {\n          minDistance = distance;\n          result.copy(closestPoint);\n        }\n      }\n    }\n    return result;\n  }\n  equals(triangle: Triangle): boolean {\n    return triangle.a.equals(this.a) && triangle.b.equals(this.b) && triangle.c.equals(this.c);\n  }\n}\n","import { _Math } from \"../math/Math\";\nimport { Material } from \"./Material\";\n/**\n * @author mrdoob / http://mrdoob.com/\n */\nexport class MultiMaterial {\n  uuid: string = _Math.generateUUID();\n  type: string = 'MultiMaterial';\n  materials: Material[];\n  visible: boolean = true;\n  // {\n  side;\n  opacity;\n  transparent;\n  color;\n  map;\n  id;\n  program;\n  // }\n  dispose(): void {}\n  readonly isMultiMaterial: boolean = true;\n  constructor(materials: Material[] = []) {\n    this.materials = materials;\n  }\n  toJSON(meta: any): any {\n    const output: any = {\n      metadata: {\n        version: 4.2,\n        type: 'material',\n        generator: 'MaterialExporter'\n      },\n      uuid: this.uuid,\n      type: this.type,\n      materials: []\n    };\n    const materials = this.materials;\n    for (let i = 0, l = materials.length; i < l; i ++) {\n      const material = materials[i].toJSON(meta);\n      delete material.metadata;\n      output.materials.push(material);\n    }\n    output.visible = this.visible;\n    return output;\n  }\n  clone(): this {\n    const material = new (this.constructor as any)();\n    for (let i = 0; i < this.materials.length; i ++) {\n      material.materials.push(this.materials[i].clone());\n    }\n    material.visible = this.visible;\n    return material;\n  }\n}\n","import { Material, MaterialParameters } from \"./Material\";\nimport { BlendingOperation } from \"../constants\";\nimport { Color } from \"../math/Color\";\nimport { Texture } from \"../textures/Texture\";\nimport { CubeTexture } from \"../textures/CubeTexture\";\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *  map: new THREE.Texture(<Image>),\n *\n *  aoMap: new THREE.Texture(<Image>),\n *  aoMapIntensity: <float>\n *\n *  specularMap: new THREE.Texture(<Image>),\n *\n *  alphaMap: new THREE.Texture(<Image>),\n *\n *  envMap: new THREE.TextureCube([posx, negx, posy, negy, posz, negz]),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  shading: THREE.ShadingMode.Smooth,\n *  depthTest: <bool>,\n *  depthWrite: <bool>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>\n * }\n */\nexport interface MeshBasicMaterialParameters extends MaterialParameters {\n  color?: number;\n  opacity?: number;\n  map?: Texture;\n\n  aoMap?: Texture;\n  aoMapIntensity?: number;\n\n  specularMap?: Texture;\n\n  alphaMap?: Texture;\n\n  envMap?: CubeTexture;\n  combine?: BlendingOperation;\n  reflectivity?: number;\n  refractionRatio?: number;\n\n  shading?: number;\n  depthTest?: boolean;\n  depthWrite?: boolean;\n\n  wireframe?: boolean;\n  wireframeLinewidth?: number;\n\n  skinning?: boolean;\n  morphTargets?: boolean;\n}\nexport class MeshBasicMaterial extends Material {\n  aoMap: Texture;\n  aoMapIntensity: number;\n  combine: BlendingOperation;\n  refractionRatio: number;\n  readonly isMeshBasicMaterial: boolean = true;\n  constructor(parameters?: MeshBasicMaterialParameters | MaterialParameters) {\n    super();\n    this.type = 'MeshBasicMaterial';\n    this.color = new Color(0xffffff); // emissive\n    this.map = null;\n    this.aoMap = null;\n    this.aoMapIntensity = 1.0;\n    this.specularMap = null;\n    this.alphaMap = null;\n    this.envMap = null;\n    this.combine = BlendingOperation.Multiply;\n    this.reflectivity = 1;\n    this.refractionRatio = 0.98;\n    this.wireframe = false;\n    this.wireframeLinewidth = 1;\n    this.wireframeLinecap = 'round';\n    this.wireframeLinejoin = 'round';\n    this.skinning = false;\n    this.morphTargets = false;\n    this.lights = false;\n    this.setValues(parameters);\n  }\n  copy(source: this): this {\n    super.copy(source);\n    this.color.copy(source.color);\n    this.map = source.map;\n    this.aoMap = source.aoMap;\n    this.aoMapIntensity = source.aoMapIntensity;\n    this.specularMap = source.specularMap;\n    this.alphaMap = source.alphaMap;\n    this.envMap = source.envMap;\n    this.combine = source.combine;\n    this.reflectivity = source.reflectivity;\n    this.refractionRatio = source.refractionRatio;\n    this.wireframe = source.wireframe;\n    this.wireframeLinewidth = source.wireframeLinewidth;\n    this.wireframeLinecap = source.wireframeLinecap;\n    this.wireframeLinejoin = source.wireframeLinejoin;\n    this.skinning = source.skinning;\n    this.morphTargets = source.morphTargets;\n    return this;\n  }\n}\n","import { Vector4 } from \"../math/Vector4\";\nimport { Vector3 } from \"../math/Vector3\";\nimport { Vector2 } from \"../math/Vector2\";\nimport { Color } from \"../math/Color\";\nimport { _Math } from \"../math/Math\";\n/**\n * @author mrdoob / http://mrdoob.com/\n */\nexport type TypedArray = Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | Uint16Array | Int32Array | Uint32Array | Float32Array | Float64Array;\nexport type TypedArrayConstructor = Int8ArrayConstructor | Uint8ArrayConstructor | Uint8ClampedArrayConstructor | Int16ArrayConstructor | Uint16ArrayConstructor | Int32ArrayConstructor | Uint32ArrayConstructor | Float32ArrayConstructor | Float64ArrayConstructor;\nexport class BufferAttribute {\n  uuid: string = _Math.generateUUID();\n  array: TypedArray;\n  itemSize: number;\n  count: number;\n  normalized: boolean;\n  dynamic: boolean = false;\n  updateRange: any = { offset: 0, count: - 1 };\n  version: number = 0;\n  readonly isBufferAttribute: boolean = true;\n  readonly isInterleavedBufferAttribute: boolean = false;\n  constructor(array?: TypedArray, itemSize?: number, normalized: boolean = false) {\n    if (Array.isArray(array)) {\n      throw new TypeError('THREE.BufferAttribute: array should be a Typed Array.');\n    }\n    this.array = array;\n    this.itemSize = itemSize;\n    this.count = array !== undefined ? array.length / itemSize : 0;\n    this.normalized = normalized === true;\n  }\n  set needsUpdate(value: boolean) {\n    if (value === true) this.version ++;\n  }\n  setArray(array: TypedArray): void {\n    if (Array.isArray(array)) {\n      throw new TypeError('THREE.BufferAttribute: array should be a Typed Array.');\n    }\n    this.count = array !== undefined ? array.length / this.itemSize : 0;\n    this.array = array;\n  }\n  setDynamic(value: boolean): BufferAttribute {\n    this.dynamic = value;\n    return this;\n  }\n  copy(source: this): this {\n    this.array = new (source.array.constructor as any)(source.array);\n    this.itemSize = source.itemSize;\n    this.count = source.count;\n    this.normalized = source.normalized;\n    this.dynamic = source.dynamic;\n    return this;\n  }\n  copyAt(index1: number, attribute: BufferAttribute, index2: number): BufferAttribute {\n    index1 *= this.itemSize;\n    index2 *= attribute.itemSize;\n    for (let i = 0, l = this.itemSize; i < l; i ++) {\n      this.array[index1 + i] = attribute.array[index2 + i];\n    }\n    return this;\n  }\n  copyArray(array: number[] | TypedArray): BufferAttribute {\n    this.array.set(array as any, 0);\n    return this;\n  }\n  copyColorsArray(colors: Color[]): BufferAttribute {\n    const array = this.array;\n    let offset = 0;\n    for (let i = 0, l = colors.length; i < l; i ++) {\n      let color = colors[i];\n      if (color === undefined) {\n        console.warn('THREE.BufferAttribute.copyColorsArray(): color is undefined', i);\n        color = new Color();\n      }\n      array[offset ++] = color.r;\n      array[offset ++] = color.g;\n      array[offset ++] = color.b;\n    }\n    return this;\n  }\n  copyIndicesArray(indices: any[]): BufferAttribute {\n    const array = this.array;\n    let offset = 0;\n    for (let i = 0, l = indices.length; i < l; i ++) {\n      const index = indices[i];\n      array[offset ++] = index.a;\n      array[offset ++] = index.b;\n      array[offset ++] = index.c;\n    }\n    return this;\n  }\n  copyVector2sArray(vectors: Vector2[]): BufferAttribute {\n    const array = this.array;\n    let offset = 0;\n    for (let i = 0, l = vectors.length; i < l; i ++) {\n      let vector = vectors[i];\n      if (vector === undefined) {\n        console.warn('THREE.BufferAttribute.copyVector2sArray(): vector is undefined', i);\n        vector = new Vector2();\n      }\n      array[offset ++] = vector.x;\n      array[offset ++] = vector.y;\n    }\n    return this;\n  }\n  copyVector3sArray(vectors: Vector3[]): BufferAttribute {\n    const array = this.array;\n    let offset = 0;\n    for (let i = 0, l = vectors.length; i < l; i ++) {\n      let vector = vectors[i];\n      if (vector === undefined) {\n        console.warn('THREE.BufferAttribute.copyVector3sArray(): vector is undefined', i);\n        vector = new Vector3();\n      }\n      array[offset ++] = vector.x;\n      array[offset ++] = vector.y;\n      array[offset ++] = vector.z;\n    }\n    return this;\n  }\n  copyVector4sArray(vectors: Vector4[]): BufferAttribute {\n    const array = this.array;\n    let offset = 0;\n    for (let i = 0, l = vectors.length; i < l; i ++) {\n      let vector = vectors[i];\n      if (vector === undefined) {\n        console.warn('THREE.BufferAttribute.copyVector4sArray(): vector is undefined', i);\n        vector = new Vector4();\n      }\n      array[offset ++] = vector.x;\n      array[offset ++] = vector.y;\n      array[offset ++] = vector.z;\n      array[offset ++] = vector.w;\n    }\n    return this;\n  }\n  set(value: ArrayLike<number>, offset: number = 0): BufferAttribute {\n    this.array.set(value, offset);\n    return this;\n  }\n  getX(index: number): number {\n    return this.array[index * this.itemSize];\n  }\n  setX(index: number, x: number): BufferAttribute {\n    this.array[index * this.itemSize] = x;\n    return this;\n  }\n  getY(index: number): number {\n    return this.array[index * this.itemSize + 1];\n  }\n  setY(index: number, y: number): BufferAttribute {\n    this.array[index * this.itemSize + 1] = y;\n    return this;\n  }\n  getZ(index: number): number {\n    return this.array[index * this.itemSize + 2];\n  }\n  setZ(index: number, z: number): BufferAttribute {\n    this.array[index * this.itemSize + 2] = z;\n    return this;\n  }\n  getW(index: number): number {\n    return this.array[index * this.itemSize + 3];\n  }\n  setW(index: number, w: number): BufferAttribute {\n    this.array[index * this.itemSize + 3] = w;\n    return this;\n  }\n  setXY(index: number, x: number, y: number): BufferAttribute {\n    index *= this.itemSize;\n    this.array[index + 0] = x;\n    this.array[index + 1] = y;\n    return this;\n  }\n  setXYZ(index: number, x: number, y: number, z: number): BufferAttribute {\n    index *= this.itemSize;\n    this.array[index + 0] = x;\n    this.array[index + 1] = y;\n    this.array[index + 2] = z;\n    return this;\n  }\n  setXYZW(index: number, x: number, y: number, z: number, w: number): BufferAttribute {\n    index *= this.itemSize;\n    this.array[index + 0] = x;\n    this.array[index + 1] = y;\n    this.array[index + 2] = z;\n    this.array[index + 3] = w;\n    return this;\n  }\n  clone(): this {\n    return new (this.constructor as any)().copy(this);\n  }\n  get length(): number {\n    console.warn(\"THREE.BufferAttribute: .length has been deprecated. Please use .count.\");\n    return this.array.length;\n  }\n}\n//\nexport function Int8Attribute(array: ArrayLike<number> | number, itemSize: number): BufferAttribute {\n  return new BufferAttribute(new Int8Array(array as any), itemSize);\n}\nexport function Uint8Attribute(array: ArrayLike<number> | number, itemSize: number): BufferAttribute {\n  return new BufferAttribute(new Uint8Array(array as any), itemSize);\n}\nexport function Uint8ClampedAttribute(array: ArrayLike<number> | number, itemSize: number): BufferAttribute {\n  return new BufferAttribute(new Uint8ClampedArray(array as any), itemSize);\n}\nexport function Int16Attribute(array: ArrayLike<number> | number, itemSize: number): BufferAttribute {\n  return new BufferAttribute(new Int16Array(array as any), itemSize);\n}\nexport function Uint16Attribute(array: ArrayLike<number> | number, itemSize: number): BufferAttribute {\n  return new BufferAttribute(new Uint16Array(array as any), itemSize);\n}\nexport function Int32Attribute(array: ArrayLike<number> | number, itemSize: number): BufferAttribute {\n  return new BufferAttribute(new Int32Array(array as any), itemSize);\n}\nexport function Uint32Attribute(array: ArrayLike<number> | number, itemSize: number): BufferAttribute {\n  return new BufferAttribute(new Uint32Array(array as any), itemSize);\n}\nexport function Float32Attribute(array: ArrayLike<number> | number, itemSize: number): BufferAttribute {\n  return new BufferAttribute(new Float32Array(array as any), itemSize);\n}\nexport function Float64Attribute(array: ArrayLike<number> | number, itemSize: number): BufferAttribute {\n  return new BufferAttribute(new Float64Array(array as any), itemSize);\n}\n// Deprecated\nexport function DynamicBufferAttribute(array: TypedArray, itemSize: number): BufferAttribute {\n  console.warn('THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic(true) instead.');\n  return new BufferAttribute(array, itemSize).setDynamic(true);\n}\n","import { _Math } from \"../math/Math\";\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\nexport class InterleavedBufferAttribute {\n  uuid: string = _Math.generateUUID();\n  data: any;\n  itemSize: number;\n  offset: number;\n  normalized: boolean;\n  readonly isInterleavedBufferAttribute: boolean = true;\n  constructor(interleavedBuffer: any, itemSize: number, offset: number, normalized: boolean) {\n    this.data = interleavedBuffer;\n    this.itemSize = itemSize;\n    this.offset = offset;\n    this.normalized = normalized === true;\n  }\n  get count(): number {\n    return this.data.count;\n  }\n  get array(): any {\n    return this.data.array;\n  }\n  setX(index: number, x: number): InterleavedBufferAttribute {\n    this.data.array[index * this.data.stride + this.offset] = x;\n    return this;\n  }\n  setY(index: number, y: number): InterleavedBufferAttribute {\n    this.data.array[index * this.data.stride + this.offset + 1] = y;\n    return this;\n  }\n  setZ(index: number, z: number): InterleavedBufferAttribute {\n    this.data.array[index * this.data.stride + this.offset + 2] = z;\n    return this;\n  }\n  setW(index: number, w: number): InterleavedBufferAttribute {\n    this.data.array[index * this.data.stride + this.offset + 3] = w;\n    return this;\n  }\n  getX(index: number): number {\n    return this.data.array[index * this.data.stride + this.offset];\n  }\n  getY(index: number): number {\n    return this.data.array[index * this.data.stride + this.offset + 1];\n  }\n  getZ(index: number): number {\n    return this.data.array[index * this.data.stride + this.offset + 2];\n  }\n  getW(index: number): number {\n    return this.data.array[index * this.data.stride + this.offset + 3];\n  }\n  setXY(index: number, x: number, y: number): InterleavedBufferAttribute {\n    index = index * this.data.stride + this.offset;\n    this.data.array[index + 0] = x;\n    this.data.array[index + 1] = y;\n    return this;\n  }\n  setXYZ(index: number, x: number, y: number, z: number): InterleavedBufferAttribute {\n    index = index * this.data.stride + this.offset;\n    this.data.array[index + 0] = x;\n    this.data.array[index + 1] = y;\n    this.data.array[index + 2] = z;\n    return this;\n  }\n  setXYZW(index: number, x: number, y: number, z: number, w: number): InterleavedBufferAttribute {\n    index = index * this.data.stride + this.offset;\n    this.data.array[index + 0] = x;\n    this.data.array[index + 1] = y;\n    this.data.array[index + 2] = z;\n    this.data.array[index + 3] = w;\n    return this;\n  }\n}\n","import { Geometry } from \"./Geometry\";\nimport { EventDispatcher } from \"./EventDispatcher\";\nimport { Vector2 } from \"../math/Vector2\";\nimport { Vector3 } from \"../math/Vector3\";\nimport { Vector4 } from \"../math/Vector4\";\nimport { Color } from \"../math/Color\";\nimport { Sphere } from \"../math/Sphere\";\nimport { Box3 } from \"../math/Box3\";\nimport { _Math } from \"../math/Math\";\nimport { GeometryIdCount } from \"./Geometry\";\n/**\n * @author mrdoob / http://mrdoob.com/\n */\nexport class DirectGeometry extends EventDispatcher {\n  id: number = GeometryIdCount();\n  uuid: string = _Math.generateUUID();\n  name: string = '';\n  type: string = 'DirectGeometry';\n  indices: number[] = [];\n  vertices: Vector3[] = [];\n  normals: Vector3[] = [];\n  colors: Color[] = [];\n  uvs: Vector2[] = [];\n  uvs2: Vector2[] = [];\n  groups: any[] = [];\n  morphTargets: any = { position: undefined, normal: undefined };\n  skinWeights: Vector4[] = [];\n  skinIndices: Vector4[] = [];\n  // lineDistances: number[] = [];\n  boundingBox: Box3 = null;\n  boundingSphere: Sphere = null;\n  // update flags\n  verticesNeedUpdate: boolean = false;\n  normalsNeedUpdate: boolean = false;\n  colorsNeedUpdate: boolean = false;\n  uvsNeedUpdate: boolean = false;\n  groupsNeedUpdate: boolean = false;\n  constructor() {\n    super();\n  }\n  computeBoundingBox(): void {\n    if (this.boundingBox === null) {\n      this.boundingBox = new Box3();\n    }\n    this.boundingBox.setFromPoints(this.vertices);\n  }\n  computeBoundingSphere(): void {\n    if (this.boundingSphere === null) {\n      this.boundingSphere = new Sphere();\n    }\n    this.boundingSphere.setFromPoints(this.vertices);\n  }\n  computeFaceNormals(): void {\n    console.warn('THREE.DirectGeometry: computeFaceNormals() is not a method of this type of geometry.');\n  }\n  computeVertexNormals(): void {\n    console.warn('THREE.DirectGeometry: computeVertexNormals() is not a method of this type of geometry.');\n  }\n  computeGroups(geometry: Geometry): void {\n    let group: any;\n    const groups = [];\n    let materialIndex;\n    const faces = geometry.faces;\n    let i;\n    for (i = 0; i < faces.length; i ++) {\n      const face = faces[i];\n      // materials\n      if (face.materialIndex !== materialIndex) {\n        materialIndex = face.materialIndex;\n        if (group !== undefined) {\n          group.count = (i * 3) - group.start;\n          groups.push(group);\n        }\n        group = {\n          start: i * 3,\n          materialIndex: materialIndex\n        };\n      }\n    }\n    if (group !== undefined) {\n      group.count = (i * 3) - group.start;\n      groups.push(group);\n    }\n    this.groups = groups;\n  }\n  fromGeometry(geometry: Geometry) {\n    const faces = geometry.faces;\n    const vertices = geometry.vertices;\n    const faceVertexUvs = geometry.faceVertexUvs;\n    const hasFaceVertexUv = faceVertexUvs[0] && faceVertexUvs[0].length > 0;\n    const hasFaceVertexUv2 = faceVertexUvs[1] && faceVertexUvs[1].length > 0;\n    // morphs\n    const morphTargets = geometry.morphTargets;\n    const morphTargetsLength = morphTargets.length;\n    let morphTargetsPosition;\n    if (morphTargetsLength > 0) {\n      morphTargetsPosition = [];\n      for (let i = 0; i < morphTargetsLength; i ++) {\n        morphTargetsPosition[i] = [];\n      }\n      this.morphTargets.position = morphTargetsPosition;\n    }\n    const morphNormals = geometry.morphNormals;\n    const morphNormalsLength = morphNormals.length;\n    let morphTargetsNormal;\n    if (morphNormalsLength > 0) {\n      morphTargetsNormal = [];\n      for (let i = 0; i < morphNormalsLength; i ++) {\n        morphTargetsNormal[i] = [];\n      }\n      this.morphTargets.normal = morphTargetsNormal;\n    }\n    // skins\n    const skinIndices = geometry.skinIndices;\n    const skinWeights = geometry.skinWeights;\n    const hasSkinIndices = skinIndices.length === vertices.length;\n    const hasSkinWeights = skinWeights.length === vertices.length;\n    //\n    for (let i = 0; i < faces.length; i ++) {\n      const face = faces[i];\n      this.vertices.push(vertices[face.a], vertices[face.b], vertices[face.c]);\n      const vertexNormals = face.vertexNormals;\n      if (vertexNormals.length === 3) {\n        this.normals.push(vertexNormals[0], vertexNormals[1], vertexNormals[2]);\n      } else {\n        const normal = face.normal;\n        this.normals.push(normal, normal, normal);\n      }\n      const vertexColors = face.vertexColors;\n      if (vertexColors.length === 3) {\n        this.colors.push(vertexColors[0], vertexColors[1], vertexColors[2]);\n      } else {\n        const color = face.color;\n        this.colors.push(color, color, color);\n      }\n      if (hasFaceVertexUv === true) {\n        const vertexUvs = faceVertexUvs[0][i];\n        if (vertexUvs !== undefined) {\n          this.uvs.push(vertexUvs[0], vertexUvs[1], vertexUvs[2]);\n        } else {\n          console.warn('THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ', i);\n          this.uvs.push(new Vector2(), new Vector2(), new Vector2());\n        }\n      }\n      if (hasFaceVertexUv2 === true) {\n        const vertexUvs = faceVertexUvs[1][i];\n        if (vertexUvs !== undefined) {\n          this.uvs2.push(vertexUvs[0], vertexUvs[1], vertexUvs[2]);\n        } else {\n          console.warn('THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ', i);\n          this.uvs2.push(new Vector2(), new Vector2(), new Vector2());\n        }\n      }\n      // morphs\n      for (let j = 0; j < morphTargetsLength; j ++) {\n        const morphTarget = morphTargets[j].vertices;\n        morphTargetsPosition[j].push(morphTarget[face.a], morphTarget[face.b], morphTarget[face.c]);\n      }\n      for (let j = 0; j < morphNormalsLength; j ++) {\n        const morphNormal = morphNormals[j].vertexNormals[i];\n        morphTargetsNormal[j].push(morphNormal.a, morphNormal.b, morphNormal.c);\n      }\n      // skins\n      if (hasSkinIndices) {\n        this.skinIndices.push(skinIndices[face.a], skinIndices[face.b], skinIndices[face.c]);\n      }\n      if (hasSkinWeights) {\n        this.skinWeights.push(skinWeights[face.a], skinWeights[face.b], skinWeights[face.c]);\n      }\n    }\n    this.computeGroups(geometry);\n    this.verticesNeedUpdate = geometry.verticesNeedUpdate;\n    this.normalsNeedUpdate = geometry.normalsNeedUpdate;\n    this.colorsNeedUpdate = geometry.colorsNeedUpdate;\n    this.uvsNeedUpdate = geometry.uvsNeedUpdate;\n    this.groupsNeedUpdate = geometry.groupsNeedUpdate;\n    return this;\n  }\n  dispose(): void {\n    this.dispatchEvent({ type: 'dispose' });\n  }\n}\n","import { Material, MaterialParameters } from \"./Material\";\nimport { Color } from \"../math/Color\";\nimport { Texture } from \"../textures/Texture\";\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *  map: new THREE.Texture(<Image>),\n *\n *  size: <float>,\n *  sizeAttenuation: <bool>\n * }\n */\nexport interface PointsMaterialParameters extends MaterialParameters {\n  color?: number;\n  opacity?: number;\n  map?: Texture;\n\n  size?: any;\n  sizeAttenuation?: boolean;\n}\nexport class PointsMaterial extends Material {\n  readonly isPointsMaterial: boolean = true;\n  constructor(parameters?: PointsMaterialParameters) {\n    super();\n    this.type = 'PointsMaterial';\n    this.color = new Color(0xffffff);\n    this.map = null;\n    this.size = 1;\n    this.sizeAttenuation = true;\n    this.lights = false;\n    this.setValues(parameters);\n  }\n  copy(source: this): this {\n    super.copy(source);\n    this.color.copy(source.color);\n    this.map = source.map;\n    this.size = source.size;\n    this.sizeAttenuation = source.sizeAttenuation;\n    return this;\n  }\n}\n","import { Sphere } from \"../math/Sphere\";\nimport { Ray } from \"../math/Ray\";\nimport { Matrix4 } from \"../math/Matrix4\";\nimport { Object3D } from \"../core/Object3D\";\nimport { Vector3 } from \"../math/Vector3\";\nimport { Material } from \"../materials/Material\";\nimport { PointsMaterial } from \"../materials/PointsMaterial\";\nimport { Geometry } from \"../core/Geometry\";\nimport { BufferGeometry } from \"../core/BufferGeometry\";\nimport { Raycaster, Intersect } from \"../core/Raycaster\";\n/**\n * @author alteredq / http://alteredqualia.com/\n */\nexport class Points extends Object3D {\n  readonly isPoints: boolean = true;\n  constructor(geometry: Geometry | BufferGeometry = new BufferGeometry(), material: Material = new PointsMaterial({ color: Math.random() * 0xffffff })) {\n    super();\n    this.type = 'Points';\n    this.geometry = geometry;\n    this.material = material;\n  }\n  raycast(raycaster: Raycaster, intersects: Intersect[]): Intersect[] {\n    const inverseMatrix = new Matrix4();\n    const ray = new Ray();\n    const sphere = new Sphere();\n    //return function raycast(raycaster, intersects) {\n      const object = this;\n      const geometry = this.geometry;\n      const matrixWorld = this.matrixWorld;\n      const threshold = raycaster.params.Points.threshold;\n      // Checking boundingSphere distance to ray\n      if (geometry.boundingSphere === null) geometry.computeBoundingSphere();\n      sphere.copy(geometry.boundingSphere);\n      sphere.applyMatrix4(matrixWorld);\n      if (raycaster.ray.intersectsSphere(sphere) === false) return intersects;\n      //\n      inverseMatrix.getInverse(matrixWorld);\n      ray.copy(raycaster.ray).applyMatrix4(inverseMatrix);\n      const localThreshold = threshold / ((this.scale.x + this.scale.y + this.scale.z) / 3);\n      const localThresholdSq = localThreshold * localThreshold;\n      const position = new Vector3();\n      function testPoint(point: Vector3, index: number): void {\n        const rayPointDistanceSq = ray.distanceSqToPoint(point);\n        if (rayPointDistanceSq < localThresholdSq) {\n          const intersectPoint = ray.closestPointToPoint(point);\n          intersectPoint.applyMatrix4(matrixWorld);\n          const distance = raycaster.ray.origin.distanceTo(intersectPoint);\n          if (distance < raycaster.near || distance > raycaster.far) return;\n          intersects.push({\n            distance: distance,\n            distanceToRay: Math.sqrt(rayPointDistanceSq),\n            point: intersectPoint.clone(),\n            index: index,\n            face: null,\n            object: object\n          });\n        }\n      }\n      if ((geometry && geometry instanceof BufferGeometry)) {\n        const index = geometry.index;\n        const attributes = geometry.attributes;\n        const positions = attributes.position.array;\n        if (index !== null) {\n          const indices = index.array;\n          for (let i = 0, il = indices.length; i < il; i ++) {\n            const a = indices[i];\n            position.fromArray(positions, a * 3);\n            testPoint(position, a);\n          }\n        } else {\n          for (let i = 0, l = positions.length / 3; i < l; i ++) {\n            position.fromArray(positions, i * 3);\n            testPoint(position, i);\n          }\n        }\n      } else if (geometry && geometry instanceof Geometry) {\n        const vertices = geometry.vertices;\n        for (let i = 0, l = vertices.length; i < l; i ++) {\n          testPoint(vertices[i], i);\n        }\n      }\n      return intersects;\n    //};\n  }\n  clone(): this {\n    return new (this.constructor as any)(this.geometry, this.material).copy(this);\n  }\n}\n","import { Material, MaterialParameters } from \"./Material\";\nimport { Color } from \"../math/Color\";\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  linewidth: <float>,\n *  linecap: \"round\",\n *  linejoin: \"round\"\n * }\n */\nexport interface LineBasicMaterialParameters extends MaterialParameters {\n  fog?: any;\n  color?: any;\n  opacity?: any;\n  linewidth?: any;\n  depthTest?: any;\n  depthWrite?: any;\n  transparent?: any;\n  vertexColors?: any;\n}\nexport class LineBasicMaterial extends Material {\n  linewidth: number;\n  linecap: string;\n  linejoin: string;\n  readonly isLineBasicMaterial: boolean = true;\n  constructor(parameters?: LineBasicMaterialParameters) {\n    super();\n    this.type = 'LineBasicMaterial';\n    this.color = new Color(0xffffff);\n    this.linewidth = 1;\n    this.linecap = 'round';\n    this.linejoin = 'round';\n    this.lights = false;\n    this.setValues(parameters);\n  }\n  copy(source: this): this {\n    super.copy(source);\n    this.color.copy(source.color);\n    this.linewidth = source.linewidth;\n    this.linecap = source.linecap;\n    this.linejoin = source.linejoin;\n    return this;\n  }\n}\n","import { Sphere } from \"../math/Sphere\";\nimport { Ray } from \"../math/Ray\";\nimport { Matrix4 } from \"../math/Matrix4\";\nimport { Object3D } from \"../core/Object3D\";\nimport { Vector3 } from \"../math/Vector3\";\nimport { Material } from \"../materials/Material\";\nimport { LineBasicMaterial } from \"../materials/LineBasicMaterial\";\nimport { Geometry } from \"../core/Geometry\";\nimport { BufferGeometry } from \"../core/BufferGeometry\";\nimport { Raycaster, Intersect } from \"../core/Raycaster\";\n/**\n * @author mrdoob / http://mrdoob.com/\n */\nexport class Line extends Object3D {\n  protected _step: number = 1;\n  readonly isLine: boolean = true;\n  readonly isLineSegments: boolean = false;\n  constructor(geometry: Geometry | BufferGeometry = new BufferGeometry(), material: Material = new LineBasicMaterial({ color: Math.random() * 0xffffff }), mode?: number) {\n    super();\n    if (mode === 1) {\n      console.warn('THREE.Line: parameter THREE.LinePieces no longer supported. Created THREE.LineSegments instead.');\n      //return new LineSegments(geometry, material);\n    }\n    this.type = 'Line';\n    this.geometry = geometry;\n    this.material = material;\n  }\n  raycast(raycaster: Raycaster, intersects: Intersect[]): Intersect[] {\n    let inverseMatrix = new Matrix4();\n    let ray = new Ray();\n    let sphere = new Sphere();\n    //return function raycast(raycaster, intersects) {\n      let precision = raycaster.linePrecision;\n      let precisionSq = precision * precision;\n      let geometry = this.geometry;\n      let matrixWorld = this.matrixWorld;\n      // Checking boundingSphere distance to ray\n      if (geometry.boundingSphere === null) geometry.computeBoundingSphere();\n      sphere.copy(geometry.boundingSphere);\n      sphere.applyMatrix4(matrixWorld);\n      if (raycaster.ray.intersectsSphere(sphere) === false) return intersects;\n      //\n      inverseMatrix.getInverse(matrixWorld);\n      ray.copy(raycaster.ray).applyMatrix4(inverseMatrix);\n      let vStart = new Vector3();\n      let vEnd = new Vector3();\n      let interSegment = new Vector3();\n      let interRay = new Vector3();\n      let step = this._step; //(this && this instanceof LineSegments) ? 2 : 1;\n      if ((geometry && geometry instanceof BufferGeometry)) {\n        let index = geometry.index;\n        let attributes = geometry.attributes;\n        let positions = attributes.position.array;\n        if (index !== null) {\n          let indices = index.array;\n          for (let i = 0, l = indices.length - 1; i < l; i += step) {\n            let a = indices[i];\n            let b = indices[i + 1];\n            vStart.fromArray(positions, a * 3);\n            vEnd.fromArray(positions, b * 3);\n            let distSq = ray.distanceSqToSegment(vStart, vEnd, interRay, interSegment);\n            if (distSq > precisionSq) continue;\n            interRay.applyMatrix4(this.matrixWorld); //Move back to world space for distance calculation\n            let distance = raycaster.ray.origin.distanceTo(interRay);\n            if (distance < raycaster.near || distance > raycaster.far) continue;\n            intersects.push({\n              distance: distance,\n              // What do we want? intersection point on the ray or on the segment??\n              // point: raycaster.ray.at(distance),\n              point: interSegment.clone().applyMatrix4(this.matrixWorld),\n              index: i,\n              face: null,\n              faceIndex: null,\n              object: this\n            });\n          }\n        } else {\n          for (let i = 0, l = positions.length / 3 - 1; i < l; i += step) {\n            vStart.fromArray(positions, 3 * i);\n            vEnd.fromArray(positions, 3 * i + 3);\n            let distSq = ray.distanceSqToSegment(vStart, vEnd, interRay, interSegment);\n            if (distSq > precisionSq) continue;\n            interRay.applyMatrix4(this.matrixWorld); //Move back to world space for distance calculation\n            let distance = raycaster.ray.origin.distanceTo(interRay);\n            if (distance < raycaster.near || distance > raycaster.far) continue;\n            intersects.push({\n              distance: distance,\n              // What do we want? intersection point on the ray or on the segment??\n              // point: raycaster.ray.at(distance),\n              point: interSegment.clone().applyMatrix4(this.matrixWorld),\n              index: i,\n              face: null,\n              faceIndex: null,\n              object: this\n            });\n          }\n        }\n      } else if ((geometry && geometry instanceof Geometry)) {\n        let vertices = geometry.vertices;\n        let nbVertices = vertices.length;\n        for (let i = 0; i < nbVertices - 1; i += step) {\n          let distSq = ray.distanceSqToSegment(vertices[i], vertices[i + 1], interRay, interSegment);\n          if (distSq > precisionSq) continue;\n          interRay.applyMatrix4(this.matrixWorld); //Move back to world space for distance calculation\n          let distance = raycaster.ray.origin.distanceTo(interRay);\n          if (distance < raycaster.near || distance > raycaster.far) continue;\n          intersects.push({\n            distance: distance,\n            // What do we want? intersection point on the ray or on the segment??\n            // point: raycaster.ray.at(distance),\n            point: interSegment.clone().applyMatrix4(this.matrixWorld),\n            index: i,\n            face: null,\n            faceIndex: null,\n            object: this\n          });\n        }\n      }\n      return intersects;\n    //};\n  }\n  clone(): this {\n    return new (this.constructor as any)(this.geometry, this.material).copy(this);\n  }\n}\n","import { Vector3 } from \"../math/Vector3\";\nimport { Box3 } from \"../math/Box3\";\nimport { EventDispatcher } from \"./EventDispatcher\";\nimport { BufferAttribute, Float32Attribute } from \"./BufferAttribute\";\nimport { InterleavedBufferAttribute } from \"./InterleavedBufferAttribute\";\nimport { Sphere } from \"../math/Sphere\";\nimport { DirectGeometry } from \"./DirectGeometry\";\nimport { Object3D } from \"./Object3D\";\nimport { Matrix4 } from \"../math/Matrix4\";\nimport { Matrix3 } from \"../math/Matrix3\";\nimport { _Math } from \"../math/Math\";\nimport { Geometry, GeometryIdCount } from \"./Geometry\";\nimport { Points } from \"../objects/Points\";\nimport { Line } from \"../objects/Line\";\nimport { Mesh } from \"../objects/Mesh\";\nimport { Bone } from \"../objects/Bone\";\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\nexport interface BufferGeometryRange {\n  start: number;\n  count: number;\n}\nexport interface BufferGeometryGroup {\n  start: number;\n  count: number;\n  materialIndex: number;\n}\nexport class BufferGeometry extends EventDispatcher {\n  id: number = GeometryIdCount();\n  uuid: string = _Math.generateUUID();\n  name: string = '';\n  type: string = 'BufferGeometry';\n  index: BufferAttribute = null;\n  attributes: any = {\n    //position: undefined,\n    //normal: undefined,\n    //color: undefined,\n    //uv: undefined,\n    //lineDistance: undefined,\n    //skinWeight: undefined\n  };\n  parameters: any = undefined;\n  morphTargets: any; // Mesh.ts\n  bones: Bone[];\n  morphAttributes: any = {};\n  groups: BufferGeometryGroup[] = [];\n  boundingBox: Box3 = null;\n  boundingSphere: Sphere = null;\n  drawRange: BufferGeometryRange = { start: 0, count: Infinity };\n  maxInstancedCount: number;\n  // {\n  iks;\n  grants;\n  rigidBodies;\n  constraints;\n  mmdFormat;\n  // }\n  readonly isGeometry: boolean = false;\n  readonly isBufferGeometry: boolean = true;\n  static MaxIndex: number = 65535;\n  constructor() {\n    super();\n  }\n  getIndex(): BufferAttribute {\n    return this.index;\n  }\n  setIndex(index: BufferAttribute): void {\n    this.index = index;\n  }\n  addAttribute(name: string, attribute: BufferAttribute): BufferGeometry {\n    if ((attribute && attribute instanceof BufferAttribute) === false && (attribute && attribute instanceof InterleavedBufferAttribute) === false) {\n      console.warn('THREE.BufferGeometry: .addAttribute() now expects (name, attribute).');\n      this.addAttribute(name, new BufferAttribute(arguments[1], arguments[2]));\n      return this;\n    }\n    if (name === 'index') {\n      console.warn('THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.');\n      this.setIndex(attribute);\n      return this;\n    }\n    this.attributes[name] = attribute;\n    return this;\n  }\n  getAttribute(name: string): BufferAttribute {\n    return this.attributes[name];\n  }\n  removeAttribute(name: string): BufferGeometry {\n    delete this.attributes[name];\n    return this;\n  }\n  addGroup(start: number, count: number, materialIndex: number = 0): void {\n    this.groups.push({\n      start: start,\n      count: count,\n      materialIndex: materialIndex\n    });\n  }\n  clearGroups(): void {\n    this.groups = [];\n  }\n  setDrawRange(start: number, count: number): void {\n    this.drawRange.start = start;\n    this.drawRange.count = count;\n  }\n  applyMatrix(matrix: Matrix4): BufferGeometry {\n    const position = this.attributes.position;\n    if (position !== undefined) {\n      matrix.applyToVector3Array(position.array);\n      position.needsUpdate = true;\n    }\n    const normal = this.attributes.normal;\n    if (normal !== undefined) {\n      const normalMatrix = new Matrix3().getNormalMatrix(matrix);\n      normalMatrix.applyToVector3Array(normal.array);\n      normal.needsUpdate = true;\n    }\n    if (this.boundingBox !== null) {\n      this.computeBoundingBox();\n    }\n    if (this.boundingSphere !== null) {\n      this.computeBoundingSphere();\n    }\n    return this;\n  }\n  rotateX(angle: number): BufferGeometry {\n    // rotate geometry around world x-axis\n    const m1 = new Matrix4();\n    //return function rotateX(angle) {\n      m1.makeRotationX(angle);\n      this.applyMatrix(m1);\n      return this;\n    //};\n  }\n  rotateY(angle: number): BufferGeometry {\n    // rotate geometry around world y-axis\n    const m1 = new Matrix4();\n    //return function rotateY(angle) {\n      m1.makeRotationY(angle);\n      this.applyMatrix(m1);\n      return this;\n    //};\n  }\n  rotateZ(angle: number): BufferGeometry {\n    // rotate geometry around world z-axis\n    const m1 = new Matrix4();\n    //return function rotateZ(angle) {\n      m1.makeRotationZ(angle);\n      this.applyMatrix(m1);\n      return this;\n    //};\n  }\n  translate(x: number, y: number, z: number): BufferGeometry {\n    // translate geometry\n    const m1 = new Matrix4();\n    //return function translate(x, y, z) {\n      m1.makeTranslation(x, y, z);\n      this.applyMatrix(m1);\n      return this;\n    //};\n  }\n  scale(x: number, y: number, z: number): BufferGeometry {\n    // scale geometry\n    const m1 = new Matrix4();\n    //return function scale(x, y, z) {\n      m1.makeScale(x, y, z);\n      this.applyMatrix(m1);\n      return this;\n    //};\n  }\n  lookAt(vector: Vector3): void {\n    const obj = new Object3D();\n    //return function lookAt(vector) {\n      obj.lookAt(vector);\n      obj.updateMatrix();\n      this.applyMatrix(obj.matrix);\n    //};\n  }\n  center(): Vector3 {\n    this.computeBoundingBox();\n    const offset = this.boundingBox.getCenter().negate();\n    this.translate(offset.x, offset.y, offset.z);\n    return offset;\n  }\n  setFromObject(object: any): BufferGeometry {\n    // console.log('THREE.BufferGeometry.setFromObject(). Converting', object, this);\n    const geometry = object.geometry;\n    if ((object && object instanceof Points) || (object && object instanceof Line)) {\n      const positions = Float32Attribute(geometry.vertices.length * 3, 3);\n      const colors = Float32Attribute(geometry.colors.length * 3, 3);\n      this.addAttribute('position', positions.copyVector3sArray(geometry.vertices));\n      this.addAttribute('color', colors.copyColorsArray(geometry.colors));\n      if (geometry.lineDistances && geometry.lineDistances.length === geometry.vertices.length) {\n        const lineDistances = Float32Attribute(geometry.lineDistances.length, 1);\n        this.addAttribute('lineDistance', lineDistances.copyArray(geometry.lineDistances));\n      }\n      if (geometry.boundingSphere !== null) {\n        this.boundingSphere = geometry.boundingSphere.clone();\n      }\n      if (geometry.boundingBox !== null) {\n        this.boundingBox = geometry.boundingBox.clone();\n      }\n    } else if ((object && object instanceof Mesh)) {\n      if ((geometry && geometry instanceof Geometry)) {\n        this.fromGeometry(geometry);\n      }\n    }\n    return this;\n  }\n  updateFromObject(object: any): BufferGeometry {\n    let geometry = object.geometry;\n    if ((object && object instanceof Mesh)) {\n      let direct = geometry.__directGeometry;\n      if (geometry.elementsNeedUpdate === true) {\n        direct = undefined;\n        geometry.elementsNeedUpdate = false;\n      }\n      if (direct === undefined) {\n        return this.fromGeometry(geometry);\n      }\n      direct.verticesNeedUpdate = geometry.verticesNeedUpdate;\n      direct.normalsNeedUpdate = geometry.normalsNeedUpdate;\n      direct.colorsNeedUpdate = geometry.colorsNeedUpdate;\n      direct.uvsNeedUpdate = geometry.uvsNeedUpdate;\n      direct.groupsNeedUpdate = geometry.groupsNeedUpdate;\n      geometry.verticesNeedUpdate = false;\n      geometry.normalsNeedUpdate = false;\n      geometry.colorsNeedUpdate = false;\n      geometry.uvsNeedUpdate = false;\n      geometry.groupsNeedUpdate = false;\n      geometry = direct;\n    }\n    let attribute;\n    if (geometry.verticesNeedUpdate === true) {\n      attribute = this.attributes.position;\n      if (attribute !== undefined) {\n        attribute.copyVector3sArray(geometry.vertices);\n        attribute.needsUpdate = true;\n      }\n      geometry.verticesNeedUpdate = false;\n    }\n    if (geometry.normalsNeedUpdate === true) {\n      attribute = this.attributes.normal;\n      if (attribute !== undefined) {\n        attribute.copyVector3sArray(geometry.normals);\n        attribute.needsUpdate = true;\n      }\n      geometry.normalsNeedUpdate = false;\n    }\n    if (geometry.colorsNeedUpdate === true) {\n      attribute = this.attributes.color;\n      if (attribute !== undefined) {\n        attribute.copyColorsArray(geometry.colors);\n        attribute.needsUpdate = true;\n      }\n      geometry.colorsNeedUpdate = false;\n    }\n    if (geometry.uvsNeedUpdate) {\n      attribute = this.attributes.uv;\n      if (attribute !== undefined) {\n        attribute.copyVector2sArray(geometry.uvs);\n        attribute.needsUpdate = true;\n      }\n      geometry.uvsNeedUpdate = false;\n    }\n    if (geometry.lineDistancesNeedUpdate) {\n      attribute = this.attributes.lineDistance;\n      if (attribute !== undefined) {\n        attribute.copyArray(geometry.lineDistances);\n        attribute.needsUpdate = true;\n      }\n      geometry.lineDistancesNeedUpdate = false;\n    }\n    if (geometry.groupsNeedUpdate) {\n      geometry.computeGroups(object.geometry);\n      this.groups = geometry.groups;\n      geometry.groupsNeedUpdate = false;\n    }\n    return this;\n  }\n  fromGeometry(geometry: any): BufferGeometry {\n    geometry.__directGeometry = new DirectGeometry().fromGeometry(geometry);\n    return this.fromDirectGeometry(geometry.__directGeometry);\n  }\n  fromDirectGeometry(geometry: any): BufferGeometry {\n    const positions = new Float32Array(geometry.vertices.length * 3);\n    this.addAttribute('position', new BufferAttribute(positions, 3).copyVector3sArray(geometry.vertices));\n    if (geometry.normals.length > 0) {\n      const normals = new Float32Array(geometry.normals.length * 3);\n      this.addAttribute('normal', new BufferAttribute(normals, 3).copyVector3sArray(geometry.normals));\n    }\n    if (geometry.colors.length > 0) {\n      const colors = new Float32Array(geometry.colors.length * 3);\n      this.addAttribute('color', new BufferAttribute(colors, 3).copyColorsArray(geometry.colors));\n    }\n    if (geometry.uvs.length > 0) {\n      const uvs = new Float32Array(geometry.uvs.length * 2);\n      this.addAttribute('uv', new BufferAttribute(uvs, 2).copyVector2sArray(geometry.uvs));\n    }\n    if (geometry.uvs2.length > 0) {\n      const uvs2 = new Float32Array(geometry.uvs2.length * 2);\n      this.addAttribute('uv2', new BufferAttribute(uvs2, 2).copyVector2sArray(geometry.uvs2));\n    }\n    if (geometry.indices.length > 0) {\n      const TypeArray = geometry.vertices.length > 65535 ? Uint32Array : Uint16Array;\n      const indices = new TypeArray(geometry.indices.length * 3);\n      this.setIndex(new BufferAttribute(indices, 1).copyIndicesArray(geometry.indices));\n    }\n    // groups\n    this.groups = geometry.groups;\n    // morphs\n    for (let name in geometry.morphTargets) {\n      if (!geometry.morphTargets[name]) continue;\n      const array = [];\n      const morphTargets = geometry.morphTargets[name];\n      for (let i = 0, l = morphTargets.length; i < l; i ++) {\n        const morphTarget = morphTargets[i];\n        const attribute = Float32Attribute(morphTarget.length * 3, 3);\n        array.push(attribute.copyVector3sArray(morphTarget));\n      }\n      this.morphAttributes[name] = array;\n    }\n    // skinning\n    if (geometry.skinIndices.length > 0) {\n      const skinIndices = Float32Attribute(geometry.skinIndices.length * 4, 4);\n      this.addAttribute('skinIndex', skinIndices.copyVector4sArray(geometry.skinIndices));\n    }\n    if (geometry.skinWeights.length > 0) {\n      const skinWeights = Float32Attribute(geometry.skinWeights.length * 4, 4);\n      this.addAttribute('skinWeight', skinWeights.copyVector4sArray(geometry.skinWeights));\n    }\n    //\n    if (geometry.boundingSphere !== null) {\n      this.boundingSphere = geometry.boundingSphere.clone();\n    }\n    if (geometry.boundingBox !== null) {\n      this.boundingBox = geometry.boundingBox.clone();\n    }\n    return this;\n  }\n  computeBoundingBox(): void {\n    if (this.boundingBox === null) {\n      this.boundingBox = new Box3();\n    }\n    const positions = this.attributes.position.array;\n    if (positions !== undefined) {\n      this.boundingBox.setFromArray(positions);\n    } else {\n      this.boundingBox.makeEmpty();\n    }\n    if (isNaN(this.boundingBox.min.x) || isNaN(this.boundingBox.min.y) || isNaN(this.boundingBox.min.z)) {\n      console.error('THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this);\n    }\n  }\n  computeBoundingSphere(): void {\n    const box = new Box3();\n    const vector = new Vector3();\n    //return function computeBoundingSphere() {\n      if (this.boundingSphere === null) {\n        this.boundingSphere = new Sphere();\n      }\n      const positions = this.attributes.position;\n      if (positions) {\n        const array = positions.array;\n        const center = this.boundingSphere.center;\n        box.setFromArray(array);\n        box.getCenter(center);\n        // hoping to find a boundingSphere with a radius smaller than the\n        // boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n        let maxRadiusSq = 0;\n        for (let i = 0, il = array.length; i < il; i += 3) {\n          vector.fromArray(array, i);\n          maxRadiusSq = Math.max(maxRadiusSq, center.distanceToSquared(vector));\n        }\n        this.boundingSphere.radius = Math.sqrt(maxRadiusSq);\n        if (isNaN(this.boundingSphere.radius)) {\n          console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this);\n        }\n      }\n    //};\n  }\n  computeFaceNormals(): void {\n    // backwards compatibility\n  }\n  computeVertexNormals(): void {\n    const index = this.index;\n    const attributes = this.attributes;\n    const groups = this.groups;\n    if (attributes.position) {\n      const positions = attributes.position.array;\n      if (attributes.normal === undefined) {\n        this.addAttribute('normal', new BufferAttribute(new Float32Array(positions.length), 3));\n      } else {\n        // reset existing normals to zero\n        const array = attributes.normal.array;\n        for (let i = 0, il = array.length; i < il; i ++) {\n          array[i] = 0;\n        }\n      }\n      const normals = attributes.normal.array;\n      let vA, vB, vC,\n      pA = new Vector3(),\n      pB = new Vector3(),\n      pC = new Vector3(),\n      cb = new Vector3(),\n      ab = new Vector3();\n      // indexed elements\n      if (index) {\n        const indices = index.array;\n        if (groups.length === 0) {\n          this.addGroup(0, indices.length);\n        }\n        for (let j = 0, jl = groups.length; j < jl; ++ j) {\n          const group = groups[j];\n          const start = group.start;\n          const count = group.count;\n          for (let i = start, il = start + count; i < il; i += 3) {\n            vA = indices[i + 0] * 3;\n            vB = indices[i + 1] * 3;\n            vC = indices[i + 2] * 3;\n            pA.fromArray(positions, vA);\n            pB.fromArray(positions, vB);\n            pC.fromArray(positions, vC);\n            cb.subVectors(pC, pB);\n            ab.subVectors(pA, pB);\n            cb.cross(ab);\n            normals[vA] += cb.x;\n            normals[vA + 1] += cb.y;\n            normals[vA + 2] += cb.z;\n            normals[vB] += cb.x;\n            normals[vB + 1] += cb.y;\n            normals[vB + 2] += cb.z;\n            normals[vC] += cb.x;\n            normals[vC + 1] += cb.y;\n            normals[vC + 2] += cb.z;\n          }\n        }\n      } else {\n        // non-indexed elements (unconnected triangle soup)\n        for (let i = 0, il = positions.length; i < il; i += 9) {\n          pA.fromArray(positions, i);\n          pB.fromArray(positions, i + 3);\n          pC.fromArray(positions, i + 6);\n          cb.subVectors(pC, pB);\n          ab.subVectors(pA, pB);\n          cb.cross(ab);\n          normals[i] = cb.x;\n          normals[i + 1] = cb.y;\n          normals[i + 2] = cb.z;\n          normals[i + 3] = cb.x;\n          normals[i + 4] = cb.y;\n          normals[i + 5] = cb.z;\n          normals[i + 6] = cb.x;\n          normals[i + 7] = cb.y;\n          normals[i + 8] = cb.z;\n        }\n      }\n      this.normalizeNormals();\n      attributes.normal.needsUpdate = true;\n    }\n  }\n  merge(geometry: BufferGeometry, offset: number = 0): BufferGeometry {\n    if ((geometry && geometry instanceof BufferGeometry) === false) {\n      console.error('THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.', geometry);\n      return this;\n    }\n    const attributes = this.attributes;\n    for (let key in attributes) {\n      const attribute1 = attributes[key];\n      if (attribute1 === undefined) continue;\n      const attributeArray1 = attribute1.array;\n      const attribute2 = geometry.attributes[key];\n      if (attribute2 === undefined) continue;\n      const attributeArray2 = attribute2.array;\n      const attributeSize = attribute2.itemSize;\n      for (let i = 0, j = attributeSize * offset; i < attributeArray2.length; i ++, j ++) {\n        attributeArray1[j] = attributeArray2[i];\n      }\n    }\n    return this;\n  }\n  normalizeNormals(): void {\n    const normals = this.attributes.normal.array;\n    for (let i = 0, il = normals.length; i < il; i += 3) {\n      const x = normals[i];\n      const y = normals[i + 1];\n      const z = normals[i + 2];\n      const n = 1.0 / Math.sqrt(x * x + y * y + z * z);\n      normals[i] *= n;\n      normals[i + 1] *= n;\n      normals[i + 2] *= n;\n    }\n  }\n  toNonIndexed(): BufferGeometry {\n    if (this.index === null) {\n      console.warn('THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed.');\n      return this;\n    }\n    const geometry2 = new BufferGeometry();\n    const indices = this.index.array;\n    const attributes = this.attributes;\n    for (let name in attributes) {\n      const attribute = attributes[name];\n      if (attribute === undefined) continue;\n      const array = attribute.array;\n      const itemSize = attribute.itemSize;\n      const array2 = new array.constructor(indices.length * itemSize);\n      let index = 0, index2 = 0;\n      for (let i = 0, l = indices.length; i < l; i ++) {\n        index = indices[i] * itemSize;\n        for (let j = 0; j < itemSize; j ++) {\n          array2[index2 ++] = array[index ++];\n        }\n      }\n      geometry2.addAttribute(name, new BufferAttribute(array2, itemSize));\n    }\n    return geometry2;\n  }\n  toJSON(meta?: any): any {\n    const data: any = {\n      metadata: {\n        version: 4.4,\n        type: 'BufferGeometry',\n        generator: 'BufferGeometry.toJSON'\n      }\n    };\n    // standard BufferGeometry serialization\n    data.uuid = this.uuid;\n    data.type = this.type;\n    if (this.name !== '') data.name = this.name;\n    if (this.parameters !== undefined) {\n      const parameters = this.parameters;\n      for (let key in parameters) {\n        if (parameters[key] !== undefined) data[key] = parameters[key];\n      }\n      return data;\n    }\n    data.data = { attributes: {} };\n    const index = this.index;\n    if (index !== null) {\n      const array = Array.prototype.slice.call(index.array);\n      data.data.index = {\n        type: index.array.constructor.name,\n        array: array\n      };\n    }\n    const attributes = this.attributes;\n    for (let key in attributes) {\n      const attribute = attributes[key];\n      if (attribute === undefined) continue;\n      const array = Array.prototype.slice.call(attribute.array);\n      data.data.attributes[key] = {\n        itemSize: attribute.itemSize,\n        type: attribute.array.constructor.name,\n        array: array,\n        normalized: attribute.normalized\n      };\n    }\n    const groups = this.groups;\n    if (groups.length > 0) {\n      data.data.groups = JSON.parse(JSON.stringify(groups));\n    }\n    const boundingSphere = this.boundingSphere;\n    if (boundingSphere !== null) {\n      data.data.boundingSphere = {\n        center: boundingSphere.center.toArray(),\n        radius: boundingSphere.radius\n      };\n    }\n    return data;\n  }\n  clone(): this {\n    /*\n    // Handle primitives\n    const parameters = this.parameters;\n    if (parameters !== undefined) {\n      const values = [];\n      for (let key in parameters) {\n        values.push(parameters[key]);\n      }\n      const geometry = Object.create(this.constructor.prototype);\n      this.constructor.apply(geometry, values);\n      return geometry;\n    }\n    return new this.constructor().copy(this);\n    */\n    return new (this.constructor as any)().copy(this);\n  }\n  copy(source: this): this {\n    const index = source.index;\n    if (index !== null) {\n      this.setIndex(index.clone());\n    }\n    const attributes = source.attributes;\n    for (let name in attributes) {\n      const attribute = attributes[name];\n      if (attribute === undefined) continue;\n      this.addAttribute(name, attribute.clone());\n    }\n    const groups = source.groups;\n    for (let i = 0, l = groups.length; i < l; i ++) {\n      const group = groups[i];\n      this.addGroup(group.start, group.count, group.materialIndex);\n    }\n    return this;\n  }\n  dispose(): void {\n    this.dispatchEvent({ type: 'dispose' });\n  }\n  addIndex(index: BufferAttribute): void {\n    console.warn(\"THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().\");\n    this.setIndex(index);\n  }\n  addDrawCall(start: number, count: number, indexOffset?: number): void {\n    if (indexOffset !== undefined) {\n      console.warn(\"THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.\");\n    }\n    console.warn(\"THREE.BufferGeometry: .addDrawCall() is now .addGroup().\");\n    this.addGroup(start, count);\n  }\n  clearDrawCalls(): void {\n    console.warn(\"THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().\");\n    this.clearGroups();\n  }\n  computeTangents(): void {\n    console.warn(\"THREE.BufferGeometry: .computeTangents() has been removed.\");\n  }\n  computeOffsets(): void {\n    console.warn(\"THREE.BufferGeometry: .computeOffsets() has been removed.\");\n  }\n  get drawcalls(): any[] {\n    console.error(\"THREE.BufferGeometry: .drawcalls has been renamed to .groups.\");\n    return this.groups;\n  }\n  get offsets(): any[] {\n    console.warn(\"THREE.BufferGeometry: .offsets has been renamed to .groups.\");\n    return this.groups;\n  }\n}\n","import { Vector3 } from \"../math/Vector3\";\nimport { Vector2 } from \"../math/Vector2\";\nimport { Sphere } from \"../math/Sphere\";\nimport { Ray } from \"../math/Ray\";\nimport { Matrix4 } from \"../math/Matrix4\";\nimport { Object3D } from \"../core/Object3D\";\nimport { Triangle } from \"../math/Triangle\";\nimport { Face3 } from \"../core/Face3\";\nimport { SideMode, DrawMode } from \"../constants\";\nimport { Geometry } from \"../core/Geometry\";\nimport { Material } from \"../materials/Material\";\nimport { MultiMaterial } from \"../materials/MultiMaterial\";\nimport { MeshBasicMaterial } from \"../materials/MeshBasicMaterial\";\nimport { BufferGeometry } from \"../core/BufferGeometry\";\nimport { Raycaster, Intersect } from \"../core/Raycaster\";\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author mikael emtinger / http://gomo.se/\n * @author jonobr1 / http://jonobr1.com/\n */\nexport class Mesh extends Object3D {\n  drawMode: DrawMode = DrawMode.Triangles;\n  morphTargetInfluences: number[];\n  morphTargetDictionary: any;\n  readonly isMesh: boolean = true;\n  constructor(geometry: Geometry | BufferGeometry = new BufferGeometry(), material: Material | MultiMaterial = new MeshBasicMaterial({ color: Math.random() * 0xffffff })) {\n    super();\n    this.type = 'Mesh';\n    this.geometry = geometry;\n    this.material = material;\n    this.updateMorphTargets();\n  }\n  setDrawMode(value: DrawMode): void {\n    this.drawMode = value;\n  }\n  copy(source: this): this {\n    super.copy(source);\n    this.drawMode = source.drawMode;\n    return this;\n  }\n  updateMorphTargets(): void {\n    let morphTargets = this.geometry.morphTargets;\n    if (morphTargets !== undefined && morphTargets.length > 0) {\n      this.morphTargetInfluences = [];\n      this.morphTargetDictionary = {};\n      for (let m = 0, ml = morphTargets.length; m < ml; m ++) {\n        this.morphTargetInfluences.push(0);\n        this.morphTargetDictionary[morphTargets[m].name] = m;\n      }\n    }\n  }\n  raycast(raycaster: Raycaster, intersects: Intersect[]): Intersect[] {\n    let inverseMatrix = new Matrix4();\n    let ray = new Ray();\n    let sphere = new Sphere();\n    let vA = new Vector3();\n    let vB = new Vector3();\n    let vC = new Vector3();\n    let tempA = new Vector3();\n    let tempB = new Vector3();\n    let tempC = new Vector3();\n    let uvA = new Vector2();\n    let uvB = new Vector2();\n    let uvC = new Vector2();\n    let barycoord = new Vector3();\n    let intersectionPoint = new Vector3();\n    let intersectionPointWorld = new Vector3();\n    function uvIntersection(point: Vector3, p1: Vector3, p2: Vector3, p3: Vector3, uv1: Vector2, uv2: Vector2, uv3: Vector2): Vector2 {\n      Triangle.barycoordFromPoint(point, p1, p2, p3, barycoord);\n      uv1.multiplyScalar(barycoord.x);\n      uv2.multiplyScalar(barycoord.y);\n      uv3.multiplyScalar(barycoord.z);\n      uv1.add(uv2).add(uv3);\n      return uv1.clone();\n    }\n    function checkIntersection(object: Object3D, raycaster: Raycaster, ray: Ray, pA: Vector3, pB: Vector3, pC: Vector3, point: Vector3): Intersect {\n      let intersect;\n      let material = object.material;\n      if (material.side === SideMode.Back) {\n        intersect = ray.intersectTriangle(pC, pB, pA, true, point);\n      } else {\n        intersect = ray.intersectTriangle(pA, pB, pC, material.side !== SideMode.Double, point);\n      }\n      if (intersect === null) return null;\n      intersectionPointWorld.copy(point);\n      intersectionPointWorld.applyMatrix4(object.matrixWorld);\n      let distance = raycaster.ray.origin.distanceTo(intersectionPointWorld);\n      if (distance < raycaster.near || distance > raycaster.far) return null;\n      return {\n        distance: distance,\n        point: intersectionPointWorld.clone(),\n        index: 0,\n        face: null,\n        faceIndex: 0,\n        uv: null,\n        object: object\n      };\n    }\n    function checkBufferGeometryIntersection(object: Object3D, raycaster: Raycaster, ray: Ray, positions: number[], uvs: number[], a: number, b: number, c: number): Intersect {\n      vA.fromArray(positions, a * 3);\n      vB.fromArray(positions, b * 3);\n      vC.fromArray(positions, c * 3);\n      let intersection = checkIntersection(object, raycaster, ray, vA, vB, vC, intersectionPoint);\n      if (intersection) {\n        if (uvs) {\n          uvA.fromArray(uvs, a * 2);\n          uvB.fromArray(uvs, b * 2);\n          uvC.fromArray(uvs, c * 2);\n          intersection.uv = uvIntersection(intersectionPoint,  vA, vB, vC,  uvA, uvB, uvC);\n        }\n        intersection.face = new Face3(a, b, c, Triangle.normal(vA, vB, vC));\n        intersection.faceIndex = a;\n      }\n      return intersection;\n    }\n    //return function raycast(raycaster, intersects) {\n      let geometry = this.geometry;\n      let material = this.material;\n      let matrixWorld = this.matrixWorld;\n      if (material === undefined) return intersects;\n      // Checking boundingSphere distance to ray\n      if (geometry.boundingSphere === null) geometry.computeBoundingSphere();\n      sphere.copy(geometry.boundingSphere);\n      sphere.applyMatrix4(matrixWorld);\n      if (raycaster.ray.intersectsSphere(sphere) === false) return intersects;\n      //\n      inverseMatrix.getInverse(matrixWorld);\n      ray.copy(raycaster.ray).applyMatrix4(inverseMatrix);\n      // Check boundingBox before continuing\n      if (geometry.boundingBox !== null) {\n        if (ray.intersectsBox(geometry.boundingBox) === false) return intersects;\n      }\n      let uvs, intersection;\n      if ((geometry && geometry instanceof BufferGeometry)) {\n        let a, b, c;\n        let index = geometry.index;\n        let attributes = geometry.attributes;\n        let positions = attributes.position.array;\n        if (attributes.uv !== undefined) {\n          uvs = attributes.uv.array;\n        }\n        if (index !== null) {\n          let indices = index.array;\n          for (let i = 0, l = indices.length; i < l; i += 3) {\n            a = indices[i];\n            b = indices[i + 1];\n            c = indices[i + 2];\n            intersection = checkBufferGeometryIntersection(this, raycaster, ray, positions, uvs, a, b, c);\n            if (intersection) {\n              intersection.faceIndex = Math.floor(i / 3); // triangle number in indices buffer semantics\n              intersects.push(intersection);\n            }\n          }\n        } else {\n          for (let i = 0, l = positions.length; i < l; i += 9) {\n            a = i / 3;\n            b = a + 1;\n            c = a + 2;\n            intersection = checkBufferGeometryIntersection(this, raycaster, ray, positions, uvs, a, b, c);\n            if (intersection) {\n              intersection.index = a; // triangle number in positions buffer semantics\n              intersects.push(intersection);\n            }\n          }\n        }\n      } else if ((geometry && geometry instanceof Geometry)) {\n        let fvA, fvB, fvC;\n        let isFaceMaterial = (material && material instanceof MultiMaterial);\n        let materials = isFaceMaterial === true ? material.materials : null;\n        let vertices = geometry.vertices;\n        let faces = geometry.faces;\n        let faceVertexUvs = geometry.faceVertexUvs[0];\n        if (faceVertexUvs.length > 0) uvs = faceVertexUvs;\n        for (let f = 0, fl = faces.length; f < fl; f ++) {\n          let face = faces[f];\n          let faceMaterial = isFaceMaterial === true ? materials[face.materialIndex] : material;\n          if (faceMaterial === undefined) continue;\n          fvA = vertices[face.a];\n          fvB = vertices[face.b];\n          fvC = vertices[face.c];\n          if (faceMaterial.morphTargets === true) {\n            let morphTargets = geometry.morphTargets;\n            let morphInfluences = this.morphTargetInfluences;\n            vA.set(0, 0, 0);\n            vB.set(0, 0, 0);\n            vC.set(0, 0, 0);\n            for (let t = 0, tl = morphTargets.length; t < tl; t ++) {\n              let influence = morphInfluences[t];\n              if (influence === 0) continue;\n              let targets = morphTargets[t].vertices;\n              vA.addScaledVector(tempA.subVectors(targets[face.a], fvA), influence);\n              vB.addScaledVector(tempB.subVectors(targets[face.b], fvB), influence);\n              vC.addScaledVector(tempC.subVectors(targets[face.c], fvC), influence);\n            }\n            vA.add(fvA);\n            vB.add(fvB);\n            vC.add(fvC);\n            fvA = vA;\n            fvB = vB;\n            fvC = vC;\n          }\n          intersection = checkIntersection(this, raycaster, ray, fvA, fvB, fvC, intersectionPoint);\n          if (intersection) {\n            if (uvs) {\n              let uvs_f = uvs[f];\n              uvA.copy(uvs_f[0]);\n              uvB.copy(uvs_f[1]);\n              uvC.copy(uvs_f[2]);\n              intersection.uv = uvIntersection(intersectionPoint, fvA, fvB, fvC, uvA, uvB, uvC);\n            }\n            intersection.face = face;\n            intersection.faceIndex = f;\n            intersects.push(intersection);\n          }\n        }\n      }\n      return intersects;\n    //};\n  }\n  clone(): this {\n    return new (this.constructor as any)(this.geometry, this.material).copy(this);\n  }\n}\n","import { EventDispatcher } from \"./EventDispatcher\";\nimport { Face3 } from \"./Face3\";\nimport { Matrix3 } from \"../math/Matrix3\";\nimport { Sphere } from \"../math/Sphere\";\nimport { Box3 } from \"../math/Box3\";\nimport { Vector3 } from \"../math/Vector3\";\nimport { Matrix4 } from \"../math/Matrix4\";\nimport { Vector2 } from \"../math/Vector2\";\nimport { Vector4 } from \"../math/Vector4\";\nimport { Color } from \"../math/Color\";\nimport { Object3D } from \"./Object3D\";\nimport { _Math } from \"../math/Math\";\nimport { Mesh } from \"../objects/Mesh\";\nimport { BufferGeometry } from \"./BufferGeometry\";\nimport { Bone } from \"../objects/Bone\";\nimport { AnimationClip } from \"../animation/AnimationClip\";\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author kile / http://kile.stravaganza.org/\n * @author alteredq / http://alteredqualia.com/\n * @author mikael emtinger / http://gomo.se/\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author bhouston / http://clara.io\n */\nexport class Geometry extends EventDispatcher {\n  id: number = GeometryIdCount();\n  uuid: string = _Math.generateUUID();\n  name: string = '';\n  type: string = 'Geometry';\n  vertices: Vector3[] = [];\n  colors: Color[] = [];\n  faces: Face3[] = [];\n  faceVertexUvs: Vector2[][][] = [[]];\n  morphTargets: any[] = [];\n  morphNormals: any[] = [];\n  skinWeights: Vector4[] = [];\n  skinIndices: Vector4[] = [];\n  lineDistances: number[] = [];\n  boundingBox: Box3 = null;\n  boundingSphere: Sphere = null;\n  // update flags\n  elementsNeedUpdate: boolean = false;\n  verticesNeedUpdate: boolean = false;\n  uvsNeedUpdate: boolean = false;\n  normalsNeedUpdate: boolean = false;\n  colorsNeedUpdate: boolean = false;\n  lineDistancesNeedUpdate: boolean = false;\n  groupsNeedUpdate: boolean = false;\n  parameters: any = undefined;\n  // {\n  bones: Bone[]; // JSONLoader, ObjectLoader, SkinnedMesh\n  animations: AnimationClip[]; // JSONLoader\n  dynamic: boolean; // SkeletonHelper\n  _bufferGeometry: BufferGeometry; // WebGLGeometries\n  // }\n  readonly isGeometry: boolean = true;\n  readonly isBufferGeometry: boolean = false;\n  constructor() {\n    super();\n  }\n  applyMatrix(matrix: Matrix4): Geometry {\n    const normalMatrix = new Matrix3().getNormalMatrix(matrix);\n    for (let i = 0, il = this.vertices.length; i < il; i ++) {\n      const vertex = this.vertices[i];\n      vertex.applyMatrix4(matrix);\n    }\n    for (let i = 0, il = this.faces.length; i < il; i ++) {\n      const face = this.faces[i];\n      face.normal.applyMatrix3(normalMatrix).normalize();\n      for (let j = 0, jl = face.vertexNormals.length; j < jl; j ++) {\n        face.vertexNormals[j].applyMatrix3(normalMatrix).normalize();\n      }\n    }\n    if (this.boundingBox !== null) {\n      this.computeBoundingBox();\n    }\n    if (this.boundingSphere !== null) {\n      this.computeBoundingSphere();\n    }\n    this.verticesNeedUpdate = true;\n    this.normalsNeedUpdate = true;\n    return this;\n  }\n  rotateX(angle: number): Geometry {\n    // rotate geometry around world x-axis\n    const m1 = new Matrix4();\n    //return function rotateX(angle) {\n      m1.makeRotationX(angle);\n      this.applyMatrix(m1);\n      return this;\n    //};\n  }\n  rotateY(angle: number): Geometry {\n    // rotate geometry around world y-axis\n    const m1 = new Matrix4();\n    //return function rotateY(angle) {\n      m1.makeRotationY(angle);\n      this.applyMatrix(m1);\n      return this;\n    //};\n  }\n  rotateZ(angle: number): Geometry {\n    // rotate geometry around world z-axis\n    const m1 = new Matrix4();\n    //return function rotateZ(angle) {\n      m1.makeRotationZ(angle);\n      this.applyMatrix(m1);\n      return this;\n    //};\n  }\n  translate(x: number, y: number, z: number): Geometry {\n    // translate geometry\n    const m1 = new Matrix4();\n    //return function translate(x, y, z) {\n      m1.makeTranslation(x, y, z);\n      this.applyMatrix(m1);\n      return this;\n    //};\n  }\n  scale(x: number, y: number, z: number): Geometry {\n    // scale geometry\n    const m1 = new Matrix4();\n    //return function scale(x, y, z) {\n      m1.makeScale(x, y, z);\n      this.applyMatrix(m1);\n      return this;\n    //};\n  }\n  lookAt(vector: Vector3): void {\n    const obj = new Object3D();\n    //return function lookAt(vector) {\n      obj.lookAt(vector);\n      obj.updateMatrix();\n      this.applyMatrix(obj.matrix);\n    //};\n  }\n  fromBufferGeometry(geometry: BufferGeometry): Geometry {\n    const scope = this;\n    const indices = geometry.index !== null ? geometry.index.array : undefined;\n    const attributes = geometry.attributes;\n    const positions = attributes.position.array;\n    const normals = attributes.normal !== undefined ? attributes.normal.array : undefined;\n    const colors = attributes.color !== undefined ? attributes.color.array : undefined;\n    const uvs = attributes.uv !== undefined ? attributes.uv.array : undefined;\n    const uvs2 = attributes.uv2 !== undefined ? attributes.uv2.array : undefined;\n    if (uvs2 !== undefined) this.faceVertexUvs[1] = [];\n    const tempNormals: any[] = [];\n    const tempUVs: any[] = [];\n    const tempUVs2: any[] = [];\n    for (let i = 0, j = 0; i < positions.length; i += 3, j += 2) {\n      scope.vertices.push(new Vector3(positions[i], positions[i + 1], positions[i + 2]));\n      if (normals !== undefined) {\n        tempNormals.push(new Vector3(normals[i], normals[i + 1], normals[i + 2]));\n      }\n      if (colors !== undefined) {\n        scope.colors.push(new Color(colors[i], colors[i + 1], colors[i + 2]));\n      }\n      if (uvs !== undefined) {\n        tempUVs.push(new Vector2(uvs[j], uvs[j + 1]));\n      }\n      if (uvs2 !== undefined) {\n        tempUVs2.push(new Vector2(uvs2[j], uvs2[j + 1]));\n      }\n    }\n    function addFace(a: number, b: number, c: number, materialIndex?: number): void {\n      const vertexNormals: Vector3[] = normals !== undefined ? [ tempNormals[a].clone(), tempNormals[b].clone(), tempNormals[c].clone() ] : [];\n      const vertexColors: Color[] = colors !== undefined ? [ scope.colors[a].clone(), scope.colors[b].clone(), scope.colors[c].clone() ] : [];\n      const face = new Face3(a, b, c, vertexNormals, vertexColors, materialIndex);\n      scope.faces.push(face);\n      if (uvs !== undefined) {\n        scope.faceVertexUvs[0].push([tempUVs[a].clone(), tempUVs[b].clone(), tempUVs[c].clone()]);\n      }\n      if (uvs2 !== undefined) {\n        scope.faceVertexUvs[1].push([tempUVs2[a].clone(), tempUVs2[b].clone(), tempUVs2[c].clone()]);\n      }\n    }\n    if (indices !== undefined) {\n      const groups = geometry.groups;\n      if (groups.length > 0) {\n        for (let i = 0; i < groups.length; i ++) {\n          const group = groups[i];\n          const start = group.start;\n          const count = group.count;\n          for (let j = start, jl = start + count; j < jl; j += 3) {\n            addFace(indices[j], indices[j + 1], indices[j + 2], group.materialIndex);\n          }\n        }\n      } else {\n        for (let i = 0; i < indices.length; i += 3) {\n          addFace(indices[i], indices[i + 1], indices[i + 2]);\n        }\n      }\n    } else {\n      for (let i = 0; i < positions.length / 3; i += 3) {\n        addFace(i, i + 1, i + 2);\n      }\n    }\n    this.computeFaceNormals();\n    if (geometry.boundingBox !== null) {\n      this.boundingBox = geometry.boundingBox.clone();\n    }\n    if (geometry.boundingSphere !== null) {\n      this.boundingSphere = geometry.boundingSphere.clone();\n    }\n    return this;\n  }\n  center(): Vector3 {\n    this.computeBoundingBox();\n    const offset = this.boundingBox.getCenter().negate();\n    this.translate(offset.x, offset.y, offset.z);\n    return offset;\n  }\n  normalize(): Geometry {\n    this.computeBoundingSphere();\n    const center = this.boundingSphere.center;\n    const radius = this.boundingSphere.radius;\n    const s = radius === 0 ? 1 : 1.0 / radius;\n    const matrix = new Matrix4();\n    matrix.set(\n      s, 0, 0, - s * center.x,\n      0, s, 0, - s * center.y,\n      0, 0, s, - s * center.z,\n      0, 0, 0, 1\n    );\n    this.applyMatrix(matrix);\n    return this;\n  }\n  computeFaceNormals(): void {\n    const cb = new Vector3(), ab = new Vector3();\n    for (let f = 0, fl = this.faces.length; f < fl; f ++) {\n      const face = this.faces[f];\n      const vA = this.vertices[face.a];\n      const vB = this.vertices[face.b];\n      const vC = this.vertices[face.c];\n      cb.subVectors(vC, vB);\n      ab.subVectors(vA, vB);\n      cb.cross(ab);\n      cb.normalize();\n      face.normal.copy(cb);\n    }\n  }\n  computeVertexNormals(areaWeighted: boolean = true): void {\n    let v, vl, f, fl, face, vertices;\n    vertices = new Array(this.vertices.length);\n    for (v = 0, vl = this.vertices.length; v < vl; v ++) {\n      vertices[v] = new Vector3();\n    }\n    if (areaWeighted) {\n      // vertex normals weighted by triangle areas\n      // http://www.iquilezles.org/www/articles/normals/normals.htm\n      let vA, vB, vC;\n      const cb = new Vector3(), ab = new Vector3();\n      for (f = 0, fl = this.faces.length; f < fl; f ++) {\n        face = this.faces[f];\n        vA = this.vertices[face.a];\n        vB = this.vertices[face.b];\n        vC = this.vertices[face.c];\n        cb.subVectors(vC, vB);\n        ab.subVectors(vA, vB);\n        cb.cross(ab);\n        vertices[face.a].add(cb);\n        vertices[face.b].add(cb);\n        vertices[face.c].add(cb);\n      }\n    } else {\n      this.computeFaceNormals();\n      for (f = 0, fl = this.faces.length; f < fl; f ++) {\n        face = this.faces[f];\n        vertices[face.a].add(face.normal);\n        vertices[face.b].add(face.normal);\n        vertices[face.c].add(face.normal);\n      }\n    }\n    for (v = 0, vl = this.vertices.length; v < vl; v ++) {\n      vertices[v].normalize();\n    }\n    for (f = 0, fl = this.faces.length; f < fl; f ++) {\n      face = this.faces[f];\n      const vertexNormals = face.vertexNormals;\n      if (vertexNormals.length === 3) {\n        vertexNormals[0].copy(vertices[face.a]);\n        vertexNormals[1].copy(vertices[face.b]);\n        vertexNormals[2].copy(vertices[face.c]);\n      } else {\n        vertexNormals[0] = vertices[face.a].clone();\n        vertexNormals[1] = vertices[face.b].clone();\n        vertexNormals[2] = vertices[face.c].clone();\n      }\n    }\n    if (this.faces.length > 0) {\n      this.normalsNeedUpdate = true;\n    }\n  }\n  computeFlatVertexNormals() {\n    this.computeFaceNormals();\n    for (let f = 0, fl = this.faces.length; f < fl; f ++) {\n      const face = this.faces[ f ];\n      const vertexNormals = face.vertexNormals;\n      if (vertexNormals.length === 3) {\n        vertexNormals[ 0 ].copy(face.normal);\n        vertexNormals[ 1 ].copy(face.normal);\n        vertexNormals[ 2 ].copy(face.normal);\n      } else {\n        vertexNormals[ 0 ] = face.normal.clone();\n        vertexNormals[ 1 ] = face.normal.clone();\n        vertexNormals[ 2 ] = face.normal.clone();\n      }\n    }\n    if (this.faces.length > 0) {\n      this.normalsNeedUpdate = true;\n    }\n  }\n  computeMorphNormals(): void {\n    let i, il, f, fl, face;\n    // save original normals\n    // - create temp variables on first access\n    //   otherwise just copy (for faster repeated calls)\n    for (f = 0, fl = this.faces.length; f < fl; f ++) {\n      face = this.faces[f];\n      if (! face.__originalFaceNormal) {\n        face.__originalFaceNormal = face.normal.clone();\n      } else {\n        face.__originalFaceNormal.copy(face.normal);\n      }\n      if (! face.__originalVertexNormals) face.__originalVertexNormals = [];\n      for (i = 0, il = face.vertexNormals.length; i < il; i ++) {\n        if (! face.__originalVertexNormals[i]) {\n          face.__originalVertexNormals[i] = face.vertexNormals[i].clone();\n        } else {\n          face.__originalVertexNormals[i].copy(face.vertexNormals[i]);\n        }\n      }\n    }\n    // use temp geometry to compute face and vertex normals for each morph\n    const tmpGeo = new Geometry();\n    tmpGeo.faces = this.faces;\n    for (i = 0, il = this.morphTargets.length; i < il; i ++) {\n      // create on first access\n      if (! this.morphNormals[i]) {\n        this.morphNormals[i] = {};\n        this.morphNormals[i].faceNormals = [];\n        this.morphNormals[i].vertexNormals = [];\n        const dstNormalsFace = this.morphNormals[i].faceNormals;\n        const dstNormalsVertex = this.morphNormals[i].vertexNormals;\n        let faceNormal, vertexNormals;\n        for (f = 0, fl = this.faces.length; f < fl; f ++) {\n          faceNormal = new Vector3();\n          vertexNormals = { a: new Vector3(), b: new Vector3(), c: new Vector3() };\n          dstNormalsFace.push(faceNormal);\n          dstNormalsVertex.push(vertexNormals);\n        }\n      }\n      const morphNormals = this.morphNormals[i];\n      // set vertices to morph target\n      tmpGeo.vertices = this.morphTargets[i].vertices;\n      // compute morph normals\n      tmpGeo.computeFaceNormals();\n      tmpGeo.computeVertexNormals();\n      // store morph normals\n      let faceNormal, vertexNormals;\n      for (f = 0, fl = this.faces.length; f < fl; f ++) {\n        face = this.faces[f];\n        faceNormal = morphNormals.faceNormals[f];\n        vertexNormals = morphNormals.vertexNormals[f];\n        faceNormal.copy(face.normal);\n        vertexNormals.a.copy(face.vertexNormals[0]);\n        vertexNormals.b.copy(face.vertexNormals[1]);\n        vertexNormals.c.copy(face.vertexNormals[2]);\n      }\n    }\n    // restore original normals\n    for (f = 0, fl = this.faces.length; f < fl; f ++) {\n      face = this.faces[f];\n      face.normal = face.__originalFaceNormal;\n      face.vertexNormals = face.__originalVertexNormals;\n    }\n  }\n  computeTangents(): void {\n    console.warn('THREE.Geometry: .computeTangents() has been removed.');\n  }\n  computeLineDistances(): void {\n    let d = 0;\n    const vertices = this.vertices;\n    for (let i = 0, il = vertices.length; i < il; i ++) {\n      if (i > 0) {\n        d += vertices[i].distanceTo(vertices[i - 1]);\n      }\n      this.lineDistances[i] = d;\n    }\n  }\n  computeBoundingBox(): void {\n    if (this.boundingBox === null) {\n      this.boundingBox = new Box3();\n    }\n    this.boundingBox.setFromPoints(this.vertices);\n  }\n  computeBoundingSphere(): void {\n    if (this.boundingSphere === null) {\n      this.boundingSphere = new Sphere();\n    }\n    this.boundingSphere.setFromPoints(this.vertices);\n  }\n  merge(geometry: Geometry, matrix: any, materialIndexOffset: number = 0): void {\n    let normalMatrix,\n    vertexOffset = this.vertices.length,\n    vertices1 = this.vertices,\n    vertices2 = geometry.vertices,\n    faces1 = this.faces,\n    faces2 = geometry.faces,\n    uvs1 = this.faceVertexUvs[0],\n    uvs2 = geometry.faceVertexUvs[0],\n    colors1 = this.colors,\n    colors2 = geometry.colors;\n    if (matrix !== undefined) {\n      normalMatrix = new Matrix3().getNormalMatrix(matrix);\n    }\n    // vertices\n    for (let i = 0, il = vertices2.length; i < il; i ++) {\n      const vertex = vertices2[i];\n      const vertexCopy = vertex.clone();\n      if (matrix !== undefined) vertexCopy.applyMatrix4(matrix);\n      vertices1.push(vertexCopy);\n    }\n    // colors\n    for (let i = 0, il = colors2.length; i < il; i ++) {\n      colors1.push(colors2[i].clone());\n    }\n    // faces\n    for (let i = 0, il = faces2.length; i < il; i ++) {\n      let face = faces2[i], faceCopy, normal, color,\n      faceVertexNormals = face.vertexNormals,\n      faceVertexColors = face.vertexColors;\n      faceCopy = new Face3(face.a + vertexOffset, face.b + vertexOffset, face.c + vertexOffset);\n      faceCopy.normal.copy(face.normal);\n      if (normalMatrix !== undefined) {\n        faceCopy.normal.applyMatrix3(normalMatrix).normalize();\n      }\n      for (let j = 0, jl = faceVertexNormals.length; j < jl; j ++) {\n        normal = faceVertexNormals[j].clone();\n        if (normalMatrix !== undefined) {\n          normal.applyMatrix3(normalMatrix).normalize();\n        }\n        faceCopy.vertexNormals.push(normal);\n      }\n      faceCopy.color.copy(face.color);\n      for (let j = 0, jl = faceVertexColors.length; j < jl; j ++) {\n        color = faceVertexColors[j];\n        faceCopy.vertexColors.push(color.clone());\n      }\n      faceCopy.materialIndex = face.materialIndex + materialIndexOffset;\n      faces1.push(faceCopy);\n    }\n    // uvs\n    for (let i = 0, il = uvs2.length; i < il; i ++) {\n      const uv = uvs2[i], uvCopy = [];\n      if (uv === undefined) {\n        continue;\n      }\n      for (let j = 0, jl = uv.length; j < jl; j ++) {\n        uvCopy.push(uv[j].clone());\n      }\n      uvs1.push(uvCopy);\n    }\n  }\n  mergeMesh(mesh: Mesh): void {\n    if ((mesh && mesh instanceof Mesh) === false) {\n      console.error('THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.', mesh);\n      return;\n    }\n    mesh.matrixAutoUpdate && mesh.updateMatrix();\n    if (mesh.geometry instanceof Geometry) {\n      this.merge(mesh.geometry, mesh.matrix);\n    }\n  }\n  /*\n   * Checks for duplicate vertices with hashmap.\n   * Duplicated vertices are removed\n   * and faces' vertices are updated.\n   */\n  mergeVertices(): number {\n    const verticesMap = {}; // Hashmap for looking up vertices by position coordinates (and making sure they are unique)\n    const unique: any[] = [], changes: any[] = [];\n    let v, key;\n    const precisionPoints = 4; // number of decimal points, e.g. 4 for epsilon of 0.0001\n    const precision = Math.pow(10, precisionPoints);\n    let i, il, face;\n    let indices, j, jl;\n    for (i = 0, il = this.vertices.length; i < il; i ++) {\n      v = this.vertices[i];\n      key = Math.round(v.x * precision) + '_' + Math.round(v.y * precision) + '_' + Math.round(v.z * precision);\n      if (verticesMap[key] === undefined) {\n        verticesMap[key] = i;\n        unique.push(this.vertices[i]);\n        changes[i] = unique.length - 1;\n      } else {\n        //console.log('Duplicate vertex found. ', i, ' could be using ', verticesMap[key]);\n        changes[i] = changes[verticesMap[key]];\n      }\n    }\n    // if faces are completely degenerate after merging vertices, we\n    // have to remove them from the geometry.\n    const faceIndicesToRemove = [];\n    for (i = 0, il = this.faces.length; i < il; i ++) {\n      face = this.faces[i];\n      face.a = changes[face.a];\n      face.b = changes[face.b];\n      face.c = changes[face.c];\n      indices = [face.a, face.b, face.c];\n      let dupIndex = - 1;\n      // if any duplicate vertices are found in a Face3\n      // we have to remove the face as nothing can be saved\n      for (let n = 0; n < 3; n ++) {\n        if (indices[n] === indices[(n + 1) % 3]) {\n          dupIndex = n;\n          faceIndicesToRemove.push(i);\n          break;\n        }\n      }\n    }\n    for (i = faceIndicesToRemove.length - 1; i >= 0; i --) {\n      const idx = faceIndicesToRemove[i];\n      this.faces.splice(idx, 1);\n      for (j = 0, jl = this.faceVertexUvs.length; j < jl; j ++) {\n        this.faceVertexUvs[j].splice(idx, 1);\n      }\n    }\n    // Use unique set of vertices\n    const diff = this.vertices.length - unique.length;\n    this.vertices = unique;\n    return diff;\n  }\n  sortFacesByMaterialIndex(): void {\n    const faces = this.faces;\n    const length = faces.length;\n    // tag faces\n    for (let i = 0; i < length; i ++) {\n      faces[i]._id = i;\n    }\n    // sort faces\n    function materialIndexSort(a: any, b: any): number {\n      return a.materialIndex - b.materialIndex;\n    }\n    faces.sort(materialIndexSort);\n    // sort uvs\n    const uvs1 = this.faceVertexUvs[0];\n    const uvs2 = this.faceVertexUvs[1];\n    let newUvs1: any[], newUvs2: any[];\n    if (uvs1 && uvs1.length === length) newUvs1 = [];\n    if (uvs2 && uvs2.length === length) newUvs2 = [];\n    for (let i = 0; i < length; i ++) {\n      const id = faces[i]._id;\n      if (newUvs1) newUvs1.push(uvs1[id]);\n      if (newUvs2) newUvs2.push(uvs2[id]);\n    }\n    if (newUvs1) this.faceVertexUvs[0] = newUvs1;\n    if (newUvs2) this.faceVertexUvs[1] = newUvs2;\n  }\n  toJSON(meta: any): any {\n    const data: any = {\n      metadata: {\n        version: 4.4,\n        type: 'Geometry',\n        generator: 'Geometry.toJSON'\n      }\n    };\n    // standard Geometry serialization\n    data.uuid = this.uuid;\n    data.type = this.type;\n    if (this.name !== '') data.name = this.name;\n    if (this.parameters !== undefined) {\n      const parameters = this.parameters;\n      for (let key in parameters) {\n        if (parameters[key] !== undefined) data[key] = parameters[key];\n      }\n      return data;\n    }\n    const vertices = [];\n    for (let i = 0; i < this.vertices.length; i ++) {\n      const vertex = this.vertices[i];\n      vertices.push(vertex.x, vertex.y, vertex.z);\n    }\n    const faces: any[] = [];\n    const normals: any[] = [];\n    const normalsHash: any = {};\n    const colors: any[] = [];\n    const colorsHash = {};\n    const uvs: any[] = [];\n    const uvsHash = {};\n    for (let i = 0; i < this.faces.length; i ++) {\n      const face = this.faces[i];\n      const hasMaterial = true;\n      const hasFaceUv = false; // deprecated\n      const hasFaceVertexUv = this.faceVertexUvs[0][i] !== undefined;\n      const hasFaceNormal = face.normal.length() > 0;\n      const hasFaceVertexNormal = face.vertexNormals.length > 0;\n      const hasFaceColor = face.color.r !== 1 || face.color.g !== 1 || face.color.b !== 1;\n      const hasFaceVertexColor = face.vertexColors.length > 0;\n      let faceType = 0;\n      faceType = setBit(faceType, 0, false); // isQuad\n      faceType = setBit(faceType, 1, hasMaterial);\n      faceType = setBit(faceType, 2, hasFaceUv);\n      faceType = setBit(faceType, 3, hasFaceVertexUv);\n      faceType = setBit(faceType, 4, hasFaceNormal);\n      faceType = setBit(faceType, 5, hasFaceVertexNormal);\n      faceType = setBit(faceType, 6, hasFaceColor);\n      faceType = setBit(faceType, 7, hasFaceVertexColor);\n      faces.push(faceType);\n      faces.push(face.a, face.b, face.c);\n      faces.push(face.materialIndex);\n      if (hasFaceVertexUv) {\n        const faceVertexUvs = this.faceVertexUvs[0][i];\n        faces.push(\n          getUvIndex(faceVertexUvs[0]),\n          getUvIndex(faceVertexUvs[1]),\n          getUvIndex(faceVertexUvs[2])\n        );\n      }\n      if (hasFaceNormal) {\n        faces.push(getNormalIndex(face.normal));\n      }\n      if (hasFaceVertexNormal) {\n        const vertexNormals = face.vertexNormals;\n        faces.push(\n          getNormalIndex(vertexNormals[0]),\n          getNormalIndex(vertexNormals[1]),\n          getNormalIndex(vertexNormals[2])\n        );\n      }\n      if (hasFaceColor) {\n        faces.push(getColorIndex(face.color));\n      }\n      if (hasFaceVertexColor) {\n        const vertexColors = face.vertexColors;\n        faces.push(\n          getColorIndex(vertexColors[0]),\n          getColorIndex(vertexColors[1]),\n          getColorIndex(vertexColors[2])\n        );\n      }\n    }\n    function setBit(value: number, position: number, enabled: boolean): number {\n      return enabled ? value | (1 << position) : value & (~ (1 << position));\n    }\n    function getNormalIndex(normal: Vector3): any {\n      const hash = normal.x.toString() + normal.y.toString() + normal.z.toString();\n      if (normalsHash[hash] !== undefined) {\n        return normalsHash[hash];\n      }\n      normalsHash[hash] = normals.length / 3;\n      normals.push(normal.x, normal.y, normal.z);\n      return normalsHash[hash];\n    }\n    function getColorIndex(color: Color): any {\n      const hash = color.r.toString() + color.g.toString() + color.b.toString();\n      if (colorsHash[hash] !== undefined) {\n        return colorsHash[hash];\n      }\n      colorsHash[hash] = colors.length;\n      colors.push(color.getHex());\n      return colorsHash[hash];\n    }\n    function getUvIndex(uv: Vector2): any {\n      const hash = uv.x.toString() + uv.y.toString();\n      if (uvsHash[hash] !== undefined) {\n        return uvsHash[hash];\n      }\n      uvsHash[hash] = uvs.length / 2;\n      uvs.push(uv.x, uv.y);\n      return uvsHash[hash];\n    }\n    data.data = {};\n    data.data.vertices = vertices;\n    data.data.normals = normals;\n    if (colors.length > 0) data.data.colors = colors;\n    if (uvs.length > 0) data.data.uvs = [uvs]; // temporal backward compatibility\n    data.data.faces = faces;\n    return data;\n  }\n  clone(): this {\n    /*\n    // Handle primitives\n    const parameters = this.parameters;\n    if (parameters !== undefined) {\n      const values = [];\n      for (let key in parameters) {\n        values.push(parameters[key]);\n      }\n      const geometry = Object.create(this.constructor.prototype);\n      this.constructor.apply(geometry, values);\n      return geometry;\n    }\n    return new this.constructor().copy(this);\n    */\n    return new (this.constructor as any)().copy(this);\n  }\n  copy(source: this): this {\n    this.vertices = [];\n    this.faces = [];\n    this.faceVertexUvs = [[]];\n    this.colors = [];\n    const vertices = source.vertices;\n    for (let i = 0, il = vertices.length; i < il; i ++) {\n      this.vertices.push(vertices[i].clone());\n    }\n    const colors = source.colors;\n    for (let i = 0, il = colors.length; i < il; i ++) {\n      this.colors.push(colors[i].clone());\n    }\n    const faces = source.faces;\n    for (let i = 0, il = faces.length; i < il; i ++) {\n      this.faces.push(faces[i].clone());\n    }\n    for (let i = 0, il = source.faceVertexUvs.length; i < il; i ++) {\n      const faceVertexUvs = source.faceVertexUvs[i];\n      if (this.faceVertexUvs[i] === undefined) {\n        this.faceVertexUvs[i] = [];\n      }\n      for (let j = 0, jl = faceVertexUvs.length; j < jl; j ++) {\n        const uvs = faceVertexUvs[j], uvsCopy = [];\n        for (let k = 0, kl = uvs.length; k < kl; k ++) {\n          const uv = uvs[k];\n          uvsCopy.push(uv.clone());\n        }\n        this.faceVertexUvs[i].push(uvsCopy);\n      }\n    }\n    return this;\n  }\n  dispose(): void {\n    this.dispatchEvent({ type: 'dispose' });\n  }\n}\nlet count: number = 0;\nexport function GeometryIdCount(): number { return count++; };\n","import { Vector3 } from \"./Vector3\";\nimport { Matrix4 } from \"./Matrix4\";\nimport { Sphere } from \"./Sphere\";\nimport { Plane } from \"./Plane\";\nimport { Object3D } from \"../core/Object3D\";\nimport { Geometry } from \"../core/Geometry\";\nimport { BufferGeometry } from \"../core/BufferGeometry\";\nimport { InterleavedBufferAttribute } from \"../core/InterleavedBufferAttribute\";\n/**\n * @author bhouston / http://clara.io\n * @author WestLangley / http://github.com/WestLangley\n */\nexport class Box3 {\n  min: Vector3;\n  max: Vector3;\n  readonly isBox3: boolean = true;\n  constructor(min = new Vector3(+ Infinity, + Infinity, + Infinity), max = new Vector3(- Infinity, - Infinity, - Infinity)) {\n    this.min = min;\n    this.max = max;\n  }\n  set(min: Vector3, max: Vector3): Box3 {\n    this.min.copy(min);\n    this.max.copy(max);\n    return this;\n  }\n  setFromArray(array: number[]): void {\n    let minX = + Infinity;\n    let minY = + Infinity;\n    let minZ = + Infinity;\n    let maxX = - Infinity;\n    let maxY = - Infinity;\n    let maxZ = - Infinity;\n    for (let i = 0, l = array.length; i < l; i += 3) {\n      const x = array[i];\n      const y = array[i + 1];\n      const z = array[i + 2];\n      if (x < minX) minX = x;\n      if (y < minY) minY = y;\n      if (z < minZ) minZ = z;\n      if (x > maxX) maxX = x;\n      if (y > maxY) maxY = y;\n      if (z > maxZ) maxZ = z;\n    }\n    this.min.set(minX, minY, minZ);\n    this.max.set(maxX, maxY, maxZ);\n  }\n  setFromPoints(points: Vector3[]): Box3 {\n    this.makeEmpty();\n    for (let i = 0, il = points.length; i < il; i ++) {\n      this.expandByPoint(points[i]);\n    }\n    return this;\n  }\n  private static _setFromCenterAndSize_v1 = new Vector3();\n  setFromCenterAndSize(center: Vector3, size: Vector3): Box3 {\n    const v1 = Box3._setFromCenterAndSize_v1;\n    const halfSize = v1.copy(size).multiplyScalar(0.5);\n    this.min.copy(center).sub(halfSize);\n    this.max.copy(center).add(halfSize);\n    return this;\n  }\n  private static _setFromObject_v1 = new Vector3();\n  setFromObject(object: Object3D): Box3 {\n    // Computes the world-axis-aligned bounding box of an object (including its children),\n    // accounting for both the object's, and children's, world transforms\n    const v1 = Box3._setFromObject_v1;\n    const scope = this;\n    object.updateMatrixWorld(true);\n    this.makeEmpty();\n    object.traverse(function(node: Object3D): void {\n      const geometry = node.geometry;\n      if (geometry !== undefined) {\n        if ((geometry && geometry instanceof Geometry)) {\n          const vertices = geometry.vertices;\n          for (let i = 0, il = vertices.length; i < il; i ++) {\n            v1.copy(vertices[i]);\n            v1.applyMatrix4(node.matrixWorld);\n            scope.expandByPoint(v1);\n          }\n        } else if ((geometry && geometry instanceof BufferGeometry)) {\n          const attribute = geometry.attributes.position;\n          if (attribute !== undefined) {\n            let array, offset: number, stride;\n            if ((attribute && attribute instanceof InterleavedBufferAttribute)) {\n              array = attribute.data.array;\n              offset = attribute.offset;\n              stride = attribute.data.stride;\n            } else {\n              array = attribute.array;\n              offset = 0;\n              stride = 3;\n            }\n            for (let i = offset, il = array.length; i < il; i += stride) {\n              v1.fromArray(array, i);\n              v1.applyMatrix4(node.matrixWorld);\n              scope.expandByPoint(v1);\n            }\n          }\n        }\n      }\n    });\n    return this;\n  }\n  clone(): Box3 {\n    return new (this.constructor as any)().copy(this);\n  }\n  copy(box: Box3): Box3 {\n    this.min.copy(box.min);\n    this.max.copy(box.max);\n    return this;\n  }\n  makeEmpty(): Box3 {\n    this.min.x = this.min.y = this.min.z = + Infinity;\n    this.max.x = this.max.y = this.max.z = - Infinity;\n    return this;\n  }\n  isEmpty(): boolean {\n    // this is a more robust check for empty than (volume <= 0) because volume can get positive with two negative axes\n    return (this.max.x < this.min.x) || (this.max.y < this.min.y) || (this.max.z < this.min.z);\n  }\n  getCenter(result: Vector3 = new Vector3()): Vector3 {\n    return this.isEmpty() ? result.set(0, 0, 0) : result.addVectors(this.min, this.max).multiplyScalar(0.5);\n  }\n  getSize(result: Vector3 = new Vector3()): Vector3 {\n    return this.isEmpty() ? result.set(0, 0, 0) : result.subVectors(this.max, this.min);\n  }\n  expandByPoint(point: Vector3): Box3 {\n    this.min.min(point);\n    this.max.max(point);\n    return this;\n  }\n  expandByVector(vector: Vector3): Box3 {\n    this.min.sub(vector);\n    this.max.add(vector);\n    return this;\n  }\n  expandByScalar(scalar: number): Box3 {\n    this.min.addScalar(- scalar);\n    this.max.addScalar(scalar);\n    return this;\n  }\n  containsPoint(point: Vector3): boolean {\n    if (point.x < this.min.x || point.x > this.max.x ||\n         point.y < this.min.y || point.y > this.max.y ||\n         point.z < this.min.z || point.z > this.max.z) {\n      return false;\n    }\n    return true;\n  }\n  containsBox(box: Box3): boolean {\n    if ((this.min.x <= box.min.x) && (box.max.x <= this.max.x) &&\n       (this.min.y <= box.min.y) && (box.max.y <= this.max.y) &&\n       (this.min.z <= box.min.z) && (box.max.z <= this.max.z)) {\n      return true;\n    }\n    return false;\n  }\n  getParameter(point: Vector3, result: Vector3 = new Vector3()): Vector3 {\n    // This can potentially have a divide by zero if the box\n    // has a size dimension of 0.\n    return result.set(\n      (point.x - this.min.x) / (this.max.x - this.min.x),\n      (point.y - this.min.y) / (this.max.y - this.min.y),\n      (point.z - this.min.z) / (this.max.z - this.min.z)\n    );\n  }\n  intersectsBox(box: Box3): boolean {\n    // using 6 splitting planes to rule out intersections.\n    if (box.max.x < this.min.x || box.min.x > this.max.x ||\n         box.max.y < this.min.y || box.min.y > this.max.y ||\n         box.max.z < this.min.z || box.min.z > this.max.z) {\n      return false;\n    }\n    return true;\n  }\n  private static _intersectsSphere_closestPoint = new Vector3();\n  intersectsSphere(sphere: Sphere): boolean {\n    const closestPoint = Box3._intersectsSphere_closestPoint;\n    // Find the point on the AABB closest to the sphere center.\n    this.clampPoint(sphere.center, closestPoint);\n    // If that point is inside the sphere, the AABB and sphere intersect.\n    return closestPoint.distanceToSquared(sphere.center) <= (sphere.radius * sphere.radius);\n  }\n  intersectsPlane(plane: Plane): boolean {\n    // We compute the minimum and maximum dot product values. If those values\n    // are on the same side (back or front) of the plane, then there is no intersection.\n    let min, max;\n    if (plane.normal.x > 0) {\n      min = plane.normal.x * this.min.x;\n      max = plane.normal.x * this.max.x;\n    } else {\n      min = plane.normal.x * this.max.x;\n      max = plane.normal.x * this.min.x;\n    }\n    if (plane.normal.y > 0) {\n      min += plane.normal.y * this.min.y;\n      max += plane.normal.y * this.max.y;\n    } else {\n      min += plane.normal.y * this.max.y;\n      max += plane.normal.y * this.min.y;\n    }\n    if (plane.normal.z > 0) {\n      min += plane.normal.z * this.min.z;\n      max += plane.normal.z * this.max.z;\n    } else {\n      min += plane.normal.z * this.max.z;\n      max += plane.normal.z * this.min.z;\n    }\n    return (min <= plane.constant && max >= plane.constant);\n  }\n  clampPoint(point: Vector3, result: Vector3 = new Vector3()): Vector3 {\n    return result.copy(point).clamp(this.min, this.max);\n  }\n  private static _distanceToPoint_v1 = new Vector3();\n  distanceToPoint(point: Vector3): number {\n    const v1 = Box3._distanceToPoint_v1;\n    const clampedPoint = v1.copy(point).clamp(this.min, this.max);\n    return clampedPoint.sub(point).length();\n  }\n  private static _getBoundingSphere_v1 = new Vector3();\n  getBoundingSphere(result: Sphere = new Sphere()) {\n    const v1 = Box3._getBoundingSphere_v1;\n    this.getCenter(result.center);\n    result.radius = this.getSize(v1).length() * 0.5;\n    return result;\n  }\n  intersect(box: Box3): Box3 {\n    this.min.max(box.min);\n    this.max.min(box.max);\n    // ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n    if (this.isEmpty()) this.makeEmpty();\n    return this;\n  }\n  union(box: Box3): Box3 {\n    this.min.min(box.min);\n    this.max.max(box.max);\n    return this;\n  }\n  private static _applyMatrix4_points = [\n    new Vector3(), new Vector3(), new Vector3(), new Vector3(),\n    new Vector3(), new Vector3(), new Vector3(), new Vector3()\n  ];\n  applyMatrix4(matrix: Matrix4): Box3 {\n    // transform of empty box is an empty box.\n    if (this.isEmpty()) return this;\n    const points = Box3._applyMatrix4_points;\n    // NOTE: I am using a binary pattern to specify all 2^3 combinations below\n    points[0].set(this.min.x, this.min.y, this.min.z).applyMatrix4(matrix); // 000\n    points[1].set(this.min.x, this.min.y, this.max.z).applyMatrix4(matrix); // 001\n    points[2].set(this.min.x, this.max.y, this.min.z).applyMatrix4(matrix); // 010\n    points[3].set(this.min.x, this.max.y, this.max.z).applyMatrix4(matrix); // 011\n    points[4].set(this.max.x, this.min.y, this.min.z).applyMatrix4(matrix); // 100\n    points[5].set(this.max.x, this.min.y, this.max.z).applyMatrix4(matrix); // 101\n    points[6].set(this.max.x, this.max.y, this.min.z).applyMatrix4(matrix); // 110\n    points[7].set(this.max.x, this.max.y, this.max.z).applyMatrix4(matrix);  // 111\n    this.setFromPoints(points);\n    return this;\n  }\n  translate(offset: Vector3): Box3 {\n    this.min.add(offset);\n    this.max.add(offset);\n    return this;\n  }\n  equals(box: Box3) {\n    return box.min.equals(this.min) && box.max.equals(this.max);\n  }\n  center(optionalTarget: Vector3 = new Vector3()): Vector3 {\n    console.warn(\"THREE.Box3: .center() has been renamed to .getCenter().\");\n    return this.getCenter(optionalTarget);\n  }\n  empty(): boolean {\n    console.warn(\"THREE.Box3: .empty() has been renamed to .isEmpty().\");\n    return this.isEmpty();\n  }\n  isIntersectionBox(box: Box3): boolean {\n    console.warn(\"THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().\");\n    return this.intersectsBox(box);\n  }\n  isIntersectionSphere(sphere: Sphere): boolean {\n    console.warn(\"THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().\");\n    return this.intersectsSphere(sphere);\n  }\n  size(optionalTarget: Vector3 = new Vector3()): Vector3 {\n    console.warn(\"THREE.Box3: .size() has been renamed to .getSize().\");\n    return this.getSize(optionalTarget);\n  }\n}\n","import { Box3 } from \"./Box3\";\nimport { Vector3 } from \"./Vector3\";\nimport { Matrix4 } from \"./Matrix4\";\nimport { Plane } from \"./Plane\";\n/**\n * @author bhouston / http://clara.io\n * @author mrdoob / http://mrdoob.com/\n */\nexport class Sphere {\n  center: Vector3;\n  radius: number;\n  constructor(center: Vector3 = new Vector3(), radius: number = 0) {\n    this.center = center;\n    this.radius = radius;\n  }\n  set(center: Vector3, radius: number): Sphere {\n    this.center.copy(center);\n    this.radius = radius;\n    return this;\n  }\n  private static setFromPoints_box = new Box3();\n  setFromPoints(points: Vector3[], optionalCenter?: Vector3): Sphere {\n    const box = Sphere.setFromPoints_box;\n    const center = this.center;\n    if (optionalCenter !== undefined) {\n      center.copy(optionalCenter);\n    } else {\n      box.setFromPoints(points).getCenter(center);\n    }\n    let maxRadiusSq = 0;\n    for (let i = 0, il = points.length; i < il; i ++) {\n      maxRadiusSq = Math.max(maxRadiusSq, center.distanceToSquared(points[i]));\n    }\n    this.radius = Math.sqrt(maxRadiusSq);\n    return this;\n  }\n  clone(): Sphere {\n    return new (this.constructor as any)().copy(this);\n  }\n  copy(sphere: Sphere): Sphere {\n    this.center.copy(sphere.center);\n    this.radius = sphere.radius;\n    return this;\n  }\n  empty(): boolean {\n    return (this.radius <= 0);\n  }\n  containsPoint(point: Vector3): boolean {\n    return (point.distanceToSquared(this.center) <= (this.radius * this.radius));\n  }\n  distanceToPoint(point: Vector3): number {\n    return (point.distanceTo(this.center) - this.radius);\n  }\n  intersectsSphere(sphere: Sphere): boolean {\n    const radiusSum = this.radius + sphere.radius;\n    return sphere.center.distanceToSquared(this.center) <= (radiusSum * radiusSum);\n  }\n  intersectsBox(box: Box3): boolean {\n    return box.intersectsSphere(this);\n  }\n  intersectsPlane(plane: Plane): boolean {\n    // We use the following equation to compute the signed distance from\n    // the center of the sphere to the plane.\n    //\n    // distance = q * n - d\n    //\n    // If this distance is greater than the radius of the sphere,\n    // then there is no intersection.\n    return Math.abs(this.center.dot(plane.normal) - plane.constant) <= this.radius;\n  }\n  clampPoint(point: Vector3, result: Vector3 = new Vector3()): Vector3 {\n    const deltaLengthSq = this.center.distanceToSquared(point);\n    result.copy(point);\n    if (deltaLengthSq > (this.radius * this.radius)) {\n      result.sub(this.center).normalize();\n      result.multiplyScalar(this.radius).add(this.center);\n    }\n    return result;\n  }\n  getBoundingBox(box: Box3 = new Box3()): Box3 {\n    box.set(this.center, this.center);\n    box.expandByScalar(this.radius);\n    return box;\n  }\n  applyMatrix4(matrix: Matrix4): Sphere {\n    this.center.applyMatrix4(matrix);\n    this.radius = this.radius * matrix.getMaxScaleOnAxis();\n    return this;\n  }\n  translate(offset: Vector3): Sphere {\n    this.center.add(offset);\n    return this;\n  }\n  equals(sphere: Sphere): boolean {\n    return sphere.center.equals(this.center) && (sphere.radius === this.radius);\n  }\n}\n","import { Vector3 } from \"./Vector3\";\nimport { Matrix4 } from \"./Matrix4\";\nimport { Sphere } from \"./Sphere\";\nimport { Plane } from \"./Plane\";\nimport { Box3 } from \"./Box3\";\nimport { Object3D } from \"../core/Object3D\";\nimport { Sprite } from \"../objects/Sprite\";\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author bhouston / http://clara.io\n */\nexport class Frustum {\n  planes: Plane[];\n  constructor(p0: Plane = new Plane(), p1: Plane = new Plane(), p2: Plane = new Plane(), p3: Plane = new Plane(), p4: Plane = new Plane(), p5: Plane = new Plane()) {\n    this.planes = [ p0, p1, p2, p3, p4, p5 ];\n  }\n  set(p0: Plane, p1: Plane, p2: Plane, p3: Plane, p4: Plane, p5: Plane): Frustum {\n    const planes = this.planes;\n    planes[0].copy(p0);\n    planes[1].copy(p1);\n    planes[2].copy(p2);\n    planes[3].copy(p3);\n    planes[4].copy(p4);\n    planes[5].copy(p5);\n    return this;\n  }\n  clone(): Frustum {\n    return new (this.constructor as any)().copy(this);\n  }\n  copy(frustum: Frustum): Frustum {\n    const planes = this.planes;\n    for (let i = 0; i < 6; i ++) {\n      planes[i].copy(frustum.planes[i]);\n    }\n    return this;\n  }\n  setFromMatrix(m: Matrix4): Frustum {\n    const planes = this.planes;\n    const me: Float32Array = m.elements;\n    const me0 = me[0], me1 = me[1], me2 = me[2], me3 = me[3];\n    const me4 = me[4], me5 = me[5], me6 = me[6], me7 = me[7];\n    const me8 = me[8], me9 = me[9], me10 = me[10], me11 = me[11];\n    const me12 = me[12], me13 = me[13], me14 = me[14], me15 = me[15];\n    planes[0].setComponents(me3 - me0, me7 - me4, me11 - me8, me15 - me12).normalize();\n    planes[1].setComponents(me3 + me0, me7 + me4, me11 + me8, me15 + me12).normalize();\n    planes[2].setComponents(me3 + me1, me7 + me5, me11 + me9, me15 + me13).normalize();\n    planes[3].setComponents(me3 - me1, me7 - me5, me11 - me9, me15 - me13).normalize();\n    planes[4].setComponents(me3 - me2, me7 - me6, me11 - me10, me15 - me14).normalize();\n    planes[5].setComponents(me3 + me2, me7 + me6, me11 + me10, me15 + me14).normalize();\n    return this;\n  }\n  private static intersectsObject_sphere = new Sphere();\n  intersectsObject(object: Object3D): boolean {\n    const sphere = Frustum.intersectsObject_sphere;\n    const geometry = object.geometry;\n    if (geometry.boundingSphere === null)\n      geometry.computeBoundingSphere();\n    sphere.copy(geometry.boundingSphere)\n      .applyMatrix4(object.matrixWorld);\n    return this.intersectsSphere(sphere);\n  }\n  private static intersectsSprite_sphere = new Sphere();\n  intersectsSprite(sprite: Sprite): boolean {\n    const sphere = Frustum.intersectsSprite_sphere;\n    sphere.center.set(0, 0, 0);\n    sphere.radius = 0.7071067811865476;\n    sphere.applyMatrix4(sprite.matrixWorld);\n    return this.intersectsSphere(sphere);\n  }\n  intersectsSphere(sphere: Sphere): boolean {\n    const planes = this.planes;\n    const center = sphere.center;\n    const negRadius = - sphere.radius;\n    for (let i = 0; i < 6; i ++) {\n      const distance = planes[i].distanceToPoint(center);\n      if (distance < negRadius) {\n        return false;\n      }\n    }\n    return true;\n  }\n  private static intersectsBox_p1 = new Vector3();\n  private static intersectsBox_p2 = new Vector3();\n  intersectsBox(box: Box3): boolean {\n    const p1 = Frustum.intersectsBox_p1,\n      p2 = Frustum.intersectsBox_p2;\n    const planes = this.planes;\n    for (let i = 0; i < 6 ; i ++) {\n      const plane = planes[i];\n      p1.x = plane.normal.x > 0 ? box.min.x : box.max.x;\n      p2.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n      p1.y = plane.normal.y > 0 ? box.min.y : box.max.y;\n      p2.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n      p1.z = plane.normal.z > 0 ? box.min.z : box.max.z;\n      p2.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n      const d1 = plane.distanceToPoint(p1);\n      const d2 = plane.distanceToPoint(p2);\n      // if both outside plane, no intersection\n      if (d1 < 0 && d2 < 0) {\n        return false;\n      }\n    }\n    return true;\n  }\n  containsPoint(point: Vector3): boolean {\n    const planes = this.planes;\n    for (let i = 0; i < 6; i ++) {\n      if (planes[i].distanceToPoint(point) < 0) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n","import { Matrix4 } from \"../math/Matrix4\";\nimport { Quaternion } from \"../math/Quaternion\";\nimport { Object3D } from \"../core/Object3D\";\nimport { Vector3 } from \"../math/Vector3\";\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author mikael emtinger / http://gomo.se/\n * @author WestLangley / http://github.com/WestLangley\n*/\nexport class Camera extends Object3D {\n  matrixWorldInverse: Matrix4 = new Matrix4();\n  projectionMatrix: Matrix4 = new Matrix4();\n  // {\n  far: number;\n  // }\n  readonly isCamera: boolean = true;\n  constructor() {\n    super();\n    this.type = 'Camera';\n  }\n  updateProjectionMatrix(): void {}\n  getWorldDirection(result: Vector3 = new Vector3()): Vector3 {\n    const quaternion = new Quaternion();\n    //return function getWorldDirection(result) {\n      this.getWorldQuaternion(quaternion);\n      return result.set(0, 0, - 1).applyQuaternion(quaternion);\n    //};\n  }\n  lookAt(vector: Vector3): void {\n    // This routine does not support cameras with rotated and/or translated parent(s)\n    const m1 = new Matrix4();\n    //return function lookAt(vector) {\n      m1.lookAt(this.position, vector, this.up);\n      this.quaternion.setFromRotationMatrix(m1);\n    //};\n  }\n  clone(): this {\n    return new (this.constructor as any)().copy(this);\n  }\n  copy(source: this): this {\n    super.copy(source);\n    this.matrixWorldInverse.copy(source.matrixWorldInverse);\n    this.projectionMatrix.copy(source.projectionMatrix);\n    return this;\n  }\n}\n","import { Camera } from \"./Camera\";\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author arose / http://github.com/arose\n */\nexport class OrthographicCamera extends Camera {\n  zoom: number = 1;\n  view: any = null;\n  left: number;\n  right: number;\n  top: number;\n  bottom: number;\n  near: number;\n  far: number;\n  readonly isOrthographicCamera: boolean = true;\n  constructor(left: number, right: number, top: number, bottom: number, near: number = 0.1, far: number = 2000) {\n    super();\n    this.type = 'OrthographicCamera';\n    this.left = left;\n    this.right = right;\n    this.top = top;\n    this.bottom = bottom;\n    this.near = near;\n    this.far = far;\n    this.updateProjectionMatrix();\n  }\n  copy(source: this): this {\n    super.copy(source);\n    this.left = source.left;\n    this.right = source.right;\n    this.top = source.top;\n    this.bottom = source.bottom;\n    this.near = source.near;\n    this.far = source.far;\n    this.zoom = source.zoom;\n    this.view = source.view === null ? null : Object.assign({}, source.view);\n    return this;\n  }\n  setViewOffset(fullWidth: number, fullHeight: number, x: number, y: number, width: number, height: number): void {\n    this.view = {\n      fullWidth: fullWidth,\n      fullHeight: fullHeight,\n      offsetX: x,\n      offsetY: y,\n      width: width,\n      height: height\n    };\n    this.updateProjectionMatrix();\n  }\n  clearViewOffset(): void {\n    this.view = null;\n    this.updateProjectionMatrix();\n  }\n  updateProjectionMatrix(): void {\n    const dx = (this.right - this.left) / (2 * this.zoom);\n    const dy = (this.top - this.bottom) / (2 * this.zoom);\n    const cx = (this.right + this.left) / 2;\n    const cy = (this.top + this.bottom) / 2;\n    let left = cx - dx;\n    let right = cx + dx;\n    let top = cy + dy;\n    let bottom = cy - dy;\n    if (this.view !== null) {\n      const zoomW = this.zoom / (this.view.width / this.view.fullWidth);\n      const zoomH = this.zoom / (this.view.height / this.view.fullHeight);\n      const scaleW = (this.right - this.left) / this.view.width;\n      const scaleH = (this.top - this.bottom) / this.view.height;\n      left += scaleW * (this.view.offsetX / zoomW);\n      right = left + scaleW * (this.view.width / zoomW);\n      top -= scaleH * (this.view.offsetY / zoomH);\n      bottom = top - scaleH * (this.view.height / zoomH);\n    }\n    this.projectionMatrix.makeOrthographic(left, right, top, bottom, this.near, this.far);\n  }\n  toJSON(meta: any): any {\n    const data = super.toJSON(meta);\n    data.object.zoom = this.zoom;\n    data.object.left = this.left;\n    data.object.right = this.right;\n    data.object.top = this.top;\n    data.object.bottom = this.bottom;\n    data.object.near = this.near;\n    data.object.far = this.far;\n    if (this.view !== null) data.object.view = Object.assign({}, this.view);\n    return data;\n  }\n}\n","import { Camera } from \"./Camera\";\nimport { _Math } from \"../math/Math\";\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author greggman / http://games.greggman.com/\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author tschw\n */\nexport class PerspectiveCamera extends Camera {\n  fov: number;\n  zoom: number = 1;\n  near: number;\n  far: number;\n  focus: number = 10;\n  aspect: number;\n  view: any = null;\n  filmGauge: number = 35; // width of the film (default in millimeters)\n  filmOffset: number = 0; // horizontal film offset (same unit as gauge)\n  readonly isPerspectiveCamera: boolean = true;\n  constructor(fov: number = 50, aspect: number = 1, near: number = 0.1, far: number = 2000) {\n    super();\n    this.type = 'PerspectiveCamera';\n    this.fov = fov;\n    this.near = near;\n    this.far = far;\n    this.aspect = aspect;\n    this.updateProjectionMatrix();\n  }\n  copy(source: this): this {\n    super.copy(source);\n    this.fov = source.fov;\n    this.zoom = source.zoom;\n    this.near = source.near;\n    this.far = source.far;\n    this.focus = source.focus;\n    this.aspect = source.aspect;\n    this.view = source.view === null ? null : Object.assign({}, source.view);\n    this.filmGauge = source.filmGauge;\n    this.filmOffset = source.filmOffset;\n    return this;\n  }\n  setLens(focalLength: number, filmGauge: number): void {\n    console.warn(\"THREE.PerspectiveCamera.setLens is deprecated. \" +\n        \"Use .setFocalLength and .filmGauge for a photographic setup.\");\n    if (filmGauge !== undefined) this.filmGauge = filmGauge;\n    this.setFocalLength(focalLength);\n  }\n  /**\n   * Sets the FOV by focal length in respect to the current .filmGauge.\n   *\n   * The default film gauge is 35, so that the focal length can be specified for\n   * a 35mm (full frame) camera.\n   *\n   * Values for focal length and film gauge must have the same unit.\n   */\n  setFocalLength(focalLength: number): void {\n    // see http://www.bobatkins.com/photography/technical/field_of_view.html\n    const vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n    this.fov = _Math.RAD2DEG * 2 * Math.atan(vExtentSlope);\n    this.updateProjectionMatrix();\n  }\n  /**\n   * Calculates the focal length from the current .fov and .filmGauge.\n   */\n  getFocalLength(): number {\n    const vExtentSlope = Math.tan(_Math.DEG2RAD * 0.5 * this.fov);\n    return 0.5 * this.getFilmHeight() / vExtentSlope;\n  }\n  getEffectiveFOV(): number {\n    return _Math.RAD2DEG * 2 * Math.atan(\n        Math.tan(_Math.DEG2RAD * 0.5 * this.fov) / this.zoom);\n  }\n  getFilmWidth(): number {\n    // film not completely covered in portrait format (aspect < 1)\n    return this.filmGauge * Math.min(this.aspect, 1);\n  }\n  getFilmHeight(): number {\n    // film not completely covered in landscape format (aspect > 1)\n    return this.filmGauge / Math.max(this.aspect, 1);\n  }\n  /**\n   * Sets an offset in a larger frustum. This is useful for multi-window or\n   * multi-monitor/multi-machine setups.\n   *\n   * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n   * the monitors are in grid like this\n   *\n   *   +---+---+---+\n   *   | A | B | C |\n   *   +---+---+---+\n   *   | D | E | F |\n   *   +---+---+---+\n   *\n   * then for each monitor you would call it like this\n   *\n   *   let w = 1920;\n   *   let h = 1080;\n   *   let fullWidth = w * 3;\n   *   let fullHeight = h * 2;\n   *\n   *   --A--\n   *   camera.setOffset(fullWidth, fullHeight, w * 0, h * 0, w, h);\n   *   --B--\n   *   camera.setOffset(fullWidth, fullHeight, w * 1, h * 0, w, h);\n   *   --C--\n   *   camera.setOffset(fullWidth, fullHeight, w * 2, h * 0, w, h);\n   *   --D--\n   *   camera.setOffset(fullWidth, fullHeight, w * 0, h * 1, w, h);\n   *   --E--\n   *   camera.setOffset(fullWidth, fullHeight, w * 1, h * 1, w, h);\n   *   --F--\n   *   camera.setOffset(fullWidth, fullHeight, w * 2, h * 1, w, h);\n   *\n   *   Note there is no reason monitors have to be the same size or in a grid.\n   */\n  setViewOffset(fullWidth: number, fullHeight: number, x: number, y: number, width: number, height: number): void {\n    this.aspect = fullWidth / fullHeight;\n    this.view = {\n      fullWidth: fullWidth,\n      fullHeight: fullHeight,\n      offsetX: x,\n      offsetY: y,\n      width: width,\n      height: height\n    };\n    this.updateProjectionMatrix();\n  }\n  clearViewOffset(): void {\n    this.view = null;\n    this.updateProjectionMatrix();\n  }\n  updateProjectionMatrix(): void {\n    const near = this.near;\n    let top = near * Math.tan(\n          _Math.DEG2RAD * 0.5 * this.fov) / this.zoom;\n    let height = 2 * top;\n    let width = this.aspect * height;\n    let left = - 0.5 * width;\n    const view = this.view;\n    if (view !== null) {\n      const fullWidth = view.fullWidth,\n        fullHeight = view.fullHeight;\n      left += view.offsetX * width / fullWidth;\n      top -= view.offsetY * height / fullHeight;\n      width *= view.width / fullWidth;\n      height *= view.height / fullHeight;\n    }\n    const skew = this.filmOffset;\n    if (skew !== 0) left += near * skew / this.getFilmWidth();\n    this.projectionMatrix.makeFrustum(\n        left, left + width, top - height, top, near, this.far);\n  }\n  toJSON(meta: any): any {\n    const data = super.toJSON(meta);\n    data.object.fov = this.fov;\n    data.object.zoom = this.zoom;\n    data.object.near = this.near;\n    data.object.far = this.far;\n    data.object.focus = this.focus;\n    data.object.aspect = this.aspect;\n    if (this.view !== null) data.object.view = Object.assign({}, this.view);\n    data.object.filmGauge = this.filmGauge;\n    data.object.filmOffset = this.filmOffset;\n    return data;\n  }\n}\n","import { Object3D } from \"../core/Object3D\";\nimport { Color } from \"../math/Color\";\nimport { LightShadow } from \"./LightShadow\";\nimport { OrthographicCamera } from \"../cameras/OrthographicCamera\";\nimport { PerspectiveCamera } from \"../cameras/PerspectiveCamera\";\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\nexport class Light extends Object3D {\n  color: any;\n  intensity: any;\n  groundColor: any;\n  distance: any;\n  angle: any;\n  decay: any;\n  penumbra: any;\n  shadow: LightShadow;\n  target: any;\n  readonly isLight: boolean = true;\n  constructor(color: number, intensity: number = 1) {\n    super();\n    this.type = 'Light';\n    this.color = new Color(color);\n    this.intensity = intensity !== undefined ? intensity : 1;\n    this.receiveShadow = undefined;\n  }\n  copy(source: this): this {\n    super.copy(source);\n    this.color.copy(source.color);\n    this.intensity = source.intensity;\n    return this;\n  }\n  toJSON(meta: any): any {\n    let data = super.toJSON(meta);\n    data.object.color = this.color.getHex();\n    data.object.intensity = this.intensity;\n    if (this.groundColor !== undefined) data.object.groundColor = this.groundColor.getHex();\n    if (this.distance !== undefined) data.object.distance = this.distance;\n    if (this.angle !== undefined) data.object.angle = this.angle;\n    if (this.decay !== undefined) data.object.decay = this.decay;\n    if (this.penumbra !== undefined) data.object.penumbra = this.penumbra;\n    if (this.shadow !== undefined) data.object.shadow = this.shadow.toJSON();\n    return data;\n  }\n  set onlyShadow(value: boolean) {\n    console.warn(\"THREE.Light: .onlyShadow has been removed.\");\n  }\n  set shadowCameraFov(value: number) {\n    console.warn(\"THREE.Light: .shadowCameraFov is now .shadow.camera.fov.\");\n    if (this.shadow.camera instanceof PerspectiveCamera) {\n      this.shadow.camera.fov = value;\n    }\n  }\n  set shadowCameraLeft(value: number) {\n    console.warn(\"THREE.Light: .shadowCameraLeft is now .shadow.camera.left.\");\n    if (this.shadow.camera instanceof OrthographicCamera) {\n      this.shadow.camera.left = value;\n    }\n  }\n  set shadowCameraRight(value: number) {\n    console.warn(\"THREE.Light: .shadowCameraRight is now .shadow.camera.right.\");\n    if (this.shadow.camera instanceof OrthographicCamera) {\n      this.shadow.camera.right = value;\n    }\n  }\n  set shadowCameraTop(value: number) {\n    console.warn(\"THREE.Light: .shadowCameraTop is now .shadow.camera.top.\");\n    if (this.shadow.camera instanceof OrthographicCamera) {\n      this.shadow.camera.top = value;\n    }\n  }\n  set shadowCameraBottom(value: number) {\n    console.warn(\"THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.\");\n    if (this.shadow.camera instanceof OrthographicCamera) {\n      this.shadow.camera.bottom = value;\n    }\n  }\n  set shadowCameraNear(value: number) {\n    console.warn(\"THREE.Light: .shadowCameraNear is now .shadow.camera.near.\");\n    if (this.shadow.camera instanceof OrthographicCamera) {\n      this.shadow.camera.near = value;\n    }\n  }\n  set shadowCameraFar(value: number) {\n    console.warn(\"THREE.Light: .shadowCameraFar is now .shadow.camera.far.\");\n    if (this.shadow.camera instanceof OrthographicCamera) {\n      this.shadow.camera.far = value;\n    }\n  }\n  set shadowCameraVisible(value: boolean) {\n    console.warn(\"THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper(light.shadow.camera) instead.\");\n  }\n  set shadowBias(value: number) {\n    console.warn(\"THREE.Light: .shadowBias is now .shadow.bias.\");\n    this.shadow.bias = value;\n  }\n  set shadowDarkness(value: number) {\n    console.warn(\"THREE.Light: .shadowDarkness has been removed.\");\n  }\n  set shadowMapWidth(value: number) {\n    console.warn(\"THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.\");\n    this.shadow.mapSize.width = value;\n  }\n  set shadowMapHeight(value: number) {\n    console.warn(\"THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.\");\n    this.shadow.mapSize.height = value;\n  }\n}\n","import { Matrix4 } from \"../math/Matrix4\";\nimport { Vector2 } from \"../math/Vector2\";\nimport { Camera } from \"../cameras/Camera\";\n/**\n * @author mrdoob / http://mrdoob.com/\n */\nexport class LightShadow {\n  camera: Camera;\n  bias: number = 0;\n  radius: number = 1;\n  mapSize: Vector2 = new Vector2(512, 512);\n  map: any = null;\n  matrix: Matrix4 = new Matrix4();\n  constructor(camera?: Camera) {\n    this.camera = camera;\n  }\n  copy(source: this): this {\n    this.camera = source.camera.clone();\n    this.bias = source.bias;\n    this.radius = source.radius;\n    this.mapSize.copy(source.mapSize);\n    return this;\n  }\n  clone(): this {\n    return new (this.constructor as any)().copy(this);\n  }\n  toJSON(): any {\n    let object: any = {};\n    if (this.bias !== 0) object.bias = this.bias;\n    if (this.radius !== 1) object.radius = this.radius;\n    if (this.mapSize.x !== 512 || this.mapSize.y !== 512) object.mapSize = this.mapSize.toArray();\n    object.camera = this.camera.toJSON(false).object;\n    delete object.camera.matrix;\n    return object;\n  }\n}\n","import { Light } from \"./Light\";\nimport { PerspectiveCamera } from \"../cameras/PerspectiveCamera\";\nimport { LightShadow } from \"./LightShadow\";\n/**\n * @author mrdoob / http://mrdoob.com/\n */\nexport class PointLight extends Light {\n  readonly isPointLight: boolean = true;\n  constructor(color: number, intensity?: number, distance: number = 0, decay: number = 1) {\n    super(color, intensity);\n    this.type = 'PointLight';\n    this.distance = distance;\n    this.decay = decay;  // for physically correct lights, should be 2.\n    this.shadow = new LightShadow(new PerspectiveCamera(90, 1, 0.5, 500));\n  }\n  get power(): number {\n    // intensity = power per solid angle.\n    // ref: equation (15) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf\n    return this.intensity * 4 * Math.PI;\n  }\n  set power(value: number) {\n    // intensity = power per solid angle.\n    // ref: equation (15) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf\n    this.intensity = value / (4 * Math.PI);\n  }\n  copy(source: this): this {\n    super.copy(source);\n    this.distance = source.distance;\n    this.decay = source.decay;\n    this.shadow = source.shadow.clone();\n    return this;\n  }\n}\n","import { Light } from \"./Light\";\nimport { LightShadow } from \"./LightShadow\";\nimport { _Math } from \"../math/Math\";\nimport { PerspectiveCamera } from \"../cameras/PerspectiveCamera\";\n/**\n * @author mrdoob / http://mrdoob.com/\n */\nexport class SpotLightShadow extends LightShadow {\n  readonly isSpotLightShadow: boolean = true;\n  constructor() {\n    super(new PerspectiveCamera(50, 1, 0.5, 500));\n  }\n  update(light: Light): void {\n    let fov = _Math.RAD2DEG * 2 * light.angle;\n    let aspect = this.mapSize.width / this.mapSize.height;\n    let far = light.distance || 500;\n    let camera = <PerspectiveCamera> this.camera;\n    if (fov !== camera.fov || aspect !== camera.aspect || far !== camera.far) {\n      camera.fov = fov;\n      camera.aspect = aspect;\n      camera.far = far;\n      camera.updateProjectionMatrix();\n    }\n  }\n}\n","import { Texture } from \"./Texture\";\nimport { TextureMapping, TextureWrapping, TextureEncoding, TextureType, TextureFormat, TextureFilter } from \"../constants\";\n/**\n * @author alteredq / http://alteredqualia.com/\n */\nexport class DataTexture extends Texture {\n  readonly isDataTexture: boolean = true;\n  constructor(data?: any, width?: number, height?: number, format?: TextureFormat, type?: TextureType, mapping?: TextureMapping, wrapS?: TextureWrapping, wrapT?: TextureWrapping, magFilter: TextureFilter = TextureFilter.Nearest, minFilter: TextureFilter = TextureFilter.Nearest, anisotropy?: number, encoding?: TextureEncoding) {\n    super(null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding);\n    this.image = { data: data, width: width, height: height };\n    this.magFilter = magFilter;\n    this.minFilter = minFilter;\n    this.generateMipmaps  = false;\n    this.flipY = false;\n    this.unpackAlignment = 1;\n  }\n}\n","import { Object3D } from \"../core/Object3D\";\nimport { SkinnedMesh } from \"./SkinnedMesh\";\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author ikerr / http://verold.com\n */\nexport class Bone extends Object3D {\n  skin: SkinnedMesh;\n  readonly isBone: boolean = true;\n  constructor(skin?: SkinnedMesh) {\n    super();\n    this.type = 'Bone';\n    this.skin = skin;\n  }\n  copy(source: this): this {\n    super.copy(source);\n    this.skin = source.skin;\n    return this;\n  }\n}\n","import { Matrix4 } from \"../math/Matrix4\";\nimport { TextureType, TextureFormat } from \"../constants\";\nimport { DataTexture } from \"../textures/DataTexture\";\nimport { _Math } from \"../math/Math\";\nimport { Bone } from \"./Bone\";\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author michael guerrero / http://realitymeltdown.com\n * @author ikerr / http://verold.com\n */\nexport class Skeleton {\n  useVertexTexture: boolean;\n  identityMatrix: Matrix4 = new Matrix4();\n  bones: Bone[];\n  boneMatrices: Float32Array;\n  boneInverses: Matrix4[];\n  boneTexture: DataTexture;\n  boneTextureWidth: number;\n  boneTextureHeight: number;\n  constructor(bones: Bone[] = [], boneInverses?: Matrix4[], useVertexTexture: boolean = true) {\n    this.useVertexTexture = useVertexTexture;\n    // copy the bone array\n    this.bones = bones.slice(0);\n    // create a bone texture or an array of floats\n    if (this.useVertexTexture) {\n      // layout (1 matrix = 4 pixels)\n      //      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n      //  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\n      //       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\n      //       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\n      //       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n      let size = Math.sqrt(this.bones.length * 4); // 4 pixels needed for 1 matrix\n      size = _Math.nextPowerOfTwo(Math.ceil(size));\n      size = Math.max(size, 4);\n      this.boneTextureWidth = size;\n      this.boneTextureHeight = size;\n      this.boneMatrices = new Float32Array(this.boneTextureWidth * this.boneTextureHeight * 4); // 4 floats per RGBA pixel\n      this.boneTexture = new DataTexture(this.boneMatrices, this.boneTextureWidth, this.boneTextureHeight, TextureFormat.RGBA, TextureType.Float);\n    } else {\n      this.boneMatrices = new Float32Array(16 * this.bones.length);\n    }\n    // use the supplied bone inverses or calculate the inverses\n    if (boneInverses === undefined) {\n      this.calculateInverses();\n    } else {\n      if (this.bones.length === boneInverses.length) {\n        this.boneInverses = boneInverses.slice(0);\n      } else {\n        console.warn('THREE.Skeleton bonInverses is the wrong length.');\n        this.boneInverses = [];\n        for (let b = 0, bl = this.bones.length; b < bl; b ++) {\n          this.boneInverses.push(new Matrix4());\n        }\n      }\n    }\n  }\n  calculateInverses(): void {\n    this.boneInverses = [];\n    for (let b = 0, bl = this.bones.length; b < bl; b ++) {\n      const inverse = new Matrix4();\n      if (this.bones[b]) {\n        inverse.getInverse(this.bones[b].matrixWorld);\n      }\n      this.boneInverses.push(inverse);\n    }\n  }\n  pose(): void {\n    let bone: Bone;\n    // recover the bind-time world matrices\n    for (let b = 0, bl = this.bones.length; b < bl; b ++) {\n      bone = this.bones[b];\n      if (bone) {\n        bone.matrixWorld.getInverse(this.boneInverses[b]);\n      }\n    }\n    // compute the local matrices, positions, rotations and scales\n    for (let b = 0, bl = this.bones.length; b < bl; b ++) {\n      bone = this.bones[b];\n      if (bone) {\n        if ((bone.parent && bone.parent instanceof Bone)) {\n          bone.matrix.getInverse(bone.parent.matrixWorld);\n          bone.matrix.multiply(bone.matrixWorld);\n        } else {\n          bone.matrix.copy(bone.matrixWorld);\n        }\n        bone.matrix.decompose(bone.position, bone.quaternion, bone.scale);\n      }\n    }\n  }\n  private static update_offsetMatrix = new Matrix4();\n  update(): void {\n    const offsetMatrix = Skeleton.update_offsetMatrix;\n    //return function update() {\n      // flatten bone matrices to array\n      for (let b = 0, bl = this.bones.length; b < bl; b ++) {\n        // compute the offset between the current and the original transform\n        const matrix = this.bones[b] ? this.bones[b].matrixWorld : this.identityMatrix;\n        offsetMatrix.multiplyMatrices(matrix, this.boneInverses[b]);\n        offsetMatrix.toArray(this.boneMatrices, b * 16);\n      }\n      if (this.useVertexTexture) {\n        this.boneTexture.needsUpdate = true;\n      }\n    //};\n  }\n  clone(): this {\n    return new (this.constructor as any)(this.bones, this.boneInverses, this.useVertexTexture);\n  }\n}\n","import { Mesh } from \"./Mesh\";\nimport { Vector4 } from \"../math/Vector4\";\nimport { Skeleton } from \"./Skeleton\";\nimport { Bone } from \"./Bone\";\nimport { Matrix4 } from \"../math/Matrix4\";\nimport { Geometry } from \"../core/Geometry\";\nimport { BufferGeometry } from \"../core/BufferGeometry\";\nimport { Material } from \"../materials/Material\";\nimport { MultiMaterial } from \"../materials/MultiMaterial\";\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author ikerr / http://verold.com\n */\nexport class SkinnedMesh extends Mesh {\n  bindMode: string = \"attached\";\n  bindMatrix: Matrix4 = new Matrix4();\n  bindMatrixInverse: Matrix4 = new Matrix4();\n  skeleton: Skeleton;\n  mixer;\n  ikSolver;\n  grantSolver;\n  physics;\n  readonly isSkinnedMesh: boolean = true;\n  constructor(geometry: Geometry | BufferGeometry, material: Material | MultiMaterial, useVertexTexture: boolean = true) {\n    super(geometry, material);\n    this.type = 'SkinnedMesh';\n    // init bones\n    // TODO: remove bone creation as there is no reason (other than\n    // convenience) for THREE.SkinnedMesh to do this.\n    let bones = [];\n    if (this.geometry && this.geometry.bones !== undefined) {\n      let bone, gbone;\n      for (let b = 0, bl = this.geometry.bones.length; b < bl; ++ b) {\n        gbone = this.geometry.bones[ b ];\n        bone = new Bone(this);\n        bones.push(bone);\n        bone.name = gbone.name;\n        bone.position.fromArray(gbone.pos);\n        bone.quaternion.fromArray(gbone.rotq);\n        if (gbone.scl !== undefined) bone.scale.fromArray(gbone.scl);\n      }\n      for (let b = 0, bl = this.geometry.bones.length; b < bl; ++ b) {\n        gbone = this.geometry.bones[ b ];\n        if (gbone.parent !== - 1 && gbone.parent !== null &&\n            bones[ gbone.parent ] !== undefined) {\n          bones[ gbone.parent ].add(bones[ b ]);\n        } else {\n          this.add(bones[ b ]);\n        }\n      }\n    }\n    this.normalizeSkinWeights();\n    this.updateMatrixWorld(true);\n    this.bind(new Skeleton(bones, undefined, useVertexTexture), this.matrixWorld);\n  }\n  bind(skeleton: Skeleton, bindMatrix: Matrix4): void {\n    this.skeleton = skeleton;\n    if (bindMatrix === undefined) {\n      this.updateMatrixWorld(true);\n      this.skeleton.calculateInverses();\n      bindMatrix = this.matrixWorld;\n    }\n    this.bindMatrix.copy(bindMatrix);\n    this.bindMatrixInverse.getInverse(bindMatrix);\n  }\n  pose(): void {\n    this.skeleton.pose();\n  }\n  normalizeSkinWeights(): void {\n    if ((this.geometry && this.geometry instanceof Geometry)) {\n      for (let i = 0; i < this.geometry.skinWeights.length; i ++) {\n        let sw = this.geometry.skinWeights[ i ];\n        let scale = 1.0 / sw.lengthManhattan();\n        if (scale !== Infinity) {\n          sw.multiplyScalar(scale);\n        } else {\n          sw.set(1, 0, 0, 0); // do something reasonable\n        }\n      }\n    } else if ((this.geometry && this.geometry instanceof BufferGeometry)) {\n      let vec = new Vector4();\n      let skinWeight = this.geometry.attributes.skinWeight;\n      for (let i = 0; i < skinWeight.count; i ++) {\n        vec.x = skinWeight.getX(i);\n        vec.y = skinWeight.getY(i);\n        vec.z = skinWeight.getZ(i);\n        vec.w = skinWeight.getW(i);\n        let scale = 1.0 / vec.lengthManhattan();\n        if (scale !== Infinity) {\n          vec.multiplyScalar(scale);\n        } else {\n          vec.set(1, 0, 0, 0); // do something reasonable\n        }\n        skinWeight.setXYZW(i, vec.x, vec.y, vec.z, vec.w);\n      }\n    }\n  }\n  updateMatrixWorld(force: boolean): void {\n    super.updateMatrixWorld(true);\n    if (this.bindMode === \"attached\") {\n      this.bindMatrixInverse.getInverse(this.matrixWorld);\n    } else if (this.bindMode === \"detached\") {\n      this.bindMatrixInverse.getInverse(this.bindMatrix);\n    } else {\n      console.warn('THREE.SkinnedMesh unrecognized bindMode: ' + this.bindMode);\n    }\n  }\n  clone(): this {\n    return new (this.constructor as any)(this.geometry, this.material, this.skeleton.useVertexTexture).copy(this);\n  }\n}\n","/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\nimport { SideMode, TextureFormat, TextureFilter, ShadowMap, DepthPacking } from \"../../constants\";\nimport { CullFace } from \"../../constants\";\nimport { WebGLRenderTarget } from \"../WebGLRenderTarget\";\nimport { ShaderMaterial } from \"../../materials/ShaderMaterial\";\nimport { UniformsUtils } from \"../shaders/UniformsUtils\";\nimport { ShaderLib } from \"../shaders/ShaderLib\";\nimport { MeshDepthMaterial } from \"../../materials/MeshDepthMaterial\";\nimport { Vector4 } from \"../../math/Vector4\";\nimport { Vector3 } from \"../../math/Vector3\";\nimport { Vector2 } from \"../../math/Vector2\";\nimport { Matrix4 } from \"../../math/Matrix4\";\nimport { Frustum } from \"../../math/Frustum\";\nimport { PointLight } from \"../../lights/PointLight\";\nimport { SpotLightShadow } from \"../../lights/SpotLightShadow\";\nimport { MultiMaterial } from \"../../materials/MultiMaterial\";\nimport { BufferGeometry } from \"../../core/BufferGeometry\";\nimport { Geometry } from \"../../core/Geometry\";\nimport { SkinnedMesh } from \"../../objects/SkinnedMesh\";\nimport { Mesh } from \"../../objects/Mesh\";\nimport { Line } from \"../../objects/Line\";\nimport { Points } from \"../../objects/Points\";\nexport class WebGLShadowMap {\n  _renderer: any;\n  _lights: any;\n  _objects: any;\n  capabilities: any;\n  _gl: any;\n  _state: any;\n  _frustum: any;\n  _projScreenMatrix: any;\n  _lightShadows: any;\n  _shadowMapSize: any;\n  _maxShadowMapSize: any;\n  _lookTarget: any;\n  _lightPositionWorld: any;\n  _renderList: any;\n  _MorphingFlag: any;\n  _SkinningFlag: any;\n  _NumberOfMaterialVariants: any;\n  _depthMaterials: any;\n  _distanceMaterials: any;\n  _materialCache: any;\n  cubeDirections: any;\n  cubeUps: any;\n  cube2DViewPorts: any;\n  enabled: any;\n  autoUpdate: any;\n  needsUpdate: any;\n  type: ShadowMap;\n  renderReverseSided: any;\n  renderSingleSided: any;\n  constructor(_renderer: any, _lights: any, _objects: any, capabilities: any) {\n    this._renderer = _renderer;\n    this._lights = _lights;\n    this._objects = _objects;\n    this.capabilities = capabilities;\n    this._gl = _renderer.context;\n    this._state = _renderer.state;\n    this._frustum = new Frustum();\n    this._projScreenMatrix = new Matrix4();\n    this._lightShadows = _lights.shadows;\n    this._shadowMapSize = new Vector2();\n    this._maxShadowMapSize = new Vector2(capabilities.maxTextureSize, capabilities.maxTextureSize);\n    this._lookTarget = new Vector3();\n    this._lightPositionWorld = new Vector3();\n    this._renderList = [];\n    this._MorphingFlag = 1;\n    this._SkinningFlag = 2;\n    this._NumberOfMaterialVariants = (this._MorphingFlag | this._SkinningFlag) + 1;\n    this._depthMaterials = new Array(this._NumberOfMaterialVariants);\n    this._distanceMaterials = new Array(this._NumberOfMaterialVariants);\n    this._materialCache = {};\n    this.cubeDirections = [\n      new Vector3(1, 0, 0), new Vector3(- 1, 0, 0), new Vector3(0, 0, 1),\n      new Vector3(0, 0, - 1), new Vector3(0, 1, 0), new Vector3(0, - 1, 0)\n    ];\n    this.cubeUps = [\n      new Vector3(0, 1, 0), new Vector3(0, 1, 0), new Vector3(0, 1, 0),\n      new Vector3(0, 1, 0), new Vector3(0, 0, 1),  new Vector3(0, 0, - 1)\n    ];\n    this.cube2DViewPorts = [\n      new Vector4(), new Vector4(), new Vector4(),\n      new Vector4(), new Vector4(), new Vector4()\n    ];\n    // init\n    const depthMaterialTemplate = new MeshDepthMaterial();\n    depthMaterialTemplate.depthPacking = DepthPacking.RGBA;\n    depthMaterialTemplate.clipping = true;\n    const distanceShader = ShaderLib[\"distanceRGBA\"];\n    const distanceUniforms = UniformsUtils.clone(distanceShader.uniforms);\n    for (let i = 0; i !== this._NumberOfMaterialVariants; ++ i) {\n      const useMorphing = (i & this._MorphingFlag) !== 0;\n      const useSkinning = (i & this._SkinningFlag) !== 0;\n      const depthMaterial = depthMaterialTemplate.clone();\n      depthMaterial.morphTargets = useMorphing;\n      depthMaterial.skinning = useSkinning;\n      this._depthMaterials[i] = depthMaterial;\n      const distanceMaterial = new ShaderMaterial({\n        defines: {\n          'USE_SHADOWMAP': ''\n        },\n        uniforms: distanceUniforms,\n        vertexShader: distanceShader.vertexShader,\n        fragmentShader: distanceShader.fragmentShader,\n        morphTargets: useMorphing,\n        skinning: useSkinning,\n        clipping: true\n      });\n      this._distanceMaterials[i] = distanceMaterial;\n    }\n    //\n    this.enabled = false;\n    this.autoUpdate = true;\n    this.needsUpdate = false;\n    this.type = ShadowMap.PCF;\n    this.renderReverseSided = true;\n    this.renderSingleSided = true;\n  }\n  render(scene: any, camera: any) {\n    if (this.enabled === false) return;\n    if (this.autoUpdate === false && this.needsUpdate === false) return;\n    if (this._lightShadows.length === 0) return;\n    // Set GL state for depth map.\n    this._state.clearColor(1, 1, 1, 1);\n    this._state.disable(this._gl.BLEND);\n    this._state.setDepthTest(true);\n    this._state.setScissorTest(false);\n    // render depth map\n    let faceCount, isPointLight;\n    for (let i = 0, il = this._lightShadows.length; i < il; i ++) {\n      const light = this._lightShadows[i];\n      const shadow = light.shadow;\n      if (shadow === undefined) {\n        console.warn('THREE.WebGLShadowMap:', light, 'has no shadow.');\n        continue;\n      }\n      const shadowCamera = shadow.camera;\n      this._shadowMapSize.copy(shadow.mapSize);\n      this._shadowMapSize.min(this._maxShadowMapSize);\n      if ((light && light instanceof PointLight)) {\n        faceCount = 6;\n        isPointLight = true;\n        const vpWidth = this._shadowMapSize.x;\n        const vpHeight = this._shadowMapSize.y;\n        // These viewports map a cube-map onto a 2D texture with the\n        // following orientation:\n        //\n        //  xzXZ\n        //   y Y\n        //\n        // X - Positive x direction\n        // x - Negative x direction\n        // Y - Positive y direction\n        // y - Negative y direction\n        // Z - Positive z direction\n        // z - Negative z direction\n        // positive X\n        this.cube2DViewPorts[0].set(vpWidth * 2, vpHeight, vpWidth, vpHeight);\n        // negative X\n        this.cube2DViewPorts[1].set(0, vpHeight, vpWidth, vpHeight);\n        // positive Z\n        this.cube2DViewPorts[2].set(vpWidth * 3, vpHeight, vpWidth, vpHeight);\n        // negative Z\n        this.cube2DViewPorts[3].set(vpWidth, vpHeight, vpWidth, vpHeight);\n        // positive Y\n        this.cube2DViewPorts[4].set(vpWidth * 3, 0, vpWidth, vpHeight);\n        // negative Y\n        this.cube2DViewPorts[5].set(vpWidth, 0, vpWidth, vpHeight);\n        this._shadowMapSize.x *= 4.0;\n        this._shadowMapSize.y *= 2.0;\n      } else {\n        faceCount = 1;\n        isPointLight = false;\n      }\n      if (shadow.map === null) {\n        const pars = { minFilter: TextureFilter.Nearest, magFilter: TextureFilter.Nearest, format: TextureFormat.RGBA };\n        shadow.map = new WebGLRenderTarget(this._shadowMapSize.x, this._shadowMapSize.y, pars);\n        shadowCamera.updateProjectionMatrix();\n      }\n      if ((shadow && shadow instanceof SpotLightShadow)) {\n        shadow.update(light);\n      }\n      const shadowMap = shadow.map;\n      const shadowMatrix = shadow.matrix;\n      this._lightPositionWorld.setFromMatrixPosition(light.matrixWorld);\n      shadowCamera.position.copy(this._lightPositionWorld);\n      this._renderer.setRenderTarget(shadowMap);\n      this._renderer.clear();\n      // render shadow map for each cube face (if omni-directional) or\n      // run a single pass if not\n      for (let face = 0; face < faceCount; face ++) {\n        if (isPointLight) {\n          this._lookTarget.copy(shadowCamera.position);\n          this._lookTarget.add(this.cubeDirections[face]);\n          shadowCamera.up.copy(this.cubeUps[face]);\n          shadowCamera.lookAt(this._lookTarget);\n          const vpDimensions = this.cube2DViewPorts[face];\n          this._state.viewport(vpDimensions);\n        } else {\n          this._lookTarget.setFromMatrixPosition(light.target.matrixWorld);\n          shadowCamera.lookAt(this._lookTarget);\n        }\n        shadowCamera.updateMatrixWorld();\n        shadowCamera.matrixWorldInverse.getInverse(shadowCamera.matrixWorld);\n        // compute shadow matrix\n        shadowMatrix.set(\n          0.5, 0.0, 0.0, 0.5,\n          0.0, 0.5, 0.0, 0.5,\n          0.0, 0.0, 0.5, 0.5,\n          0.0, 0.0, 0.0, 1.0\n        );\n        shadowMatrix.multiply(shadowCamera.projectionMatrix);\n        shadowMatrix.multiply(shadowCamera.matrixWorldInverse);\n        // update camera matrices and frustum\n        this._projScreenMatrix.multiplyMatrices(shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse);\n        this._frustum.setFromMatrix(this._projScreenMatrix);\n        // set object matrices & frustum culling\n        this._renderList.length = 0;\n        this.projectObject(scene, camera, shadowCamera);\n        // render shadow map\n        // render regular objects\n        for (let j = 0, jl = this._renderList.length; j < jl; j ++) {\n          const object = this._renderList[j];\n          const geometry = this._objects.update(object);\n          const material = object.material;\n          if ((material && material instanceof MultiMaterial)) {\n            const groups = geometry.groups;\n            const materials = material.materials;\n            for (let k = 0, kl = groups.length; k < kl; k ++) {\n              const group = groups[k];\n              const groupMaterial = materials[group.materialIndex];\n              if (groupMaterial.visible === true) {\n                const depthMaterial = this.getDepthMaterial(object, groupMaterial, isPointLight, this._lightPositionWorld);\n                this._renderer.renderBufferDirect(shadowCamera, null, geometry, depthMaterial, object, group);\n              }\n            }\n          } else {\n            const depthMaterial = this.getDepthMaterial(object, material, isPointLight, this._lightPositionWorld);\n            this._renderer.renderBufferDirect(shadowCamera, null, geometry, depthMaterial, object, null);\n          }\n        }\n      }\n    }\n    // Restore GL state.\n    const clearColor = this._renderer.getClearColor(),\n    clearAlpha = this._renderer.getClearAlpha();\n    this._renderer.setClearColor(clearColor, clearAlpha);\n    this.needsUpdate = false;\n  }\n  private getDepthMaterial(object: any, material: any, isPointLight: any, lightPositionWorld: any) {\n    const geometry = object.geometry;\n    let result = null;\n    let materialVariants = this._depthMaterials;\n    let customMaterial = object.customDepthMaterial;\n    if (isPointLight) {\n      materialVariants = this._distanceMaterials;\n      customMaterial = object.customDistanceMaterial;\n    }\n    if (! customMaterial) {\n      let useMorphing = false;\n      if (material.morphTargets) {\n        if ((geometry && geometry instanceof BufferGeometry)) {\n          useMorphing = geometry.morphAttributes && geometry.morphAttributes.position && geometry.morphAttributes.position.length > 0;\n        } else if ((geometry && geometry instanceof Geometry)) {\n          useMorphing = geometry.morphTargets && geometry.morphTargets.length > 0;\n        }\n      }\n      const useSkinning = object instanceof SkinnedMesh && material.skinning;\n      let variantIndex = 0;\n      if (useMorphing) variantIndex |= this._MorphingFlag;\n      if (useSkinning) variantIndex |= this._SkinningFlag;\n      result = materialVariants[variantIndex];\n    } else {\n      result = customMaterial;\n    }\n    if (this._renderer.localClippingEnabled &&\n       material.clipShadows === true &&\n        material.clippingPlanes.length !== 0) {\n      // in this case we need a unique material instance reflecting the\n      // appropriate state\n      const keyA = result.uuid, keyB = material.uuid;\n      let materialsForVariant = this._materialCache[keyA];\n      if (materialsForVariant === undefined) {\n        materialsForVariant = {};\n        this._materialCache[keyA] = materialsForVariant;\n      }\n      let cachedMaterial = materialsForVariant[keyB];\n      if (cachedMaterial === undefined) {\n        cachedMaterial = result.clone();\n        materialsForVariant[keyB] = cachedMaterial;\n      }\n      result = cachedMaterial;\n    }\n    result.visible = material.visible;\n    result.wireframe = material.wireframe;\n    let side = material.side;\n    if (this.renderSingleSided && side === SideMode.Double) {\n      side = SideMode.Front;\n    }\n    if (this.renderReverseSided) {\n      if (side === SideMode.Front) side = SideMode.Back;\n      else if (side === SideMode.Back) side = SideMode.Front;\n    }\n    result.side = side;\n    result.clipShadows = material.clipShadows;\n    result.clippingPlanes = material.clippingPlanes;\n    result.wireframeLinewidth = material.wireframeLinewidth;\n    result.linewidth = material.linewidth;\n    if (isPointLight && result.uniforms.lightPos !== undefined) {\n      result.uniforms.lightPos.value.copy(lightPositionWorld);\n    }\n    return result;\n  }\n  private projectObject(object: any, camera: any, shadowCamera: any) {\n    if (object.visible === false) return;\n    const visible = (object.layers.mask & camera.layers.mask) !== 0;\n    if (visible && (object instanceof Mesh || object instanceof Line || object instanceof Points)) {\n      if (object.castShadow && (object.frustumCulled === false || this._frustum.intersectsObject(object) === true)) {\n        const material = object.material;\n        if (material.visible === true) {\n          object.modelViewMatrix.multiplyMatrices(shadowCamera.matrixWorldInverse, object.matrixWorld);\n          this._renderList.push(object);\n        }\n      }\n    }\n    const children = object.children;\n    for (let i = 0, l = children.length; i < l; i ++) {\n      this.projectObject(children[i], camera, shadowCamera);\n    }\n  }\n  get cullFace(): CullFace {\n    return this.renderReverseSided ? CullFace.Front : CullFace.Back;\n  }\n  set cullFace(cullFace: CullFace) {\n    const value = (cullFace !== CullFace.Back);\n    console.warn(\"WebGLRenderer: .shadowMap.cullFace is deprecated. Set .shadowMap.renderReverseSided to \" + value + \".\");\n    this.renderReverseSided = value;\n  }\n}\n","import { BufferGeometry } from \"../core/BufferGeometry\";\nimport { Vector3 } from \"../math/Vector3\";\nimport { BufferAttribute } from \"../core/BufferAttribute\";\n/**\n * @author Mugen87 / https://github.com/Mugen87\n */\nexport class BoxBufferGeometry extends BufferGeometry {\n  constructor(width: number, height: number, depth: number, widthSegments?: number, heightSegments?: number, depthSegments?: number) {\n    super();\n    this.type = 'BoxBufferGeometry';\n    this.parameters = {\n      width: width,\n      height: height,\n      depth: depth,\n      widthSegments: widthSegments,\n      heightSegments: heightSegments,\n      depthSegments: depthSegments\n    };\n    const scope = this;\n    // segments\n    widthSegments = Math.floor(widthSegments) || 1;\n    heightSegments = Math.floor(heightSegments) || 1;\n    depthSegments = Math.floor(depthSegments) || 1;\n    // these are used to calculate buffer length\n    const vertexCount = calculateVertexCount(widthSegments, heightSegments, depthSegments);\n    const indexCount = calculateIndexCount(widthSegments, heightSegments, depthSegments);\n    // buffers\n    const indices = new (indexCount > 65535 ? Uint32Array : Uint16Array)(indexCount);\n    const vertices = new Float32Array(vertexCount * 3);\n    const normals = new Float32Array(vertexCount * 3);\n    const uvs = new Float32Array(vertexCount * 2);\n    // offset variables\n    let vertexBufferOffset = 0;\n    let uvBufferOffset = 0;\n    let indexBufferOffset = 0;\n    let numberOfVertices = 0;\n    // group variables\n    let groupStart = 0;\n    // build each side of the box geometry\n    buildPlane('z', 'y', 'x', - 1, - 1, depth, height,   width,  depthSegments, heightSegments, 0); // px\n    buildPlane('z', 'y', 'x',   1, - 1, depth, height, - width,  depthSegments, heightSegments, 1); // nx\n    buildPlane('x', 'z', 'y',   1,   1, width, depth,    height, widthSegments, depthSegments,  2); // py\n    buildPlane('x', 'z', 'y',   1, - 1, width, depth,  - height, widthSegments, depthSegments,  3); // ny\n    buildPlane('x', 'y', 'z',   1, - 1, width, height,   depth,  widthSegments, heightSegments, 4); // pz\n    buildPlane('x', 'y', 'z', - 1, - 1, width, height, - depth,  widthSegments, heightSegments, 5); // nz\n    // build geometry\n    this.setIndex(new BufferAttribute(indices, 1));\n    this.addAttribute('position', new BufferAttribute(vertices, 3));\n    this.addAttribute('normal', new BufferAttribute(normals, 3));\n    this.addAttribute('uv', new BufferAttribute(uvs, 2));\n    // helper functions\n    function calculateVertexCount(w: number, h: number, d: number) {\n      let vertices = 0;\n      // calculate the amount of vertices for each side (plane)\n      vertices += (w + 1) * (h + 1) * 2; // xy\n      vertices += (w + 1) * (d + 1) * 2; // xz\n      vertices += (d + 1) * (h + 1) * 2; // zy\n      return vertices;\n    }\n    function calculateIndexCount(w: number, h: number, d: number) {\n      let index = 0;\n      // calculate the amount of squares for each side\n      index += w * h * 2; // xy\n      index += w * d * 2; // xz\n      index += d * h * 2; // zy\n      return index * 6; // two triangles per square => six vertices per square\n    }\n    function buildPlane(u: string, v: string, w: string, udir: number, vdir: number, width: number, height: number, depth: number, gridX: number, gridY: number, materialIndex: number) {\n      const segmentWidth  = width / gridX;\n      const segmentHeight = height / gridY;\n      const widthHalf = width / 2;\n      const heightHalf = height / 2;\n      const depthHalf = depth / 2;\n      const gridX1 = gridX + 1;\n      const gridY1 = gridY + 1;\n      let vertexCounter = 0;\n      let groupCount = 0;\n      const vector = new Vector3();\n      // generate vertices, normals and uvs\n      for (let iy = 0; iy < gridY1; iy ++) {\n        const y = iy * segmentHeight - heightHalf;\n        for (let ix = 0; ix < gridX1; ix ++) {\n          const x = ix * segmentWidth - widthHalf;\n          // set values to correct vector component\n          vector[u] = x * udir;\n          vector[v] = y * vdir;\n          vector[w] = depthHalf;\n          // now apply vector to vertex buffer\n          vertices[vertexBufferOffset] = vector.x;\n          vertices[vertexBufferOffset + 1] = vector.y;\n          vertices[vertexBufferOffset + 2] = vector.z;\n          // set values to correct vector component\n          vector[u] = 0;\n          vector[v] = 0;\n          vector[w] = depth > 0 ? 1 : - 1;\n          // now apply vector to normal buffer\n          normals[vertexBufferOffset] = vector.x;\n          normals[vertexBufferOffset + 1] = vector.y;\n          normals[vertexBufferOffset + 2] = vector.z;\n          // uvs\n          uvs[uvBufferOffset] = ix / gridX;\n          uvs[uvBufferOffset + 1] = 1 - (iy / gridY);\n          // update offsets and counters\n          vertexBufferOffset += 3;\n          uvBufferOffset += 2;\n          vertexCounter += 1;\n        }\n      }\n      // 1. you need three indices to draw a single face\n      // 2. a single segment consists of two faces\n      // 3. so we need to generate six (2*3) indices per segment\n      for (let iy = 0; iy < gridY; iy ++) {\n        for (let ix = 0; ix < gridX; ix ++) {\n          // indices\n          const a = numberOfVertices + ix + gridX1 * iy;\n          const b = numberOfVertices + ix + gridX1 * (iy + 1);\n          const c = numberOfVertices + (ix + 1) + gridX1 * (iy + 1);\n          const d = numberOfVertices + (ix + 1) + gridX1 * iy;\n          // face one\n          indices[indexBufferOffset] = a;\n          indices[indexBufferOffset + 1] = b;\n          indices[indexBufferOffset + 2] = d;\n          // face two\n          indices[indexBufferOffset + 3] = b;\n          indices[indexBufferOffset + 4] = c;\n          indices[indexBufferOffset + 5] = d;\n          // update offsets and counters\n          indexBufferOffset += 6;\n          groupCount += 6;\n        }\n      }\n      // add a group to the geometry. this will ensure multi material support\n      scope.addGroup(groupStart, groupCount, materialIndex);\n      // calculate new start value for groups\n      groupStart += groupCount;\n      // update total number of vertices\n      numberOfVertices += vertexCounter;\n    }\n  }\n}\n","import { BufferGeometry } from \"../core/BufferGeometry\";\nimport { BufferAttribute } from \"../core/BufferAttribute\";\n/**\n * @author mrdoob / http://mrdoob.com/\n * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Plane.as\n */\nexport class PlaneBufferGeometry extends BufferGeometry {\n  constructor(width: number, height: number, widthSegments?: number, heightSegments?: number) {\n    super();\n    this.type = 'PlaneBufferGeometry';\n    this.parameters = {\n      width: width,\n      height: height,\n      widthSegments: widthSegments,\n      heightSegments: heightSegments\n    };\n    const width_half = width / 2;\n    const height_half = height / 2;\n    const gridX = Math.floor(widthSegments) || 1;\n    const gridY = Math.floor(heightSegments) || 1;\n    const gridX1 = gridX + 1;\n    const gridY1 = gridY + 1;\n    const segment_width = width / gridX;\n    const segment_height = height / gridY;\n    const vertices = new Float32Array(gridX1 * gridY1 * 3);\n    const normals = new Float32Array(gridX1 * gridY1 * 3);\n    const uvs = new Float32Array(gridX1 * gridY1 * 2);\n    let offset = 0;\n    let offset2 = 0;\n    for (let iy = 0; iy < gridY1; iy ++) {\n      const y = iy * segment_height - height_half;\n      for (let ix = 0; ix < gridX1; ix ++) {\n        const x = ix * segment_width - width_half;\n        vertices[offset] = x;\n        vertices[offset + 1] = - y;\n        normals[offset + 2] = 1;\n        uvs[offset2] = ix / gridX;\n        uvs[offset2 + 1] = 1 - (iy / gridY);\n        offset += 3;\n        offset2 += 2;\n      }\n    }\n    offset = 0;\n    const indices = new ((vertices.length / 3) > 65535 ? Uint32Array : Uint16Array)(gridX * gridY * 6);\n    for (let iy = 0; iy < gridY; iy ++) {\n      for (let ix = 0; ix < gridX; ix ++) {\n        const a = ix + gridX1 * iy;\n        const b = ix + gridX1 * (iy + 1);\n        const c = (ix + 1) + gridX1 * (iy + 1);\n        const d = (ix + 1) + gridX1 * iy;\n        indices[offset] = a;\n        indices[offset + 1] = b;\n        indices[offset + 2] = d;\n        indices[offset + 3] = b;\n        indices[offset + 4] = c;\n        indices[offset + 5] = d;\n        offset += 6;\n      }\n    }\n    this.setIndex(new BufferAttribute(indices, 1));\n    this.addAttribute('position', new BufferAttribute(vertices, 3));\n    this.addAttribute('normal', new BufferAttribute(normals, 3));\n    this.addAttribute('uv', new BufferAttribute(uvs, 2));\n  }\n}\n","import { Material, MaterialParameters } from \"./Material\";\nimport { BlendingOperation } from \"../constants\";\nimport { Vector2 } from \"../math/Vector2\";\nimport { Color } from \"../math/Color\";\nimport { Texture } from \"../textures/Texture\";\nimport { CubeTexture } from \"../textures/CubeTexture\";\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  specular: <hex>,\n *  shininess: <float>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture(<Image>),\n *\n *  lightMap: new THREE.Texture(<Image>),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture(<Image>),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture(<Image>),\n *\n *  bumpMap: new THREE.Texture(<Image>),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture(<Image>),\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture(<Image>),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  specularMap: new THREE.Texture(<Image>),\n *\n *  alphaMap: new THREE.Texture(<Image>),\n *\n *  envMap: new THREE.TextureCube([posx, negx, posy, negy, posz, negz]),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\nexport interface MeshPhongMaterialParameters extends MaterialParameters {\n  color?: number;\n  specular?: number;\n  shininess?: number;\n  opacity?: number;\n\n  map?: Texture;\n\n  lightMap?: Texture;\n  lightMapIntensity?: number;\n\n  aoMap?: Texture;\n  aoMapIntensity?: number;\n\n  emissive?: number;\n  emissiveIntensity?: number;\n  emissiveMap?: Texture;\n\n  bumpMap?: Texture;\n  bumpScale?: number;\n\n  normalMap?: Texture;\n  normalScale?: Vector2;\n\n  displacementMap?: Texture;\n  displacementScale?: number;\n  displacementBias?: number;\n\n  specularMap?: Texture;\n\n  alphaMap?: Texture;\n\n  envMap?: CubeTexture;\n  combine?: BlendingOperation; // THREE.Multiply,\n  reflectivity?: number;\n  refractionRatio?: number;\n\n  wireframe?: boolean;\n  wireframeLinewidth?: number;\n\n  skinning?: boolean;\n  morphTargets?: boolean;\n  morphNormals?: boolean;\n}\nexport class MeshPhongMaterial extends Material {\n  lightMapIntensity: any;\n  aoMap: any;\n  aoMapIntensity: any;\n  emissiveIntensity: any;\n  combine: BlendingOperation;\n  refractionRatio: any;\n  morphNormals: any;\n  readonly isMeshPhongMaterial: boolean = true;\n  constructor(parameters?: MeshPhongMaterialParameters) {\n    super();\n    this.type = 'MeshPhongMaterial';\n    this.color = new Color(0xffffff); // diffuse\n    this.specular = new Color(0x111111);\n    this.shininess = 30;\n    this.map = null;\n    this.lightMap = null;\n    this.lightMapIntensity = 1.0;\n    this.aoMap = null;\n    this.aoMapIntensity = 1.0;\n    this.emissive = new Color(0x000000);\n    this.emissiveIntensity = 1.0;\n    this.emissiveMap = null;\n    this.bumpMap = null;\n    this.bumpScale = 1;\n    this.normalMap = null;\n    this.normalScale = new Vector2(1, 1);\n    this.displacementMap = null;\n    this.displacementScale = 1;\n    this.displacementBias = 0;\n    this.specularMap = null;\n    this.alphaMap = null;\n    this.envMap = null;\n    this.combine = BlendingOperation.Multiply;\n    this.reflectivity = 1;\n    this.refractionRatio = 0.98;\n    this.wireframe = false;\n    this.wireframeLinewidth = 1;\n    this.wireframeLinecap = 'round';\n    this.wireframeLinejoin = 'round';\n    this.skinning = false;\n    this.morphTargets = false;\n    this.morphNormals = false;\n    this.setValues(parameters);\n  }\n  copy(source: this): this {\n    super.copy(source);\n    this.color.copy(source.color);\n    this.specular.copy(source.specular);\n    this.shininess = source.shininess;\n    this.map = source.map;\n    this.lightMap = source.lightMap;\n    this.lightMapIntensity = source.lightMapIntensity;\n    this.aoMap = source.aoMap;\n    this.aoMapIntensity = source.aoMapIntensity;\n    this.emissive.copy(source.emissive);\n    this.emissiveMap = source.emissiveMap;\n    this.emissiveIntensity = source.emissiveIntensity;\n    this.bumpMap = source.bumpMap;\n    this.bumpScale = source.bumpScale;\n    this.normalMap = source.normalMap;\n    this.normalScale.copy(source.normalScale);\n    this.displacementMap = source.displacementMap;\n    this.displacementScale = source.displacementScale;\n    this.displacementBias = source.displacementBias;\n    this.specularMap = source.specularMap;\n    this.alphaMap = source.alphaMap;\n    this.envMap = source.envMap;\n    this.combine = source.combine;\n    this.reflectivity = source.reflectivity;\n    this.refractionRatio = source.refractionRatio;\n    this.wireframe = source.wireframe;\n    this.wireframeLinewidth = source.wireframeLinewidth;\n    this.wireframeLinecap = source.wireframeLinecap;\n    this.wireframeLinejoin = source.wireframeLinejoin;\n    this.skinning = source.skinning;\n    this.morphTargets = source.morphTargets;\n    this.morphNormals = source.morphNormals;\n    return this;\n  }\n  get metal() {\n    console.warn(\"THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead.\");\n    return false;\n  }\n  set metal(value) {\n    console.warn(\"THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead\");\n  }\n}\n","import { Material, MaterialParameters } from \"./Material\";\nimport { Vector2 } from \"../math/Vector2\";\nimport { Color } from \"../math/Color\";\n/**\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *  color: <hex>,\n *  roughness: <float>,\n *  metalness: <float>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture(<Image>),\n *\n *  lightMap: new THREE.Texture(<Image>),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture(<Image>),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture(<Image>),\n *\n *  bumpMap: new THREE.Texture(<Image>),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture(<Image>),\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture(<Image>),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  roughnessMap: new THREE.Texture(<Image>),\n *\n *  metalnessMap: new THREE.Texture(<Image>),\n *\n *  alphaMap: new THREE.Texture(<Image>),\n *\n *  envMap: new THREE.CubeTexture([posx, negx, posy, negy, posz, negz]),\n *  envMapIntensity: <float>\n *\n *  refractionRatio: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\nexport interface MeshStandardMaterialParameters extends MaterialParameters {\n}\nexport class MeshStandardMaterial extends Material {\n  defines: any;\n  lightMapIntensity: any;\n  aoMap: any;\n  aoMapIntensity: any;\n  emissiveIntensity: any;\n  envMapIntensity: any;\n  refractionRatio: any;\n  morphNormals: any;\n  readonly isMeshStandardMaterial: boolean = true;\n  constructor(parameters?: MeshStandardMaterialParameters) {\n    super();\n    this.defines = { 'STANDARD': '' };\n    this.type = 'MeshStandardMaterial';\n    this.color = new Color(0xffffff); // diffuse\n    this.roughness = 0.5;\n    this.metalness = 0.5;\n    this.map = null;\n    this.lightMap = null;\n    this.lightMapIntensity = 1.0;\n    this.aoMap = null;\n    this.aoMapIntensity = 1.0;\n    this.emissive = new Color(0x000000);\n    this.emissiveIntensity = 1.0;\n    this.emissiveMap = null;\n    this.bumpMap = null;\n    this.bumpScale = 1;\n    this.normalMap = null;\n    this.normalScale = new Vector2(1, 1);\n    this.displacementMap = null;\n    this.displacementScale = 1;\n    this.displacementBias = 0;\n    this.roughnessMap = null;\n    this.metalnessMap = null;\n    this.alphaMap = null;\n    this.envMap = null;\n    this.envMapIntensity = 1.0;\n    this.refractionRatio = 0.98;\n    this.wireframe = false;\n    this.wireframeLinewidth = 1;\n    this.wireframeLinecap = 'round';\n    this.wireframeLinejoin = 'round';\n    this.skinning = false;\n    this.morphTargets = false;\n    this.morphNormals = false;\n    this.setValues(parameters);\n  }\n  copy(source: this): this {\n    super.copy(source);\n    this.defines = { 'STANDARD': '' };\n    this.color.copy(source.color);\n    this.roughness = source.roughness;\n    this.metalness = source.metalness;\n    this.map = source.map;\n    this.lightMap = source.lightMap;\n    this.lightMapIntensity = source.lightMapIntensity;\n    this.aoMap = source.aoMap;\n    this.aoMapIntensity = source.aoMapIntensity;\n    this.emissive.copy(source.emissive);\n    this.emissiveMap = source.emissiveMap;\n    this.emissiveIntensity = source.emissiveIntensity;\n    this.bumpMap = source.bumpMap;\n    this.bumpScale = source.bumpScale;\n    this.normalMap = source.normalMap;\n    this.normalScale.copy(source.normalScale);\n    this.displacementMap = source.displacementMap;\n    this.displacementScale = source.displacementScale;\n    this.displacementBias = source.displacementBias;\n    this.roughnessMap = source.roughnessMap;\n    this.metalnessMap = source.metalnessMap;\n    this.alphaMap = source.alphaMap;\n    this.envMap = source.envMap;\n    this.envMapIntensity = source.envMapIntensity;\n    this.refractionRatio = source.refractionRatio;\n    this.wireframe = source.wireframe;\n    this.wireframeLinewidth = source.wireframeLinewidth;\n    this.wireframeLinecap = source.wireframeLinecap;\n    this.wireframeLinejoin = source.wireframeLinejoin;\n    this.skinning = source.skinning;\n    this.morphTargets = source.morphTargets;\n    this.morphNormals = source.morphNormals;\n    return this;\n  }\n}\n","/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture(<Image>),\n *\n *  lightMap: new THREE.Texture(<Image>),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture(<Image>),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture(<Image>),\n *\n *  specularMap: new THREE.Texture(<Image>),\n *\n *  alphaMap: new THREE.Texture(<Image>),\n *\n *  envMap: new THREE.TextureCube([posx, negx, posy, negy, posz, negz]),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\nimport { Material, MaterialParameters } from \"./Material\";\nimport { BlendingOperation } from \"../constants\";\nimport { Color } from \"../math/Color\";\nimport { Texture } from \"../textures/Texture\";\nexport interface MeshLambertMaterialParameters extends MaterialParameters {\n  color?: Color | number | string;\n  opacity?: number;\n  wireframe?: boolean;\n  transparent?: boolean;\n  map?: Texture;\n  side?: number;\n  aoMap?: any;\n  aoMapIntensity?: number;\n  emissiveIntensity?: number;\n  combine?: BlendingOperation;\n  refractionRatio?: number;\n  morphNormals?: boolean;\n  emissive?: any;\n}\nexport class MeshLambertMaterial extends Material {\n  lightMapIntensity: any;\n  aoMap: any;\n  aoMapIntensity: any;\n  emissiveIntensity: any;\n  combine: BlendingOperation;\n  refractionRatio: any;\n  morphNormals: any;\n  readonly isMeshLambertMaterial: boolean = true;\n  constructor(parameters?: MeshLambertMaterialParameters) {\n    super();\n    this.type = 'MeshLambertMaterial';\n    this.color = new Color(0xffffff); // diffuse\n    this.map = null;\n    this.lightMap = null;\n    this.lightMapIntensity = 1.0;\n    this.aoMap = null;\n    this.aoMapIntensity = 1.0;\n    this.emissive = new Color(0x000000);\n    this.emissiveIntensity = 1.0;\n    this.emissiveMap = null;\n    this.specularMap = null;\n    this.alphaMap = null;\n    this.envMap = null;\n    this.combine = BlendingOperation.Multiply;\n    this.reflectivity = 1;\n    this.refractionRatio = 0.98;\n    this.wireframe = false;\n    this.wireframeLinewidth = 1;\n    this.wireframeLinecap = 'round';\n    this.wireframeLinejoin = 'round';\n    this.skinning = false;\n    this.morphTargets = false;\n    this.morphNormals = false;\n    this.setValues(parameters);\n  }\n  copy(source: this): this {\n    super.copy(source);\n    this.color.copy(source.color);\n    this.map = source.map;\n    this.lightMap = source.lightMap;\n    this.lightMapIntensity = source.lightMapIntensity;\n    this.aoMap = source.aoMap;\n    this.aoMapIntensity = source.aoMapIntensity;\n    this.emissive.copy(source.emissive);\n    this.emissiveMap = source.emissiveMap;\n    this.emissiveIntensity = source.emissiveIntensity;\n    this.specularMap = source.specularMap;\n    this.alphaMap = source.alphaMap;\n    this.envMap = source.envMap;\n    this.combine = source.combine;\n    this.reflectivity = source.reflectivity;\n    this.refractionRatio = source.refractionRatio;\n    this.wireframe = source.wireframe;\n    this.wireframeLinewidth = source.wireframeLinewidth;\n    this.wireframeLinecap = source.wireframeLinecap;\n    this.wireframeLinejoin = source.wireframeLinejoin;\n    this.skinning = source.skinning;\n    this.morphTargets = source.morphTargets;\n    this.morphNormals = source.morphNormals;\n    return this;\n  }\n}\n","import { MeshStandardMaterial, MeshStandardMaterialParameters } from \"./MeshStandardMaterial\";\n/**\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *  reflectivity: <float>\n * }\n */\nexport interface MeshPhysicalMaterialParameters extends MeshStandardMaterialParameters {\n}\nexport class MeshPhysicalMaterial extends MeshStandardMaterial {\n  clearCoat: any;\n  clearCoatRoughness: any;\n  readonly isMeshPhysicalMaterial: boolean = true;\n  constructor(parameters?: MeshPhysicalMaterialParameters) {\n    super(parameters);\n    this.defines = { 'PHYSICAL': '' };\n    this.type = 'MeshPhysicalMaterial';\n    this.reflectivity = 0.5; // maps to F0 = 0.04\n    this.clearCoat = 0.0;\n    this.clearCoatRoughness = 0.0;\n    this.setValues(parameters);\n  }\n  copy(source: this): this {\n    super.copy(source);\n    this.defines = { 'PHYSICAL': '' };\n    this.reflectivity = source.reflectivity;\n    this.clearCoat = source.clearCoat;\n    this.clearCoatRoughness = source.clearCoatRoughness;\n    return this;\n  };\n}\n","import { Material, MaterialParameters } from \"./Material\";\n/**\n * @author mrdoob / http://mrdoob.com/\n *\n * parameters = {\n *  opacity: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>\n * }\n */\nexport interface MeshNormalMaterialParameters extends MaterialParameters {\n}\nexport class MeshNormalMaterial extends Material {\n  readonly isMeshNormalMaterial: boolean = true;\n  constructor(parameters?: MeshNormalMaterialParameters) {\n    super();\n    this.type = 'MeshNormalMaterial';\n    this.wireframe = false;\n    this.wireframeLinewidth = 1;\n    this.fog = false;\n    this.lights = false;\n    this.morphTargets = false;\n    this.setValues(parameters);\n  }\n  copy(source: this): this {\n    super.copy(source);\n    this.wireframe = source.wireframe;\n    this.wireframeLinewidth = source.wireframeLinewidth;\n    return this;\n  };\n}\n","import { ShaderMaterial, ShaderMaterialParameters } from \"./ShaderMaterial\";\n/**\n * @author mrdoob / http://mrdoob.com/\n */\nexport interface RawShaderMaterialParameters extends ShaderMaterialParameters {\n}\nexport class RawShaderMaterial extends ShaderMaterial {\n  readonly isRawShaderMaterial: boolean = true;\n  constructor(parameters?: RawShaderMaterialParameters) {\n    super(parameters);\n    this.type = 'RawShaderMaterial';\n  }\n}\n","import { Material, MaterialParameters } from \"./Material\";\nimport { Color } from \"../math/Color\";\n/**\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  linewidth: <float>,\n *\n *  scale: <float>,\n *  dashSize: <float>,\n *  gapSize: <float>\n * }\n */\nexport interface LineDashedMaterialParameters extends MaterialParameters {\n}\nexport class LineDashedMaterial extends Material {\n  linewidth: number;\n  scale: number;\n  dashSize: number;\n  gapSize: number;\n  readonly isLineDashedMaterial: boolean = true;\n  constructor(parameters?: LineDashedMaterialParameters) {\n    super();\n    this.type = 'LineDashedMaterial';\n    this.color = new Color(0xffffff);\n    this.linewidth = 1;\n    this.scale = 1;\n    this.dashSize = 3;\n    this.gapSize = 1;\n    this.lights = false;\n    this.setValues(parameters);\n  }\n  copy(source: this): this {\n    super.copy(source);\n    this.color.copy(source.color);\n    this.linewidth = source.linewidth;\n    this.scale = source.scale;\n    this.dashSize = source.dashSize;\n    this.gapSize = source.gapSize;\n    return this;\n  };\n}\n","/**\n * @author mrdoob / http://mrdoob.com/\n */\nexport class WebGLIndexedBufferRenderer {\n  gl: WebGLRenderingContext;\n  extensions: any;\n  infoRender: any;\n  mode: number;\n  type: number;\n  size: number;\n  constructor(gl: WebGLRenderingContext, extensions: any, infoRender: any) {\n    this.gl = gl;\n    this.extensions = extensions;\n    this.infoRender = infoRender;\n  }\n  setMode(value: number): void {\n    this.mode = value;\n  }\n  setIndex(index): void {\n    if (index.array instanceof Uint32Array && this.extensions.get('OES_element_index_uint')) {\n      this.type = this.gl.UNSIGNED_INT;\n      this.size = 4;\n    } else {\n      this.type = this.gl.UNSIGNED_SHORT;\n      this.size = 2;\n    }\n  }\n  render(start: number, count: number): void {\n    this.gl.drawElements(this.mode, count, this.type, start * this.size);\n    this.infoRender.calls ++;\n    this.infoRender.vertices += count;\n    if (this.mode === this.gl.TRIANGLES) this.infoRender.faces += count / 3;\n  }\n  renderInstances(geometry: any, start: number, count: number): void {\n    const extension = this.extensions.get('ANGLE_instanced_arrays');\n    if (extension === null) {\n      console.error('THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.');\n      return;\n    }\n    extension.drawElementsInstancedANGLE(this.mode, count, this.type, start * this.size, geometry.maxInstancedCount);\n    this.infoRender.calls ++;\n    this.infoRender.vertices += count * geometry.maxInstancedCount;\n    if (this.mode === this.gl.TRIANGLES) this.infoRender.faces += geometry.maxInstancedCount * count / 3;\n  }\n}\n","/**\n * @author mrdoob / http://mrdoob.com/\n */\nimport { WebGLExtensions } from \"./WebGLExtensions\";\nimport { Geometry } from \"../../core/Geometry\";\nimport { BufferGeometry } from \"../../core/BufferGeometry\";\nimport { InterleavedBufferAttribute } from \"../../core/InterleavedBufferAttribute\";\nexport class WebGLBufferRenderer {\n  gl: WebGLRenderingContext;\n  extensions: WebGLExtensions;\n  infoRender: any;\n  mode: number;\n  constructor(gl: WebGLRenderingContext, extensions: WebGLExtensions, infoRender: any) {\n    this.gl = gl;\n    this.extensions = extensions;\n    this.infoRender = infoRender;\n  }\n  setMode(value: number): void {\n    this.mode = value;\n  }\n  render(start: number, count: number): void {\n    const gl: WebGLRenderingContext = this.gl;\n    gl.drawArrays(this.mode, start, count);\n    this.infoRender.calls ++;\n    this.infoRender.vertices += count;\n    if (this.mode === gl.TRIANGLES) this.infoRender.faces += count / 3;\n  }\n  renderInstances(geometry: BufferGeometry): void {\n    const gl: WebGLRenderingContext = this.gl;\n    const extension = this.extensions.get('ANGLE_instanced_arrays');\n    if (extension === null) {\n      console.error('THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.');\n      return;\n    }\n    const position = geometry.attributes.position;\n    let count = 0;\n    if ((position && position instanceof InterleavedBufferAttribute)) {\n      count = position.data.count;\n      extension.drawArraysInstancedANGLE(this.mode, 0, count, geometry.maxInstancedCount);\n    } else {\n      count = position.count;\n      extension.drawArraysInstancedANGLE(this.mode, 0, count, geometry.maxInstancedCount);\n    }\n    this.infoRender.calls ++;\n    this.infoRender.vertices += count * geometry.maxInstancedCount;\n    if (this.mode === gl.TRIANGLES) this.infoRender.faces += geometry.maxInstancedCount * count / 3;\n  }\n}\n","/**\n * @author mrdoob / http://mrdoob.com/\n */\nimport { Color } from \"../../math/Color\";\nimport { Vector3 } from \"../../math/Vector3\";\nimport { Vector2 } from \"../../math/Vector2\";\nimport { Light } from \"../../lights/Light\";\nexport class WebGLLights {\n  lights: any = {};\n  get(light: Light): any {\n    if (this.lights[light.id] !== undefined) {\n      return this.lights[light.id];\n    }\n    let uniforms;\n    switch (light.type) {\n      case 'DirectionalLight':\n        uniforms = {\n          direction: new Vector3(),\n          color: new Color(),\n          shadow: false,\n          shadowBias: 0,\n          shadowRadius: 1,\n          shadowMapSize: new Vector2()\n        };\n        break;\n      case 'SpotLight':\n        uniforms = {\n          position: new Vector3(),\n          direction: new Vector3(),\n          color: new Color(),\n          distance: 0,\n          coneCos: 0,\n          penumbraCos: 0,\n          decay: 0,\n          shadow: false,\n          shadowBias: 0,\n          shadowRadius: 1,\n          shadowMapSize: new Vector2()\n        };\n        break;\n      case 'PointLight':\n        uniforms = {\n          position: new Vector3(),\n          color: new Color(),\n          distance: 0,\n          decay: 0,\n          shadow: false,\n          shadowBias: 0,\n          shadowRadius: 1,\n          shadowMapSize: new Vector2()\n        };\n        break;\n      case 'HemisphereLight':\n        uniforms = {\n          direction: new Vector3(),\n          skyColor: new Color(),\n          groundColor: new Color()\n        };\n        break;\n    }\n    this.lights[light.id] = uniforms;\n    return uniforms;\n  }\n}\n","/**\n * @author mrdoob / http://mrdoob.com/\n */\nfunction addLineNumbers(code: string): string {\n  const lines = code.split('\\n');\n  for (let i = 0; i < lines.length; i ++) {\n    lines[i] = (i + 1) + ': ' + lines[i];\n  }\n  return lines.join('\\n');\n}\nexport function WebGLShader(gl: WebGLRenderingContext, type: number, code: string): WebGLShader {\n  const shader = gl.createShader(type);\n  gl.shaderSource(shader, code);\n  gl.compileShader(shader);\n  if (gl.getShaderParameter(shader, gl.COMPILE_STATUS) === false) {\n    console.error('THREE.WebGLShader: Shader couldn\\'t compile.');\n  }\n  if (gl.getShaderInfoLog(shader) !== '') {\n    console.warn('THREE.WebGLShader: gl.getShaderInfoLog()', type === gl.VERTEX_SHADER ? 'vertex' : 'fragment', gl.getShaderInfoLog(shader), addLineNumbers(code));\n  }\n  // --enable-privileged-webgl-extension\n  // console.log(type, gl.getExtension('WEBGL_debug_shaders').getTranslatedShaderSource(shader));\n  return shader;\n}\n","/**\n * @author mrdoob / http://mrdoob.com/\n */\nimport { WebGLRenderer } from \"../WebGLRenderer\";\nimport { WebGLUniforms } from \"./WebGLUniforms\";\nimport { WebGLShader } from \"./WebGLShader\";\nimport { WebGLExtensions } from \"./WebGLExtensions\";\nimport { ShaderChunk } from \"../shaders/ShaderChunk\";\nimport { BlendingOperation, TextureMapping, ShadowMap, ToneMapping, TextureEncoding } from \"../../constants\";\nimport { ShaderMaterial } from \"../../materials/ShaderMaterial\";\nimport { RawShaderMaterial } from \"../../materials/RawShaderMaterial\";\nlet programIdCount: number = 0;\nfunction getEncodingComponents(encoding: number): string[] {\n  switch (encoding) {\n    case TextureEncoding.Linear:\n      return [ 'Linear', '(value)' ];\n    case TextureEncoding.sRGB:\n      return [ 'sRGB', '(value)' ];\n    case TextureEncoding.RGBE:\n      return [ 'RGBE', '(value)' ];\n    case TextureEncoding.RGBM7:\n      return [ 'RGBM', '(value, 7.0)' ];\n    case TextureEncoding.RGBM16:\n      return [ 'RGBM', '(value, 16.0)' ];\n    case TextureEncoding.RGBD:\n      return [ 'RGBD', '(value, 256.0)' ];\n    case TextureEncoding.Gamma:\n      return [ 'Gamma', '(value, float(GAMMA_FACTOR))' ];\n    default:\n      throw new Error('unsupported encoding: ' + encoding);\n  }\n}\nfunction getTexelDecodingFunction(functionName: string, encoding: TextureEncoding): string {\n  const components = getEncodingComponents(encoding);\n  return \"vec4 \" + functionName + \"(vec4 value) { return \" + components[0] + \"ToLinear\" + components[1] + \"; }\";\n}\nfunction getTexelEncodingFunction(functionName: string, encoding: TextureEncoding): string {\n  const components = getEncodingComponents(encoding);\n  return \"vec4 \" + functionName + \"(vec4 value) { return LinearTo\" + components[0] + components[1] + \"; }\";\n}\nfunction getToneMappingFunction(functionName: string, toneMapping: ToneMapping): string {\n  let toneMappingName: string;\n  switch (toneMapping) {\n    case ToneMapping.Linear:\n      toneMappingName = \"Linear\";\n      break;\n    case ToneMapping.Reinhard:\n      toneMappingName = \"Reinhard\";\n      break;\n    case ToneMapping.Uncharted2:\n      toneMappingName = \"Uncharted2\";\n      break;\n    case ToneMapping.Cineon:\n      toneMappingName = \"OptimizedCineon\";\n      break;\n    default:\n      throw new Error('unsupported toneMapping: ' + toneMapping);\n  }\n  return \"vec3 \" + functionName + \"(vec3 color) { return \" + toneMappingName + \"ToneMapping(color); }\";\n}\nfunction generateExtensions(extensions: any, parameters: any, rendererExtensions: WebGLExtensions): string {\n  extensions = extensions || {};\n  const chunks: string[] = [\n    (extensions.derivatives || parameters.envMapCubeUV || parameters.bumpMap || parameters.normalMap || parameters.flatShading) ? '#extension GL_OES_standard_derivatives : enable' : '',\n    (extensions.fragDepth || parameters.logarithmicDepthBuffer) && rendererExtensions.get('EXT_frag_depth') ? '#extension GL_EXT_frag_depth : enable' : '',\n    (extensions.drawBuffers) && rendererExtensions.get('WEBGL_draw_buffers') ? '#extension GL_EXT_draw_buffers : require' : '',\n    (extensions.shaderTextureLOD || parameters.envMap) && rendererExtensions.get('EXT_shader_texture_lod') ? '#extension GL_EXT_shader_texture_lod : enable' : '',\n  ];\n  return chunks.filter(filterEmptyLine).join('\\n');\n}\nfunction generateDefines(defines: any[]): string {\n  const chunks: string[] = [];\n  for (let name in defines) {\n    const value = defines[name];\n    if (value === false) continue;\n    chunks.push('#define ' + name + ' ' + value);\n  }\n  return chunks.join('\\n');\n}\nfunction fetchAttributeLocations(gl: WebGLRenderingContext, program: WebGLProgram, identifiers?: any): {[key: string]: number} {\n  const attributes = {};\n  const n: number = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\n  for (let i = 0; i < n; i ++) {\n    const info: any = gl.getActiveAttrib(program, i);\n    const name: string = info.name;\n    // console.log(\"THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:\", name, i);\n    attributes[name] = gl.getAttribLocation(program, name);\n  }\n  return attributes;\n}\nfunction filterEmptyLine(code: string): boolean {\n  return code !== '';\n}\nfunction replaceLightNums(code: string, parameters: any): string {\n  return code\n    .replace(/NUM_DIR_LIGHTS/g, parameters.numDirLights)\n    .replace(/NUM_SPOT_LIGHTS/g, parameters.numSpotLights)\n    .replace(/NUM_POINT_LIGHTS/g, parameters.numPointLights)\n    .replace(/NUM_HEMI_LIGHTS/g, parameters.numHemiLights);\n}\nfunction parseIncludes(code: string): string {\n  const pattern = /#include +<([\\w\\d.]+)>/g;\n  function replace(match: any, include: string): string {\n    const replace: string = ShaderChunk[include];\n    if (replace === undefined) {\n      throw new Error('Can not resolve #include <' + include + '>');\n    }\n    return parseIncludes(replace);\n  }\n  return code.replace(pattern, replace);\n}\nfunction unrollLoops(code: string): string {\n  const pattern = /for \\(int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}/g;\n  function replace(match: any, start: string, end: string, snippet: string): string {\n    let unroll = '';\n    for (let i = parseInt(start); i < parseInt(end); i ++) {\n      unroll += snippet.replace(/\\[i \\]/g, '[' + i + ']');\n    }\n    return unroll;\n  }\n  return code.replace(pattern, replace);\n}\nexport class WebGLProgram {\n  gl: WebGLRenderingContext;\n  renderer: WebGLRenderer;\n  id: number;\n  code: string;\n  vertexShader: any; // WebGLShader\n  fragmentShader: any; // WebGLShader\n  program: any; // WebGLProgram\n  cachedUniforms: WebGLUniforms;\n  cachedAttributes: {[key: string]: number};\n  usedTimes: number;\n  diagnostics: any;\n  constructor(renderer: WebGLRenderer, code: string, material: any, parameters: any) {\n    this.renderer = renderer;\n    const gl: WebGLRenderingContext = this.gl = renderer.context;\n    const extensions: any = material.extensions;\n    const defines: any = material.defines;\n    let vertexShader = material.__webglShader.vertexShader;\n    let fragmentShader = material.__webglShader.fragmentShader;\n    let shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n    if (parameters.shadowMapType === ShadowMap.PCF) {\n      shadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n    } else if (parameters.shadowMapType === ShadowMap.PCFSoft) {\n      shadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n    }\n    let envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n    let envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n    let envMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n    if (parameters.envMap) {\n      switch (material.envMap.mapping) {\n        case TextureMapping.CubeReflection:\n        case TextureMapping.CubeRefraction:\n          envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n          break;\n        case TextureMapping.CubeUVReflection:\n        case TextureMapping.CubeUVRefraction:\n          envMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n          break;\n        case TextureMapping.EquirectangularReflection:\n        case TextureMapping.EquirectangularRefraction:\n          envMapTypeDefine = 'ENVMAP_TYPE_EQUIREC';\n          break;\n        case TextureMapping.SphericalReflection:\n          envMapTypeDefine = 'ENVMAP_TYPE_SPHERE';\n          break;\n      }\n      switch (material.envMap.mapping) {\n        case TextureMapping.CubeRefraction:\n        case TextureMapping.EquirectangularRefraction:\n          envMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n          break;\n      }\n      switch (material.combine) {\n        case BlendingOperation.Multiply:\n          envMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n          break;\n        case BlendingOperation.Mix:\n          envMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n          break;\n        case BlendingOperation.Add:\n          envMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n          break;\n      }\n    }\n    const gammaFactorDefine: number = (renderer.gammaFactor > 0) ? renderer.gammaFactor : 1.0;\n    // console.log('building new program ');\n    //\n    const customExtensions: string = generateExtensions(extensions, parameters, renderer.extensions);\n    const customDefines: string = generateDefines(defines);\n    //\n    const program: any /*WebGLProgram*/ = gl.createProgram();\n    let prefixVertex: string, prefixFragment: string;\n    if (material instanceof RawShaderMaterial) {\n      prefixVertex = [\n        customDefines,\n        '\\n'\n      ].filter(filterEmptyLine).join('\\n');\n      prefixFragment = [\n        customExtensions,\n        customDefines,\n        '\\n'\n      ].filter(filterEmptyLine).join('\\n');\n    } else {\n      prefixVertex = [\n        'precision ' + parameters.precision + ' float;',\n        'precision ' + parameters.precision + ' int;',\n        '#define SHADER_NAME ' + material.__webglShader.name,\n        customDefines,\n        parameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '',\n        '#define GAMMA_FACTOR ' + gammaFactorDefine,\n        '#define MAX_BONES ' + parameters.maxBones,\n        parameters.map ? '#define USE_MAP' : '',\n        parameters.envMap ? '#define USE_ENVMAP' : '',\n        parameters.envMap ? '#define ' + envMapModeDefine : '',\n        parameters.lightMap ? '#define USE_LIGHTMAP' : '',\n        parameters.aoMap ? '#define USE_AOMAP' : '',\n        parameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n        parameters.bumpMap ? '#define USE_BUMPMAP' : '',\n        parameters.normalMap ? '#define USE_NORMALMAP' : '',\n        parameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '',\n        parameters.specularMap ? '#define USE_SPECULARMAP' : '',\n        parameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n        parameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n        parameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n        parameters.vertexColors ? '#define USE_COLOR' : '',\n        parameters.flatShading ? '#define FLAT_SHADED' : '',\n        parameters.skinning ? '#define USE_SKINNING' : '',\n        parameters.useVertexTexture ? '#define BONE_TEXTURE' : '',\n        parameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\n        parameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\n        parameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n        parameters.flipSided ? '#define FLIP_SIDED' : '',\n        '#define NUM_CLIPPING_PLANES ' + parameters.numClippingPlanes,\n        parameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n        parameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n        parameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\n        parameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n        parameters.logarithmicDepthBuffer && renderer.extensions.get('EXT_frag_depth') ? '#define USE_LOGDEPTHBUF_EXT' : '',\n        'uniform mat4 modelMatrix;',\n        'uniform mat4 modelViewMatrix;',\n        'uniform mat4 projectionMatrix;',\n        'uniform mat4 viewMatrix;',\n        'uniform mat3 normalMatrix;',\n        'uniform vec3 cameraPosition;',\n        'attribute vec3 position;',\n        'attribute vec3 normal;',\n        'attribute vec2 uv;',\n        '#ifdef USE_COLOR',\n        '  attribute vec3 color;',\n        '#endif',\n        '#ifdef USE_MORPHTARGETS',\n        '  attribute vec3 morphTarget0;',\n        '  attribute vec3 morphTarget1;',\n        '  attribute vec3 morphTarget2;',\n        '  attribute vec3 morphTarget3;',\n        '  #ifdef USE_MORPHNORMALS',\n        '    attribute vec3 morphNormal0;',\n        '    attribute vec3 morphNormal1;',\n        '    attribute vec3 morphNormal2;',\n        '    attribute vec3 morphNormal3;',\n        '  #else',\n        '    attribute vec3 morphTarget4;',\n        '    attribute vec3 morphTarget5;',\n        '    attribute vec3 morphTarget6;',\n        '    attribute vec3 morphTarget7;',\n        '  #endif',\n        '#endif',\n        '#ifdef USE_SKINNING',\n        '  attribute vec4 skinIndex;',\n        '  attribute vec4 skinWeight;',\n        '#endif',\n        '\\n'\n      ].filter(filterEmptyLine).join('\\n');\n      prefixFragment = [\n        customExtensions,\n        'precision ' + parameters.precision + ' float;',\n        'precision ' + parameters.precision + ' int;',\n        '#define SHADER_NAME ' + material.__webglShader.name,\n        customDefines,\n        parameters.alphaTest ? '#define ALPHATEST ' + parameters.alphaTest : '',\n        '#define GAMMA_FACTOR ' + gammaFactorDefine,\n        (parameters.useFog && parameters.fog) ? '#define USE_FOG' : '',\n        (parameters.useFog && parameters.fogExp) ? '#define FOG_EXP2' : '',\n        parameters.map ? '#define USE_MAP' : '',\n        parameters.envMap ? '#define USE_ENVMAP' : '',\n        parameters.envMap ? '#define ' + envMapTypeDefine : '',\n        parameters.envMap ? '#define ' + envMapModeDefine : '',\n        parameters.envMap ? '#define ' + envMapBlendingDefine : '',\n        parameters.lightMap ? '#define USE_LIGHTMAP' : '',\n        parameters.aoMap ? '#define USE_AOMAP' : '',\n        parameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n        parameters.bumpMap ? '#define USE_BUMPMAP' : '',\n        parameters.normalMap ? '#define USE_NORMALMAP' : '',\n        parameters.specularMap ? '#define USE_SPECULARMAP' : '',\n        parameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n        parameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n        parameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n        parameters.vertexColors ? '#define USE_COLOR' : '',\n        parameters.flatShading ? '#define FLAT_SHADED' : '',\n        parameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n        parameters.flipSided ? '#define FLIP_SIDED' : '',\n        '#define NUM_CLIPPING_PLANES ' + parameters.numClippingPlanes,\n        '#define UNION_CLIPPING_PLANES ' + (parameters.numClippingPlanes - parameters.numClipIntersection),\n        parameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n        parameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n        parameters.premultipliedAlpha ? \"#define PREMULTIPLIED_ALPHA\" : '',\n        parameters.physicallyCorrectLights ? \"#define PHYSICALLY_CORRECT_LIGHTS\" : '',\n        parameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n        parameters.logarithmicDepthBuffer && renderer.extensions.get('EXT_frag_depth') ? '#define USE_LOGDEPTHBUF_EXT' : '',\n        parameters.envMap && renderer.extensions.get('EXT_shader_texture_lod') ? '#define TEXTURE_LOD_EXT' : '',\n        'uniform mat4 viewMatrix;',\n        'uniform vec3 cameraPosition;',\n        (parameters.toneMapping !== ToneMapping.None) ? \"#define TONE_MAPPING\" : '',\n        (parameters.toneMapping !== ToneMapping.None) ? ShaderChunk['tonemapping_pars_fragment'] : '',  // this code is required here because it is used by the toneMapping() function defined below\n        (parameters.toneMapping !== ToneMapping.None) ? getToneMappingFunction(\"toneMapping\", parameters.toneMapping) : '',\n        (parameters.outputEncoding || parameters.mapEncoding || parameters.envMapEncoding || parameters.emissiveMapEncoding) ? ShaderChunk['encodings_pars_fragment'] : '', // this code is required here because it is used by the various encoding/decoding function defined below\n        parameters.mapEncoding ? getTexelDecodingFunction('mapTexelToLinear', parameters.mapEncoding) : '',\n        parameters.envMapEncoding ? getTexelDecodingFunction('envMapTexelToLinear', parameters.envMapEncoding) : '',\n        parameters.emissiveMapEncoding ? getTexelDecodingFunction('emissiveMapTexelToLinear', parameters.emissiveMapEncoding) : '',\n        parameters.outputEncoding ? getTexelEncodingFunction(\"linearToOutputTexel\", parameters.outputEncoding) : '',\n        parameters.depthPacking ? \"#define DEPTH_PACKING \" + material.depthPacking : '',\n        '\\n'\n      ].filter(filterEmptyLine).join('\\n');\n    }\n    vertexShader = parseIncludes(vertexShader/*, parameters*/);\n    vertexShader = replaceLightNums(vertexShader, parameters);\n    fragmentShader = parseIncludes(fragmentShader/*, parameters*/);\n    fragmentShader = replaceLightNums(fragmentShader, parameters);\n    if (! (material instanceof ShaderMaterial)) {\n      vertexShader = unrollLoops(vertexShader);\n      fragmentShader = unrollLoops(fragmentShader);\n    }\n    const vertexGlsl: string = prefixVertex + vertexShader;\n    const fragmentGlsl: string = prefixFragment + fragmentShader;\n    // console.log('*VERTEX*', vertexGlsl);\n    // console.log('*FRAGMENT*', fragmentGlsl);\n    const glVertexShader: WebGLShader = WebGLShader(gl, gl.VERTEX_SHADER, vertexGlsl);\n    const glFragmentShader: WebGLShader = WebGLShader(gl, gl.FRAGMENT_SHADER, fragmentGlsl);\n    gl.attachShader(program, glVertexShader);\n    gl.attachShader(program, glFragmentShader);\n    // Force a particular attribute to index 0.\n    if (material.index0AttributeName !== undefined) {\n      gl.bindAttribLocation(program, 0, material.index0AttributeName);\n    } else if (parameters.morphTargets === true) {\n      // programs with morphTargets displace position out of attribute 0\n      gl.bindAttribLocation(program, 0, 'position');\n    }\n    gl.linkProgram(program);\n    const programLog: string = gl.getProgramInfoLog(program);\n    const vertexLog: string = gl.getShaderInfoLog(glVertexShader);\n    const fragmentLog: string = gl.getShaderInfoLog(glFragmentShader);\n    let runnable: boolean = true;\n    let haveDiagnostics: boolean = true;\n    // console.log('**VERTEX**', gl.getExtension('WEBGL_debug_shaders').getTranslatedShaderSource(glVertexShader));\n    // console.log('**FRAGMENT**', gl.getExtension('WEBGL_debug_shaders').getTranslatedShaderSource(glFragmentShader));\n    if (gl.getProgramParameter(program, gl.LINK_STATUS) === false) {\n      runnable = false;\n      console.error('THREE.WebGLProgram: shader error: ', gl.getError(), 'gl.VALIDATE_STATUS', gl.getProgramParameter(program, gl.VALIDATE_STATUS), 'gl.getProgramInfoLog', programLog, vertexLog, fragmentLog);\n    } else if (programLog !== '') {\n      console.warn('THREE.WebGLProgram: gl.getProgramInfoLog()', programLog);\n    } else if (vertexLog === '' || fragmentLog === '') {\n      haveDiagnostics = false;\n    }\n    if (haveDiagnostics) {\n      this.diagnostics = {\n        runnable: runnable,\n        material: material,\n        programLog: programLog,\n        vertexShader: {\n          log: vertexLog,\n          prefix: prefixVertex\n        },\n        fragmentShader: {\n          log: fragmentLog,\n          prefix: prefixFragment\n        }\n      };\n    }\n    // clean up\n    gl.deleteShader(glVertexShader);\n    gl.deleteShader(glFragmentShader);\n    //\n    this.id = programIdCount ++;\n    this.code = code;\n    this.usedTimes = 1;\n    this.program = program;\n    this.vertexShader = glVertexShader;\n    this.fragmentShader = glFragmentShader;\n  }\n  // set up caching for uniform locations\n  getUniforms(): WebGLUniforms {\n    const gl: WebGLRenderingContext = this.gl;\n    if (this.cachedUniforms === undefined) {\n      this.cachedUniforms = new WebGLUniforms(gl, this.program, this.renderer);\n    }\n    return this.cachedUniforms;\n  }\n  // set up caching for attribute locations\n  getAttributes(): any /*{[key: string]: number}*/ {\n    const gl: WebGLRenderingContext = this.gl;\n    if (this.cachedAttributes === undefined) {\n      this.cachedAttributes = fetchAttributeLocations(gl, this.program);\n    }\n    return this.cachedAttributes;\n  }\n  // free resource\n  destroy(): void {\n    const gl: WebGLRenderingContext = this.gl;\n    gl.deleteProgram(this.program);\n    this.program = undefined;\n  }\n  // DEPRECATED\n  get uniforms(): WebGLUniforms {\n    console.warn('THREE.WebGLProgram: .uniforms is now .getUniforms().');\n    return this.getUniforms();\n  }\n  get attributes(): {[key: string]: number} {\n    console.warn('THREE.WebGLProgram: .attributes is now .getAttributes().');\n    return this.getAttributes();\n  }\n}\n","/**\n * @author mrdoob / http://mrdoob.com/\n */\nimport { WebGLRenderer } from \"../WebGLRenderer\";\nimport { WebGLProgram } from \"./WebGLProgram\";\nimport { WebGLRenderTarget } from \"../WebGLRenderTarget\";\nimport { WebGLCapabilities } from \"./WebGLCapabilities\";\nimport { SideMode, ShadingMode, TextureMapping, TextureEncoding } from \"../../constants\";\nimport { Object3D } from \"../../core/Object3D\";\nimport { SkinnedMesh } from \"../../objects/SkinnedMesh\";\nimport { Fog } from \"../../scenes/Fog\";\nimport { FogExp2 } from \"../../scenes/FogExp2\";\nimport { Texture } from \"../../textures/Texture\";\nexport class WebGLPrograms {\n  renderer: WebGLRenderer;\n  capabilities: WebGLCapabilities;\n  programs: WebGLProgram[];\n  constructor(renderer: WebGLRenderer, capabilities: WebGLCapabilities) {\n    this.renderer = renderer;\n    this.capabilities = capabilities;\n    const programs: any = [];\n    // Exposed for resource monitoring & error feedback via renderer.info:\n    this.programs = programs;\n  }\n  getParameters(material: any, lights: any, fog: Fog | FogExp2, nClipPlanes: number, nClipIntersection: number, object: Object3D): any {\n    const capabilities = this.capabilities;\n    function allocateBones(object: Object3D): number {\n      if (capabilities.floatVertexTextures && object && object.skeleton && object.skeleton.useVertexTexture) {\n        return 1024;\n      } else {\n        // default for when object is not specified\n        // (for example when prebuilding shader to be used with multiple objects)\n        //\n        //  - leave some extra space for other uniforms\n        //  - limit here is ANGLE's 254 max uniform vectors\n        //    (up to 54 should be safe)\n        const nVertexUniforms = capabilities.maxVertexUniforms;\n        const nVertexMatrices = Math.floor((nVertexUniforms - 20) / 4);\n        let maxBones = nVertexMatrices;\n        if (object !== undefined && (object && object instanceof SkinnedMesh)) {\n          maxBones = Math.min(object.skeleton.bones.length, maxBones);\n          if (maxBones < object.skeleton.bones.length) {\n            console.warn('WebGLRenderer: too many bones - ' + object.skeleton.bones.length + ', this GPU supports just ' + maxBones + ' (try OpenGL instead of ANGLE)');\n          }\n        }\n        return maxBones;\n      }\n    }\n    function getTextureEncodingFromMap(map: any, gammaOverrideLinear: boolean): number {\n      let encoding;\n      if (! map) {\n        encoding = TextureEncoding.Linear;\n      } else if ((map && map instanceof Texture)) {\n        encoding = map.encoding;\n      } else if ((map && map instanceof WebGLRenderTarget)) {\n        console.warn(\"THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead.\");\n        encoding = map.texture.encoding;\n      }\n      // add backwards compatibility for WebGLRenderer.gammaInput/gammaOutput parameter, should probably be removed at some point.\n      if (encoding === TextureEncoding.Linear && gammaOverrideLinear) {\n        encoding = TextureEncoding.Gamma;\n      }\n      return encoding;\n    }\n    const shaderIDs = {\n      MeshDepthMaterial: 'depth',\n      MeshNormalMaterial: 'normal',\n      MeshBasicMaterial: 'basic',\n      MeshLambertMaterial: 'lambert',\n      MeshPhongMaterial: 'phong',\n      MeshStandardMaterial: 'physical',\n      MeshPhysicalMaterial: 'physical',\n      LineBasicMaterial: 'basic',\n      LineDashedMaterial: 'dashed',\n      PointsMaterial: 'points'\n    };\n    const shaderID = shaderIDs[material.type];\n    // heuristics to create shader parameters according to lights in the scene\n    // (not to blow over maxLights budget)\n    const maxBones: number = allocateBones(object);\n    let precision: string = this.renderer.getPrecision();\n    if (material.precision !== null) {\n      precision = capabilities.getMaxPrecision(material.precision);\n      if (precision !== material.precision) {\n        console.warn('THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.');\n      }\n    }\n    const currentRenderTarget = this.renderer.getCurrentRenderTarget();\n    const parameters = {\n      shaderID: shaderID,\n      precision: precision,\n      supportsVertexTextures: capabilities.vertexTextures,\n      outputEncoding: getTextureEncodingFromMap((! currentRenderTarget) ? null : currentRenderTarget.texture, this.renderer.gammaOutput),\n      map: !! material.map,\n      mapEncoding: getTextureEncodingFromMap(material.map, this.renderer.gammaInput),\n      envMap: !! material.envMap,\n      envMapMode: material.envMap && material.envMap.mapping,\n      envMapEncoding: getTextureEncodingFromMap(material.envMap, this.renderer.gammaInput),\n      envMapCubeUV: (!! material.envMap) && ((material.envMap.mapping === TextureMapping.CubeUVReflection) || (material.envMap.mapping === TextureMapping.CubeUVRefraction)),\n      lightMap: !! material.lightMap,\n      aoMap: !! material.aoMap,\n      emissiveMap: !! material.emissiveMap,\n      emissiveMapEncoding: getTextureEncodingFromMap(material.emissiveMap, this.renderer.gammaInput),\n      bumpMap: !! material.bumpMap,\n      normalMap: !! material.normalMap,\n      displacementMap: !! material.displacementMap,\n      roughnessMap: !! material.roughnessMap,\n      metalnessMap: !! material.metalnessMap,\n      specularMap: !! material.specularMap,\n      alphaMap: !! material.alphaMap,\n      combine: material.combine,\n      vertexColors: material.vertexColors,\n      fog: !! fog,\n      useFog: material.fog,\n      fogExp: (fog && fog instanceof FogExp2),\n      flatShading: material.shading === ShadingMode.Flat,\n      sizeAttenuation: material.sizeAttenuation,\n      logarithmicDepthBuffer: capabilities.logarithmicDepthBuffer,\n      skinning: material.skinning,\n      maxBones: maxBones,\n      useVertexTexture: capabilities.floatVertexTextures && object && object.skeleton && object.skeleton.useVertexTexture,\n      morphTargets: material.morphTargets,\n      morphNormals: material.morphNormals,\n      maxMorphTargets: this.renderer.maxMorphTargets,\n      maxMorphNormals: this.renderer.maxMorphNormals,\n      numDirLights: lights.directional.length,\n      numPointLights: lights.point.length,\n      numSpotLights: lights.spot.length,\n      numHemiLights: lights.hemi.length,\n      numClippingPlanes: nClipPlanes,\n      numClipIntersection: nClipIntersection,\n      shadowMapEnabled: this.renderer.shadowMap.enabled && object.receiveShadow && lights.shadows.length > 0,\n      shadowMapType: this.renderer.shadowMap.type,\n      toneMapping: this.renderer.toneMapping,\n      physicallyCorrectLights: this.renderer.physicallyCorrectLights,\n      premultipliedAlpha: material.premultipliedAlpha,\n      alphaTest: material.alphaTest,\n      doubleSided: material.side === SideMode.Double,\n      flipSided: material.side === SideMode.Back,\n      depthPacking: (material.depthPacking !== undefined) ? material.depthPacking : false\n    };\n    return parameters;\n  }\n  getProgramCode(material: any /*Material*/, parameters: any): string {\n    const parameterNames = [\n      \"precision\", \"supportsVertexTextures\", \"map\", \"mapEncoding\", \"envMap\", \"envMapMode\", \"envMapEncoding\",\n      \"lightMap\", \"aoMap\", \"emissiveMap\", \"emissiveMapEncoding\", \"bumpMap\", \"normalMap\", \"displacementMap\", \"specularMap\",\n      \"roughnessMap\", \"metalnessMap\",\n      \"alphaMap\", \"combine\", \"vertexColors\", \"fog\", \"useFog\", \"fogExp\",\n      \"flatShading\", \"sizeAttenuation\", \"logarithmicDepthBuffer\", \"skinning\",\n      \"maxBones\", \"useVertexTexture\", \"morphTargets\", \"morphNormals\",\n      \"maxMorphTargets\", \"maxMorphNormals\", \"premultipliedAlpha\",\n      \"numDirLights\", \"numPointLights\", \"numSpotLights\", \"numHemiLights\",\n      \"shadowMapEnabled\", \"shadowMapType\", \"toneMapping\", 'physicallyCorrectLights',\n      \"alphaTest\", \"doubleSided\", \"flipSided\", \"numClippingPlanes\", \"numClipIntersection\", \"depthPacking\"\n    ];\n    const array = [];\n    if (parameters.shaderID) {\n      array.push(parameters.shaderID);\n    } else {\n      array.push(material.fragmentShader);\n      array.push(material.vertexShader);\n    }\n    if (material.defines !== undefined) {\n      for (let name in material.defines) {\n        array.push(name);\n        array.push(material.defines[name]);\n      }\n    }\n    for (let i = 0; i < parameterNames.length; i ++) {\n      array.push(parameters[parameterNames[i]]);\n    }\n    return array.join();\n  }\n  acquireProgram(material: any /*Material*/, parameters: any, code: string): WebGLProgram {\n    let program;\n    // Check if code has been already compiled\n    for (let p = 0, pl = this.programs.length; p < pl; p ++) {\n      const programInfo = this.programs[p];\n      if (programInfo.code === code) {\n        program = programInfo;\n        ++ program.usedTimes;\n        break;\n      }\n    }\n    if (program === undefined) {\n      program = new WebGLProgram(this.renderer, code, material, parameters);\n      this.programs.push(program);\n    }\n    return program;\n  }\n  releaseProgram(program: WebGLProgram): void {\n    if (-- program.usedTimes === 0) {\n      // Remove from unordered set\n      const i = this.programs.indexOf(program);\n      this.programs[i] = this.programs[this.programs.length - 1];\n      this.programs.pop();\n      // Free WebGL resources\n      program.destroy();\n    }\n  }\n}\n","/**\n * @author mrdoob / http://mrdoob.com/\n */\nimport { Geometry } from \"../../core/Geometry\";\nimport { BufferGeometry } from \"../../core/BufferGeometry\";\nimport { Object3D } from \"../../core/Object3D\";\nimport { InterleavedBufferAttribute } from \"../../core/InterleavedBufferAttribute\";\nexport class WebGLGeometries {\n  gl: WebGLRenderingContext;\n  properties: any;\n  info: any;\n  geometries: { [key: number]: BufferGeometry } = {};\n  constructor(gl: WebGLRenderingContext, properties: any, info: any) {\n    this.gl = gl;\n    this.properties = properties;\n    this.info = info;\n  }\n  get(object: Object3D): BufferGeometry {\n    const gl: WebGLRenderingContext = this.gl;\n    const properties = this.properties;\n    const info = this.info;\n    const geometries = this.geometries;\n    const geometry = object.geometry;\n    if (geometries[geometry.id] !== undefined) {\n      return geometries[geometry.id];\n    }\n    geometry.addEventListener('dispose', onGeometryDispose);\n    function onGeometryDispose(event: any) {\n      const geometry = event.target;\n      const buffergeometry = geometries[geometry.id];\n      if (buffergeometry.index !== null) {\n        deleteAttribute(buffergeometry.index);\n      }\n      deleteAttributes(buffergeometry.attributes);\n      geometry.removeEventListener('dispose', onGeometryDispose);\n      delete geometries[geometry.id];\n      // TODO\n      const property = properties.get(geometry);\n      if (property.wireframe) {\n        deleteAttribute(property.wireframe);\n      }\n      properties.delete(geometry);\n      const bufferproperty = properties.get(buffergeometry);\n      if (bufferproperty.wireframe) {\n        deleteAttribute(bufferproperty.wireframe);\n      }\n      properties.delete(buffergeometry);\n      //\n      info.memory.geometries --;\n    }\n    function getAttributeBuffer(attribute: any) {\n      if (attribute instanceof InterleavedBufferAttribute) {\n        return properties.get(attribute.data).__webglBuffer;\n      }\n      return properties.get(attribute).__webglBuffer;\n    }\n    function deleteAttribute(attribute: any) {\n      const buffer = getAttributeBuffer(attribute);\n      if (buffer !== undefined) {\n        gl.deleteBuffer(buffer);\n        removeAttributeBuffer(attribute);\n      }\n    }\n    function deleteAttributes(attributes: any) {\n      for (let name in attributes) {\n        const attribute = attributes[name];\n        if (attribute === undefined) continue;\n        deleteAttribute(attribute);\n      }\n    }\n    function removeAttributeBuffer(attribute: any) {\n      if (attribute instanceof InterleavedBufferAttribute) {\n        properties.delete(attribute.data);\n      } else {\n        properties.delete(attribute);\n      }\n    }\n    let buffergeometry;\n    if (geometry instanceof BufferGeometry) {\n      buffergeometry = geometry;\n    } else if (geometry instanceof Geometry) {\n      if (geometry._bufferGeometry === undefined) {\n        geometry._bufferGeometry = new BufferGeometry().setFromObject(object);\n      }\n      buffergeometry = geometry._bufferGeometry;\n    }\n    geometries[geometry.id] = buffergeometry;\n    info.memory.geometries ++;\n    return buffergeometry;\n  }\n}\n","/**\n * @author mrdoob / http://mrdoob.com/\n */\nimport { BufferAttribute } from \"../../core/BufferAttribute\";\nimport { WebGLGeometries } from \"./WebGLGeometries\";\nimport { Object3D } from \"../../core/Object3D\";\nimport { Geometry } from \"../../core/Geometry\";\nimport { BufferGeometry } from \"../../core/BufferGeometry\";\nimport { InterleavedBufferAttribute } from \"../../core/InterleavedBufferAttribute\";\nexport class WebGLObjects {\n  gl: WebGLRenderingContext;\n  properties: any;\n  info: any;\n  geometries: WebGLGeometries;\n  constructor(gl: WebGLRenderingContext, properties: any, info: any) {\n    this.gl = gl;\n    this.properties = properties;\n    this.info = info;\n    this.geometries = new WebGLGeometries(gl, properties, info);\n  }\n  //\n  update(object: Object3D): BufferGeometry {\n    const gl = this.gl;\n    // TODO: Avoid updating twice (when using shadowMap). Maybe add frame counter.\n    const geometry = this.geometries.get(object);\n    if (object.geometry instanceof Geometry) {\n      geometry.updateFromObject(object);\n    }\n    const index = geometry.index;\n    const attributes = geometry.attributes;\n    if (index !== null) {\n      this.updateAttribute(index, gl.ELEMENT_ARRAY_BUFFER);\n    }\n    for (let name in attributes) {\n      const attribute = attributes[name];\n      if (attribute === undefined) continue;\n      this.updateAttribute(attribute, gl.ARRAY_BUFFER);\n    }\n    // morph targets\n    const morphAttributes = geometry.morphAttributes;\n    for (let name in morphAttributes) {\n      const array = morphAttributes[name];\n      for (let i = 0, l = array.length; i < l; i ++) {\n        this.updateAttribute(array[i], gl.ARRAY_BUFFER);\n      }\n    }\n    return geometry;\n  }\n  private updateAttribute(attribute: any, bufferType: any): void {\n    if (!attribute) return;\n    const data = (attribute instanceof InterleavedBufferAttribute) ? attribute.data : attribute;\n    const attributeProperties = this.properties.get(data);\n    if (attributeProperties.__webglBuffer === undefined) {\n      this.createBuffer(attributeProperties, data, bufferType);\n    } else if (attributeProperties.version !== data.version) {\n      this.updateBuffer(attributeProperties, data, bufferType);\n    }\n  }\n  private createBuffer(attributeProperties: any, data: any, bufferType: any): void {\n    const gl = this.gl;\n    attributeProperties.__webglBuffer = gl.createBuffer();\n    gl.bindBuffer(bufferType, attributeProperties.__webglBuffer);\n    const usage = data.dynamic ? gl.DYNAMIC_DRAW : gl.STATIC_DRAW;\n    gl.bufferData(bufferType, data.array, usage);\n    attributeProperties.version = data.version;\n  }\n  private updateBuffer(attributeProperties: any, data: any, bufferType: any): void {\n    const gl = this.gl;\n    gl.bindBuffer(bufferType, attributeProperties.__webglBuffer);\n    if (data.dynamic === false) {\n      gl.bufferData(bufferType, data.array, gl.STATIC_DRAW);\n    } else if (data.updateRange.count === - 1) {\n      // Not using update ranges\n      gl.bufferSubData(bufferType, 0, data.array);\n    } else if (data.updateRange.count === 0) {\n      console.error('THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually.');\n    } else {\n      gl.bufferSubData(bufferType, data.updateRange.offset * data.array.BYTES_PER_ELEMENT,\n                data.array.subarray(data.updateRange.offset, data.updateRange.offset + data.updateRange.count));\n      data.updateRange.count = 0; // reset range\n    }\n    attributeProperties.version = data.version;\n  }\n  getAttributeBuffer(attribute: any): any {\n    if (attribute instanceof InterleavedBufferAttribute) {\n      return this.properties.get(attribute.data).__webglBuffer;\n    }\n    return this.properties.get(attribute).__webglBuffer;\n  }\n  getWireframeAttribute(geometry: any): any {\n    const gl = this.gl;\n    const property = this.properties.get(geometry);\n    if (property.wireframe !== undefined) {\n      return property.wireframe;\n    }\n    const indices = [];\n    const index = geometry.index;\n    const attributes = geometry.attributes;\n    const position = attributes.position;\n    // console.time('wireframe');\n    if (index !== null) {\n      //const edges = {};\n      const array = index.array;\n      for (let i = 0, l = array.length; i < l; i += 3) {\n        const a = array[i + 0];\n        const b = array[i + 1];\n        const c = array[i + 2];\n        indices.push(a, b, b, c, c, a);\n      }\n    } else {\n      const array = attributes.position.array;\n      for (let i = 0, l = (array.length / 3) - 1; i < l; i += 3) {\n        const a = i + 0;\n        const b = i + 1;\n        const c = i + 2;\n        indices.push(a, b, b, c, c, a);\n      }\n    }\n    // console.timeEnd('wireframe');\n    const TypeArray = position.count > 65535 ? Uint32Array : Uint16Array;\n    const attribute = new BufferAttribute(new TypeArray(indices), 1);\n    this.updateAttribute(attribute, gl.ELEMENT_ARRAY_BUFFER);\n    property.wireframe = attribute;\n    return attribute;\n  }\n}\n","import { Texture } from \"./Texture\";\nimport { TextureMapping, TextureWrapping, TextureEncoding, TextureType, TextureFormat, TextureFilter } from \"../constants\";\n/**\n * @author Matt DesLauriers / @mattdesl\n * @author atix / arthursilber.de\n */\nexport class DepthTexture extends Texture {\n  readonly isDepthTexture: boolean = true;\n  constructor(width: number, height: number, type: number = TextureType.UnsignedShort, mapping: TextureMapping, wrapS: TextureWrapping, wrapT: TextureWrapping, magFilter: TextureFilter = TextureFilter.Nearest, minFilter: TextureFilter = TextureFilter.Nearest, anisotropy: number, format: TextureFormat = TextureFormat.Depth) {\n    super(null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy);\n    if (format !== TextureFormat.Depth && format !== TextureFormat.DepthStencil) {\n      throw new Error('DepthTexture format must be either THREE.TextureFormat.Depth or THREE.TextureFormat.DepthStencil');\n    }\n    this.image = { width: width, height: height };\n    this.type = type;\n    this.magFilter = magFilter;\n    this.minFilter = minFilter;\n    this.flipY = false;\n    this.generateMipmaps  = false;\n  }\n}\n","import { Texture } from \"./Texture\";\nimport { TextureMapping, TextureWrapping, TextureEncoding, TextureType, TextureFormat, TextureFilter } from \"../constants\";\n/**\n * @author alteredq / http://alteredqualia.com/\n */\nexport class CompressedTexture extends Texture {\n  readonly isCompressedTexture: boolean = true;\n  constructor(mipmaps?: any[], width?: number, height?: number, format?: TextureFormat, type?: TextureType, mapping?: TextureMapping, wrapS?: TextureWrapping, wrapT?: TextureWrapping, magFilter?: TextureFilter, minFilter?: TextureFilter, anisotropy?: number, encoding?: TextureEncoding) {\n    super(null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding);\n    this.image = { width: width, height: height };\n    this.mipmaps = mipmaps;\n    // no flipping for cube textures\n    // (also flipping doesn't work for compressed textures)\n    this.flipY = false;\n    // can't generate mipmaps for compressed textures\n    // mips must be embedded in DDS files\n    this.generateMipmaps = false;\n  }\n}\n","/**\n * @author mrdoob / http://mrdoob.com/\n */\nimport { TextureFormat, TextureType, TextureWrapping, TextureFilter } from \"../../constants\";\nimport { _Math } from \"../../math/Math\";\nimport { Texture } from \"../../textures/Texture\";\nimport { DepthTexture } from \"../../textures/DepthTexture\";\nimport { DataTexture } from \"../../textures/DataTexture\";\nimport { CompressedTexture } from \"../../textures/CompressedTexture\";\nimport { WebGLRenderTargetCube } from \"../WebGLRenderTargetCube\";\nexport class WebGLTextures {\n  _gl: any;\n  _infoMemory: any;\n  _isWebGL2: any;\n  extensions: any;\n  state: any;\n  properties: any;\n  capabilities: any;\n  paramThreeToGL: any;\n  info: any;\n  constructor(_gl: any, extensions: any, state: any, properties: any, capabilities: any, paramThreeToGL: any, info: any) {\n    this._gl = _gl;\n    this.extensions = extensions;\n    this.state = state;\n    this.properties = properties;\n    this.capabilities = capabilities;\n    this.paramThreeToGL = paramThreeToGL;\n    this.info = info;\n    this._infoMemory = info.memory;\n    this._isWebGL2 = (typeof WebGL2RenderingContext !== 'undefined' && _gl instanceof WebGL2RenderingContext);\n  }\n  //\n  private static clampToMaxSize(image: any, maxSize: any) {\n    if (image.width > maxSize || image.height > maxSize) {\n      // Warning: Scaling through the canvas will only work with images that use\n      // premultiplied alpha.\n      const scale = maxSize / Math.max(image.width, image.height);\n      const canvas = <HTMLCanvasElement> document.createElementNS('http://www.w3.org/1999/xhtml', 'canvas');\n      canvas.width = Math.floor(image.width * scale);\n      canvas.height = Math.floor(image.height * scale);\n      const context = canvas.getContext('2d');\n      context.drawImage(image, 0, 0, image.width, image.height, 0, 0, canvas.width, canvas.height);\n      console.warn('THREE.WebGLRenderer: image is too big (' + image.width + 'x' + image.height + '). Resized to ' + canvas.width + 'x' + canvas.height, image);\n      return canvas;\n    }\n    return image;\n  }\n  private static isPowerOfTwo(image: any) {\n    return _Math.isPowerOfTwo(image.width) && _Math.isPowerOfTwo(image.height);\n  }\n  private static makePowerOfTwo(image: any) {\n    if (image instanceof HTMLImageElement || image instanceof HTMLCanvasElement) {\n      const canvas = <HTMLCanvasElement> document.createElementNS('http://www.w3.org/1999/xhtml', 'canvas');\n      canvas.width = _Math.nearestPowerOfTwo(image.width);\n      canvas.height = _Math.nearestPowerOfTwo(image.height);\n      const context = canvas.getContext('2d');\n      context.drawImage(image, 0, 0, canvas.width, canvas.height);\n      console.warn('THREE.WebGLRenderer: image is not power of two (' + image.width + 'x' + image.height + '). Resized to ' + canvas.width + 'x' + canvas.height, image);\n      return canvas;\n    }\n    return image;\n  }\n  private static textureNeedsPowerOfTwo(texture: Texture): boolean {\n    if (texture.wrapS !== TextureWrapping.ClampToEdge || texture.wrapT !== TextureWrapping.ClampToEdge) return true;\n    if (texture.minFilter !== TextureFilter.Nearest && texture.minFilter !== TextureFilter.Linear) return true;\n    return false;\n  }\n  // Fallback filters for non-power-of-2 textures\n  private filterFallback(f: number): GLenum {\n    const _gl = this._gl;\n    if (f === TextureFilter.Nearest || f === TextureFilter.NearestMipMapNearest || f === TextureFilter.NearestMipMapLinear) {\n      return _gl.NEAREST;\n    }\n    return _gl.LINEAR;\n  }\n  //\n  private onTextureDispose(event: any): void {\n    const texture = event.target;\n    texture.removeEventListener('dispose', this.onTextureDispose.bind(this));\n    this.deallocateTexture(texture);\n    this._infoMemory.textures --;\n  }\n  private onRenderTargetDispose(event: any): void {\n    const renderTarget = event.target;\n    renderTarget.removeEventListener('dispose', this.onRenderTargetDispose.bind(this));\n    this.deallocateRenderTarget(renderTarget);\n    this._infoMemory.textures --;\n  }\n  //\n  private deallocateTexture(texture: Texture): void {\n    const _gl = this._gl;\n    const textureProperties = this.properties.get(texture);\n    if (texture.image && textureProperties.__image__webglTextureCube) {\n      // cube texture\n      _gl.deleteTexture(textureProperties.__image__webglTextureCube);\n    } else {\n      // 2D texture\n      if (textureProperties.__webglInit === undefined) return;\n      _gl.deleteTexture(textureProperties.__webglTexture);\n    }\n    // remove all webgl this.properties\n    this.properties.delete(texture);\n  }\n  private deallocateRenderTarget(renderTarget: any): void {\n    const _gl = this._gl;\n    const renderTargetProperties = this.properties.get(renderTarget);\n    const textureProperties = this.properties.get(renderTarget.texture);\n    if (! renderTarget) return;\n    if (textureProperties.__webglTexture !== undefined) {\n      _gl.deleteTexture(textureProperties.__webglTexture);\n    }\n    if (renderTarget.depthTexture) {\n      renderTarget.depthTexture.dispose();\n    }\n    if ((renderTarget && renderTarget instanceof WebGLRenderTargetCube)) {\n      for (let i = 0; i < 6; i ++) {\n        _gl.deleteFramebuffer(renderTargetProperties.__webglFramebuffer[i]);\n        if (renderTargetProperties.__webglDepthbuffer) _gl.deleteRenderbuffer(renderTargetProperties.__webglDepthbuffer[i]);\n      }\n    } else {\n      _gl.deleteFramebuffer(renderTargetProperties.__webglFramebuffer);\n      if (renderTargetProperties.__webglDepthbuffer) _gl.deleteRenderbuffer(renderTargetProperties.__webglDepthbuffer);\n    }\n    this.properties.delete(renderTarget.texture);\n    this.properties.delete(renderTarget);\n  }\n  //\n  setTexture2D(texture: Texture, slot: number): void {\n    const _gl = this._gl;\n    const textureProperties = this.properties.get(texture);\n    if (texture.version > 0 && textureProperties.__version !== texture.version) {\n      const image = texture.image;\n      if (image === undefined) {\n        console.warn('THREE.WebGLRenderer: Texture marked for update but image is undefined', texture);\n      } else if (image.complete === false) {\n        console.warn('THREE.WebGLRenderer: Texture marked for update but image is incomplete', texture);\n      } else {\n        this.uploadTexture(textureProperties, texture, slot);\n        return;\n      }\n    }\n    this.state.activeTexture(_gl.TEXTURE0 + slot);\n    this.state.bindTexture(_gl.TEXTURE_2D, textureProperties.__webglTexture);\n  }\n  setTextureCube(texture: Texture, slot: number): void {\n    const _gl = this._gl;\n    const textureProperties = this.properties.get(texture);\n    if (texture.image.length === 6) {\n      if (texture.version > 0 && textureProperties.__version !== texture.version) {\n        if (! textureProperties.__image__webglTextureCube) {\n          texture.addEventListener('dispose', this.onTextureDispose.bind(this));\n          textureProperties.__image__webglTextureCube = _gl.createTexture();\n          this._infoMemory.textures ++;\n        }\n        this.state.activeTexture(_gl.TEXTURE0 + slot);\n        this.state.bindTexture(_gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube);\n        _gl.pixelStorei(_gl.UNPACK_FLIP_Y_WEBGL, texture.flipY);\n        const isCompressed = (texture && texture instanceof CompressedTexture);\n        const isDataTexture = (texture.image[0] && texture.image[0] instanceof DataTexture);\n        const cubeImage = [];\n        for (let i = 0; i < 6; i ++) {\n          if (! isCompressed && ! isDataTexture) {\n            cubeImage[i] = WebGLTextures.clampToMaxSize(texture.image[i], this.capabilities.maxCubemapSize);\n          } else {\n            cubeImage[i] = isDataTexture ? texture.image[i].image : texture.image[i];\n          }\n        }\n        const image = cubeImage[0],\n        isPowerOfTwoImage = WebGLTextures.isPowerOfTwo(image),\n        glFormat = this.paramThreeToGL(texture.format),\n        glType = this.paramThreeToGL(texture.type);\n        this.setTextureParameters(_gl.TEXTURE_CUBE_MAP, texture, isPowerOfTwoImage);\n        for (let i = 0; i < 6; i ++) {\n          if (! isCompressed) {\n            if (isDataTexture) {\n              this.state.texImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, cubeImage[i].width, cubeImage[i].height, 0, glFormat, glType, cubeImage[i].data);\n            } else {\n              this.state.texImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, glFormat, glType, cubeImage[i]);\n            }\n          } else {\n            let mipmap;\n            const mipmaps = cubeImage[i].mipmaps;\n            for (let j = 0, jl = mipmaps.length; j < jl; j ++) {\n              mipmap = mipmaps[j];\n              if (texture.format !== TextureFormat.RGBA && texture.format !== TextureFormat.RGB) {\n                if (this.state.getCompressedTextureFormats().indexOf(glFormat) > - 1) {\n                  this.state.compressedTexImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, mipmap.data);\n                } else {\n                  console.warn(\"THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()\");\n                }\n              } else {\n                this.state.texImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data);\n              }\n            }\n          }\n        }\n        if (texture.generateMipmaps && isPowerOfTwoImage) {\n          _gl.generateMipmap(_gl.TEXTURE_CUBE_MAP);\n        }\n        textureProperties.__version = texture.version;\n        if (texture.onUpdate) texture.onUpdate(texture);\n      } else {\n        this.state.activeTexture(_gl.TEXTURE0 + slot);\n        this.state.bindTexture(_gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube);\n      }\n    }\n  }\n  setTextureCubeDynamic(texture: Texture, slot: number): void {\n    const _gl = this._gl;\n    this.state.activeTexture(_gl.TEXTURE0 + slot);\n    this.state.bindTexture(_gl.TEXTURE_CUBE_MAP, this.properties.get(texture).__webglTexture);\n  }\n  private setTextureParameters(textureType: GLenum, texture: Texture, isPowerOfTwoImage: boolean): void {\n    const _gl = this._gl;\n    let extension;\n    if (isPowerOfTwoImage) {\n      _gl.texParameteri(textureType, _gl.TEXTURE_WRAP_S, this.paramThreeToGL(texture.wrapS));\n      _gl.texParameteri(textureType, _gl.TEXTURE_WRAP_T, this.paramThreeToGL(texture.wrapT));\n      _gl.texParameteri(textureType, _gl.TEXTURE_MAG_FILTER, this.paramThreeToGL(texture.magFilter));\n      _gl.texParameteri(textureType, _gl.TEXTURE_MIN_FILTER, this.paramThreeToGL(texture.minFilter));\n    } else {\n      _gl.texParameteri(textureType, _gl.TEXTURE_WRAP_S, _gl.CLAMP_TO_EDGE);\n      _gl.texParameteri(textureType, _gl.TEXTURE_WRAP_T, _gl.CLAMP_TO_EDGE);\n      if (texture.wrapS !== TextureWrapping.ClampToEdge || texture.wrapT !== TextureWrapping.ClampToEdge) {\n        console.warn('THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.TextureWrapping.ClampToEdge.', texture);\n      }\n      _gl.texParameteri(textureType, _gl.TEXTURE_MAG_FILTER, this.filterFallback(texture.magFilter));\n      _gl.texParameteri(textureType, _gl.TEXTURE_MIN_FILTER, this.filterFallback(texture.minFilter));\n      if (texture.minFilter !== TextureFilter.Nearest && texture.minFilter !== TextureFilter.Linear) {\n        console.warn('THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.TextureFilter.Nearest or THREE.TextureFilter.Linear.', texture);\n      }\n    }\n    extension = this.extensions.get('EXT_texture_filter_anisotropic');\n    if (extension) {\n      if (texture.type === TextureType.Float && this.extensions.get('OES_texture_float_linear') === null) return;\n      if (texture.type === TextureType.HalfFloat && this.extensions.get('OES_texture_half_float_linear') === null) return;\n      if (texture.anisotropy > 1 || this.properties.get(texture).__currentAnisotropy) {\n        _gl.texParameterf(textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min(texture.anisotropy, this.capabilities.getMaxAnisotropy()));\n        this.properties.get(texture).__currentAnisotropy = texture.anisotropy;\n      }\n    }\n  }\n  private uploadTexture(textureProperties: any, texture: Texture, slot: number): void {\n    const _gl = this._gl;\n    if (textureProperties.__webglInit === undefined) {\n      textureProperties.__webglInit = true;\n      texture.addEventListener('dispose', this.onTextureDispose.bind(this));\n      textureProperties.__webglTexture = _gl.createTexture();\n      this._infoMemory.textures ++;\n    }\n    this.state.activeTexture(_gl.TEXTURE0 + slot);\n    this.state.bindTexture(_gl.TEXTURE_2D, textureProperties.__webglTexture);\n    _gl.pixelStorei(_gl.UNPACK_FLIP_Y_WEBGL, texture.flipY);\n    _gl.pixelStorei(_gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha);\n    _gl.pixelStorei(_gl.UNPACK_ALIGNMENT, texture.unpackAlignment);\n    let image = WebGLTextures.clampToMaxSize(texture.image, this.capabilities.maxTextureSize);\n    if (WebGLTextures.textureNeedsPowerOfTwo(texture) && WebGLTextures.isPowerOfTwo(image) === false) {\n      image = WebGLTextures.makePowerOfTwo(image);\n    }\n    const isPowerOfTwoImage = WebGLTextures.isPowerOfTwo(image),\n    glFormat = this.paramThreeToGL(texture.format),\n    glType = this.paramThreeToGL(texture.type);\n    this.setTextureParameters(_gl.TEXTURE_2D, texture, isPowerOfTwoImage);\n    let mipmap;\n    const mipmaps = texture.mipmaps;\n    if ((texture && texture instanceof DepthTexture)) {\n      // populate depth texture with dummy data\n      let internalFormat = _gl.DEPTH_COMPONENT;\n      if (texture.type === TextureType.Float) {\n        if (!this._isWebGL2) throw new Error('Float Depth Texture only supported in WebGL2.0');\n        internalFormat = _gl.DEPTH_COMPONENT32F;\n      } else if (this._isWebGL2) {\n        // WebGL 2.0 requires signed internalformat for glTexImage2D\n        internalFormat = _gl.DEPTH_COMPONENT16;\n      }\n      // Depth stencil textures need the DEPTH_STENCIL internal format\n      // (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n      if (texture.format === TextureFormat.DepthStencil) {\n        internalFormat = _gl.DEPTH_STENCIL;\n      }\n      this.state.texImage2D(_gl.TEXTURE_2D, 0, internalFormat, image.width, image.height, 0, glFormat, glType, null);\n    } else if ((texture && texture instanceof DataTexture)) {\n      // use manually created mipmaps if available\n      // if there are no manual mipmaps\n      // set 0 level mipmap and then use GL to generate other mipmap levels\n      if (mipmaps.length > 0 && isPowerOfTwoImage) {\n        for (let i = 0, il = mipmaps.length; i < il; i ++) {\n          mipmap = mipmaps[i];\n          this.state.texImage2D(_gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data);\n        }\n        texture.generateMipmaps = false;\n      } else {\n        this.state.texImage2D(_gl.TEXTURE_2D, 0, glFormat, image.width, image.height, 0, glFormat, glType, image.data);\n      }\n    } else if ((texture && texture instanceof CompressedTexture)) {\n      for (let i = 0, il = mipmaps.length; i < il; i ++) {\n        mipmap = mipmaps[i];\n        if (texture.format !== TextureFormat.RGBA && texture.format !== TextureFormat.RGB) {\n          if (this.state.getCompressedTextureFormats().indexOf(glFormat) > - 1) {\n            this.state.compressedTexImage2D(_gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, mipmap.data);\n          } else {\n            console.warn(\"THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()\");\n          }\n        } else {\n          this.state.texImage2D(_gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data);\n        }\n      }\n    } else {\n      // regular Texture (image, video, canvas)\n      // use manually created mipmaps if available\n      // if there are no manual mipmaps\n      // set 0 level mipmap and then use GL to generate other mipmap levels\n      if (mipmaps.length > 0 && isPowerOfTwoImage) {\n        for (let i = 0, il = mipmaps.length; i < il; i ++) {\n          mipmap = mipmaps[i];\n          this.state.texImage2D(_gl.TEXTURE_2D, i, glFormat, glFormat, glType, mipmap);\n        }\n        texture.generateMipmaps = false;\n      } else {\n        this.state.texImage2D(_gl.TEXTURE_2D, 0, glFormat, glFormat, glType, image);\n      }\n    }\n    if (texture.generateMipmaps && isPowerOfTwoImage) _gl.generateMipmap(_gl.TEXTURE_2D);\n    textureProperties.__version = texture.version;\n    if (texture.onUpdate) texture.onUpdate(texture);\n  }\n  // Render targets\n  // Setup storage for target texture and bind it to correct framebuffer\n  private setupFrameBufferTexture(framebuffer: any, renderTarget: any, attachment: GLenum, textureTarget: GLenum): void {\n    const _gl = this._gl;\n    const glFormat = this.paramThreeToGL(renderTarget.texture.format);\n    const glType = this.paramThreeToGL(renderTarget.texture.type);\n    this.state.texImage2D(textureTarget, 0, glFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null);\n    _gl.bindFramebuffer(_gl.FRAMEBUFFER, framebuffer);\n    _gl.framebufferTexture2D(_gl.FRAMEBUFFER, attachment, textureTarget, this.properties.get(renderTarget.texture).__webglTexture, 0);\n    _gl.bindFramebuffer(_gl.FRAMEBUFFER, null);\n  }\n  // Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n  private setupRenderBufferStorage(renderbuffer: any, renderTarget: any): void {\n    const _gl = this._gl;\n    _gl.bindRenderbuffer(_gl.RENDERBUFFER, renderbuffer);\n    if (renderTarget.depthBuffer && ! renderTarget.stencilBuffer) {\n      _gl.renderbufferStorage(_gl.RENDERBUFFER, _gl.DEPTH_COMPONENT16, renderTarget.width, renderTarget.height);\n      _gl.framebufferRenderbuffer(_gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer);\n    } else if (renderTarget.depthBuffer && renderTarget.stencilBuffer) {\n      _gl.renderbufferStorage(_gl.RENDERBUFFER, _gl.DEPTH_STENCIL, renderTarget.width, renderTarget.height);\n      _gl.framebufferRenderbuffer(_gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer);\n    } else {\n      // FIXME: We don't support !depth !stencil\n      _gl.renderbufferStorage(_gl.RENDERBUFFER, _gl.RGBA4, renderTarget.width, renderTarget.height);\n    }\n    _gl.bindRenderbuffer(_gl.RENDERBUFFER, null);\n  }\n  // Setup resources for a Depth Texture for a FBO (needs an extension)\n  private setupDepthTexture(framebuffer: any, renderTarget: any): void {\n    const _gl = this._gl;\n    const isCube = ((renderTarget && renderTarget instanceof WebGLRenderTargetCube));\n    if (isCube) throw new Error('Depth Texture with cube render targets is not supported!');\n    _gl.bindFramebuffer(_gl.FRAMEBUFFER, framebuffer);\n    if (!((renderTarget.depthTexture && renderTarget.depthTexture instanceof DepthTexture))) {\n      throw new Error('renderTarget.depthTexture must be an instance of THREE.DepthTexture');\n    }\n    // upload an empty depth texture with framebuffer size\n    if (!this.properties.get(renderTarget.depthTexture).__webglTexture ||\n        renderTarget.depthTexture.image.width !== renderTarget.width ||\n        renderTarget.depthTexture.image.height !== renderTarget.height) {\n      renderTarget.depthTexture.image.width = renderTarget.width;\n      renderTarget.depthTexture.image.height = renderTarget.height;\n      renderTarget.depthTexture.needsUpdate = true;\n    }\n    this.setTexture2D(renderTarget.depthTexture, 0);\n    const webglDepthTexture = this.properties.get(renderTarget.depthTexture).__webglTexture;\n    if (renderTarget.depthTexture.format === TextureFormat.Depth) {\n      _gl.framebufferTexture2D(_gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0);\n    } else if (renderTarget.depthTexture.format === TextureFormat.DepthStencil) {\n      _gl.framebufferTexture2D(_gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0);\n    } else {\n      throw new Error('Unknown depthTexture format');\n    }\n  }\n  // Setup GL resources for a non-texture depth buffer\n  private setupDepthRenderbuffer(renderTarget: any): void {\n    const _gl = this._gl;\n    const renderTargetProperties = this.properties.get(renderTarget);\n    const isCube = ((renderTarget && renderTarget instanceof WebGLRenderTargetCube));\n    if (renderTarget.depthTexture) {\n      if (isCube) throw new Error('target.depthTexture not supported in Cube render targets');\n      this.setupDepthTexture(renderTargetProperties.__webglFramebuffer, renderTarget);\n    } else {\n      if (isCube) {\n        renderTargetProperties.__webglDepthbuffer = [];\n        for (let i = 0; i < 6; i ++) {\n          _gl.bindFramebuffer(_gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer[i]);\n          renderTargetProperties.__webglDepthbuffer[i] = _gl.createRenderbuffer();\n          this.setupRenderBufferStorage(renderTargetProperties.__webglDepthbuffer[i], renderTarget);\n        }\n      } else {\n        _gl.bindFramebuffer(_gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer);\n        renderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n        this.setupRenderBufferStorage(renderTargetProperties.__webglDepthbuffer, renderTarget);\n      }\n    }\n    _gl.bindFramebuffer(_gl.FRAMEBUFFER, null);\n  }\n  // Set up GL resources for the render target\n  setupRenderTarget(renderTarget: any): void {\n    const _gl = this._gl;\n    const renderTargetProperties = this.properties.get(renderTarget);\n    const textureProperties = this.properties.get(renderTarget.texture);\n    renderTarget.addEventListener('dispose', this.onRenderTargetDispose.bind(this));\n    textureProperties.__webglTexture = _gl.createTexture();\n    this._infoMemory.textures ++;\n    const isCube = ((renderTarget && renderTarget instanceof WebGLRenderTargetCube));\n    const isTargetPowerOfTwo = WebGLTextures.isPowerOfTwo(renderTarget);\n    // Setup framebuffer\n    if (isCube) {\n      renderTargetProperties.__webglFramebuffer = [];\n      for (let i = 0; i < 6; i ++) {\n        renderTargetProperties.__webglFramebuffer[i] = _gl.createFramebuffer();\n      }\n    } else {\n      renderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n    }\n    // Setup color buffer\n    if (isCube) {\n      this.state.bindTexture(_gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture);\n      this.setTextureParameters(_gl.TEXTURE_CUBE_MAP, renderTarget.texture, isTargetPowerOfTwo);\n      for (let i = 0; i < 6; i ++) {\n        this.setupFrameBufferTexture(renderTargetProperties.__webglFramebuffer[i], renderTarget, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i);\n      }\n      if (renderTarget.texture.generateMipmaps && isTargetPowerOfTwo) _gl.generateMipmap(_gl.TEXTURE_CUBE_MAP);\n      this.state.bindTexture(_gl.TEXTURE_CUBE_MAP, null);\n    } else {\n      this.state.bindTexture(_gl.TEXTURE_2D, textureProperties.__webglTexture);\n      this.setTextureParameters(_gl.TEXTURE_2D, renderTarget.texture, isTargetPowerOfTwo);\n      this.setupFrameBufferTexture(renderTargetProperties.__webglFramebuffer, renderTarget, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D);\n      if (renderTarget.texture.generateMipmaps && isTargetPowerOfTwo) _gl.generateMipmap(_gl.TEXTURE_2D);\n      this.state.bindTexture(_gl.TEXTURE_2D, null);\n    }\n    // Setup depth and stencil buffers\n    if (renderTarget.depthBuffer) {\n      this.setupDepthRenderbuffer(renderTarget);\n    }\n  }\n  updateRenderTargetMipmap(renderTarget: any): void {\n    const _gl = this._gl;\n    const texture = renderTarget.texture;\n    if (texture.generateMipmaps && WebGLTextures.isPowerOfTwo(renderTarget) &&\n        texture.minFilter !== TextureFilter.Nearest &&\n        texture.minFilter !== TextureFilter.Linear) {\n      const target = (renderTarget && renderTarget instanceof WebGLRenderTargetCube) ? _gl.TEXTURE_CUBE_MAP : _gl.TEXTURE_2D;\n      const webglTexture = this.properties.get(texture).__webglTexture;\n      this.state.bindTexture(target, webglTexture);\n      _gl.generateMipmap(target);\n      this.state.bindTexture(target, null);\n    }\n  }\n}\n","/**\n * @author fordacious / fordacious.github.io\n */\nexport class WebGLProperties {\n  properties: any = {};\n  get(object: any): any {\n    const uuid = object.uuid;\n    let map = this.properties[uuid];\n    if (map === undefined) {\n      map = {};\n      this.properties[uuid] = map;\n    }\n    return map;\n  }\n  delete(object: any) {\n    delete this.properties[object.uuid];\n  }\n  clear(): void {\n    this.properties = {};\n  }\n}\n","/**\n * @author mrdoob / http://mrdoob.com/\n */\nimport { DepthFunction, CullFace } from \"../../constants\";\nimport { BlendingMode } from \"../../constants\";\nimport { Vector4 } from \"../../math/Vector4\";\nclass ColorBuffer {\n  state: any;\n  locked: boolean = false;\n  color: Vector4 = new Vector4();\n  currentColorMask: number = null;\n  currentColorClear: Vector4 = new Vector4();\n  constructor(state: any) {\n    this.state = state;\n  }\n  setMask(colorMask: number): void {\n    if (this.currentColorMask !== colorMask && ! this.locked) {\n      this.state.gl.colorMask(colorMask, colorMask, colorMask, colorMask);\n      this.currentColorMask = colorMask;\n    }\n  }\n  setLocked(lock: boolean): void {\n    this.locked = lock;\n  }\n  setClear(r: number, g: number, b: number, a: number): void {\n    this.color.set(r, g, b, a);\n    if (this.currentColorClear.equals(this.color) === false) {\n      this.state.gl.clearColor(r, g, b, a);\n      this.currentColorClear.copy(this.color);\n    }\n  }\n  reset(): void {\n    this.locked = false;\n    this.currentColorMask = null;\n    this.currentColorClear.set(0, 0, 0, 1);\n  }\n}\nclass DepthBuffer {\n  state: any;\n  locked: boolean = false;\n  currentDepthMask: number = null;\n  currentDepthFunc: number = null;\n  currentDepthClear: number = null;\n  constructor(state: any) {\n    this.state = state;\n  }\n  setTest(depthTest: boolean): void {\n    const gl = this.state.gl;\n    if (depthTest) {\n      this.state.enable(gl.DEPTH_TEST);\n    } else {\n      this.state.disable(gl.DEPTH_TEST);\n    }\n  }\n  setMask(depthMask: number): void {\n    const gl = this.state.gl;\n    if (this.currentDepthMask !== depthMask && ! this.locked) {\n      gl.depthMask(depthMask);\n      this.currentDepthMask = depthMask;\n    }\n  }\n  setFunc(depthFunc: number): void {\n    const gl = this.state.gl;\n    if (this.currentDepthFunc !== depthFunc) {\n      if (depthFunc) {\n        switch (depthFunc) {\n          case DepthFunction.Never:\n            gl.depthFunc(gl.NEVER);\n            break;\n          case DepthFunction.Always:\n            gl.depthFunc(gl.ALWAYS);\n            break;\n          case DepthFunction.Less:\n            gl.depthFunc(gl.LESS);\n            break;\n          case DepthFunction.LessEqual:\n            gl.depthFunc(gl.LEQUAL);\n            break;\n          case DepthFunction.Equal:\n            gl.depthFunc(gl.EQUAL);\n            break;\n          case DepthFunction.GreaterEqual:\n            gl.depthFunc(gl.GEQUAL);\n            break;\n          case DepthFunction.Greater:\n            gl.depthFunc(gl.GREATER);\n            break;\n          case DepthFunction.NotEqual:\n            gl.depthFunc(gl.NOTEQUAL);\n            break;\n          default:\n            gl.depthFunc(gl.LEQUAL);\n        }\n      } else {\n        gl.depthFunc(gl.LEQUAL);\n      }\n      this.currentDepthFunc = depthFunc;\n    }\n  }\n  setLocked(lock: boolean): void {\n    this.locked = lock;\n  }\n  setClear(depth: number): void {\n    const gl = this.state.gl;\n    if (this.currentDepthClear !== depth) {\n      gl.clearDepth(depth);\n      this.currentDepthClear = depth;\n    }\n  }\n  reset(): void {\n    this.locked = false;\n    this.currentDepthMask = null;\n    this.currentDepthFunc = null;\n    this.currentDepthClear = null;\n  }\n}\nclass StencilBuffer {\n  state: any;\n  locked: boolean = false;\n  currentStencilMask: number = null;\n  currentStencilFunc: number = null;\n  currentStencilRef: number = null;\n  currentStencilFuncMask: number = null;\n  currentStencilFail: number  = null;\n  currentStencilZFail: number = null;\n  currentStencilZPass: number = null;\n  currentStencilClear: number = null;\n  constructor(state: any) {\n    this.state = state;\n  }\n  setTest(stencilTest: number): void {\n    const gl = this.state.gl;\n    if (stencilTest) {\n      this.state.enable(gl.STENCIL_TEST);\n    } else {\n      this.state.disable(gl.STENCIL_TEST);\n    }\n  }\n  setMask(stencilMask: number): void {\n    const gl = this.state.gl;\n    if (this.currentStencilMask !== stencilMask && ! this.locked) {\n      gl.stencilMask(stencilMask);\n      this.currentStencilMask = stencilMask;\n    }\n  }\n  setFunc(stencilFunc: number, stencilRef: number, stencilMask: number): void {\n    const gl = this.state.gl;\n    if (this.currentStencilFunc !== stencilFunc ||\n        this.currentStencilRef   !== stencilRef   ||\n        this.currentStencilFuncMask !== stencilMask) {\n      gl.stencilFunc(stencilFunc,  stencilRef, stencilMask);\n      this.currentStencilFunc = stencilFunc;\n      this.currentStencilRef  = stencilRef;\n      this.currentStencilFuncMask = stencilMask;\n    }\n  }\n  setOp(stencilFail: number, stencilZFail: number, stencilZPass: number): void {\n    const gl = this.state.gl;\n    if (this.currentStencilFail   !== stencilFail   ||\n        this.currentStencilZFail !== stencilZFail ||\n        this.currentStencilZPass !== stencilZPass) {\n      gl.stencilOp(stencilFail,  stencilZFail, stencilZPass);\n      this.currentStencilFail  = stencilFail;\n      this.currentStencilZFail = stencilZFail;\n      this.currentStencilZPass = stencilZPass;\n    }\n  }\n  setLocked(lock: boolean): void {\n    this.locked = lock;\n  }\n  setClear(stencil: number) {\n    const gl = this.state.gl;\n    if (this.currentStencilClear !== stencil) {\n      gl.clearStencil(stencil);\n      this.currentStencilClear = stencil;\n    }\n  }\n  reset(): void {\n    this.locked = false;\n    this.currentStencilMask = null;\n    this.currentStencilFunc = null;\n    this.currentStencilRef = null;\n    this.currentStencilFuncMask = null;\n    this.currentStencilFail = null;\n    this.currentStencilZFail = null;\n    this.currentStencilZPass = null;\n    this.currentStencilClear = null;\n  }\n}\nexport class WebGLState {\n  //\n  gl: any;\n  extensions: any;\n  paramThreeToGL: any;\n  colorBuffer: any;\n  depthBuffer: any;\n  stencilBuffer: any;\n  maxVertexAttributes: any;\n  newAttributes: any;\n  enabledAttributes: any;\n  attributeDivisors: any;\n  capabilities: any = {};\n  compressedTextureFormats: any = null;\n  currentBlending: any = null;\n  currentBlendEquation: any = null;\n  currentBlendSrc: any = null;\n  currentBlendDst: any = null;\n  currentBlendEquationAlpha: any = null;\n  currentBlendSrcAlpha: any = null;\n  currentBlendDstAlpha: any = null;\n  currentPremultipledAlpha: any = false;\n  currentFlipSided: any = null;\n  currentCullFace: any = null;\n  currentLineWidth: any = null;\n  currentPolygonOffsetFactor: any = null;\n  currentPolygonOffsetUnits: any = null;\n  currentScissorTest: any = null;\n  maxTextures: any;\n  currentTextureSlot: any = null;\n  currentBoundTextures: any = {};\n  currentScissor = new Vector4();\n  currentViewport = new Vector4();\n  emptyTextures = {};\n  buffers: any;\n  constructor(gl: any, extensions: any, paramThreeToGL: any) {\n    this.gl = gl;\n    this.extensions = extensions;\n    this.paramThreeToGL = paramThreeToGL;\n    this.colorBuffer = new ColorBuffer(this);\n    this.depthBuffer = new DepthBuffer(this);\n    this.stencilBuffer = new StencilBuffer(this);\n    this.maxVertexAttributes = gl.getParameter(gl.MAX_VERTEX_ATTRIBS);\n    this.newAttributes = new Uint8Array(this.maxVertexAttributes);\n    this.enabledAttributes = new Uint8Array(this.maxVertexAttributes);\n    this.attributeDivisors = new Uint8Array(this.maxVertexAttributes);\n    this.maxTextures = gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS);\n    this.emptyTextures[gl.TEXTURE_2D] = this.createTexture(gl.TEXTURE_2D, gl.TEXTURE_2D, 1);\n    this.emptyTextures[gl.TEXTURE_CUBE_MAP] = this.createTexture(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_CUBE_MAP_POSITIVE_X, 6);\n    this.buffers = {\n      color: this.colorBuffer,\n      depth: this.depthBuffer,\n      stencil: this.stencilBuffer\n    };\n  }\n  createTexture(type: GLenum, target: GLenum, count: number): GLint {\n    const gl = this.gl;\n    const data = new Uint8Array(4); // 4 is required to match default unpack alignment of 4.\n    const texture = gl.createTexture();\n    gl.bindTexture(type, texture);\n    gl.texParameteri(type, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(type, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    for (let i = 0; i < count; i ++) {\n      gl.texImage2D(target + i, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, data);\n    }\n    return texture;\n  }\n  //\n  init(): void {\n    const gl = this.gl;\n    this.clearColor(0, 0, 0, 1);\n    this.clearDepth(1);\n    this.clearStencil(0);\n    this.enable(gl.DEPTH_TEST);\n    this.setDepthFunc(DepthFunction.LessEqual);\n    this.setFlipSided(false);\n    this.setCullFace(CullFace.Back);\n    this.enable(gl.CULL_FACE);\n    this.enable(gl.BLEND);\n    this.setBlending(BlendingMode.Normal);\n  }\n  initAttributes(): void {\n    for (let i = 0, l = this.newAttributes.length; i < l; i ++) {\n      this.newAttributes[i] = 0;\n    }\n  }\n  enableAttribute(attribute: any): void {\n    const gl = this.gl;\n    this.newAttributes[attribute] = 1;\n    if (this.enabledAttributes[attribute] === 0) {\n      gl.enableVertexAttribArray(attribute);\n      this.enabledAttributes[attribute] = 1;\n    }\n    if (this.attributeDivisors[attribute] !== 0) {\n      const extension = this.extensions.get('ANGLE_instanced_arrays');\n      extension.vertexAttribDivisorANGLE(attribute, 0);\n      this.attributeDivisors[attribute] = 0;\n    }\n  }\n  enableAttributeAndDivisor(attribute: any, meshPerAttribute: any, extension: any): void {\n    const gl = this.gl;\n    this.newAttributes[attribute] = 1;\n    if (this.enabledAttributes[attribute] === 0) {\n      gl.enableVertexAttribArray(attribute);\n      this.enabledAttributes[attribute] = 1;\n    }\n    if (this.attributeDivisors[attribute] !== meshPerAttribute) {\n      extension.vertexAttribDivisorANGLE(attribute, meshPerAttribute);\n      this.attributeDivisors[attribute] = meshPerAttribute;\n    }\n  }\n  disableUnusedAttributes(): void {\n    const gl = this.gl;\n    for (let i = 0, l = this.enabledAttributes.length; i !== l; ++ i) {\n      if (this.enabledAttributes[i] !== this.newAttributes[i]) {\n        gl.disableVertexAttribArray(i);\n        this.enabledAttributes[i] = 0;\n      }\n    }\n  }\n  enable(id: any): void {\n    const gl = this.gl;\n    if (this.capabilities[id] !== true) {\n      gl.enable(id);\n      this.capabilities[id] = true;\n    }\n  }\n  disable(id: any): void {\n    const gl = this.gl;\n    if (this.capabilities[id] !== false) {\n      gl.disable(id);\n      this.capabilities[id] = false;\n    }\n  }\n  getCompressedTextureFormats(): string[] {\n    const gl = this.gl;\n    if (this.compressedTextureFormats === null) {\n      this.compressedTextureFormats = [];\n      if (this.extensions.get('WEBGL_compressed_texture_pvrtc') ||\n        this.extensions.get('WEBGL_compressed_texture_s3tc') ||\n        this.extensions.get('WEBGL_compressed_texture_etc1')) {\n        const formats = gl.getParameter(gl.COMPRESSED_TEXTURE_FORMATS);\n        for (let i = 0; i < formats.length; i ++) {\n          this.compressedTextureFormats.push(formats[i]);\n        }\n      }\n    }\n    return this.compressedTextureFormats;\n  }\n  setBlending(blending: number, blendEquation?: number, blendSrc?: number, blendDst?: number, blendEquationAlpha?: number, blendSrcAlpha?: number, blendDstAlpha?: number, premultipliedAlpha?: boolean): void {\n    const gl = this.gl;\n    if (blending !== BlendingMode.None) {\n      this.enable(gl.BLEND);\n    } else {\n      this.disable(gl.BLEND);\n    }\n    if (blending !== this.currentBlending || premultipliedAlpha !== this.currentPremultipledAlpha) {\n      if (blending === BlendingMode.Additive) {\n        if (premultipliedAlpha) {\n          gl.blendEquationSeparate(gl.FUNC_ADD, gl.FUNC_ADD);\n          gl.blendFuncSeparate(gl.ONE, gl.ONE, gl.ONE, gl.ONE);\n        } else {\n          gl.blendEquation(gl.FUNC_ADD);\n          gl.blendFunc(gl.SRC_ALPHA, gl.ONE);\n        }\n      } else if (blending === BlendingMode.Subtractive) {\n        if (premultipliedAlpha) {\n          gl.blendEquationSeparate(gl.FUNC_ADD, gl.FUNC_ADD);\n          gl.blendFuncSeparate(gl.ZERO, gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ONE_MINUS_SRC_ALPHA);\n        } else {\n          gl.blendEquation(gl.FUNC_ADD);\n          gl.blendFunc(gl.ZERO, gl.ONE_MINUS_SRC_COLOR);\n        }\n      } else if (blending === BlendingMode.Multiply) {\n        if (premultipliedAlpha) {\n          gl.blendEquationSeparate(gl.FUNC_ADD, gl.FUNC_ADD);\n          gl.blendFuncSeparate(gl.ZERO, gl.SRC_COLOR, gl.ZERO, gl.SRC_ALPHA);\n        } else {\n          gl.blendEquation(gl.FUNC_ADD);\n          gl.blendFunc(gl.ZERO, gl.SRC_COLOR);\n        }\n      } else {\n        if (premultipliedAlpha) {\n          gl.blendEquationSeparate(gl.FUNC_ADD, gl.FUNC_ADD);\n          gl.blendFuncSeparate(gl.ONE, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n        } else {\n          gl.blendEquationSeparate(gl.FUNC_ADD, gl.FUNC_ADD);\n          gl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n        }\n      }\n      this.currentBlending = blending;\n      this.currentPremultipledAlpha = premultipliedAlpha;\n    }\n    if (blending === BlendingMode.Custom) {\n      blendEquationAlpha = blendEquationAlpha || blendEquation;\n      blendSrcAlpha = blendSrcAlpha || blendSrc;\n      blendDstAlpha = blendDstAlpha || blendDst;\n      if (blendEquation !== this.currentBlendEquation || blendEquationAlpha !== this.currentBlendEquationAlpha) {\n        gl.blendEquationSeparate(this.paramThreeToGL(blendEquation), this.paramThreeToGL(blendEquationAlpha));\n        this.currentBlendEquation = blendEquation;\n        this.currentBlendEquationAlpha = blendEquationAlpha;\n      }\n      if (blendSrc !== this.currentBlendSrc || blendDst !== this.currentBlendDst || blendSrcAlpha !== this.currentBlendSrcAlpha || blendDstAlpha !== this.currentBlendDstAlpha) {\n        gl.blendFuncSeparate(this.paramThreeToGL(blendSrc), this.paramThreeToGL(blendDst), this.paramThreeToGL(blendSrcAlpha), this.paramThreeToGL(blendDstAlpha));\n        this.currentBlendSrc = blendSrc;\n        this.currentBlendDst = blendDst;\n        this.currentBlendSrcAlpha = blendSrcAlpha;\n        this.currentBlendDstAlpha = blendDstAlpha;\n      }\n    } else {\n      this.currentBlendEquation = null;\n      this.currentBlendSrc = null;\n      this.currentBlendDst = null;\n      this.currentBlendEquationAlpha = null;\n      this.currentBlendSrcAlpha = null;\n      this.currentBlendDstAlpha = null;\n    }\n  }\n  // TODO Deprecate\n  setColorWrite(colorWrite: boolean): void {\n    this.colorBuffer.setMask(colorWrite);\n  }\n  setDepthTest(depthTest: boolean): void {\n    this.depthBuffer.setTest(depthTest);\n  }\n  setDepthWrite(depthWrite: boolean): void {\n    this.depthBuffer.setMask(depthWrite);\n  }\n  setDepthFunc(depthFunc: number): void {\n    this.depthBuffer.setFunc(depthFunc);\n  }\n  setStencilTest(stencilTest: number): void {\n    this.stencilBuffer.setTest(stencilTest);\n  }\n  setStencilWrite(stencilWrite: number): void {\n    this.stencilBuffer.setMask(stencilWrite);\n  }\n  setStencilFunc(stencilFunc: number, stencilRef: number, stencilMask: number): void {\n    this.stencilBuffer.setFunc(stencilFunc, stencilRef, stencilMask);\n  }\n  setStencilOp(stencilFail: number, stencilZFail: number, stencilZPass: number): void {\n    this.stencilBuffer.setOp(stencilFail, stencilZFail, stencilZPass);\n  }\n  //\n  setFlipSided(flipSided: boolean): void {\n    const gl = this.gl;\n    if (this.currentFlipSided !== flipSided) {\n      if (flipSided) {\n        gl.frontFace(gl.CW);\n      } else {\n        gl.frontFace(gl.CCW);\n      }\n      this.currentFlipSided = flipSided;\n    }\n  }\n  setCullFace(cullFace: CullFace): void {\n    const gl = this.gl;\n    if (cullFace !== CullFace.None) {\n      gl.enable(gl.CULL_FACE);\n      if (cullFace !== this.currentCullFace) {\n        if (cullFace === CullFace.Back) {\n          gl.cullFace(gl.BACK);\n        } else if (cullFace === CullFace.Front) {\n          gl.cullFace(gl.FRONT);\n        } else {\n          gl.cullFace(gl.FRONT_AND_BACK);\n        }\n      }\n    } else {\n      this.disable(gl.CULL_FACE);\n    }\n    this.currentCullFace = cullFace;\n  }\n  setLineWidth(width: number): void {\n    const gl = this.gl;\n    if (width !== this.currentLineWidth) {\n      gl.lineWidth(width);\n      this.currentLineWidth = width;\n    }\n  }\n  setPolygonOffset(polygonOffset: boolean, factor: number, units: number): void {\n    const gl = this.gl;\n    if (polygonOffset) {\n      this.enable(gl.POLYGON_OFFSET_FILL);\n      if (this.currentPolygonOffsetFactor !== factor || this.currentPolygonOffsetUnits !== units) {\n        gl.polygonOffset(factor, units);\n        this.currentPolygonOffsetFactor = factor;\n        this.currentPolygonOffsetUnits = units;\n      }\n    } else {\n      this.disable(gl.POLYGON_OFFSET_FILL);\n    }\n  }\n  getScissorTest(): number {\n    return this.currentScissorTest;\n  }\n  setScissorTest(scissorTest: boolean): void {\n    const gl = this.gl;\n    this.currentScissorTest = scissorTest;\n    if (scissorTest) {\n      this.enable(gl.SCISSOR_TEST);\n    } else {\n      this.disable(gl.SCISSOR_TEST);\n    }\n  }\n  // texture\n  activeTexture(webglSlot?: number): void {\n    const gl = this.gl;\n    if (webglSlot === undefined) webglSlot = gl.TEXTURE0 + this.maxTextures - 1;\n    if (this.currentTextureSlot !== webglSlot) {\n      gl.activeTexture(webglSlot);\n      this.currentTextureSlot = webglSlot;\n    }\n  }\n  bindTexture(webglType: number, webglTexture: number): void {\n    const gl = this.gl;\n    if (this.currentTextureSlot === null) {\n      this.activeTexture();\n    }\n    let boundTexture = this.currentBoundTextures[this.currentTextureSlot];\n    if (boundTexture === undefined) {\n      boundTexture = { type: undefined, texture: undefined };\n      this.currentBoundTextures[this.currentTextureSlot] = boundTexture;\n    }\n    if (boundTexture.type !== webglType || boundTexture.texture !== webglTexture) {\n      gl.bindTexture(webglType, webglTexture || this.emptyTextures[webglType]);\n      boundTexture.type = webglType;\n      boundTexture.texture = webglTexture;\n    }\n  }\n  compressedTexImage2D(): void {\n    const gl = this.gl;\n    try {\n      gl.compressedTexImage2D.apply(gl, arguments);\n    } catch (error) {\n      console.error(error);\n    }\n  }\n  texImage2D(): void {\n    const gl = this.gl;\n    try {\n      gl.texImage2D.apply(gl, arguments);\n    } catch (error) {\n      console.error(error);\n    }\n  }\n  // TODO Deprecate\n  clearColor(r: number, g: number, b: number, a: number): void {\n    this.colorBuffer.setClear(r, g, b, a);\n  }\n  clearDepth(depth: number): void {\n    this.depthBuffer.setClear(depth);\n  }\n  clearStencil(stencil: number): void {\n    this.stencilBuffer.setClear(stencil);\n  }\n  //\n  scissor(scissor: Vector4): void {\n    const gl = this.gl;\n    if (this.currentScissor.equals(scissor) === false) {\n      gl.scissor(scissor.x, scissor.y, scissor.z, scissor.w);\n      this.currentScissor.copy(scissor);\n    }\n  }\n  viewport(viewport: Vector4): void {\n    const gl = this.gl;\n    if (this.currentViewport.equals(viewport) === false) {\n      gl.viewport(viewport.x, viewport.y, viewport.z, viewport.w);\n      this.currentViewport.copy(viewport);\n    }\n  }\n  //\n  reset(): void {\n    const gl = this.gl;\n    for (let i = 0; i < this.enabledAttributes.length; i ++) {\n      if (this.enabledAttributes[i] === 1) {\n        gl.disableVertexAttribArray(i);\n        this.enabledAttributes[i] = 0;\n      }\n    }\n    this.capabilities = {};\n    this.compressedTextureFormats = null;\n    this.currentTextureSlot = null;\n    this.currentBoundTextures = {};\n    this.currentBlending = null;\n    this.currentFlipSided = null;\n    this.currentCullFace = null;\n    this.colorBuffer.reset();\n    this.depthBuffer.reset();\n    this.stencilBuffer.reset();\n  }\n}\n","/**\n * @author mrdoob / http://mrdoob.com/\n */\nimport { WebGLExtensions } from \"./WebGLExtensions\";\nimport { WebGLRendererParameters } from \"../WebGLRenderer\";\nexport class WebGLCapabilities {\n  gl: WebGLRenderingContext;\n  extensions: WebGLExtensions;\n  parameters: WebGLRendererParameters;\n  maxAnisotropy: number;\n  precision: string;\n  maxPrecision: string;\n  logarithmicDepthBuffer: boolean;\n  maxTextures: number;\n  maxVertexTextures: number;\n  maxTextureSize: number;\n  maxCubemapSize: number;\n  maxAttributes: number;\n  maxVertexUniforms: number;\n  maxVaryings: number;\n  maxFragmentUniforms: number;\n  vertexTextures: boolean;\n  floatFragmentTextures: boolean;\n  floatVertexTextures: boolean;\n  constructor(gl: WebGLRenderingContext, extensions: WebGLExtensions, parameters: WebGLRendererParameters) {\n    this.gl = gl;\n    this.extensions = extensions;\n    this.parameters = parameters;\n    this.precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n    this.maxPrecision = this.getMaxPrecision(this.precision);\n    if (this.maxPrecision !== this.precision) {\n      console.warn('THREE.WebGLRenderer:', this.precision, 'not supported, using', this.maxPrecision, 'instead.');\n      this.precision = this.maxPrecision;\n    }\n    this.logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true && !! extensions.get('EXT_frag_depth');\n    this.maxTextures = gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS);\n    this.maxVertexTextures = gl.getParameter(gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS);\n    this.maxTextureSize = gl.getParameter(gl.MAX_TEXTURE_SIZE);\n    this.maxCubemapSize = gl.getParameter(gl.MAX_CUBE_MAP_TEXTURE_SIZE);\n    this.maxAttributes = gl.getParameter(gl.MAX_VERTEX_ATTRIBS);\n    this.maxVertexUniforms = gl.getParameter(gl.MAX_VERTEX_UNIFORM_VECTORS);\n    this.maxVaryings = gl.getParameter(gl.MAX_VARYING_VECTORS);\n    this.maxFragmentUniforms = gl.getParameter(gl.MAX_FRAGMENT_UNIFORM_VECTORS);\n    this.vertexTextures = this.maxVertexTextures > 0;\n    this.floatFragmentTextures = !! extensions.get('OES_texture_float');\n    this.floatVertexTextures = this.vertexTextures && this.floatFragmentTextures;\n  }\n  getMaxAnisotropy(): number {\n    const gl: WebGLRenderingContext = this.gl;\n    if (this.maxAnisotropy !== undefined) return this.maxAnisotropy;\n    const extension = this.extensions.get('EXT_texture_filter_anisotropic');\n    if (extension !== null) {\n      this.maxAnisotropy = gl.getParameter(extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT);\n    } else {\n      this.maxAnisotropy = 0;\n    }\n    return this.maxAnisotropy;\n  }\n  getMaxPrecision(precision: string): string {\n    const gl: WebGLRenderingContext = this.gl;\n    if (precision === 'highp') {\n      if (gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.HIGH_FLOAT).precision > 0 &&\n           gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_FLOAT).precision > 0) {\n        return 'highp';\n      }\n      precision = 'mediump';\n    }\n    if (precision === 'mediump') {\n      if (gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.MEDIUM_FLOAT).precision > 0 &&\n           gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT).precision > 0) {\n        return 'mediump';\n      }\n    }\n    return 'lowp';\n  }\n}\n","/**\n * @author mrdoob / http://mrdoob.com/\n */\nexport class WebGLExtensions {\n  gl: WebGLRenderingContext;\n  extensions = {};\n  constructor(gl: WebGLRenderingContext) {\n    this.gl = gl;\n  }\n  get(name: string): any {\n    const gl: WebGLRenderingContext = this.gl;\n    const extensions = this.extensions;\n    if (extensions[name] !== undefined) {\n      return extensions[name];\n    }\n    let extension;\n    switch (name) {\n      case 'WEBGL_depth_texture':\n        extension = gl.getExtension('WEBGL_depth_texture') || gl.getExtension('MOZ_WEBGL_depth_texture') || gl.getExtension('WEBKIT_WEBGL_depth_texture');\n        break;\n      case 'EXT_texture_filter_anisotropic':\n        extension = gl.getExtension('EXT_texture_filter_anisotropic') || gl.getExtension('MOZ_EXT_texture_filter_anisotropic') || gl.getExtension('WEBKIT_EXT_texture_filter_anisotropic');\n        break;\n      case 'WEBGL_compressed_texture_s3tc':\n        extension = gl.getExtension('WEBGL_compressed_texture_s3tc') || gl.getExtension('MOZ_WEBGL_compressed_texture_s3tc') || gl.getExtension('WEBKIT_WEBGL_compressed_texture_s3tc');\n        break;\n      case 'WEBGL_compressed_texture_pvrtc':\n        extension = gl.getExtension('WEBGL_compressed_texture_pvrtc') || gl.getExtension('WEBKIT_WEBGL_compressed_texture_pvrtc');\n        break;\n      case 'WEBGL_compressed_texture_etc1':\n        extension = gl.getExtension('WEBGL_compressed_texture_etc1');\n        break;\n      default:\n        extension = gl.getExtension(name);\n    }\n    if (extension === null) {\n      console.warn('THREE.WebGLRenderer: ' + name + ' extension not supported.');\n    }\n    extensions[name] = extension;\n    return extension;\n  }\n}\n","/**\n * @author tschw\n */\nimport { Matrix3 } from \"../../math/Matrix3\";\nimport { Plane } from \"../../math/Plane\";\nimport { Camera } from \"../../cameras/Camera\";\nexport class WebGLClipping {\n  globalState: number[] = null;\n  numGlobalPlanes: number = 0;\n  localClippingEnabled: boolean = false;\n  renderingShadows: boolean = false;\n  plane: Plane = new Plane();\n  viewNormalMatrix: Matrix3 = new Matrix3();\n  uniform = { value: null, needsUpdate: false };\n  numPlanes: number = 0;\n  numIntersection: number = 0;\n  init(planes: Plane[], enableLocalClipping: boolean, camera: Camera): boolean {\n    const enabled =\n      planes.length !== 0 ||\n      enableLocalClipping ||\n      // enable state of previous frame - the clipping code has to\n      // run another frame in order to reset the state:\n      this.numGlobalPlanes !== 0 ||\n      this.localClippingEnabled;\n    this.localClippingEnabled = enableLocalClipping;\n    this.globalState = this.projectPlanes(planes, camera, 0);\n    this.numGlobalPlanes = planes.length;\n    return enabled;\n  }\n  beginShadows(): void {\n    this.renderingShadows = true;\n    this.projectPlanes(null);\n  }\n  endShadows(): void {\n    this.renderingShadows = false;\n    this.resetGlobalState();\n  }\n  setState(planes: Plane[], clipIntersection: boolean, clipShadows: boolean, camera: Camera, cache: any, fromCache: boolean): void {\n    if (! this.localClippingEnabled ||\n        planes === null || planes.length === 0 ||\n        this.renderingShadows && ! clipShadows) {\n      // there's no local clipping\n      if (this.renderingShadows) {\n        // there's no global clipping\n        this.projectPlanes(null);\n      } else {\n        this.resetGlobalState();\n      }\n    } else {\n      const nGlobal = this.renderingShadows ? 0 : this.numGlobalPlanes;\n      const lGlobal = nGlobal * 4;\n      let dstArray = cache.clippingState || null;\n      this.uniform.value = dstArray; // ensure unique state\n      dstArray = this.projectPlanes(planes, camera, lGlobal, fromCache);\n      for (let i = 0; i !== lGlobal; ++ i) {\n        dstArray[i] = this.globalState[i];\n      }\n      cache.clippingState = dstArray;\n      this.numIntersection = clipIntersection ? this.numPlanes : 0;\n      this.numPlanes += nGlobal;\n    }\n  }\n  private resetGlobalState(): void {\n    if (this.uniform.value !== this.globalState) {\n      this.uniform.value = this.globalState;\n      this.uniform.needsUpdate = this.numGlobalPlanes > 0;\n    }\n    this.numPlanes = this.numGlobalPlanes;\n    this.numIntersection = 0;\n  }\n  private projectPlanes(planes: Plane[], camera?: Camera, dstOffset?: number, skipTransform?: boolean): number[] {\n    const nPlanes = planes !== null ? planes.length : 0;\n    let dstArray = null;\n    if (nPlanes !== 0) {\n      dstArray = this.uniform.value;\n      if (skipTransform !== true || dstArray === null) {\n        const flatSize = dstOffset + nPlanes * 4,\n          viewMatrix = camera.matrixWorldInverse;\n        this.viewNormalMatrix.getNormalMatrix(viewMatrix);\n        if (dstArray === null || dstArray.length < flatSize) {\n          dstArray = new Float32Array(flatSize);\n        }\n        for (let i = 0, i4 = dstOffset;\n                  i !== nPlanes; ++ i, i4 += 4) {\n          this.plane.copy(planes[i]).\n              applyMatrix4(viewMatrix, this.viewNormalMatrix);\n          this.plane.normal.toArray(dstArray, i4);\n          dstArray[i4 + 3] = this.plane.constant;\n        }\n      }\n      this.uniform.value = dstArray;\n      this.uniform.needsUpdate = true;\n    }\n    this.numPlanes = nPlanes;\n    return dstArray;\n  }\n}\n","import { Light } from \"./Light\";\n/**\n * @author mrdoob / http://mrdoob.com/\n */\nexport class AmbientLight extends Light {\n  readonly isAmbientLight: boolean = true;\n  constructor(color: number, intensity?: number) {\n    super(color, intensity);\n    this.type = 'AmbientLight';\n    this.castShadow = undefined;\n  }\n}\n","import { LightShadow } from \"./LightShadow\";\nimport { OrthographicCamera } from \"../cameras/OrthographicCamera\";\n/**\n * @author mrdoob / http://mrdoob.com/\n */\nexport class DirectionalLightShadow extends LightShadow {\n  constructor(light?: any) {\n    super(new OrthographicCamera(- 5, 5, 5, - 5, 0.5, 500));\n  }\n}\n","import { Light } from \"./Light\";\nimport { DirectionalLightShadow } from \"./DirectionalLightShadow\";\nimport { Object3D } from \"../core/Object3D\";\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\nexport class DirectionalLight extends Light {\n  target: Object3D = new Object3D();\n  readonly isDirectionalLight: boolean = true;\n  constructor(color: number, intensity?: number) {\n    super(color, intensity);\n    this.type = 'DirectionalLight';\n    this.position.copy(Object3D.DefaultUp);\n    this.updateMatrix();\n    this.shadow = new DirectionalLightShadow();\n  }\n  copy(source: this): this {\n    super.copy(source);\n    this.target = source.target.clone();\n    this.shadow = source.shadow.clone();\n    return this;\n  }\n}\n","import { Light } from \"./Light\";\nimport { Color } from \"../math/Color\";\nimport { Object3D } from \"../core/Object3D\";\n/**\n * @author alteredq / http://alteredqualia.com/\n */\nexport class HemisphereLight extends Light {\n  readonly isHemisphereLight: boolean = true;\n  constructor(skyColor: number, groundColor: number, intensity?: number) {\n    super(skyColor, intensity);\n    this.type = 'HemisphereLight';\n    this.castShadow = undefined;\n    this.position.copy(Object3D.DefaultUp);\n    this.updateMatrix();\n    this.groundColor = new Color(groundColor);\n  }\n  copy(source: this): this {\n    super.copy(source);\n    this.groundColor.copy(source.groundColor);\n    return this;\n  }\n}\n","import { Light } from \"./Light\";\nimport { SpotLightShadow } from \"./SpotLightShadow\";\nimport { Object3D } from \"../core/Object3D\";\n/**\n * @author alteredq / http://alteredqualia.com/\n */\nexport class SpotLight extends Light {\n  target: Object3D = new Object3D();\n  readonly isSpotLight: boolean = true;\n  constructor(color: number, intensity?: number, distance: number = 0, angle: number = Math.PI / 3, penumbra: number = 0, decay: number = 1) {\n    super(color, intensity);\n    this.type = 'SpotLight';\n    this.position.copy(Object3D.DefaultUp);\n    this.updateMatrix();\n    this.distance = distance;\n    this.angle = angle;\n    this.penumbra = penumbra;\n    this.decay = decay;  // for physically correct lights, should be 2.\n    this.shadow = new SpotLightShadow();\n  }\n  get power (): number {\n    // intensity = power per solid angle.\n    // ref: equation (17) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf\n    return this.intensity * Math.PI;\n  }\n  set power (value: number) {\n    // intensity = power per solid angle.\n    // ref: equation (17) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf\n    this.intensity = value / Math.PI;\n  }\n  copy(source: this): this {\n    super.copy(source);\n    this.distance = source.distance;\n    this.angle = source.angle;\n    this.penumbra = source.penumbra;\n    this.decay = source.decay;\n    this.target = source.target.clone();\n    this.shadow = source.shadow.clone();\n    return this;\n  }\n}\n","import { Material, MaterialParameters } from \"./Material\";\nimport { Vector2 } from \"../math/Vector2\";\nimport { Color } from \"../math/Color\";\nimport { Texture } from \"../textures/Texture\";\n/**\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *  map: new THREE.Texture(<Image>),\n *\n *  uvOffset: new THREE.Vector2(),\n *  uvScale: new THREE.Vector2()\n * }\n */\nexport interface SpriteMaterialParameters extends MaterialParameters {\n  color?: number;\n  opacity?: number;\n  map?: Texture;\n\n  uvOffset?: Vector2;\n  uvScale?: Vector2;\n}\nexport class SpriteMaterial extends Material {\n  rotation: number;\n  readonly isSpriteMaterial: boolean = true;\n  constructor(parameters?: SpriteMaterialParameters) {\n    super();\n    this.type = 'SpriteMaterial';\n    this.color = new Color(0xffffff);\n    this.map = null;\n    this.rotation = 0;\n    this.fog = false;\n    this.lights = false;\n    this.setValues(parameters);\n  }\n  copy(source: this): this {\n    super.copy(source);\n    this.color.copy(source.color);\n    this.map = source.map;\n    this.rotation = source.rotation;\n    return this;\n  };\n}\n","import { Vector3 } from \"../math/Vector3\";\nimport { Object3D } from \"../core/Object3D\";\nimport { Material } from \"../materials/Material\";\nimport { SpriteMaterial } from \"../materials/SpriteMaterial\";\nimport { Raycaster, Intersect } from \"../core/Raycaster\";\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n */\nexport class Sprite extends Object3D {\n  readonly isSprite: boolean = true;\n  constructor(material: Material = new SpriteMaterial()) {\n    super();\n    this.type = 'Sprite';\n    this.material = material;\n  }\n  private static raycast_matrixPosition = new Vector3();\n  raycast(raycaster: Raycaster, intersects: Intersect[]): Intersect[] {\n    let matrixPosition = Sprite.raycast_matrixPosition;\n    //return function raycast(raycaster, intersects) {\n      matrixPosition.setFromMatrixPosition(this.matrixWorld);\n      let distanceSq = raycaster.ray.distanceSqToPoint(matrixPosition);\n      let guessSizeSq = this.scale.x * this.scale.y / 4;\n      if (distanceSq > guessSizeSq) {\n        return intersects;\n      }\n      intersects.push({\n        distance: Math.sqrt(distanceSq),\n        point: this.position,\n        index: 0,\n        face: null,\n        faceIndex: 0,\n        uv: null,\n        object: this\n      });\n      return intersects;\n    //};\n  }\n  clone(): this {\n    return new (this.constructor as any)(this.material).copy(this);\n  }\n}\n","import { Object3D } from \"../core/Object3D\";\nimport { BlendingMode } from \"../constants\";\nimport { Color } from \"../math/Color\";\nimport { Vector3 } from \"../math/Vector3\";\nimport { Texture } from \"../textures/Texture\";\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n */\nexport class LensFlare extends Object3D {\n  lensFlares: any[] = [];\n  positionScreen: Vector3 = new Vector3();\n  customUpdateCallback: (flare: any) => void;\n  readonly isLensFlare: boolean = true;\n  constructor(texture: Texture, size: number, distance: number, blending: BlendingMode, color: Color) {\n    super();\n    if (texture !== undefined) {\n      this.addFlare(texture, size, distance, blending, color);\n    }\n  }\n  copy(source: this): this {\n    super.copy(source);\n    this.positionScreen.copy(source.positionScreen);\n    this.customUpdateCallback = source.customUpdateCallback;\n    for (let i = 0, l = source.lensFlares.length; i < l; i ++) {\n      this.lensFlares.push(source.lensFlares[i]);\n    }\n    return this;\n  }\n  add(object: Object3D): Object3D {\n    if (object instanceof Texture) {\n      console.warn(\"LensFlare:add is now LensFlare:addFlare\");\n      return this.addFlare.call(this, arguments);\n    }\n    return super.add(object);\n  }\n  addFlare(texture: Texture, size: number = -1, distance: number = 0, blending: BlendingMode = BlendingMode.Normal, color: Color = new Color(0xffffff), opacity: number = 1): void {\n    distance = Math.min(distance, Math.max(0, distance));\n    this.lensFlares.push({\n      texture: texture,  // THREE.Texture\n      size: size,     // size in pixels (-1 = use texture.width)\n      distance: distance,   // distance (0-1) from light source (0=at light source)\n      x: 0, y: 0, z: 0,  // screen position (-1 => 1) z = 0 is in front z = 1 is back\n      scale: 1,     // scale\n      rotation: 0,     // rotation\n      opacity: opacity,  // opacity\n      color: color,    // color\n      blending: blending  // blending\n    });\n  }\n  /*\n   * Update lens flares update positions on all flares based on the screen position\n   * Set myLensFlare.customUpdateCallback to alter the flares in your project specific way.\n   */\n  updateLensFlares(): void {\n    let f, fl = this.lensFlares.length;\n    let flare;\n    let vecX = - this.positionScreen.x * 2;\n    let vecY = - this.positionScreen.y * 2;\n    for (f = 0; f < fl; f ++) {\n      flare = this.lensFlares[f];\n      flare.x = this.positionScreen.x + vecX * flare.distance;\n      flare.y = this.positionScreen.y + vecY * flare.distance;\n      flare.wantedRotation = flare.x * Math.PI * 0.25;\n      flare.rotation += (flare.wantedRotation - flare.rotation) * 0.25;\n    }\n  }\n}\n","import { Object3D } from \"../../core/Object3D\";\nimport { Material } from \"../../materials/Material\";\n/**\n * @author alteredq / http://alteredqualia.com/\n */\nexport class ImmediateRenderObject extends Object3D {\n  readonly isImmediateRenderObject: boolean = true;\n  constructor(material: Material) {\n    super();\n    this.material = material;\n  }\n  render(renderCallback: any) {\n  }\n}\n","import { Line } from \"./Line\";\nimport { Geometry } from \"../core/Geometry\";\nimport { BufferGeometry } from \"../core/BufferGeometry\";\nimport { Material } from \"../materials/Material\";\n/**\n * @author mrdoob / http://mrdoob.com/\n */\nexport class LineSegments extends Line {\n  readonly isLineSegments: boolean = true;\n  constructor(geometry: Geometry | BufferGeometry, material: Material) {\n    super(geometry, material);\n    this.type = 'LineSegments';\n    this._step = 2; // Line:raycast step\n  }\n}\n","import { BufferGeometry } from \"./BufferGeometry\";\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\nexport class InstancedBufferGeometry extends BufferGeometry {\n  type: string = 'InstancedBufferGeometry';\n  maxInstancedCount: number = undefined;\n  readonly isInstancedBufferGeometry: boolean = true;\n  constructor() {\n    super();\n  }\n  addGroup(start: number, count: number, materialIndex: number): void {\n    this.groups.push({\n      start: start,\n      count: count,\n      materialIndex: materialIndex\n    });\n  }\n  copy(source: this): this {\n    const index = source.index;\n    if (index !== null) {\n      this.setIndex(index.clone());\n    }\n    const attributes = source.attributes;\n    for (let name in attributes) {\n      const attribute = attributes[name];\n      if (attribute === undefined) continue;\n      this.addAttribute(name, attribute.clone());\n    }\n    const groups = source.groups;\n    for (let i = 0, l = groups.length; i < l; i ++) {\n      const group = groups[i];\n      this.addGroup(group.start, group.count, group.materialIndex);\n    }\n    return this;\n  }\n}\n","import { BufferAttribute } from \"./BufferAttribute\";\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\nexport class InstancedBufferAttribute extends BufferAttribute {\n  meshPerAttribute: number;\n  readonly isInstancedBufferAttribute: boolean = true;\n  constructor(array: any, itemSize: number, meshPerAttribute: number = 1) {\n    super(array, itemSize);\n    this.meshPerAttribute = meshPerAttribute;\n  }\n  copy(source: this): this {\n    super.copy(source);\n    this.meshPerAttribute = source.meshPerAttribute;\n    return this;\n  }\n}\n","import { _Math } from \"../math/Math\";\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\nexport class InterleavedBuffer {\n  uuid = _Math.generateUUID();\n  array: any;\n  stride: number;\n  count: number;\n  dynamic: boolean;\n  updateRange: any;\n  version: number;\n  readonly isInterleavedBuffer: boolean = true;\n  constructor(array?: any, stride?: number) {\n    this.array = array;\n    this.stride = stride;\n    this.count = array !== undefined ? array.length / stride : 0;\n    this.dynamic = false;\n    this.updateRange = { offset: 0, count: - 1 };\n    this.version = 0;\n  }\n  set needsUpdate(value: boolean) {\n    if (value === true) this.version ++;\n  }\n  setArray(array) {\n    if (Array.isArray(array)) {\n      throw new TypeError('THREE.BufferAttribute: array should be a Typed Array.');\n    }\n    this.count = array !== undefined ? array.length / this.stride : 0;\n    this.array = array;\n  }\n  setDynamic(value: boolean): InterleavedBuffer {\n    this.dynamic = value;\n    return this;\n  }\n  copy(source: this): this {\n    this.array = new (source.array.constructor as any)(source.array);\n    this.count = source.count;\n    this.stride = source.stride;\n    this.dynamic = source.dynamic;\n    return this;\n  }\n  copyAt(index1: number, attribute: any, index2: number): InterleavedBuffer {\n    index1 *= this.stride;\n    index2 *= attribute.stride;\n    for (let i = 0, l = this.stride; i < l; i ++) {\n      this.array[index1 + i] = attribute.array[index2 + i];\n    }\n    return this;\n  }\n  set(value: number, offset: number = 0): InterleavedBuffer {\n    this.array.set(value, offset);\n    return this;\n  }\n  clone(): this {\n    return new (this.constructor as any)().copy(this);\n  }\n}\n","import { InterleavedBuffer } from \"./InterleavedBuffer\";\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\nexport class InstancedInterleavedBuffer extends InterleavedBuffer {\n  meshPerAttribute: number;\n  readonly isInstancedInterleavedBuffer: boolean = true;\n  constructor(array: any, stride: number, meshPerAttribute: number = 1) {\n    super(array, stride);\n    this.meshPerAttribute = meshPerAttribute;\n  }\n  copy(source: this): this {\n    super.copy(source);\n    this.meshPerAttribute = source.meshPerAttribute;\n    return this;\n  }\n}\n","/**\n * @author supereggbert / http://www.paulbrunt.co.uk/\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author szimek / https://github.com/szimek/\n * @author tschw\n */\nimport { REVISION, BlendingFactor, BlendingEquation, TextureFormat, TextureType, TextureFilter, TextureWrapping, FrontFaceDirection, SideMode, DrawMode, ColorsMode, ShadingMode, ToneMapping } from \"../constants\";\nimport { BlendingMode, CullFace } from \"../constants\";\nimport { Matrix4 } from \"../math/Matrix4\";\nimport { Plane } from \"../math/Plane\";\nimport { WebGLUniforms } from \"./webgl/WebGLUniforms\";\nimport { UniformsUtils } from \"./shaders/UniformsUtils\";\nimport { ShaderLib } from \"./shaders/ShaderLib\";\nimport { LensFlarePlugin } from \"./webgl/plugins/LensFlarePlugin\";\nimport { SpritePlugin } from \"./webgl/plugins/SpritePlugin\";\nimport { WebGLShadowMap } from \"./webgl/WebGLShadowMap\";\nimport { ShaderMaterial } from \"../materials/ShaderMaterial\";\nimport { Mesh } from \"../objects/Mesh\";\nimport { BoxBufferGeometry } from \"../geometries/BoxBufferGeometry\";\nimport { PlaneBufferGeometry } from \"../geometries/PlaneBufferGeometry\";\nimport { MeshBasicMaterial } from \"../materials/MeshBasicMaterial\";\nimport { MeshPhongMaterial } from \"../materials/MeshPhongMaterial\";\nimport { MeshStandardMaterial } from \"../materials/MeshStandardMaterial\";\nimport { MeshDepthMaterial } from \"../materials/MeshDepthMaterial\";\nimport { MeshLambertMaterial } from \"../materials/MeshLambertMaterial\";\nimport { MeshPhysicalMaterial } from \"../materials/MeshPhysicalMaterial\";\nimport { MeshNormalMaterial } from \"../materials/MeshNormalMaterial\";\nimport { RawShaderMaterial } from \"../materials/RawShaderMaterial\";\nimport { PerspectiveCamera } from \"../cameras/PerspectiveCamera\";\nimport { LineBasicMaterial } from \"../materials/LineBasicMaterial\";\nimport { LineDashedMaterial } from \"../materials/LineDashedMaterial\";\nimport { PointsMaterial } from \"../materials/PointsMaterial\";\nimport { OrthographicCamera } from \"../cameras/OrthographicCamera\";\nimport { WebGLIndexedBufferRenderer } from \"./webgl/WebGLIndexedBufferRenderer\";\nimport { WebGLBufferRenderer } from \"./webgl/WebGLBufferRenderer\";\nimport { WebGLLights } from \"./webgl/WebGLLights\";\nimport { WebGLProgram } from \"./webgl/WebGLProgram\";\nimport { WebGLPrograms } from \"./webgl/WebGLPrograms\";\nimport { WebGLObjects } from \"./webgl/WebGLObjects\";\nimport { WebGLTextures } from \"./webgl/WebGLTextures\";\nimport { WebGLProperties } from \"./webgl/WebGLProperties\";\nimport { WebGLState } from \"./webgl/WebGLState\";\nimport { WebGLCapabilities } from \"./webgl/WebGLCapabilities\";\nimport { BufferGeometry, BufferGeometryGroup } from \"../core/BufferGeometry\";\nimport { WebGLExtensions } from \"./webgl/WebGLExtensions\";\nimport { Vector3 } from \"../math/Vector3\";\nimport { Sphere } from \"../math/Sphere\";\nimport { WebGLClipping } from \"./webgl/WebGLClipping\";\nimport { Frustum } from \"../math/Frustum\";\nimport { Vector4 } from \"../math/Vector4\";\nimport { Color } from \"../math/Color\";\nimport { Object3D } from \"../core/Object3D\";\nimport { Camera } from \"../cameras/Camera\";\nimport { Light } from \"../lights/Light\";\nimport { AmbientLight } from \"../lights/AmbientLight\";\nimport { DirectionalLight } from \"../lights/DirectionalLight\";\nimport { HemisphereLight } from \"../lights/HemisphereLight\";\nimport { PointLight } from \"../lights/PointLight\";\nimport { SpotLight } from \"../lights/SpotLight\";\nimport { Sprite } from \"../objects/Sprite\";\nimport { LensFlare } from \"../objects/LensFlare\";\nimport { ImmediateRenderObject } from \"../extras/objects/ImmediateRenderObject\";\nimport { SkinnedMesh } from \"../objects/SkinnedMesh\";\nimport { Line } from \"../objects/Line\";\nimport { LineSegments } from \"../objects/LineSegments\";\nimport { Points } from \"../objects/Points\";\nimport { Material } from \"../materials/Material\";\nimport { MultiMaterial } from \"../materials/MultiMaterial\";\nimport { WebGLRenderTarget } from \"./WebGLRenderTarget\";\nimport { WebGLRenderTargetCube } from \"./WebGLRenderTargetCube\";\nimport { Scene } from \"../scenes/Scene\";\nimport { Fog } from \"../scenes/Fog\";\nimport { FogExp2 } from \"../scenes/FogExp2\";\nimport { Texture } from \"../textures/Texture\";\nimport { CubeTexture } from \"../textures/CubeTexture\";\nimport { InstancedBufferGeometry } from \"../core/InstancedBufferGeometry\";\nimport { InstancedBufferAttribute } from \"../core/InstancedBufferAttribute\";\nimport { InterleavedBufferAttribute } from \"../core/InterleavedBufferAttribute\";\nimport { InstancedInterleavedBuffer } from \"../core/InstancedInterleavedBuffer\";\ninterface RenderItem {\n  id: number;\n  object: Object3D;\n  geometry: BufferGeometry;\n  material: Material;\n  z: number;\n  group: BufferGeometryGroup;\n}\nexport interface WebGLRendererParameters {\n  canvas?: HTMLCanvasElement;\n  context?: WebGLRenderingContext;\n  alpha?: boolean;\n  depth?: boolean;\n  stencil?: boolean;\n  antialias?: boolean;\n  premultipliedAlpha?: boolean;\n  preserveDrawingBuffer?: boolean;\n  precision?: string;\n  logarithmicDepthBuffer?: boolean;\n}\nexport class WebGLRenderer {\n  _canvas: HTMLCanvasElement;\n  _context: WebGLRenderingContext;\n  _alpha: boolean;\n  _depth: boolean;\n  _stencil: boolean;\n  _antialias: boolean;\n  _premultipliedAlpha: boolean;\n  _preserveDrawingBuffer: boolean;\n  lights: Light[] = [];\n  opaqueObjects: RenderItem[] = [];\n  opaqueObjectsLastIndex: number = - 1;\n  transparentObjects: RenderItem[] = [];\n  transparentObjectsLastIndex: number = - 1;\n  morphInfluences = new Float32Array(8);\n  sprites: Sprite[] = [];\n  lensFlares: LensFlare[] = [];\n  // public properties\n  domElement: HTMLCanvasElement; // = this._canvas;\n  context: WebGLRenderingContext = null;\n  // clearing\n  autoClear: boolean = true;\n  autoClearColor: boolean = true;\n  autoClearDepth: boolean = true;\n  autoClearStencil: boolean = true;\n  // scene graph\n  sortObjects: boolean = true;\n  // user-defined clipping\n  clippingPlanes: Plane[] = [];\n  localClippingEnabled: boolean = false;\n  // physically based shading\n  gammaFactor: number = 2.0;  // for backwards compatibility\n  gammaInput: boolean = false;\n  gammaOutput: boolean = false;\n  // physical lights\n  physicallyCorrectLights: boolean = false;\n  // tone mapping\n  toneMapping: ToneMapping = ToneMapping.Linear;\n  toneMappingExposure: number = 1.0;\n  toneMappingWhitePoint: number = 1.0;\n  // morphs\n  maxMorphTargets: number = 8;\n  maxMorphNormals: number = 4;\n  // internal state cache\n  _currentProgram: number = null;\n  _currentRenderTarget: WebGLRenderTarget = null;\n  _currentFramebuffer: WebGLFramebuffer = null;\n  _currentMaterialId: number = - 1;\n  _currentGeometryProgram: string = '';\n  _currentCamera: Camera = null;\n  _currentScissor: Vector4 = new Vector4();\n  _currentScissorTest: boolean = null;\n  _currentViewport: Vector4 = new Vector4();\n  //\n  _usedTextureUnits: number = 0;\n  //\n  _clearColor: Color = new Color(0x000000);\n  _clearAlpha: number = 0;\n  _width: number; // = this._canvas.width;\n  _height: number; // = this._canvas.height;\n  _pixelRatio: number = 1;\n  _scissor: Vector4; // = new Vector4(0, 0, this._width, this._height);\n  _scissorTest: boolean = false;\n  _viewport: Vector4; // = new Vector4(0, 0, this._width, this._height);\n  // frustum\n  _frustum: Frustum = new Frustum();\n  // clipping\n  _clipping: WebGLClipping = new WebGLClipping();\n  _clippingEnabled: boolean = false;\n  _localClippingEnabled: boolean = false;\n  _sphere: Sphere = new Sphere();\n  // camera matrices cache\n  _projScreenMatrix: Matrix4 = new Matrix4();\n  _vector3: Vector3 = new Vector3();\n  // light arrays cache\n  _lights = {\n    hash: '',\n    ambient: [0, 0, 0],\n    directional: [],\n    directionalShadowMap: [],\n    directionalShadowMatrix: [],\n    spot: [],\n    spotShadowMap: [],\n    spotShadowMatrix: [],\n    point: [],\n    pointShadowMap: [],\n    pointShadowMatrix: [],\n    hemi: [],\n    shadows: []\n  };\n  // info\n  info = {\n    render: {\n      calls: 0,\n      vertices: 0,\n      faces: 0,\n      points: 0\n    },\n    memory: {\n      geometries: 0,\n      textures: 0\n    },\n    programs: null\n  };\n  _infoRender = this.info.render;\n  _gl: WebGLRenderingContext;\n  extensions: WebGLExtensions;\n  capabilities: WebGLCapabilities;\n  state: WebGLState;\n  properties: WebGLProperties;\n  textures: WebGLTextures;\n  objects: WebGLObjects;\n  programCache: WebGLPrograms;\n  lightCache: WebGLLights;\n  bufferRenderer: WebGLBufferRenderer;\n  indexedBufferRenderer: WebGLIndexedBufferRenderer;\n  //\n  backgroundCamera: OrthographicCamera;\n  backgroundCamera2: PerspectiveCamera;\n  backgroundPlaneMesh: Mesh;\n  backgroundBoxShader: any;\n  backgroundBoxMesh: Mesh;\n  // shadow map\n  shadowMap: WebGLShadowMap;\n  // Plugins\n  spritePlugin: SpritePlugin;\n  lensFlarePlugin: LensFlarePlugin;\n  constructor(parameters?: WebGLRendererParameters) {\n    console.log('THREE.WebGLRenderer', REVISION);\n    parameters = parameters || {};\n    this._canvas = parameters.canvas !== undefined ? parameters.canvas : <HTMLCanvasElement> document.createElementNS('http://www.w3.org/1999/xhtml', 'canvas');\n    this._context = parameters.context !== undefined ? parameters.context : null;\n    this._alpha = parameters.alpha !== undefined ? parameters.alpha : false,\n    this._depth = parameters.depth !== undefined ? parameters.depth : true,\n    this._stencil = parameters.stencil !== undefined ? parameters.stencil : true,\n    this._antialias = parameters.antialias !== undefined ? parameters.antialias : false,\n    this._premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\n    this._preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false;\n    this.domElement = this._canvas;\n    this._width = this._canvas.width;\n    this._height = this._canvas.height;\n    this._scissor = new Vector4(0, 0, this._width, this._height);\n    this._viewport = new Vector4(0, 0, this._width, this._height);\n    // initialize\n    ///let _gl;\n    try {\n      const attributes = {\n        alpha: this._alpha,\n        depth: this._depth,\n        stencil: this._stencil,\n        antialias: this._antialias,\n        premultipliedAlpha: this._premultipliedAlpha,\n        preserveDrawingBuffer: this._preserveDrawingBuffer\n      };\n      this._gl = <WebGLRenderingContext>(this._context || this._canvas.getContext('webgl', attributes) || this._canvas.getContext('experimental-webgl', attributes));\n      if (this._gl === null) {\n        if (this._canvas.getContext('webgl') !== null) {\n          throw 'Error creating WebGL context with your selected attributes.';\n        } else {\n          throw 'Error creating WebGL context.';\n        }\n      }\n      // Some experimental-webgl implementations do not have getShaderPrecisionFormat\n      if (this._gl.getShaderPrecisionFormat === undefined) {\n        this._gl.getShaderPrecisionFormat = function () {\n          return { 'rangeMin': 1, 'rangeMax': 1, 'precision': 1 };\n        };\n      }\n      this._canvas.addEventListener('webglcontextlost', this.onContextLost.bind(this), false);\n    } catch (error) {\n      console.error('THREE.WebGLRenderer: ' + error);\n    }\n    this.extensions = new WebGLExtensions(this._gl);\n    this.extensions.get('WEBGL_depth_texture');\n    this.extensions.get('OES_texture_float');\n    this.extensions.get('OES_texture_float_linear');\n    this.extensions.get('OES_texture_half_float');\n    this.extensions.get('OES_texture_half_float_linear');\n    this.extensions.get('OES_standard_derivatives');\n    this.extensions.get('ANGLE_instanced_arrays');\n    if (this.extensions.get('OES_element_index_uint')) {\n      BufferGeometry.MaxIndex = 4294967296;\n    }\n    this.capabilities = new WebGLCapabilities(this._gl, this.extensions, parameters);\n    this.state = new WebGLState(this._gl, this.extensions, this.paramThreeToGL.bind(this));\n    this.properties = new WebGLProperties();\n    this.textures = new WebGLTextures(this._gl, this.extensions, this.state, this.properties, this.capabilities, this.paramThreeToGL.bind(this), this.info);\n    this.objects = new WebGLObjects(this._gl, this.properties, this.info);\n    this.programCache = new WebGLPrograms(this, this.capabilities);\n    this.lightCache = new WebGLLights();\n    this.info.programs = this.programCache.programs;\n    this.bufferRenderer = new WebGLBufferRenderer(this._gl, this.extensions, this._infoRender);\n    this.indexedBufferRenderer = new WebGLIndexedBufferRenderer(this._gl, this.extensions, this._infoRender);\n    //\n    this.backgroundCamera = new OrthographicCamera(- 1, 1, 1, - 1, 0, 1);\n    this.backgroundCamera2 = new PerspectiveCamera();\n    this.backgroundPlaneMesh = new Mesh(\n      new PlaneBufferGeometry(2, 2),\n      new MeshBasicMaterial({ depthTest: false, depthWrite: false, fog: false })\n    );\n    this.backgroundBoxShader = ShaderLib['cube'];\n    this.backgroundBoxMesh = new Mesh(\n      new BoxBufferGeometry(5, 5, 5),\n      new ShaderMaterial({\n        uniforms: this.backgroundBoxShader.uniforms,\n        vertexShader: this.backgroundBoxShader.vertexShader,\n        fragmentShader: this.backgroundBoxShader.fragmentShader,\n        side: SideMode.Back,\n        depthTest: false,\n        depthWrite: false,\n        fog: false\n      })\n    );\n    this.setDefaultGLState();\n    this.context = this._gl;\n    // shadow map\n    this.shadowMap = new WebGLShadowMap(this, this._lights, this.objects, this.capabilities);\n    // Plugins\n    this.spritePlugin = new SpritePlugin(this, this.sprites);\n    this.lensFlarePlugin = new LensFlarePlugin(this, this.lensFlares);\n  }\n  getTargetPixelRatio(): number {\n    return this._currentRenderTarget === null ? this._pixelRatio : 1;\n  }\n  glClearColor(r: number, g: number, b: number, a: number): void {\n    if (this._premultipliedAlpha === true) {\n      r *= a; g *= a; b *= a;\n    }\n    this.state.clearColor(r, g, b, a);\n  }\n  setDefaultGLState(): void {\n    this.state.init();\n    this.state.scissor(this._currentScissor.copy(this._scissor).multiplyScalar(this._pixelRatio));\n    this.state.viewport(this._currentViewport.copy(this._viewport).multiplyScalar(this._pixelRatio));\n    this.glClearColor(this._clearColor.r, this._clearColor.g, this._clearColor.b, this._clearAlpha);\n  }\n  resetGLState(): void {\n    this._currentProgram = null;\n    this._currentCamera = null;\n    this._currentGeometryProgram = '';\n    this._currentMaterialId = - 1;\n    this.state.reset();\n  }\n  // API\n  getContext(): WebGLRenderingContext {\n    return this._gl;\n  }\n  getContextAttributes(): WebGLContextAttributes {\n    return this._gl.getContextAttributes();\n  }\n  forceContextLoss(): void {\n    this.extensions.get('WEBGL_lose_context').loseContext();\n  }\n  getMaxAnisotropy(): number {\n    return this.capabilities.getMaxAnisotropy();\n  }\n  getPrecision(): string {\n    return this.capabilities.precision;\n  }\n  getPixelRatio(): number {\n    return this._pixelRatio;\n  }\n  setPixelRatio(value: number): void {\n    if (value === undefined) return;\n    this._pixelRatio = value;\n    this.setSize(this._viewport.z, this._viewport.w, false);\n  }\n  getSize(): { width: number, height: number } {\n    return {\n      width: this._width,\n      height: this._height\n    };\n  }\n  setSize(width: number, height: number, updateStyle?: boolean): void {\n    this._width = width;\n    this._height = height;\n    this._canvas.width = width * this._pixelRatio;\n    this._canvas.height = height * this._pixelRatio;\n    if (updateStyle !== false) {\n      this._canvas.style.width = width + 'px';\n      this._canvas.style.height = height + 'px';\n    }\n    this.setViewport(0, 0, width, height);\n  }\n  setViewport(x: number, y: number, width: number, height: number): void {\n    this.state.viewport(this._viewport.set(x, y, width, height));\n  }\n  setScissor(x: number, y: number, width: number, height: number): void {\n    this.state.scissor(this._scissor.set(x, y, width, height));\n  }\n  setScissorTest(test: boolean): void {\n    this.state.setScissorTest(this._scissorTest = test);\n  }\n  // Clearing\n  getClearColor(): Color {\n    return this._clearColor;\n  }\n  setClearColor(color: Color | number | string, alpha: number = 1): void {\n    this._clearColor.set(color);\n    this._clearAlpha = alpha;\n    this.glClearColor(this._clearColor.r, this._clearColor.g, this._clearColor.b, this._clearAlpha);\n  }\n  getClearAlpha(): number {\n    return this._clearAlpha;\n  }\n  setClearAlpha(alpha: number): void {\n    this._clearAlpha = alpha;\n    this.glClearColor(this._clearColor.r, this._clearColor.g, this._clearColor.b, this._clearAlpha);\n  }\n  clear(color: boolean, depth: boolean, stencil: boolean): void {\n    let bits = 0;\n    if (color === undefined || color) bits |= this._gl.COLOR_BUFFER_BIT;\n    if (depth === undefined || depth) bits |= this._gl.DEPTH_BUFFER_BIT;\n    if (stencil === undefined || stencil) bits |= this._gl.STENCIL_BUFFER_BIT;\n    this._gl.clear(bits);\n  }\n  clearColor(): void {\n    this.clear(true, false, false);\n  }\n  clearDepth(): void {\n    this.clear(false, true, false);\n  }\n  clearStencil(): void {\n    this.clear(false, false, true);\n  }\n  clearTarget(renderTarget: WebGLRenderTarget, color: boolean, depth: boolean, stencil: boolean): void {\n    this.setRenderTarget(renderTarget);\n    this.clear(color, depth, stencil);\n  }\n  // Reset\n  ///this.resetGLState = resetGLState;\n  dispose(): void {\n    this.transparentObjects = [];\n    this.transparentObjectsLastIndex = -1;\n    this.opaqueObjects = [];\n    this.opaqueObjectsLastIndex = -1;\n    this._canvas.removeEventListener('webglcontextlost', this.onContextLost.bind(this), false);\n  }\n  // Events\n  onContextLost(event: WebGLContextEvent): void {\n    event.preventDefault();\n    this.resetGLState();\n    this.setDefaultGLState();\n    this.properties.clear();\n  }\n  onMaterialDispose(event: any): void {\n    const material = event.target;\n    material.removeEventListener('dispose', this.onMaterialDispose.bind(this));\n    this.deallocateMaterial(material);\n  }\n  // Buffer deallocation\n  deallocateMaterial(material: Material): void {\n    this.releaseMaterialProgramReference(material);\n    this.properties.delete(material);\n  }\n  releaseMaterialProgramReference(material: Material): void {\n    const programInfo = this.properties.get(material).program;\n    material.program = undefined;\n    if (programInfo !== undefined) {\n      this.programCache.releaseProgram(programInfo);\n    }\n  }\n  // Buffer rendering\n  renderBufferImmediate(object: Object3D, program: WebGLProgram, material: Material): void {\n    this.state.initAttributes();\n    const buffers = this.properties.get(object);\n    if (object.hasPositions && ! buffers.position) buffers.position = this._gl.createBuffer();\n    if (object.hasNormals && ! buffers.normal) buffers.normal = this._gl.createBuffer();\n    if (object.hasUvs && ! buffers.uv) buffers.uv = this._gl.createBuffer();\n    if (object.hasColors && ! buffers.color) buffers.color = this._gl.createBuffer();\n    const attributes = program.getAttributes();\n    if (object.hasPositions) {\n      this._gl.bindBuffer(this._gl.ARRAY_BUFFER, buffers.position);\n      this._gl.bufferData(this._gl.ARRAY_BUFFER, object.positionArray, this._gl.DYNAMIC_DRAW);\n      this.state.enableAttribute(attributes.position);\n      this._gl.vertexAttribPointer(attributes.position, 3, this._gl.FLOAT, false, 0, 0);\n    }\n    if (object.hasNormals) {\n      this._gl.bindBuffer(this._gl.ARRAY_BUFFER, buffers.normal);\n      if (! (material instanceof MeshPhongMaterial) && ! (material instanceof MeshStandardMaterial) && material.shading === ShadingMode.Flat) {\n        for (let i = 0, l = object.count * 3; i < l; i += 9) {\n          const array = object.normalArray;\n          const nx = (array[i + 0] + array[i + 3] + array[i + 6]) / 3;\n          const ny = (array[i + 1] + array[i + 4] + array[i + 7]) / 3;\n          const nz = (array[i + 2] + array[i + 5] + array[i + 8]) / 3;\n          array[i + 0] = nx;\n          array[i + 1] = ny;\n          array[i + 2] = nz;\n          array[i + 3] = nx;\n          array[i + 4] = ny;\n          array[i + 5] = nz;\n          array[i + 6] = nx;\n          array[i + 7] = ny;\n          array[i + 8] = nz;\n        }\n      }\n      this._gl.bufferData(this._gl.ARRAY_BUFFER, object.normalArray, this._gl.DYNAMIC_DRAW);\n      this.state.enableAttribute(attributes.normal);\n      this._gl.vertexAttribPointer(attributes.normal, 3, this._gl.FLOAT, false, 0, 0);\n    }\n    if (object.hasUvs && material.map) {\n      this._gl.bindBuffer(this._gl.ARRAY_BUFFER, buffers.uv);\n      this._gl.bufferData(this._gl.ARRAY_BUFFER, object.uvArray, this._gl.DYNAMIC_DRAW);\n      this.state.enableAttribute(attributes.uv);\n      this._gl.vertexAttribPointer(attributes.uv, 2, this._gl.FLOAT, false, 0, 0);\n    }\n    if (object.hasColors && material.vertexColors !== ColorsMode.None) {\n      this._gl.bindBuffer(this._gl.ARRAY_BUFFER, buffers.color);\n      this._gl.bufferData(this._gl.ARRAY_BUFFER, object.colorArray, this._gl.DYNAMIC_DRAW);\n      this.state.enableAttribute(attributes.color);\n      this._gl.vertexAttribPointer(attributes.color, 3, this._gl.FLOAT, false, 0, 0);\n    }\n    this.state.disableUnusedAttributes();\n    this._gl.drawArrays(this._gl.TRIANGLES, 0, object.count);\n    object.count = 0;\n  }\n  renderBufferDirect(camera: Camera, fog: Fog | FogExp2, geometry: BufferGeometry, material: Material, object: Object3D, group: BufferGeometryGroup): void {\n    const _gl: WebGLRenderingContext = this._gl;\n    this.setMaterial(material);\n    const program = this.setProgram(camera, fog, material, object);\n    let updateBuffers: boolean = false;\n    const geometryProgram: string = geometry.id + '_' + program.id + '_' + material.wireframe;\n    if (geometryProgram !== this._currentGeometryProgram) {\n      this._currentGeometryProgram = geometryProgram;\n      updateBuffers = true;\n    }\n    // morph targets\n    const morphTargetInfluences = object.morphTargetInfluences;\n    if (morphTargetInfluences !== undefined) {\n      const activeInfluences = [];\n      for (let i = 0, l = morphTargetInfluences.length; i < l; i ++) {\n        const influence = morphTargetInfluences[i];\n        activeInfluences.push([ influence, i ]);\n      }\n      activeInfluences.sort(WebGLRenderer.absNumericalSort);\n      if (activeInfluences.length > 8) {\n        activeInfluences.length = 8;\n      }\n      const morphAttributes = geometry.morphAttributes;\n      for (let i = 0, l = activeInfluences.length; i < l; i ++) {\n        const influence = activeInfluences[i];\n        this.morphInfluences[i] = influence[0];\n        if (influence[0] !== 0) {\n          const index = influence[1];\n          if (material.morphTargets === true && morphAttributes.position) geometry.addAttribute('morphTarget' + i, morphAttributes.position[index]);\n          if (material.morphNormals === true && morphAttributes.normal) geometry.addAttribute('morphNormal' + i, morphAttributes.normal[index]);\n        } else {\n          if (material.morphTargets === true) geometry.removeAttribute('morphTarget' + i);\n          if (material.morphNormals === true) geometry.removeAttribute('morphNormal' + i);\n        }\n      }\n      for (let i = activeInfluences.length, il = this.morphInfluences.length; i < il; i ++) {\n        this.morphInfluences[i] = 0.0;\n      }\n      program.getUniforms().setValue(\n          this._gl, 'morphTargetInfluences', this.morphInfluences);\n      updateBuffers = true;\n    }\n    //\n    let index = geometry.index;\n    const position = geometry.attributes.position;\n    let rangeFactor = 1;\n    if (material.wireframe === true) {\n      index = this.objects.getWireframeAttribute(geometry);\n      rangeFactor = 2;\n    }\n    let renderer;\n    if (index !== null) {\n      renderer = this.indexedBufferRenderer;\n      renderer.setIndex(index);\n    } else {\n      renderer = this.bufferRenderer;\n    }\n    if (updateBuffers) {\n      this.setupVertexAttributes(material, program, geometry);\n      if (index !== null) {\n        this._gl.bindBuffer(this._gl.ELEMENT_ARRAY_BUFFER, this.objects.getAttributeBuffer(index));\n      }\n    }\n    //\n    let dataCount = 0;\n    if (index !== null) {\n      dataCount = index.count;\n    } else if (position !== undefined) {\n      dataCount = position.count;\n    }\n    const rangeStart = geometry.drawRange.start * rangeFactor;\n    const rangeCount = geometry.drawRange.count * rangeFactor;\n    const groupStart = group !== null ? group.start * rangeFactor : 0;\n    const groupCount = group !== null ? group.count * rangeFactor : Infinity;\n    const drawStart = Math.max(rangeStart, groupStart);\n    const drawEnd = Math.min(dataCount, rangeStart + rangeCount, groupStart + groupCount) - 1;\n    const drawCount = Math.max(0, drawEnd - drawStart + 1);\n    if (drawCount === 0) return;\n    //\n    if (object instanceof Mesh) {\n      if (material.wireframe === true) {\n        this.state.setLineWidth(material.wireframeLinewidth * this.getTargetPixelRatio());\n        renderer.setMode(_gl.LINES);\n      } else {\n        switch (object.drawMode) {\n          case DrawMode.Triangles:\n            renderer.setMode(_gl.TRIANGLES);\n            break;\n          case DrawMode.TriangleStrip:\n            renderer.setMode(_gl.TRIANGLE_STRIP);\n            break;\n          case DrawMode.TriangleFan:\n            renderer.setMode(_gl.TRIANGLE_FAN);\n            break;\n        }\n      }\n    } else if (object instanceof Line) {\n      let lineWidth = material.linewidth;\n      if (lineWidth === undefined) lineWidth = 1; // Not using Line*Material\n      this.state.setLineWidth(lineWidth * this.getTargetPixelRatio());\n      if (object instanceof LineSegments) {\n        renderer.setMode(_gl.LINES);\n      } else {\n        renderer.setMode(_gl.LINE_STRIP);\n      }\n    } else if (object instanceof Points) {\n      renderer.setMode(_gl.POINTS);\n    }\n    if (geometry && geometry instanceof InstancedBufferGeometry) {\n      if (geometry.maxInstancedCount > 0) {\n        (renderer as WebGLIndexedBufferRenderer).renderInstances(geometry, drawStart, drawCount);\n      }\n    } else {\n      renderer.render(drawStart, drawCount);\n    }\n  }\n  setupVertexAttributes(material: Material, program: WebGLProgram, geometry: BufferGeometry, startIndex: number = 0) {\n    const _gl: WebGLRenderingContext = this._gl;\n    let extension;\n    if (geometry && geometry instanceof InstancedBufferGeometry) {\n      extension = this.extensions.get('ANGLE_instanced_arrays');\n      if (extension === null) {\n        console.error('THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.');\n        return;\n      }\n    }\n    this.state.initAttributes();\n    const geometryAttributes = geometry.attributes;\n    const programAttributes = program.getAttributes();\n    const materialDefaultAttributeValues = material.defaultAttributeValues;\n    for (let name in programAttributes) {\n      const programAttribute = programAttributes[name];\n      if (programAttribute >= 0) {\n        const geometryAttribute = geometryAttributes[name];\n        if (geometryAttribute !== undefined) {\n          let type = _gl.FLOAT;\n          const array = geometryAttribute.array;\n          const normalized = geometryAttribute.normalized;\n          if (array instanceof Float32Array) {\n            type = _gl.FLOAT;\n          } else if (array instanceof Float64Array) {\n            console.warn(\"Unsupported data buffer format: Float64Array\");\n          } else if (array instanceof Uint16Array) {\n            type = _gl.UNSIGNED_SHORT;\n          } else if (array instanceof Int16Array) {\n            type = _gl.SHORT;\n          } else if (array instanceof Uint32Array) {\n            type = _gl.UNSIGNED_INT;\n          } else if (array instanceof Int32Array) {\n            type = _gl.INT;\n          } else if (array instanceof Int8Array) {\n            type = _gl.BYTE;\n          } else if (array instanceof Uint8Array) {\n            type = _gl.UNSIGNED_BYTE;\n          }\n          const size = geometryAttribute.itemSize;\n          const buffer = this.objects.getAttributeBuffer(geometryAttribute);\n          if (geometryAttribute instanceof InterleavedBufferAttribute) {\n            const data = geometryAttribute.data;\n            const stride = data.stride;\n            const offset = geometryAttribute.offset;\n            if (data && data instanceof InstancedInterleavedBuffer) {\n              this.state.enableAttributeAndDivisor(programAttribute, data.meshPerAttribute, extension);\n              if (geometry.maxInstancedCount === undefined) {\n                geometry.maxInstancedCount = data.meshPerAttribute * data.count;\n              }\n            } else {\n              this.state.enableAttribute(programAttribute);\n            }\n            _gl.bindBuffer(_gl.ARRAY_BUFFER, buffer);\n            _gl.vertexAttribPointer(programAttribute, size, type, normalized, stride * data.array.BYTES_PER_ELEMENT, (startIndex * stride + offset) * data.array.BYTES_PER_ELEMENT);\n          } else {\n            if (geometryAttribute instanceof InstancedBufferAttribute) {\n              this.state.enableAttributeAndDivisor(programAttribute, geometryAttribute.meshPerAttribute, extension);\n              if (geometry.maxInstancedCount === undefined) {\n                geometry.maxInstancedCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n              }\n            } else {\n              this.state.enableAttribute(programAttribute);\n            }\n            _gl.bindBuffer(_gl.ARRAY_BUFFER, buffer);\n            _gl.vertexAttribPointer(programAttribute, size, type, normalized, 0, startIndex * size * geometryAttribute.array.BYTES_PER_ELEMENT);\n          }\n        } else if (materialDefaultAttributeValues !== undefined) {\n          const value = materialDefaultAttributeValues[name];\n          if (value !== undefined) {\n            switch (value.length) {\n              case 2:\n                _gl.vertexAttrib2fv(programAttribute, value);\n                break;\n              case 3:\n                _gl.vertexAttrib3fv(programAttribute, value);\n                break;\n              case 4:\n                _gl.vertexAttrib4fv(programAttribute, value);\n                break;\n              default:\n                _gl.vertexAttrib1fv(programAttribute, value);\n            }\n          }\n        }\n      }\n    }\n    this.state.disableUnusedAttributes();\n  }\n  // Sorting\n  static absNumericalSort(a: number[], b: number[]): number {\n    return Math.abs(b[0]) - Math.abs(a[0]);\n  }\n  static painterSortStable(a: RenderItem, b: RenderItem): number {\n    if (a.object.renderOrder !== b.object.renderOrder) {\n      return a.object.renderOrder - b.object.renderOrder;\n    } else if (a.material.program && b.material.program && a.material.program !== b.material.program) {\n      return a.material.program.id - b.material.program.id;\n    } else if (a.material.id !== b.material.id) {\n      return a.material.id - b.material.id;\n    } else if (a.z !== b.z) {\n      return a.z - b.z;\n    } else {\n      return a.id - b.id;\n    }\n  }\n  static reversePainterSortStable(a: RenderItem, b: RenderItem): number {\n    if (a.object.renderOrder !== b.object.renderOrder) {\n      return a.object.renderOrder - b.object.renderOrder;\n    } if (a.z !== b.z) {\n      return b.z - a.z;\n    } else {\n      return a.id - b.id;\n    }\n  }\n  // Rendering\n  render(scene: Scene, camera: Camera, renderTarget?: WebGLRenderTarget, forceClear?: boolean): void {\n    if (camera !== undefined && camera instanceof Camera !== true) {\n      console.error('THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.');\n      return;\n    }\n    // reset caching for this frame\n    this._currentGeometryProgram = '';\n    this._currentMaterialId = - 1;\n    this._currentCamera = null;\n    // update scene graph\n    if (scene.autoUpdate === true) scene.updateMatrixWorld();\n    // update camera matrices and frustum\n    if (camera.parent === null) camera.updateMatrixWorld();\n    camera.matrixWorldInverse.getInverse(camera.matrixWorld);\n    this._projScreenMatrix.multiplyMatrices(camera.projectionMatrix, camera.matrixWorldInverse);\n    this._frustum.setFromMatrix(this._projScreenMatrix);\n    this.lights.length = 0;\n    this.opaqueObjectsLastIndex = - 1;\n    this.transparentObjectsLastIndex = - 1;\n    this.sprites.length = 0;\n    this.lensFlares.length = 0;\n    this._localClippingEnabled = this.localClippingEnabled;\n    this._clippingEnabled = this._clipping.init(this.clippingPlanes, this._localClippingEnabled, camera);\n    this.projectObject(scene, camera);\n    this.opaqueObjects.length = this.opaqueObjectsLastIndex + 1;\n    this.transparentObjects.length = this.transparentObjectsLastIndex + 1;\n    if (this.sortObjects === true) {\n      this.opaqueObjects.sort(WebGLRenderer.painterSortStable);\n      this.transparentObjects.sort(WebGLRenderer.reversePainterSortStable);\n    }\n    //\n    if (this._clippingEnabled) this._clipping.beginShadows();\n    this.setupShadows(this.lights);\n    this.shadowMap.render(scene, camera);\n    this.setupLights(this.lights, camera);\n    if (this._clippingEnabled) this._clipping.endShadows();\n    //\n    this._infoRender.calls = 0;\n    this._infoRender.vertices = 0;\n    this._infoRender.faces = 0;\n    this._infoRender.points = 0;\n    if (renderTarget === undefined) {\n      renderTarget = null;\n    }\n    this.setRenderTarget(renderTarget);\n    //\n    const background = scene.background;\n    if (background === null) {\n      this.glClearColor(this._clearColor.r, this._clearColor.g, this._clearColor.b, this._clearAlpha);\n    } else if (background && background instanceof Color) {\n      this.glClearColor(background.r, background.g, background.b, 1);\n      forceClear = true;\n    }\n    if (this.autoClear || forceClear) {\n      this.clear(this.autoClearColor, this.autoClearDepth, this.autoClearStencil);\n    }\n    if (background && background instanceof CubeTexture) {\n      this.backgroundCamera2.projectionMatrix.copy(camera.projectionMatrix);\n      this.backgroundCamera2.matrixWorld.extractRotation(camera.matrixWorld);\n      this.backgroundCamera2.matrixWorldInverse.getInverse(this.backgroundCamera2.matrixWorld);\n      (this.backgroundBoxMesh.material as ShaderMaterial).uniforms[\"tCube\"].value = background;\n      this.backgroundBoxMesh.modelViewMatrix.multiplyMatrices(this.backgroundCamera2.matrixWorldInverse, this.backgroundBoxMesh.matrixWorld);\n      this.objects.update(this.backgroundBoxMesh);\n      this.renderBufferDirect(this.backgroundCamera2, null, this.backgroundBoxMesh.geometry as BufferGeometry, this.backgroundBoxMesh.material as Material, this.backgroundBoxMesh, null);\n    } else if (background && background instanceof Texture) {\n      this.backgroundPlaneMesh.material.map = background;\n      this.objects.update(this.backgroundPlaneMesh);\n      this.renderBufferDirect(this.backgroundCamera, null, this.backgroundPlaneMesh.geometry as BufferGeometry, this.backgroundPlaneMesh.material as Material, this.backgroundPlaneMesh, null);\n    }\n    //\n    if (scene.overrideMaterial) {\n      const overrideMaterial = scene.overrideMaterial;\n      this.renderObjects(this.opaqueObjects, camera, scene, overrideMaterial);\n      this.renderObjects(this.transparentObjects, camera, scene, overrideMaterial);\n    } else {\n      // opaque pass (front-to-back order)\n      this.state.setBlending(BlendingMode.None);\n      this.renderObjects(this.opaqueObjects, camera, scene);\n      // transparent pass (back-to-front order)\n      this.renderObjects(this.transparentObjects, camera, scene);\n    }\n    // custom render plugins (post pass)\n    this.spritePlugin.render(scene, camera);\n    this.lensFlarePlugin.render(scene, camera, this._currentViewport);\n    // Generate mipmap if we're using any kind of mipmap filtering\n    if (renderTarget) {\n      this.textures.updateRenderTargetMipmap(renderTarget);\n    }\n    // Ensure depth buffer writing is enabled so it can be cleared on next render\n    this.state.setDepthTest(true);\n    this.state.setDepthWrite(true);\n    this.state.setColorWrite(true);\n    // _gl.finish();\n  }\n  pushRenderItem(object: Object3D, geometry: BufferGeometry, material: Material, z: number, group: BufferGeometryGroup): void {\n    let array, index;\n    // allocate the next position in the appropriate array\n    if (material.transparent) {\n      array = this.transparentObjects;\n      index = ++ this.transparentObjectsLastIndex;\n    } else {\n      array = this.opaqueObjects;\n      index = ++ this.opaqueObjectsLastIndex;\n    }\n    // recycle existing render item or grow the array\n    let renderItem: RenderItem = array[index];\n    if (renderItem !== undefined) {\n      renderItem.id = object.id;\n      renderItem.object = object;\n      renderItem.geometry = geometry;\n      renderItem.material = material;\n      renderItem.z = this._vector3.z;\n      renderItem.group = group;\n    } else {\n      renderItem = {\n        id: object.id,\n        object: object,\n        geometry: geometry,\n        material: material,\n        z: this._vector3.z,\n        group: group\n      };\n      // assert(index === array.length);\n      array.push(renderItem);\n    }\n  }\n  // TODO Duplicated code (Frustum)\n  isObjectViewable(object: Object3D): boolean {\n    const geometry = object.geometry;\n    if (geometry.boundingSphere === null)\n      geometry.computeBoundingSphere();\n    this._sphere.copy(geometry.boundingSphere).\n      applyMatrix4(object.matrixWorld);\n    return this.isSphereViewable(this._sphere);\n  }\n  isSpriteViewable(sprite: Sprite): boolean {\n    this._sphere.center.set(0, 0, 0);\n    this._sphere.radius = 0.7071067811865476;\n    this._sphere.applyMatrix4(sprite.matrixWorld);\n    return this.isSphereViewable(this._sphere);\n  }\n  isSphereViewable(sphere: Sphere): boolean {\n    if (! this._frustum.intersectsSphere(sphere)) return false;\n    const numPlanes = this._clipping.numPlanes;\n    if (numPlanes === 0) return true;\n    const planes = this.clippingPlanes;\n    const center = sphere.center;\n    const negRad = - sphere.radius;\n    let i = 0;\n    do {\n      // out when deeper than radius in the negative halfspace\n      if (planes[i].distanceToPoint(center) < negRad) return false;\n    } while (++ i !== numPlanes);\n    return true;\n  }\n  projectObject(object: Object3D, camera: Camera): void {\n    if (object.visible === false) return;\n    const visible = (object.layers.mask & camera.layers.mask) !== 0;\n    if (visible) {\n      if (object instanceof Light) {\n        this.lights.push(object);\n      } else if (object instanceof Sprite) {\n        if (object.frustumCulled === false || this.isSpriteViewable(object) === true) {\n          this.sprites.push(object);\n        }\n      } else if (object instanceof LensFlare) {\n        this.lensFlares.push(object);\n      } else if (object instanceof ImmediateRenderObject) {\n        if (this.sortObjects === true) {\n          this._vector3.setFromMatrixPosition(object.matrixWorld);\n          this._vector3.applyProjection(this._projScreenMatrix);\n        }\n        this.pushRenderItem(object, null, object.material as Material, this._vector3.z, null);\n      } else if (object instanceof Mesh || object instanceof Line || object instanceof Points) {\n        if (object instanceof SkinnedMesh) {\n          object.skeleton.update();\n        }\n        if (object.frustumCulled === false || this.isObjectViewable(object) === true) {\n          const material = object.material;\n          if (material.visible === true) {\n            if (this.sortObjects === true) {\n              this._vector3.setFromMatrixPosition(object.matrixWorld);\n              this._vector3.applyProjection(this._projScreenMatrix);\n            }\n            const geometry: BufferGeometry = this.objects.update(object);\n            if (material instanceof MultiMaterial) {\n              const groups = geometry.groups;\n              const materials = material.materials;\n              for (let i = 0, l = groups.length; i < l; i ++) {\n                const group = groups[i];\n                const groupMaterial = materials[group.materialIndex];\n                if (!groupMaterial) continue; /// HACK\n                if (groupMaterial.visible === true) {\n                  this.pushRenderItem(object, geometry, groupMaterial, this._vector3.z, group);\n                }\n              }\n            } else {\n              this.pushRenderItem(object, geometry, material, this._vector3.z, null);\n            }\n          }\n        }\n      }\n    }\n    const children = object.children;\n    for (let i = 0, l = children.length; i < l; i ++) {\n      this.projectObject(children[i], camera);\n    }\n  }\n  renderObjects(renderList: RenderItem[], camera: Camera, scene: Scene, overrideMaterial?: Material): void {\n    for (let i = 0, l = renderList.length; i < l; i ++) {\n      const renderItem = renderList[i];\n      const object = renderItem.object;\n      const geometry = renderItem.geometry;\n      const material = overrideMaterial === undefined ? renderItem.material : overrideMaterial;\n      const group = renderItem.group;\n      object.modelViewMatrix.multiplyMatrices(camera.matrixWorldInverse, object.matrixWorld);\n      object.normalMatrix.getNormalMatrix(object.modelViewMatrix);\n      object.onBeforeRender(this, scene, camera, geometry, material, group);\n      if (object instanceof ImmediateRenderObject) {\n        this.setMaterial(material);\n        const program = this.setProgram(camera, scene.fog, material, object);\n        this._currentGeometryProgram = '';\n        const that = this;\n        object.render(function(object: Object3D): void {\n          that.renderBufferImmediate(object, program, material);\n        });\n      } else {\n        this.renderBufferDirect(camera, scene.fog, geometry, material, object, group);\n      }\n      object.onAfterRender(this, scene, camera, geometry, material, group);\n    }\n  }\n  initMaterial(material: ShaderMaterial, fog: Fog | FogExp2, object: Object3D): void {\n    const materialProperties = this.properties.get(material);\n    const parameters = this.programCache.getParameters(\n        material, this._lights, fog, this._clipping.numPlanes, this._clipping.numIntersection, object);\n    const code = this.programCache.getProgramCode(material, parameters);\n    let program = materialProperties.program;\n    let programChange = true;\n    if (program === undefined) {\n      // new material\n      material.addEventListener('dispose', this.onMaterialDispose.bind(this));\n    } else if (program.code !== code) {\n      // changed glsl or parameters\n      this.releaseMaterialProgramReference(material);\n    } else if (parameters.shaderID !== undefined) {\n      // same glsl and uniform list\n      return;\n    } else {\n      // only rebuild uniform list\n      programChange = false;\n    }\n    if (programChange) {\n      if (parameters.shaderID) {\n        const shader = ShaderLib[parameters.shaderID];\n        materialProperties.__webglShader = {\n          name: material.type,\n          uniforms: UniformsUtils.clone(shader.uniforms),\n          vertexShader: shader.vertexShader,\n          fragmentShader: shader.fragmentShader\n        };\n      } else {\n        materialProperties.__webglShader = {\n          name: material.type,\n          uniforms: material.uniforms,\n          vertexShader: material.vertexShader,\n          fragmentShader: material.fragmentShader\n        };\n      }\n      material.__webglShader = materialProperties.__webglShader;\n      program = this.programCache.acquireProgram(material, parameters, code);\n      materialProperties.program = program;\n      material.program = program;\n    }\n    const attributes = program.getAttributes();\n    if (material.morphTargets) {\n      material.numSupportedMorphTargets = 0;\n      for (let i = 0; i < this.maxMorphTargets; i ++) {\n        if (attributes['morphTarget' + i] >= 0) {\n          material.numSupportedMorphTargets ++;\n        }\n      }\n    }\n    if (material.morphNormals) {\n      material.numSupportedMorphNormals = 0;\n      for (let i = 0; i < this.maxMorphNormals; i ++) {\n        if (attributes['morphNormal' + i] >= 0) {\n          material.numSupportedMorphNormals ++;\n        }\n      }\n    }\n    const uniforms = materialProperties.__webglShader.uniforms;\n    if (! (material instanceof ShaderMaterial) &&\n         ! ((material as any) instanceof RawShaderMaterial) ||\n           material.clipping === true) {\n      materialProperties.numClippingPlanes = this._clipping.numPlanes;\n      materialProperties.numIntersection = this._clipping.numIntersection;\n      uniforms.clippingPlanes = this._clipping.uniform;\n    }\n    materialProperties.fog = fog;\n    // store the light setup it was created for\n    materialProperties.lightsHash = this._lights.hash;\n    if (material.lights) {\n      // wire up the material to this renderer's lighting state\n      uniforms.ambientLightColor.value = this._lights.ambient;\n      uniforms.directionalLights.value = this._lights.directional;\n      uniforms.spotLights.value = this._lights.spot;\n      uniforms.pointLights.value = this._lights.point;\n      uniforms.hemisphereLights.value = this._lights.hemi;\n      uniforms.directionalShadowMap.value = this._lights.directionalShadowMap;\n      uniforms.directionalShadowMatrix.value = this._lights.directionalShadowMatrix;\n      uniforms.spotShadowMap.value = this._lights.spotShadowMap;\n      uniforms.spotShadowMatrix.value = this._lights.spotShadowMatrix;\n      uniforms.pointShadowMap.value = this._lights.pointShadowMap;\n      uniforms.pointShadowMatrix.value = this._lights.pointShadowMatrix;\n    }\n    const progUniforms = materialProperties.program.getUniforms(),\n      uniformsList =\n          WebGLUniforms.seqWithValue(progUniforms.seq, uniforms);\n    materialProperties.uniformsList = uniformsList;\n  }\n  setMaterial(material: Material): void {\n    material.side === SideMode.Double\n      ? this.state.disable(this._gl.CULL_FACE)\n      : this.state.enable(this._gl.CULL_FACE);\n    this.state.setFlipSided(material.side === SideMode.Back);\n    material.transparent === true\n      ? this.state.setBlending(material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha)\n      : this.state.setBlending(BlendingMode.None);\n    this.state.setDepthFunc(material.depthFunc);\n    this.state.setDepthTest(material.depthTest);\n    this.state.setDepthWrite(material.depthWrite);\n    this.state.setColorWrite(material.colorWrite);\n    this.state.setPolygonOffset(material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits);\n  }\n  setProgram(camera: Camera, fog: Fog | FogExp2, material: Material, object: Object3D): any {\n    this._usedTextureUnits = 0;\n    const materialProperties = this.properties.get(material);\n    if (this._clippingEnabled) {\n      if (this._localClippingEnabled || camera !== this._currentCamera) {\n        const useCache =\n            camera === this._currentCamera &&\n            material.id === this._currentMaterialId;\n        // we might want to call this function with some ClippingGroup\n        // object instead of the material, once it becomes feasible\n        // (#8465, #8379)\n        this._clipping.setState(\n            material.clippingPlanes, material.clipIntersection, material.clipShadows,\n            camera, materialProperties, useCache);\n      }\n    }\n    if (material.needsUpdate === false) {\n      if (materialProperties.program === undefined) {\n        material.needsUpdate = true;\n      } else if (material.fog && materialProperties.fog !== fog) {\n        material.needsUpdate = true;\n      } else if (material.lights && materialProperties.lightsHash !== this._lights.hash) {\n        material.needsUpdate = true;\n      } else if (materialProperties.numClippingPlanes !== undefined &&\n        (materialProperties.numClippingPlanes !== this._clipping.numPlanes ||\n           materialProperties.numIntersection  !== this._clipping.numIntersection)) {\n        material.needsUpdate = true;\n      }\n    }\n    if (material.needsUpdate) {\n      this.initMaterial(material as ShaderMaterial, fog, object);\n      material.needsUpdate = false;\n    }\n    let refreshProgram = false;\n    let refreshMaterial = false;\n    let refreshLights = false;\n    const program = materialProperties.program;\n    const p_uniforms = program.getUniforms();\n    const m_uniforms = materialProperties.__webglShader.uniforms;\n    if (program.id !== this._currentProgram) {\n      this._gl.useProgram(program.program);\n      this._currentProgram = program.id;\n      refreshProgram = true;\n      refreshMaterial = true;\n      refreshLights = true;\n    }\n    if (material.id !== this._currentMaterialId) {\n      this._currentMaterialId = material.id;\n      refreshMaterial = true;\n    }\n    if (refreshProgram || camera !== this._currentCamera) {\n      p_uniforms.set(this._gl, camera, 'projectionMatrix');\n      if (this.capabilities.logarithmicDepthBuffer) {\n        p_uniforms.setValue(this._gl, 'logDepthBufFC',\n            2.0 / (Math.log(camera.far + 1.0) / Math.LN2));\n      }\n      if (camera !== this._currentCamera) {\n        this._currentCamera = camera;\n        // lighting uniforms depend on the camera so enforce an update\n        // now, in case this material supports lights - or later, when\n        // the next material that does gets activated:\n        refreshMaterial = true;    // set to true on material change\n        refreshLights = true;    // remains set until update done\n      }\n      // load material specific uniforms\n      // (shader material also gets them for the sake of genericity)\n      if (material instanceof ShaderMaterial ||\n        material instanceof MeshPhongMaterial ||\n        material instanceof MeshStandardMaterial ||\n        material.envMap) {\n        const uCamPos = p_uniforms.map.cameraPosition;\n        if (uCamPos !== undefined) {\n          uCamPos.setValue(this._gl,\n              this._vector3.setFromMatrixPosition(camera.matrixWorld));\n        }\n      }\n      if (material instanceof MeshPhongMaterial ||\n        material instanceof MeshLambertMaterial ||\n        material instanceof MeshBasicMaterial ||\n        material instanceof MeshStandardMaterial ||\n        material instanceof ShaderMaterial ||\n        material.skinning) {\n        p_uniforms.setValue(this._gl, 'viewMatrix', camera.matrixWorldInverse);\n      }\n      p_uniforms.set(this._gl, this, 'toneMappingExposure');\n      p_uniforms.set(this._gl, this, 'toneMappingWhitePoint');\n    }\n    // skinning uniforms must be set even if material didn't change\n    // auto-setting of texture unit for bone texture must go before other textures\n    // not sure why, but otherwise weird things happen\n    if (material.skinning) {\n      p_uniforms.setOptional(this._gl, object, 'bindMatrix');\n      p_uniforms.setOptional(this._gl, object, 'bindMatrixInverse');\n      const skeleton = object.skeleton;\n      if (skeleton) {\n        if (this.capabilities.floatVertexTextures && skeleton.useVertexTexture) {\n          p_uniforms.set(this._gl, skeleton, 'boneTexture');\n          p_uniforms.set(this._gl, skeleton, 'boneTextureWidth');\n          p_uniforms.set(this._gl, skeleton, 'boneTextureHeight');\n        } else {\n          p_uniforms.setOptional(this._gl, skeleton, 'boneMatrices');\n        }\n      }\n    }\n    if (refreshMaterial) {\n      if (material.lights) {\n        // the current material requires lighting info\n        // note: all lighting uniforms are always set correctly\n        // they simply reference the renderer's state for their\n        // values\n        //\n        // use the current material's .needsUpdate flags to set\n        // the GL state when required\n        this.markUniformsLightsNeedsUpdate(m_uniforms, refreshLights);\n      }\n      // refresh uniforms common to several materials\n      if (fog && material.fog) {\n        this.refreshUniformsFog(m_uniforms, fog);\n      }\n      if (material instanceof MeshBasicMaterial || material instanceof MeshLambertMaterial || material instanceof MeshPhongMaterial || material instanceof MeshStandardMaterial || material instanceof MeshDepthMaterial) {\n        this.refreshUniformsCommon(m_uniforms, material);\n      }\n      // refresh single material specific uniforms\n      if (material instanceof LineBasicMaterial) {\n        this.refreshUniformsLine(m_uniforms, material);\n      } else if (material instanceof LineDashedMaterial) {\n        this.refreshUniformsLine(m_uniforms, material);\n        this.refreshUniformsDash(m_uniforms, material);\n      } else if (material instanceof PointsMaterial) {\n        this.refreshUniformsPoints(m_uniforms, material);\n      } else if (material instanceof MeshLambertMaterial) {\n        this.refreshUniformsLambert(m_uniforms, material);\n      } else if (material instanceof MeshPhongMaterial) {\n        this.refreshUniformsPhong(m_uniforms, material);\n      } else if (material instanceof MeshPhysicalMaterial) {\n        this.refreshUniformsPhysical(m_uniforms, material);\n      } else if (material instanceof MeshStandardMaterial) {\n        this.refreshUniformsStandard(m_uniforms, material);\n      } else if (material instanceof MeshDepthMaterial) {\n        if (material.displacementMap) {\n          m_uniforms.displacementMap.value = material.displacementMap;\n          m_uniforms.displacementScale.value = material.displacementScale;\n          m_uniforms.displacementBias.value = material.displacementBias;\n        }\n      } else if (material instanceof MeshNormalMaterial) {\n        m_uniforms.opacity.value = material.opacity;\n      }\n      WebGLUniforms.upload(\n          this._gl, materialProperties.uniformsList, m_uniforms, this);\n    }\n    // common matrices\n    p_uniforms.set(this._gl, object, 'modelViewMatrix');\n    p_uniforms.set(this._gl, object, 'normalMatrix');\n    p_uniforms.setValue(this._gl, 'modelMatrix', object.matrixWorld);\n    return program;\n  }\n  // Uniforms (refresh uniforms objects)\n  refreshUniformsCommon(uniforms: any, material: MeshBasicMaterial | MeshLambertMaterial | MeshPhongMaterial | MeshStandardMaterial | MeshDepthMaterial): void {\n    uniforms.opacity.value = material.opacity;\n    uniforms.diffuse.value = material.color;\n    if (material.emissive) {\n      uniforms.emissive.value.copy(material.emissive).multiplyScalar((material as any).emissiveIntensity);\n    }\n    uniforms.map.value = material.map;\n    uniforms.specularMap.value = material.specularMap;\n    uniforms.alphaMap.value = material.alphaMap;\n    if ((material as any).aoMap) {\n      uniforms.aoMap.value = (material as any).aoMap;\n      uniforms.aoMapIntensity.value = (material as any).aoMapIntensity;\n    }\n    // uv repeat and offset setting priorities\n    // 1. color map\n    // 2. specular map\n    // 3. normal map\n    // 4. bump map\n    // 5. alpha map\n    // 6. emissive map\n    let uvScaleMap;\n    if (material.map) {\n      uvScaleMap = material.map;\n    } else if (material.specularMap) {\n      uvScaleMap = material.specularMap;\n    } else if (material.displacementMap) {\n      uvScaleMap = material.displacementMap;\n    } else if (material.normalMap) {\n      uvScaleMap = material.normalMap;\n    } else if (material.bumpMap) {\n      uvScaleMap = material.bumpMap;\n    } else if (material.roughnessMap) {\n      uvScaleMap = material.roughnessMap;\n    } else if (material.metalnessMap) {\n      uvScaleMap = material.metalnessMap;\n    } else if (material.alphaMap) {\n      uvScaleMap = material.alphaMap;\n    } else if (material.emissiveMap) {\n      uvScaleMap = material.emissiveMap;\n    }\n    if (uvScaleMap !== undefined) {\n      // backwards compatibility\n      if (uvScaleMap instanceof WebGLRenderTarget) {\n        uvScaleMap = uvScaleMap.texture;\n      }\n      const offset = uvScaleMap.offset;\n      const repeat = uvScaleMap.repeat;\n      uniforms.offsetRepeat.value.set(offset.x, offset.y, repeat.x, repeat.y);\n    }\n    uniforms.envMap.value = material.envMap;\n    // don't flip CubeTexture envMaps, flip everything else:\n    //  WebGLRenderTargetCube will be flipped for backwards compatibility\n    //  WebGLRenderTargetCube.texture will be flipped because it's a Texture and NOT a CubeTexture\n    // this check must be handled differently, or removed entirely, if WebGLRenderTargetCube uses a CubeTexture in the future\n    uniforms.flipEnvMap.value = (! (material.envMap && material.envMap instanceof CubeTexture)) ? 1 : - 1;\n    uniforms.reflectivity.value = material.reflectivity;\n    uniforms.refractionRatio.value = (material as any).refractionRatio;\n  }\n  refreshUniformsLine(uniforms: any, material: LineBasicMaterial | LineDashedMaterial): void {\n    uniforms.diffuse.value = material.color;\n    uniforms.opacity.value = material.opacity;\n  }\n  refreshUniformsDash(uniforms: any, material: LineDashedMaterial): void {\n    uniforms.dashSize.value = material.dashSize;\n    uniforms.totalSize.value = material.dashSize + material.gapSize;\n    uniforms.scale.value = material.scale;\n  }\n  refreshUniformsPoints(uniforms: any, material: PointsMaterial): void {\n    uniforms.diffuse.value = material.color;\n    uniforms.opacity.value = material.opacity;\n    uniforms.size.value = material.size * this._pixelRatio;\n    uniforms.scale.value = this._height * 0.5;\n    uniforms.map.value = material.map;\n    if (material.map !== null) {\n      const offset = material.map.offset;\n      const repeat = material.map.repeat;\n      uniforms.offsetRepeat.value.set(offset.x, offset.y, repeat.x, repeat.y);\n    }\n  }\n  refreshUniformsFog(uniforms: any, fog: Fog | FogExp2): void {\n    uniforms.fogColor.value = fog.color;\n    if (fog instanceof Fog) {\n      uniforms.fogNear.value = fog.near;\n      uniforms.fogFar.value = fog.far;\n    } else if (fog instanceof FogExp2) {\n      uniforms.fogDensity.value = fog.density;\n    }\n  }\n  refreshUniformsLambert(uniforms: any, material: MeshLambertMaterial): void {\n    if (material.lightMap) {\n      uniforms.lightMap.value = material.lightMap;\n      uniforms.lightMapIntensity.value = material.lightMapIntensity;\n    }\n    if (material.emissiveMap) {\n      uniforms.emissiveMap.value = material.emissiveMap;\n    }\n  }\n  refreshUniformsPhong(uniforms: any, material: MeshPhongMaterial): void {\n    uniforms.specular.value = material.specular;\n    uniforms.shininess.value = Math.max(material.shininess, 1e-4); // to prevent pow(0.0, 0.0)\n    if (material.lightMap) {\n      uniforms.lightMap.value = material.lightMap;\n      uniforms.lightMapIntensity.value = material.lightMapIntensity;\n    }\n    if (material.emissiveMap) {\n      uniforms.emissiveMap.value = material.emissiveMap;\n    }\n    if (material.bumpMap) {\n      uniforms.bumpMap.value = material.bumpMap;\n      uniforms.bumpScale.value = material.bumpScale;\n    }\n    if (material.normalMap) {\n      uniforms.normalMap.value = material.normalMap;\n      uniforms.normalScale.value.copy(material.normalScale);\n    }\n    if (material.displacementMap) {\n      uniforms.displacementMap.value = material.displacementMap;\n      uniforms.displacementScale.value = material.displacementScale;\n      uniforms.displacementBias.value = material.displacementBias;\n    }\n  }\n  refreshUniformsStandard(uniforms: any, material: MeshStandardMaterial): void {\n    uniforms.roughness.value = material.roughness;\n    uniforms.metalness.value = material.metalness;\n    if (material.roughnessMap) {\n      uniforms.roughnessMap.value = material.roughnessMap;\n    }\n    if (material.metalnessMap) {\n      uniforms.metalnessMap.value = material.metalnessMap;\n    }\n    if (material.lightMap) {\n      uniforms.lightMap.value = material.lightMap;\n      uniforms.lightMapIntensity.value = material.lightMapIntensity;\n    }\n    if (material.emissiveMap) {\n      uniforms.emissiveMap.value = material.emissiveMap;\n    }\n    if (material.bumpMap) {\n      uniforms.bumpMap.value = material.bumpMap;\n      uniforms.bumpScale.value = material.bumpScale;\n    }\n    if (material.normalMap) {\n      uniforms.normalMap.value = material.normalMap;\n      uniforms.normalScale.value.copy(material.normalScale);\n    }\n    if (material.displacementMap) {\n      uniforms.displacementMap.value = material.displacementMap;\n      uniforms.displacementScale.value = material.displacementScale;\n      uniforms.displacementBias.value = material.displacementBias;\n    }\n    if (material.envMap) {\n      //uniforms.envMap.value = material.envMap; // part of uniforms common\n      uniforms.envMapIntensity.value = material.envMapIntensity;\n    }\n  }\n  refreshUniformsPhysical(uniforms: any, material: MeshPhysicalMaterial): void {\n    uniforms.clearCoat.value = material.clearCoat;\n    uniforms.clearCoatRoughness.value = material.clearCoatRoughness;\n    this.refreshUniformsStandard(uniforms, material);\n  }\n  // If uniforms are marked as clean, they don't need to be loaded to the GPU.\n  markUniformsLightsNeedsUpdate(uniforms: any, value: boolean): void {\n    uniforms.ambientLightColor.needsUpdate = value;\n    uniforms.directionalLights.needsUpdate = value;\n    uniforms.pointLights.needsUpdate = value;\n    uniforms.spotLights.needsUpdate = value;\n    uniforms.hemisphereLights.needsUpdate = value;\n  }\n  // Lighting\n  setupShadows(lights: Light[]): void {\n    let lightShadowsLength = 0;\n    for (let i = 0, l = lights.length; i < l; i ++) {\n      const light = lights[i];\n      if (light.castShadow) {\n        this._lights.shadows[lightShadowsLength ++] = light;\n      }\n    }\n    this._lights.shadows.length = lightShadowsLength;\n  }\n  setupLights(lights: Light[], camera: Camera): void {\n    let r = 0, g = 0, b = 0;\n    const viewMatrix = camera.matrixWorldInverse;\n    let directionalLength = 0;\n    let pointLength = 0;\n    let spotLength = 0;\n    let hemiLength = 0;\n    for (let l = 0, ll = lights.length; l < ll; l ++) {\n      const light = lights[l];\n      const color = light.color;\n      const intensity = light.intensity;\n      const distance = light.distance;\n      const shadowMap = (light.shadow && light.shadow.map) ? light.shadow.map.texture : null;\n      if (light instanceof AmbientLight) {\n        r += color.r * intensity;\n        g += color.g * intensity;\n        b += color.b * intensity;\n      } else if (light instanceof DirectionalLight) {\n        const uniforms = this.lightCache.get(light);\n        uniforms.color.copy(light.color).multiplyScalar(light.intensity);\n        uniforms.direction.setFromMatrixPosition(light.matrixWorld);\n        this._vector3.setFromMatrixPosition(light.target.matrixWorld);\n        uniforms.direction.sub(this._vector3);\n        uniforms.direction.transformDirection(viewMatrix);\n        uniforms.shadow = light.castShadow;\n        if (light.castShadow) {\n          uniforms.shadowBias = light.shadow.bias;\n          uniforms.shadowRadius = light.shadow.radius;\n          uniforms.shadowMapSize = light.shadow.mapSize;\n        }\n        this._lights.directionalShadowMap[directionalLength] = shadowMap;\n        this._lights.directionalShadowMatrix[directionalLength] = light.shadow.matrix;\n        this._lights.directional[directionalLength ++] = uniforms;\n      } else if (light instanceof SpotLight) {\n        const uniforms = this.lightCache.get(light);\n        uniforms.position.setFromMatrixPosition(light.matrixWorld);\n        uniforms.position.applyMatrix4(viewMatrix);\n        uniforms.color.copy(color).multiplyScalar(intensity);\n        uniforms.distance = distance;\n        uniforms.direction.setFromMatrixPosition(light.matrixWorld);\n        this._vector3.setFromMatrixPosition(light.target.matrixWorld);\n        uniforms.direction.sub(this._vector3);\n        uniforms.direction.transformDirection(viewMatrix);\n        uniforms.coneCos = Math.cos(light.angle);\n        uniforms.penumbraCos = Math.cos(light.angle * (1 - light.penumbra));\n        uniforms.decay = (light.distance === 0) ? 0.0 : light.decay;\n        uniforms.shadow = light.castShadow;\n        if (light.castShadow) {\n          uniforms.shadowBias = light.shadow.bias;\n          uniforms.shadowRadius = light.shadow.radius;\n          uniforms.shadowMapSize = light.shadow.mapSize;\n        }\n        this._lights.spotShadowMap[spotLength] = shadowMap;\n        this._lights.spotShadowMatrix[spotLength] = light.shadow.matrix;\n        this._lights.spot[spotLength ++] = uniforms;\n      } else if (light instanceof PointLight) {\n        const uniforms = this.lightCache.get(light);\n        uniforms.position.setFromMatrixPosition(light.matrixWorld);\n        uniforms.position.applyMatrix4(viewMatrix);\n        uniforms.color.copy(light.color).multiplyScalar(light.intensity);\n        uniforms.distance = light.distance;\n        uniforms.decay = (light.distance === 0) ? 0.0 : light.decay;\n        uniforms.shadow = light.castShadow;\n        if (light.castShadow) {\n          uniforms.shadowBias = light.shadow.bias;\n          uniforms.shadowRadius = light.shadow.radius;\n          uniforms.shadowMapSize = light.shadow.mapSize;\n        }\n        this._lights.pointShadowMap[pointLength] = shadowMap;\n        if (this._lights.pointShadowMatrix[pointLength] === undefined) {\n          this._lights.pointShadowMatrix[pointLength] = new Matrix4();\n        }\n        // for point lights we set the shadow matrix to be a translation-only matrix\n        // equal to inverse of the light's position\n        this._vector3.setFromMatrixPosition(light.matrixWorld).negate();\n        this._lights.pointShadowMatrix[pointLength].identity().setPosition(this._vector3);\n        this._lights.point[pointLength ++] = uniforms;\n      } else if (light instanceof HemisphereLight) {\n        const uniforms = this.lightCache.get(light);\n        uniforms.direction.setFromMatrixPosition(light.matrixWorld);\n        uniforms.direction.transformDirection(viewMatrix);\n        uniforms.direction.normalize();\n        uniforms.skyColor.copy(light.color).multiplyScalar(intensity);\n        uniforms.groundColor.copy(light.groundColor).multiplyScalar(intensity);\n        this._lights.hemi[hemiLength ++] = uniforms;\n      }\n    }\n    this._lights.ambient[0] = r;\n    this._lights.ambient[1] = g;\n    this._lights.ambient[2] = b;\n    this._lights.directional.length = directionalLength;\n    this._lights.spot.length = spotLength;\n    this._lights.point.length = pointLength;\n    this._lights.hemi.length = hemiLength;\n    this._lights.hash = directionalLength + ',' + pointLength + ',' + spotLength + ',' + hemiLength + ',' + this._lights.shadows.length;\n  }\n  // GL state setting\n  setFaceCulling(cullFace: CullFace, frontFaceDirection: FrontFaceDirection): void {\n    this.state.setCullFace(cullFace);\n    this.state.setFlipSided(frontFaceDirection === FrontFaceDirection.CW);\n  }\n  // Textures\n  allocTextureUnit(): number {\n    const textureUnit = this._usedTextureUnits;\n    if (textureUnit >= this.capabilities.maxTextures) {\n      console.warn('WebGLRenderer: trying to use ' + textureUnit + ' texture units while this GPU supports only ' + this.capabilities.maxTextures);\n    }\n    this._usedTextureUnits += 1;\n    return textureUnit;\n  }\n  ///this.allocTextureUnit = allocTextureUnit;\n  // this.setTexture2D = setTexture2D;\n  setTexture2D(texture: Texture, slot: number): void {\n    let warned = false;\n    // backwards compatibility: peel texture.texture\n    //return function setTexture2D(texture, slot) {\n      if (texture && texture instanceof WebGLRenderTarget) {\n        if (! warned) {\n          console.warn(\"THREE.WebGLRenderer.setTexture2D: don't use render targets as textures. Use their .texture property instead.\");\n          warned = true;\n        }\n        texture = texture.texture;\n      }\n      this.textures.setTexture2D(texture, slot);\n    //};\n  }\n  setTexture(texture: Texture, slot: number): void {\n    let warned = false;\n    //return function setTexture(texture, slot) {\n      if (! warned) {\n        console.warn(\"THREE.WebGLRenderer: .setTexture is deprecated, use setTexture2D instead.\");\n        warned = true;\n      }\n      this.textures.setTexture2D(texture, slot);\n    //};\n  }\n  setTextureCube(texture: Texture, slot: number): void {\n    let warned = false;\n    //return function setTextureCube(texture, slot) {\n      // backwards compatibility: peel texture.texture\n      if (texture && texture instanceof WebGLRenderTargetCube) {\n        if (! warned) {\n          console.warn(\"THREE.WebGLRenderer.setTextureCube: don't use cube render targets as textures. Use their .texture property instead.\");\n          warned = true;\n        }\n        texture = texture.texture;\n      }\n      // currently relying on the fact that WebGLRenderTargetCube.texture is a Texture and NOT a CubeTexture\n      // TODO: unify these code paths\n      if ((texture && texture instanceof CubeTexture) ||\n         (Array.isArray(texture.image) && texture.image.length === 6)) {\n        // CompressedTexture can have Array in image :/\n        // this function alone should take care of cube textures\n        this.textures.setTextureCube(texture, slot);\n      } else {\n        // assumed: texture property of THREE.WebGLRenderTargetCube\n        this.textures.setTextureCubeDynamic(texture, slot);\n      }\n    //};\n  }\n  getCurrentRenderTarget(): WebGLRenderTarget {\n    return this._currentRenderTarget;\n  }\n  setRenderTarget(renderTarget: WebGLRenderTarget): void {\n    const _gl: WebGLRenderingContext = this._gl;\n    this._currentRenderTarget = renderTarget;\n    if (renderTarget && this.properties.get(renderTarget).__webglFramebuffer === undefined) {\n      this.textures.setupRenderTarget(renderTarget);\n    }\n    let framebuffer;\n    if (renderTarget) {\n      const renderTargetProperties = this.properties.get(renderTarget);\n      if (renderTarget && renderTarget instanceof WebGLRenderTargetCube) {\n        framebuffer = renderTargetProperties.__webglFramebuffer[renderTarget.activeCubeFace];\n      } else {\n        framebuffer = renderTargetProperties.__webglFramebuffer;\n      }\n      this._currentScissor.copy(renderTarget.scissor);\n      this._currentScissorTest = renderTarget.scissorTest;\n      this._currentViewport.copy(renderTarget.viewport);\n    } else {\n      framebuffer = null;\n      this._currentScissor.copy(this._scissor).multiplyScalar(this._pixelRatio);\n      this._currentScissorTest = this._scissorTest;\n      this._currentViewport.copy(this._viewport).multiplyScalar(this._pixelRatio);\n    }\n    if (this._currentFramebuffer !== framebuffer) {\n      _gl.bindFramebuffer(_gl.FRAMEBUFFER, framebuffer);\n      this._currentFramebuffer = framebuffer;\n    }\n    this.state.scissor(this._currentScissor);\n    this.state.setScissorTest(this._currentScissorTest);\n    this.state.viewport(this._currentViewport);\n    if (renderTarget && renderTarget instanceof WebGLRenderTargetCube) {\n      const textureProperties = this.properties.get(renderTarget.texture);\n      _gl.framebufferTexture2D(_gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + renderTarget.activeCubeFace, textureProperties.__webglTexture, renderTarget.activeMipMapLevel);\n    }\n  }\n  readRenderTargetPixels(renderTarget: WebGLRenderTarget, x: number, y: number, width: number, height: number, buffer: ArrayBufferView): void {\n    const _gl: WebGLRenderingContext = this._gl;\n    if ((renderTarget && renderTarget instanceof WebGLRenderTarget) === false) {\n      console.error('THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.');\n      return;\n    }\n    const framebuffer = this.properties.get(renderTarget).__webglFramebuffer;\n    if (framebuffer) {\n      let restore = false;\n      if (framebuffer !== this._currentFramebuffer) {\n        _gl.bindFramebuffer(_gl.FRAMEBUFFER, framebuffer);\n        restore = true;\n      }\n      try {\n        const texture = renderTarget.texture;\n        const textureFormat = texture.format;\n        const textureType = texture.type;\n        if (textureFormat !== TextureFormat.RGBA && this.paramThreeToGL(textureFormat) !== _gl.getParameter(_gl.IMPLEMENTATION_COLOR_READ_FORMAT)) {\n          console.error('THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.');\n          return;\n        }\n        if (textureType !== TextureType.UnsignedByte && this.paramThreeToGL(textureType) !== _gl.getParameter(_gl.IMPLEMENTATION_COLOR_READ_TYPE) && // IE11, Edge and Chrome Mac < 52 (#9513)\n             ! (textureType === TextureType.Float && (this.extensions.get('OES_texture_float') || this.extensions.get('WEBGL_color_buffer_float'))) && // Chrome Mac >= 52 and Firefox\n             ! (textureType === TextureType.HalfFloat && this.extensions.get('EXT_color_buffer_half_float'))) {\n          console.error('THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in TextureType.UnsignedByte or implementation defined type.');\n          return;\n        }\n        if (_gl.checkFramebufferStatus(_gl.FRAMEBUFFER) === _gl.FRAMEBUFFER_COMPLETE) {\n          // the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n          if ((x >= 0 && x <= (renderTarget.width - width)) && (y >= 0 && y <= (renderTarget.height - height))) {\n            _gl.readPixels(x, y, width, height, this.paramThreeToGL(textureFormat), this.paramThreeToGL(textureType), buffer);\n          }\n        } else {\n          console.error('THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.');\n        }\n      } finally {\n        if (restore) {\n          _gl.bindFramebuffer(_gl.FRAMEBUFFER, this._currentFramebuffer);\n        }\n      }\n    }\n  }\n  // Map three.js constants to WebGL constants\n  paramThreeToGL(p: number): number {\n    const _gl: WebGLRenderingContext = this._gl;\n    let extension;\n    if (p === TextureWrapping.Repeat) return _gl.REPEAT;\n    if (p === TextureWrapping.ClampToEdge) return _gl.CLAMP_TO_EDGE;\n    if (p === TextureWrapping.MirroredRepeat) return _gl.MIRRORED_REPEAT;\n    if (p === TextureFilter.Nearest) return _gl.NEAREST;\n    if (p === TextureFilter.NearestMipMapNearest) return _gl.NEAREST_MIPMAP_NEAREST;\n    if (p === TextureFilter.NearestMipMapLinear) return _gl.NEAREST_MIPMAP_LINEAR;\n    if (p === TextureFilter.Linear) return _gl.LINEAR;\n    if (p === TextureFilter.LinearMipMapNearest) return _gl.LINEAR_MIPMAP_NEAREST;\n    if (p === TextureFilter.LinearMipMapLinear) return _gl.LINEAR_MIPMAP_LINEAR;\n    if (p === TextureType.UnsignedByte) return _gl.UNSIGNED_BYTE;\n    if (p === TextureType.UnsignedShort4444) return _gl.UNSIGNED_SHORT_4_4_4_4;\n    if (p === TextureType.UnsignedShort5551) return _gl.UNSIGNED_SHORT_5_5_5_1;\n    if (p === TextureType.UnsignedShort565) return _gl.UNSIGNED_SHORT_5_6_5;\n    if (p === TextureType.Byte) return _gl.BYTE;\n    if (p === TextureType.Short) return _gl.SHORT;\n    if (p === TextureType.UnsignedShort) return _gl.UNSIGNED_SHORT;\n    if (p === TextureType.Int) return _gl.INT;\n    if (p === TextureType.UnsignedInt) return _gl.UNSIGNED_INT;\n    if (p === TextureType.Float) return _gl.FLOAT;\n    if (p === TextureType.HalfFloat) {\n      extension = this.extensions.get('OES_texture_half_float');\n      if (extension !== null) return extension.HALF_FLOAT_OES;\n    }\n    if (p === TextureFormat.Alpha) return _gl.ALPHA;\n    if (p === TextureFormat.RGB) return _gl.RGB;\n    if (p === TextureFormat.RGBA) return _gl.RGBA;\n    if (p === TextureFormat.Luminance) return _gl.LUMINANCE;\n    if (p === TextureFormat.LuminanceAlpha) return _gl.LUMINANCE_ALPHA;\n    if (p === TextureFormat.Depth) return _gl.DEPTH_COMPONENT;\n    if (p === TextureFormat.DepthStencil) return _gl.DEPTH_STENCIL;\n    if (p === BlendingEquation.Add) return _gl.FUNC_ADD;\n    if (p === BlendingEquation.Subtract) return _gl.FUNC_SUBTRACT;\n    if (p === BlendingEquation.ReverseSubtract) return _gl.FUNC_REVERSE_SUBTRACT;\n    if (p === BlendingFactor.Zero) return _gl.ZERO;\n    if (p === BlendingFactor.One) return _gl.ONE;\n    if (p === BlendingFactor.SrcColor) return _gl.SRC_COLOR;\n    if (p === BlendingFactor.OneMinusSrcColor) return _gl.ONE_MINUS_SRC_COLOR;\n    if (p === BlendingFactor.SrcAlpha) return _gl.SRC_ALPHA;\n    if (p === BlendingFactor.OneMinusSrcAlpha) return _gl.ONE_MINUS_SRC_ALPHA;\n    if (p === BlendingFactor.DstAlpha) return _gl.DST_ALPHA;\n    if (p === BlendingFactor.OneMinusDstAlpha) return _gl.ONE_MINUS_DST_ALPHA;\n    if (p === BlendingFactor.DstColor) return _gl.DST_COLOR;\n    if (p === BlendingFactor.OneMinusDstColor) return _gl.ONE_MINUS_DST_COLOR;\n    if (p === BlendingFactor.SrcAlphaSaturate) return _gl.SRC_ALPHA_SATURATE;\n    if (p === TextureFormat.RGB_S3TC_DXT1 || p === TextureFormat.RGBA_S3TC_DXT1 ||\n      p === TextureFormat.RGBA_S3TC_DXT3 || p === TextureFormat.RGBA_S3TC_DXT5) {\n      extension = this.extensions.get('WEBGL_compressed_texture_s3tc');\n      if (extension !== null) {\n        if (p === TextureFormat.RGB_S3TC_DXT1) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n        if (p === TextureFormat.RGBA_S3TC_DXT1) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n        if (p === TextureFormat.RGBA_S3TC_DXT3) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n        if (p === TextureFormat.RGBA_S3TC_DXT5) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n      }\n    }\n    if (p === TextureFormat.RGB_PVRTC_4BPPV1 || p === TextureFormat.RGB_PVRTC_2BPPV1 ||\n       p === TextureFormat.RGBA_PVRTC_4BPPV1 || p === TextureFormat.RGBA_PVRTC_2BPPV1) {\n      extension = this.extensions.get('WEBGL_compressed_texture_pvrtc');\n      if (extension !== null) {\n        if (p === TextureFormat.RGB_PVRTC_4BPPV1) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n        if (p === TextureFormat.RGB_PVRTC_2BPPV1) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n        if (p === TextureFormat.RGBA_PVRTC_4BPPV1) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n        if (p === TextureFormat.RGBA_PVRTC_2BPPV1) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n      }\n    }\n    if (p === TextureFormat.RGB_ETC1) {\n      extension = this.extensions.get('WEBGL_compressed_texture_etc1');\n      if (extension !== null) {\n        if (p === TextureFormat.RGB_ETC1) return extension.COMPRESSED_RGB_ETC1_WEBGL;\n      }\n    }\n    if (p === BlendingEquation.Min || p === BlendingEquation.Max) {\n      extension = this.extensions.get('EXT_blend_minmax');\n      if (extension !== null) {\n        if (p === BlendingEquation.Min) return extension.MIN_EXT;\n        if (p === BlendingEquation.Max) return extension.MAX_EXT;\n      }\n    }\n    if (p === TextureType.UnsignedInt248) {\n      extension = this.extensions.get('WEBGL_depth_texture');\n      if (extension !== null) return extension.UNSIGNED_INT_24_8_WEBGL;\n  }\n    return 0;\n  }\n  supportsFloatTextures(): boolean {\n    console.warn(\"THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get(\\\"OES_texture_float\\\").\");\n    return this.extensions.get(\"OES_texture_float\");\n  }\n  supportsHalfFloatTextures(): boolean {\n    console.warn(\"THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get(\\\"OES_texture_half_float\\\").\");\n    return this.extensions.get(\"OES_texture_half_float\");\n  }\n  supportsStandardDerivatives(): boolean {\n    console.warn(\"THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get(\\\"OES_standard_derivatives\\\").\");\n    return this.extensions.get(\"OES_standard_derivatives\");\n  }\n  supportsCompressedTextureS3TC(): boolean {\n    console.warn(\"THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get(\\\"WEBGL_compressed_texture_s3tc\\\").\");\n    return this.extensions.get(\"WEBGL_compressed_texture_s3tc\");\n  }\n  supportsCompressedTexturePVRTC(): boolean {\n    console.warn(\"THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get(\\\"WEBGL_compressed_texture_pvrtc\\\").\");\n    return this.extensions.get(\"WEBGL_compressed_texture_pvrtc\");\n  }\n  supportsBlendMinMax(): boolean {\n    console.warn(\"THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get(\\\"EXT_blend_minmax\\\").\");\n    return this.extensions.get(\"EXT_blend_minmax\");\n  }\n  supportsVertexTextures(): boolean {\n    return this.capabilities.vertexTextures;\n  }\n  supportsInstancedArrays(): boolean {\n    console.warn(\"THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get(\\\"ANGLE_instanced_arrays\\\").\");\n    return this.extensions.get(\"ANGLE_instanced_arrays\");\n  }\n  enableScissorTest(test: boolean): void {\n    console.warn(\"THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().\");\n    this.setScissorTest(test);\n  }\n  //initMaterial() {\n  //  console.warn(\"THREE.WebGLRenderer: .initMaterial() has been removed.\");\n  //}\n  addPrePlugin(): void {\n    console.warn(\"THREE.WebGLRenderer: .addPrePlugin() has been removed.\");\n  }\n  addPostPlugin(): void {\n    console.warn(\"THREE.WebGLRenderer: .addPostPlugin() has been removed.\");\n  }\n  updateShadowMap(): void {\n    console.warn(\"THREE.WebGLRenderer: .updateShadowMap() has been removed.\");\n  }\n  get shadowMapEnabled(): boolean {\n    return this.shadowMap.enabled;\n  }\n  set shadowMapEnabled(value: boolean) {\n    console.warn(\"THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.\");\n    this.shadowMap.enabled = value;\n  }\n  get shadowMapType(): number {\n    return this.shadowMap.type;\n  }\n  set shadowMapType(value: number) {\n    console.warn(\"THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.\");\n    this.shadowMap.type = value;\n  }\n  get shadowMapCullFace(): number {\n    return this.shadowMap.cullFace;\n  }\n  set shadowMapCullFace(value: number) {\n    console.warn(\"THREE.WebGLRenderer: .shadowMapCullFace is now .shadowMap.cullFace.\");\n    this.shadowMap.cullFace = value;\n  }\n}\n","import { Object3D } from \"../core/Object3D\";\nimport { Color } from \"../math/Color\";\nimport { Texture } from \"../textures/Texture\";\nimport { CubeTexture } from \"../textures/CubeTexture\";\nimport { Fog } from \"./Fog\";\nimport { FogExp2 } from \"./FogExp2\";\nimport { Material } from \"../materials/Material\";\n/**\n * @author mrdoob / http://mrdoob.com/\n */\nexport class Scene extends Object3D {\n  background: Color | Texture | CubeTexture = null;\n  fog: Fog | FogExp2 = null;\n  overrideMaterial: Material = null;\n  autoUpdate: boolean = true; // checked by the renderer\n  constructor() {\n    super();\n    this.type = 'Scene';\n  }\n  copy(source: this, recursive: boolean): this {\n    super.copy(source, recursive);\n    if (source.background !== null) this.background = source.background.clone();\n    if (source.fog !== null) this.fog = source.fog.clone();\n    if (source.overrideMaterial !== null) this.overrideMaterial = source.overrideMaterial.clone();\n    this.autoUpdate = source.autoUpdate;\n    this.matrixAutoUpdate = source.matrixAutoUpdate;\n    return this;\n  }\n  toJSON(meta: any): any {\n    let data = super.toJSON(meta);\n    if (this.background !== null) data.object.background = this.background.toJSON(meta);\n    if (this.fog !== null) data.object.fog = this.fog.toJSON(meta);\n    return data;\n  }\n}\n","import { Vector3 } from \"../math/Vector3\";\nimport { Object3D } from \"../core/Object3D\";\nimport { Raycaster, Intersect } from \"../core/Raycaster\";\nimport { Camera } from \"../cameras/Camera\";\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\nexport class LOD extends Object3D {\n  levels: any[];\n  constructor() {\n    super();\n    this.type = 'LOD';\n    this.levels = [];\n    //Object.defineProperties(this, {\n    //  levels: {\n    //    enumerable: true,\n    //    value: []\n    //  }\n    //});\n  }\n  copy(source: this): this {\n    super.copy(source, false);\n    let levels = source.levels;\n    for (let i = 0, l = levels.length; i < l; i ++) {\n      let level = levels[i];\n      this.addLevel(level.object.clone(), level.distance);\n    }\n    return this;\n  }\n  addLevel(object: Object3D, distance: number): void {\n    if (distance === undefined) distance = 0;\n    distance = Math.abs(distance);\n    let levels = this.levels;\n    let l;\n    for (l = 0; l < levels.length; l ++) {\n      if (distance < levels[l].distance) {\n        break;\n      }\n    }\n    levels.splice(l, 0, { distance: distance, object: object });\n    this.add(object);\n  }\n  getObjectForDistance(distance: number): Object3D {\n    let levels = this.levels;\n    let i, l;\n    for (i = 1, l = levels.length; i < l; i ++) {\n      if (distance < levels[i].distance) {\n        break;\n      }\n    }\n    return levels[i - 1].object;\n  }\n  raycast(raycaster: Raycaster, intersects: Intersect[]): Intersect[] {\n    let matrixPosition = new Vector3();\n    //return function raycast(raycaster, intersects) {\n      matrixPosition.setFromMatrixPosition(this.matrixWorld);\n      let distance = raycaster.ray.origin.distanceTo(matrixPosition);\n      this.getObjectForDistance(distance).raycast(raycaster, intersects);\n      return intersects;\n    //};\n  }\n  update(camera: Camera): void {\n    let v1 = new Vector3();\n    let v2 = new Vector3();\n    //return function update(camera) {\n      let levels = this.levels;\n      if (levels.length > 1) {\n        v1.setFromMatrixPosition(camera.matrixWorld);\n        v2.setFromMatrixPosition(this.matrixWorld);\n        let distance = v1.distanceTo(v2);\n        levels[0].object.visible = true;\n        let i, l;\n        for (i = 1, l = levels.length; i < l; i ++) {\n          if (distance >= levels[i].distance) {\n            levels[i - 1].object.visible = false;\n            levels[i].object.visible = true;\n          } else {\n            break;\n          }\n        }\n        for (; i < l; i ++) {\n          levels[i].object.visible = false;\n        }\n      }\n    //};\n  }\n  toJSON(meta: any): any {\n    let data = super.toJSON(meta);\n    data.object.levels = [];\n    let levels = this.levels;\n    for (let i = 0, l = levels.length; i < l; i ++) {\n      let level = levels[i];\n      data.object.levels.push({\n        object: level.object.uuid,\n        distance: level.distance\n      });\n    }\n    return data;\n  }\n  get objects(): any[] {\n    console.warn(\"THREE.LOD: .objects has been renamed to .levels.\");\n    return this.levels;\n  }\n}\n","import { Object3D } from \"../core/Object3D\";\n/**\n * @author mrdoob / http://mrdoob.com/\n */\nexport class Group extends Object3D {\n  constructor() {\n    super();\n    this.type = 'Group';\n  }\n}\n","import { Texture } from \"./Texture\";\nimport { TextureMapping, TextureWrapping, TextureEncoding, TextureType, TextureFormat, TextureFilter } from \"../constants\";\n/**\n * @author mrdoob / http://mrdoob.com/\n */\nexport class VideoTexture extends Texture {\n  constructor(video: HTMLVideoElement, mapping: TextureMapping, wrapS: TextureWrapping, wrapT: TextureWrapping, magFilter: TextureFilter, minFilter: TextureFilter, format: TextureFormat, type: TextureType, anisotropy: number) {\n    super(video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy);\n    this.generateMipmaps = false;\n    const scope: VideoTexture = this;\n    function update(): void {\n      requestAnimationFrame(update);\n      if (video.readyState >= video.HAVE_CURRENT_DATA) {\n        scope.needsUpdate = true;\n      }\n    }\n    update();\n  }\n}\n","import { Texture } from \"./Texture\";\nimport { TextureMapping, TextureWrapping, TextureEncoding, TextureType, TextureFormat, TextureFilter } from \"../constants\";\n/**\n * @author mrdoob / http://mrdoob.com/\n */\nexport class CanvasTexture extends Texture {\n  constructor(canvas: HTMLCanvasElement, mapping?: TextureMapping, wrapS?: TextureWrapping, wrapT?: TextureWrapping, magFilter?: TextureFilter, minFilter?: TextureFilter, format?: TextureFormat, type?: TextureType, anisotropy?: number) {\n    super(canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy);\n    this.needsUpdate = true;\n  }\n}\n","import { BufferGeometry } from \"../core/BufferGeometry\";\nimport { BufferAttribute } from \"../core/BufferAttribute\";\nimport { Geometry } from \"../core/Geometry\";\n/**\n * @author mrdoob / http://mrdoob.com/\n */\nexport class WireframeGeometry extends BufferGeometry {\n  constructor(geometry: Geometry | BufferGeometry) {\n    super();\n    const edge = [ 0, 0 ], hash = {};\n    function sortFunction(a: number, b: number): number {\n      return a - b;\n    }\n    const keys = ['a', 'b', 'c'];\n    if (geometry && geometry instanceof Geometry) {\n      const vertices = geometry.vertices;\n      const faces = geometry.faces;\n      let numEdges = 0;\n      // allocate maximal size\n      const edges = new Uint32Array(6 * faces.length);\n      for (let i = 0, l = faces.length; i < l; i ++) {\n        const face = faces[i];\n        for (let j = 0; j < 3; j ++) {\n          edge[0] = face[keys[j]];\n          edge[1] = face[keys[(j + 1) % 3]];\n          edge.sort(sortFunction);\n          const key = edge.toString();\n          if (hash[key] === undefined) {\n            edges[2 * numEdges] = edge[0];\n            edges[2 * numEdges + 1] = edge[1];\n            hash[key] = true;\n            numEdges ++;\n          }\n        }\n      }\n      const coords = new Float32Array(numEdges * 2 * 3);\n      for (let i = 0, l = numEdges; i < l; i ++) {\n        for (let j = 0; j < 2; j ++) {\n          const vertex = vertices[edges [2 * i + j]];\n          const index = 6 * i + 3 * j;\n          coords[index + 0] = vertex.x;\n          coords[index + 1] = vertex.y;\n          coords[index + 2] = vertex.z;\n        }\n      }\n      this.addAttribute('position', new BufferAttribute(coords, 3));\n    } else if (geometry && geometry instanceof BufferGeometry) {\n      if (geometry.index !== null) {\n        // Indexed BufferGeometry\n        const indices = geometry.index.array;\n        const vertices: BufferAttribute = geometry.attributes.position;\n        const groups = geometry.groups;\n        let numEdges = 0;\n        if (groups.length === 0) {\n          geometry.addGroup(0, indices.length);\n        }\n        // allocate maximal size\n        const edges = new Uint32Array(2 * indices.length);\n        for (let o = 0, ol = groups.length; o < ol; ++ o) {\n          const group = groups[o];\n          const start = group.start;\n          const count = group.count;\n          for (let i = start, il = start + count; i < il; i += 3) {\n            for (let j = 0; j < 3; j ++) {\n              edge[0] = indices[i + j];\n              edge[1] = indices[i + (j + 1) % 3];\n              edge.sort(sortFunction);\n              const key = edge.toString();\n              if (hash[key] === undefined) {\n                edges[2 * numEdges] = edge[0];\n                edges[2 * numEdges + 1] = edge[1];\n                hash[key] = true;\n                numEdges ++;\n              }\n            }\n          }\n        }\n        const coords = new Float32Array(numEdges * 2 * 3);\n        for (let i = 0, l = numEdges; i < l; i ++) {\n          for (let j = 0; j < 2; j ++) {\n            const index = 6 * i + 3 * j;\n            const index2 = edges[2 * i + j];\n            coords[index + 0] = vertices.getX(index2);\n            coords[index + 1] = vertices.getY(index2);\n            coords[index + 2] = vertices.getZ(index2);\n          }\n        }\n        this.addAttribute('position', new BufferAttribute(coords, 3));\n      } else {\n        // non-indexed BufferGeometry\n        const vertices = geometry.attributes.position.array;\n        const numEdges = vertices.length / 3;\n        const numTris = numEdges / 3;\n        const coords = new Float32Array(numEdges * 2 * 3);\n        for (let i = 0, l = numTris; i < l; i ++) {\n          for (let j = 0; j < 3; j ++) {\n            const index = 18 * i + 6 * j;\n            const index1 = 9 * i + 3 * j;\n            coords[index + 0] = vertices[index1];\n            coords[index + 1] = vertices[index1 + 1];\n            coords[index + 2] = vertices[index1 + 2];\n            const index2 = 9 * i + 3 * ((j + 1) % 3);\n            coords[index + 3] = vertices[index2];\n            coords[index + 4] = vertices[index2 + 1];\n            coords[index + 5] = vertices[index2 + 2];\n          }\n        }\n        this.addAttribute('position', new BufferAttribute(coords, 3));\n      }\n    }\n  }\n}\n","import { BufferGeometry } from \"../core/BufferGeometry\";\nimport { Float32Attribute, Uint16Attribute, Uint32Attribute } from \"../core/BufferAttribute\";\n/**\n * @author Mugen87 / https://github.com/Mugen87\n *\n * Parametric Surfaces Geometry\n * based on the brilliant article by @prideout http://prideout.net/blog/?p=44\n */\nexport class ParametricBufferGeometry extends BufferGeometry {\n  constructor(func, slices, stacks) {\n    super();\n    this.type = 'ParametricBufferGeometry';\n    this.parameters = {\n      func: func,\n      slices: slices,\n      stacks: stacks\n    };\n    // generate vertices and uvs\n    let vertices = [];\n    let uvs = [];\n    let i, j, p;\n    let u, v;\n    let sliceCount = slices + 1;\n    for (i = 0; i <= stacks; i ++) {\n      v = i / stacks;\n      for (j = 0; j <= slices; j ++) {\n        u = j / slices;\n        p = func(u, v);\n        vertices.push(p.x, p.y, p.z);\n        uvs.push(u, v);\n      }\n    }\n    // generate indices\n    let indices = [];\n    let a, b, c, d;\n    for (i = 0; i < stacks; i ++) {\n      for (j = 0; j < slices; j ++) {\n        a = i * sliceCount + j;\n        b = i * sliceCount + j + 1;\n        c = (i + 1) * sliceCount + j + 1;\n        d = (i + 1) * sliceCount + j;\n        // faces one and two\n        indices.push(a, b, d);\n        indices.push(b, c, d);\n      }\n    }\n    // build geometry\n    this.setIndex((indices.length > 65535 ? Uint32Attribute : Uint16Attribute)(indices, 1));\n    this.addAttribute('position', Float32Attribute(vertices, 3));\n    this.addAttribute('uv', Float32Attribute(uvs, 2));\n    // generate normals\n    this.computeVertexNormals();\n  }\n}\n","import { Geometry } from \"../core/Geometry\";\nimport { ParametricBufferGeometry } from \"./ParametricBufferGeometry\";\n/**\n * @author zz85 / https://github.com/zz85\n *\n * Parametric Surfaces Geometry\n * based on the brilliant article by @prideout http://prideout.net/blog/?p=44\n */\nexport class ParametricGeometry extends Geometry {\n  constructor(func, slices, stacks) {\n    super();\n    this.type = 'ParametricGeometry';\n    this.parameters = {\n      func: func,\n      slices: slices,\n      stacks: stacks\n    };\n    this.fromBufferGeometry(new ParametricBufferGeometry(func, slices, stacks));\n    this.mergeVertices();\n  }\n}\n","import { BufferGeometry } from \"../core/BufferGeometry\";\nimport { Float32Attribute } from \"../core/BufferAttribute\";\nimport { Vector3 } from \"../math/Vector3\";\nimport { Vector2 } from \"../math/Vector2\";\nimport { Sphere } from \"../math/Sphere\";\n/**\n * @author Mugen87 / https://github.com/Mugen87\n */\nexport class PolyhedronBufferGeometry extends BufferGeometry {\n  constructor(vertices, indices, radius, detail) {\n    super();\n    this.type = 'PolyhedronBufferGeometry';\n    this.parameters = {\n      vertices: vertices,\n      indices: indices,\n      radius: radius,\n      detail: detail\n    };\n    radius = radius || 1;\n    detail = detail || 0;\n    // default buffer data\n    let vertexBuffer = [];\n    let uvBuffer = [];\n    // the subdivision creates the vertex buffer data\n    subdivide(detail);\n    // all vertices should lie on a conceptual sphere with a given radius\n    appplyRadius(radius);\n    // finally, create the uv data\n    generateUVs();\n    // build non-indexed geometry\n    this.addAttribute('position', Float32Attribute(vertexBuffer, 3));\n    this.addAttribute('normal', Float32Attribute(vertexBuffer.slice(), 3));\n    this.addAttribute('uv', Float32Attribute(uvBuffer, 2));\n    this.normalizeNormals();\n    this.boundingSphere = new Sphere(new Vector3(), radius);\n    // helper functions\n    function subdivide(detail) {\n      let a = new Vector3();\n      let b = new Vector3();\n      let c = new Vector3();\n      // iterate over all faces and apply a subdivison with the given detail value\n      for (let i = 0; i < indices.length; i += 3) {\n        // get the vertices of the face\n        getVertexByIndex(indices[ i + 0 ], a);\n        getVertexByIndex(indices[ i + 1 ], b);\n        getVertexByIndex(indices[ i + 2 ], c);\n        // perform subdivision\n        subdivideFace(a, b, c, detail);\n      }\n    }\n    function subdivideFace(a, b, c, detail) {\n      let cols = Math.pow(2, detail);\n      // we use this multidimensional array as a data structure for creating the subdivision\n      let v = [];\n      let i, j;\n      // construct all of the vertices for this subdivision\n      for (i = 0 ; i <= cols; i ++) {\n        v[ i ] = [];\n        let aj = a.clone().lerp(c, i / cols);\n        let bj = b.clone().lerp(c, i / cols);\n        let rows = cols - i;\n        for (j = 0; j <= rows; j ++) {\n          if (j === 0 && i === cols) {\n            v[ i ][ j ] = aj;\n          } else {\n            v[ i ][ j ] = aj.clone().lerp(bj, j / rows);\n          }\n        }\n      }\n      // construct all of the faces\n      for (i = 0; i < cols ; i ++) {\n        for (j = 0; j < 2 * (cols - i) - 1; j ++) {\n          let k = Math.floor(j / 2);\n          if (j % 2 === 0) {\n            pushVertex(v[ i ][ k + 1 ]);\n            pushVertex(v[ i + 1 ][ k ]);\n            pushVertex(v[ i ][ k ]);\n          } else {\n            pushVertex(v[ i ][ k + 1 ]);\n            pushVertex(v[ i + 1 ][ k + 1 ]);\n            pushVertex(v[ i + 1 ][ k ]);\n          }\n        }\n      }\n    }\n    function appplyRadius(radius) {\n      let vertex = new Vector3();\n      // iterate over the entire buffer and apply the radius to each vertex\n      for (let i = 0; i < vertexBuffer.length; i += 3) {\n        vertex.x = vertexBuffer[ i + 0 ];\n        vertex.y = vertexBuffer[ i + 1 ];\n        vertex.z = vertexBuffer[ i + 2 ];\n        vertex.normalize().multiplyScalar(radius);\n        vertexBuffer[ i + 0 ] = vertex.x;\n        vertexBuffer[ i + 1 ] = vertex.y;\n        vertexBuffer[ i + 2 ] = vertex.z;\n      }\n    }\n    function generateUVs() {\n      let vertex = new Vector3();\n      for (let i = 0; i < vertexBuffer.length; i += 3) {\n        vertex.x = vertexBuffer[ i + 0 ];\n        vertex.y = vertexBuffer[ i + 1 ];\n        vertex.z = vertexBuffer[ i + 2 ];\n        let u = azimuth(vertex) / 2 / Math.PI + 0.5;\n        let v = inclination(vertex) / Math.PI + 0.5;\n        uvBuffer.push(u, 1 - v);\n      }\n      correctUVs();\n      correctSeam();\n    }\n    function correctSeam() {\n      // handle case when face straddles the seam, see #3269\n      for (let i = 0; i < uvBuffer.length; i += 6) {\n        // uv data of a single face\n        let x0 = uvBuffer[ i + 0 ];\n        let x1 = uvBuffer[ i + 2 ];\n        let x2 = uvBuffer[ i + 4 ];\n        let max = Math.max(x0, x1, x2);\n        let min = Math.min(x0, x1, x2);\n        // 0.9 is somewhat arbitrary\n        if (max > 0.9 && min < 0.1) {\n          if (x0 < 0.2) uvBuffer[ i + 0 ] += 1;\n          if (x1 < 0.2) uvBuffer[ i + 2 ] += 1;\n          if (x2 < 0.2) uvBuffer[ i + 4 ] += 1;\n        }\n      }\n    }\n    function pushVertex(vertex) {\n      vertexBuffer.push(vertex.x, vertex.y, vertex.z);\n    }\n    function getVertexByIndex(index, vertex) {\n      let stride = index * 3;\n      vertex.x = vertices[ stride + 0 ];\n      vertex.y = vertices[ stride + 1 ];\n      vertex.z = vertices[ stride + 2 ];\n    }\n    function correctUVs() {\n      let a = new Vector3();\n      let b = new Vector3();\n      let c = new Vector3();\n      let centroid = new Vector3();\n      let uvA = new Vector2();\n      let uvB = new Vector2();\n      let uvC = new Vector2();\n      for (let i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6) {\n        a.set(vertexBuffer[ i + 0 ], vertexBuffer[ i + 1 ], vertexBuffer[ i + 2 ]);\n        b.set(vertexBuffer[ i + 3 ], vertexBuffer[ i + 4 ], vertexBuffer[ i + 5 ]);\n        c.set(vertexBuffer[ i + 6 ], vertexBuffer[ i + 7 ], vertexBuffer[ i + 8 ]);\n        uvA.set(uvBuffer[ j + 0 ], uvBuffer[ j + 1 ]);\n        uvB.set(uvBuffer[ j + 2 ], uvBuffer[ j + 3 ]);\n        uvC.set(uvBuffer[ j + 4 ], uvBuffer[ j + 5 ]);\n        centroid.copy(a).add(b).add(c).divideScalar(3);\n        let azi = azimuth(centroid);\n        correctUV(uvA, j + 0, a, azi);\n        correctUV(uvB, j + 2, b, azi);\n        correctUV(uvC, j + 4, c, azi);\n      }\n    }\n    function correctUV(uv, stride, vector, azimuth) {\n      if ((azimuth < 0) && (uv.x === 1)) {\n        uvBuffer[ stride ] =  uv.x - 1;\n      }\n      if ((vector.x === 0) && (vector.z === 0)) {\n        uvBuffer[ stride ] = azimuth / 2 / Math.PI + 0.5;\n      }\n    }\n    // Angle around the Y axis, counter-clockwise when looking from above.\n    function azimuth(vector) {\n      return Math.atan2(vector.z, - vector.x);\n    }\n    // Angle above the XZ plane.\n    function inclination(vector) {\n      return Math.atan2(- vector.y, Math.sqrt((vector.x * vector.x) + (vector.z * vector.z)));\n    }\n  }\n}\n","import { PolyhedronBufferGeometry } from \"./PolyhedronBufferGeometry\";\n/**\n * @author Mugen87 / https://github.com/Mugen87\n */\nexport class TetrahedronBufferGeometry extends PolyhedronBufferGeometry {\n  constructor(radius, detail) {\n    let vertices = [\n      1,  1,  1,   - 1, - 1,  1,   - 1,  1, - 1,    1, - 1, - 1\n    ];\n    let indices = [\n      2,  1,  0,    0,  3,  2,    1,  3,  0,    2,  3,  1\n    ];\n    super(vertices, indices, radius, detail);\n    this.type = 'TetrahedronBufferGeometry';\n    this.parameters = {\n      radius: radius,\n      detail: detail\n    };\n  }\n}\n","import { Geometry } from \"../core/Geometry\";\nimport { TetrahedronBufferGeometry } from \"./TetrahedronBufferGeometry\";\n/**\n * @author timothypratley / https://github.com/timothypratley\n */\nexport class TetrahedronGeometry extends Geometry {\n  constructor(radius: number, detail: number) {\n    super();\n    this.type = 'TetrahedronGeometry';\n    this.parameters = {\n      radius: radius,\n      detail: detail\n    };\n    this.fromBufferGeometry(new TetrahedronBufferGeometry(radius, detail));\n    this.mergeVertices();\n  }\n}\n","import { PolyhedronBufferGeometry } from \"./PolyhedronBufferGeometry\";\n/**\n * @author Mugen87 / https://github.com/Mugen87\n */\nexport class OctahedronBufferGeometry extends PolyhedronBufferGeometry {\n  constructor(radius, detail) {\n    let vertices = [\n      1, 0, 0,   - 1, 0, 0,    0, 1, 0,    0, - 1, 0,    0, 0, 1,    0, 0, - 1\n    ];\n    let indices = [\n      0, 2, 4,    0, 4, 3,    0, 3, 5,    0, 5, 2,    1, 2, 5,    1, 5, 3,    1, 3, 4,    1, 4, 2\n    ];\n    super(vertices, indices, radius, detail);\n    this.type = 'OctahedronBufferGeometry';\n    this.parameters = {\n      radius: radius,\n      detail: detail\n    };\n  }\n}\n","import { Geometry } from \"../core/Geometry\";\nimport { OctahedronBufferGeometry } from \"./OctahedronBufferGeometry\";\n/**\n * @author timothypratley / https://github.com/timothypratley\n */\nexport class OctahedronGeometry extends Geometry {\n  constructor(radius: number, detail: number) {\n    super();\n    this.type = 'OctahedronGeometry';\n    this.parameters = {\n      radius: radius,\n      detail: detail\n    };\n    this.fromBufferGeometry(new OctahedronBufferGeometry(radius, detail));\n    this.mergeVertices();\n  }\n}\n","import { PolyhedronBufferGeometry } from \"./PolyhedronBufferGeometry\";\n/**\n * @author Mugen87 / https://github.com/Mugen87\n */\nexport class IcosahedronBufferGeometry extends PolyhedronBufferGeometry {\n  constructor(radius, detail) {\n    let t = (1 + Math.sqrt(5)) / 2;\n    let vertices = [\n      - 1,  t,  0,    1,  t,  0,   - 1, - t,  0,    1, - t,  0,\n       0, - 1,  t,    0,  1,  t,    0, - 1, - t,    0,  1, - t,\n       t,  0, - 1,    t,  0,  1,   - t,  0, - 1,   - t,  0,  1\n    ];\n    let indices = [\n       0, 11,  5,    0,  5,  1,    0,  1,  7,    0,  7, 10,    0, 10, 11,\n       1,  5,  9,    5, 11,  4,   11, 10,  2,   10,  7,  6,    7,  1,  8,\n       3,  9,  4,    3,  4,  2,    3,  2,  6,    3,  6,  8,    3,  8,  9,\n       4,  9,  5,    2,  4, 11,    6,  2, 10,    8,  6,  7,    9,  8,  1\n    ];\n    super(vertices, indices, radius, detail);\n    this.type = 'IcosahedronBufferGeometry';\n    this.parameters = {\n      radius: radius,\n      detail: detail\n    };\n  }\n}\n","import { Geometry } from \"../core/Geometry\";\nimport { IcosahedronBufferGeometry } from \"./IcosahedronBufferGeometry\";\n/**\n * @author timothypratley / https://github.com/timothypratley\n */\nexport class IcosahedronGeometry extends Geometry {\n  constructor(radius: number, detail: number) {\n    super();\n    this.type = 'IcosahedronGeometry';\n    this.parameters = {\n      radius: radius,\n      detail: detail\n    };\n    this.fromBufferGeometry(new IcosahedronBufferGeometry(radius, detail));\n    this.mergeVertices();\n  }\n}\n","import { PolyhedronBufferGeometry } from \"./PolyhedronBufferGeometry\";\n/**\n * @author Mugen87 / https://github.com/Mugen87\n */\nexport class DodecahedronBufferGeometry extends PolyhedronBufferGeometry {\n  constructor(radius, detail) {\n    let t = (1 + Math.sqrt(5)) / 2;\n    let r = 1 / t;\n    let vertices = [\n      // (±1, ±1, ±1)\n      - 1, - 1, - 1,    - 1, - 1,  1,\n      - 1,  1, - 1,    - 1,  1,  1,\n       1, - 1, - 1,     1, - 1,  1,\n       1,  1, - 1,     1,  1,  1,\n      // (0, ±1/φ, ±φ)\n       0, - r, - t,     0, - r,  t,\n       0,  r, - t,     0,  r,  t,\n      // (±1/φ, ±φ, 0)\n      - r, - t,  0,    - r,  t,  0,\n       r, - t,  0,     r,  t,  0,\n      // (±φ, 0, ±1/φ)\n      - t,  0, - r,     t,  0, - r,\n      - t,  0,  r,     t,  0,  r\n    ];\n    let indices = [\n       3, 11,  7,      3,  7, 15,      3, 15, 13,\n       7, 19, 17,      7, 17,  6,      7,  6, 15,\n      17,  4,  8,     17,  8, 10,     17, 10,  6,\n       8,  0, 16,      8, 16,  2,      8,  2, 10,\n       0, 12,  1,      0,  1, 18,      0, 18, 16,\n       6, 10,  2,      6,  2, 13,      6, 13, 15,\n       2, 16, 18,      2, 18,  3,      2,  3, 13,\n      18,  1,  9,     18,  9, 11,     18, 11,  3,\n       4, 14, 12,      4, 12,  0,      4,  0,  8,\n      11,  9,  5,     11,  5, 19,     11, 19,  7,\n      19,  5, 14,     19, 14,  4,     19,  4, 17,\n       1, 12, 14,      1, 14,  5,      1,  5,  9\n    ];\n    super(vertices, indices, radius, detail);\n    this.type = 'DodecahedronBufferGeometry';\n    this.parameters = {\n      radius: radius,\n      detail: detail\n    };\n  }\n}\n","import { Geometry } from \"../core/Geometry\";\nimport { DodecahedronBufferGeometry } from \"./DodecahedronBufferGeometry\";\n/**\n * @author Abe Pazos / https://hamoid.com\n */\nexport class DodecahedronGeometry extends Geometry {\n  constructor(radius: number, detail: number) {\n    super();\n    this.type = 'DodecahedronGeometry';\n    this.parameters = {\n      radius: radius,\n      detail: detail\n    };\n    this.fromBufferGeometry(new DodecahedronBufferGeometry(radius, detail));\n    this.mergeVertices();\n  }\n}\n","import { Geometry } from \"../core/Geometry\";\nimport { PolyhedronBufferGeometry } from \"./PolyhedronBufferGeometry\";\n/**\n * @author clockworkgeek / https://github.com/clockworkgeek\n * @author timothypratley / https://github.com/timothypratley\n * @author WestLangley / http://github.com/WestLangley\n*/\nfunction PolyhedronGeometry(vertices, indices, radius, detail) {\n  Geometry.call(this);\n  this.type = 'PolyhedronGeometry';\n  this.parameters = {\n    vertices: vertices,\n    indices: indices,\n    radius: radius,\n    detail: detail\n  };\n  this.fromBufferGeometry(new PolyhedronBufferGeometry(vertices, indices, radius, detail));\n  this.mergeVertices();\n}\nPolyhedronGeometry.prototype = Object.create(Geometry.prototype);\nPolyhedronGeometry.prototype.constructor = PolyhedronGeometry;\nexport { PolyhedronGeometry };\n","import { BufferGeometry } from \"../core/BufferGeometry\";\nimport { Float32Attribute, Uint16Attribute, Uint32Attribute } from \"../core/BufferAttribute\";\nimport { Vector2 } from \"../math/Vector2\";\nimport { Vector3 } from \"../math/Vector3\";\nimport { Curve } from \"../extras/core/Curve\";\n/**\n * @author Mugen87 / https://github.com/Mugen87\n *\n * Creates a tube which extrudes along a 3d spline.\n *\n */\nexport class TubeBufferGeometry extends BufferGeometry {\n  tangents: Vector3[];\n  normals: Vector3[];\n  binormals: Vector3[];\n  constructor(path: Curve<Vector3>, tubularSegments: number, radius: number, radialSegments: number, closed: boolean) {\n    super();\n    this.type = 'TubeBufferGeometry';\n    this.parameters = {\n      path: path,\n      tubularSegments: tubularSegments,\n      radius: radius,\n      radialSegments: radialSegments,\n      closed: closed\n    };\n    tubularSegments = tubularSegments || 64;\n    radius = radius || 1;\n    radialSegments = radialSegments || 8;\n    closed = closed || false;\n    let frames = path.computeFrenetFrames(tubularSegments, closed);\n    // expose internals\n    this.tangents = frames.tangents;\n    this.normals = frames.normals;\n    this.binormals = frames.binormals;\n    // helper variables\n    let vertex = new Vector3();\n    let normal = new Vector3();\n    let uv = new Vector2();\n    // buffer\n    let vertices = [];\n    let normals = [];\n    let uvs = [];\n    let indices = [];\n    // create buffer data\n    generateBufferData();\n    // build geometry\n    this.setIndex((indices.length > 65535 ? Uint32Attribute : Uint16Attribute)(indices, 1));\n    this.addAttribute('position', Float32Attribute(vertices, 3));\n    this.addAttribute('normal', Float32Attribute(normals, 3));\n    this.addAttribute('uv', Float32Attribute(uvs, 2));\n    // functions\n    function generateBufferData() {\n      for (let i = 0; i < tubularSegments; i ++) {\n        generateSegment(i);\n      }\n      // if the geometry is not closed, generate the last row of vertices and normals\n      // at the regular position on the given path\n      //\n      // if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\n      generateSegment((closed === false) ? tubularSegments : 0);\n      // uvs are generated in a separate function.\n      // this makes it easy compute correct values for closed geometries\n      generateUVs();\n      // finally create faces\n      generateIndices();\n    }\n    function generateSegment(i) {\n      // we use getPointAt to sample evenly distributed points from the given path\n      let P = path.getPointAt(i / tubularSegments);\n      // retrieve corresponding normal and binormal\n      let N = frames.normals[ i ];\n      let B = frames.binormals[ i ];\n      // generate normals and vertices for the current segment\n      for (let j = 0; j <= radialSegments; j ++) {\n        let v = j / radialSegments * Math.PI * 2;\n        let sin =   Math.sin(v);\n        let cos = - Math.cos(v);\n        // normal\n        normal.x = (cos * N.x + sin * B.x);\n        normal.y = (cos * N.y + sin * B.y);\n        normal.z = (cos * N.z + sin * B.z);\n        normal.normalize();\n        normals.push(normal.x, normal.y, normal.z);\n        // vertex\n        vertex.x = P.x + radius * normal.x;\n        vertex.y = P.y + radius * normal.y;\n        vertex.z = P.z + radius * normal.z;\n        vertices.push(vertex.x, vertex.y, vertex.z);\n      }\n    }\n    function generateIndices() {\n      for (let j = 1; j <= tubularSegments; j ++) {\n        for (let i = 1; i <= radialSegments; i ++) {\n          let a = (radialSegments + 1) * (j - 1) + (i - 1);\n          let b = (radialSegments + 1) * j + (i - 1);\n          let c = (radialSegments + 1) * j + i;\n          let d = (radialSegments + 1) * (j - 1) + i;\n          // faces\n          indices.push(a, b, d);\n          indices.push(b, c, d);\n        }\n      }\n    }\n    function generateUVs() {\n      for (let i = 0; i <= tubularSegments; i ++) {\n        for (let j = 0; j <= radialSegments; j ++) {\n          uv.x = i / tubularSegments;\n          uv.y = j / radialSegments;\n          uvs.push(uv.x, uv.y);\n        }\n      }\n    }\n  }\n}\n","import { Geometry } from \"../core/Geometry\";\nimport { TubeBufferGeometry } from \"./TubeBufferGeometry\";\nimport { Curve } from \"../extras/core/Curve\";\nimport { Vector3 } from \"../math/Vector3\";\n/**\n * @author oosmoxiecode / https://github.com/oosmoxiecode\n * @author WestLangley / https://github.com/WestLangley\n * @author zz85 / https://github.com/zz85\n * @author miningold / https://github.com/miningold\n * @author jonobr1 / https://github.com/jonobr1\n *\n * Creates a tube which extrudes along a 3d spline.\n */\nexport class TubeGeometry extends Geometry {\n  tangents: Vector3[];\n  normals: Vector3[];\n  binormals: Vector3[];\n  constructor(path: Curve<Vector3>, tubularSegments: number, radius: number, radialSegments: number, closed: boolean, taper?: number) {\n    super();\n    this.type = 'TubeGeometry';\n    this.parameters = {\n      path: path,\n      tubularSegments: tubularSegments,\n      radius: radius,\n      radialSegments: radialSegments,\n      closed: closed\n    };\n    if (taper !== undefined) console.warn('THREE.TubeGeometry: taper has been removed.');\n    let bufferGeometry = new TubeBufferGeometry(path, tubularSegments, radius, radialSegments, closed);\n    // expose internals\n    this.tangents = bufferGeometry.tangents;\n    this.normals = bufferGeometry.normals;\n    this.binormals = bufferGeometry.binormals;\n    // create geometry\n    this.fromBufferGeometry(bufferGeometry);\n    this.mergeVertices();\n  }\n}\n","import { BufferGeometry } from \"../core/BufferGeometry\";\nimport { Vector3 } from \"../math/Vector3\";\nimport { Vector2 } from \"../math/Vector2\";\nimport { BufferAttribute } from \"../core/BufferAttribute\";\n/**\n * @author Mugen87 / https://github.com/Mugen87\n *\n * see: http://www.blackpawn.com/texts/pqtorus/\n */\nexport class TorusKnotBufferGeometry extends BufferGeometry {\n  constructor(radius: number, tube: number, tubularSegments: number, radialSegments: number, p: number, q: number) {\n    super();\n    this.type = 'TorusKnotBufferGeometry';\n    this.parameters = {\n      radius: radius,\n      tube: tube,\n      tubularSegments: tubularSegments,\n      radialSegments: radialSegments,\n      p: p,\n      q: q\n    };\n    radius = radius || 100;\n    tube = tube || 40;\n    tubularSegments = Math.floor(tubularSegments) || 64;\n    radialSegments = Math.floor(radialSegments) || 8;\n    p = p || 2;\n    q = q || 3;\n    // used to calculate buffer length\n    const vertexCount = ((radialSegments + 1) * (tubularSegments + 1));\n    const indexCount = radialSegments * tubularSegments * 2 * 3;\n    // buffers\n    const indices = new BufferAttribute(new (indexCount > 65535 ? Uint32Array : Uint16Array)(indexCount) , 1);\n    const vertices = new BufferAttribute(new Float32Array(vertexCount * 3), 3);\n    const normals = new BufferAttribute(new Float32Array(vertexCount * 3), 3);\n    const uvs = new BufferAttribute(new Float32Array(vertexCount * 2), 2);\n    // helper variables\n    let index = 0, indexOffset = 0;\n    const vertex = new Vector3();\n    const normal = new Vector3();\n    const uv = new Vector2();\n    const P1 = new Vector3();\n    const P2 = new Vector3();\n    const B = new Vector3();\n    const T = new Vector3();\n    const N = new Vector3();\n    // generate vertices, normals and uvs\n    for (let i = 0; i <= tubularSegments; ++ i) {\n      // the radian \"u\" is used to calculate the position on the torus curve of the current tubular segement\n      const u = i / tubularSegments * p * Math.PI * 2;\n      // now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n      // these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\n      calculatePositionOnCurve(u, p, q, radius, P1);\n      calculatePositionOnCurve(u + 0.01, p, q, radius, P2);\n      // calculate orthonormal basis\n      T.subVectors(P2, P1);\n      N.addVectors(P2, P1);\n      B.crossVectors(T, N);\n      N.crossVectors(B, T);\n      // normalize B, N. T can be ignored, we don't use it\n      B.normalize();\n      N.normalize();\n      for (let j = 0; j <= radialSegments; ++ j) {\n        // now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n        // because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\n        const v = j / radialSegments * Math.PI * 2;\n        const cx = - tube * Math.cos(v);\n        const cy = tube * Math.sin(v);\n        // now calculate the final vertex position.\n        // first we orient the extrusion with our basis vectos, then we add it to the current position on the curve\n        vertex.x = P1.x + (cx * N.x + cy * B.x);\n        vertex.y = P1.y + (cx * N.y + cy * B.y);\n        vertex.z = P1.z + (cx * N.z + cy * B.z);\n        // vertex\n        vertices.setXYZ(index, vertex.x, vertex.y, vertex.z);\n        // normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\n        normal.subVectors(vertex, P1).normalize();\n        normals.setXYZ(index, normal.x, normal.y, normal.z);\n        // uv\n        uv.x = i / tubularSegments;\n        uv.y = j / radialSegments;\n        uvs.setXY(index, uv.x, uv.y);\n        // increase index\n        index ++;\n      }\n    }\n    // generate indices\n    for (let j = 1; j <= tubularSegments; j ++) {\n      for (let i = 1; i <= radialSegments; i ++) {\n        // indices\n        const a = (radialSegments + 1) * (j - 1) + (i - 1);\n        const b = (radialSegments + 1) * j + (i - 1);\n        const c = (radialSegments + 1) * j + i;\n        const d = (radialSegments + 1) * (j - 1) + i;\n        // face one\n        indices.setX(indexOffset, a); indexOffset++;\n        indices.setX(indexOffset, b); indexOffset++;\n        indices.setX(indexOffset, d); indexOffset++;\n        // face two\n        indices.setX(indexOffset, b); indexOffset++;\n        indices.setX(indexOffset, c); indexOffset++;\n        indices.setX(indexOffset, d); indexOffset++;\n      }\n    }\n    // build geometry\n    this.setIndex(indices);\n    this.addAttribute('position', vertices);\n    this.addAttribute('normal', normals);\n    this.addAttribute('uv', uvs);\n    // this function calculates the current position on the torus curve\n    function calculatePositionOnCurve(u: number, p: number, q: number, radius: number, position: Vector3) {\n      const cu = Math.cos(u);\n      const su = Math.sin(u);\n      const quOverP = q / p * u;\n      const cs = Math.cos(quOverP);\n      position.x = radius * (2 + cs) * 0.5 * cu;\n      position.y = radius * (2 + cs) * su * 0.5;\n      position.z = radius * Math.sin(quOverP) * 0.5;\n    }\n  }\n}\n","import { Geometry } from \"../core/Geometry\";\nimport { TorusKnotBufferGeometry } from \"./TorusKnotBufferGeometry\";\n/**\n * @author oosmoxiecode\n */\nexport class TorusKnotGeometry extends Geometry {\n  constructor(radius: number, tube: number, tubularSegments: number, radialSegments: number, p?: number, q?: number, heightScale?: number) {\n    super();\n    this.type = 'TorusKnotGeometry';\n    this.parameters = {\n      radius: radius,\n      tube: tube,\n      tubularSegments: tubularSegments,\n      radialSegments: radialSegments,\n      p: p,\n      q: q\n    };\n    if (heightScale !== undefined) console.warn('THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale(x, y, z) instead.');\n    this.fromBufferGeometry(new TorusKnotBufferGeometry(radius, tube, tubularSegments, radialSegments, p, q));\n    this.mergeVertices();\n  }\n}\n","import { BufferGeometry } from \"../core/BufferGeometry\";\nimport { BufferAttribute } from \"../core/BufferAttribute\";\nimport { Vector3 } from \"../math/Vector3\";\n/**\n * @author Mugen87 / https://github.com/Mugen87\n */\nexport class TorusBufferGeometry extends BufferGeometry {\n  constructor(radius: number, tube: number, radialSegments: number, tubularSegments: number, arc?: number) {\n    super();\n    this.type = 'TorusBufferGeometry';\n    this.parameters = {\n      radius: radius,\n      tube: tube,\n      radialSegments: radialSegments,\n      tubularSegments: tubularSegments,\n      arc: arc\n    };\n    radius = radius || 100;\n    tube = tube || 40;\n    radialSegments = Math.floor(radialSegments) || 8;\n    tubularSegments = Math.floor(tubularSegments) || 6;\n    arc = arc || Math.PI * 2;\n    // used to calculate buffer length\n    const vertexCount = ((radialSegments + 1) * (tubularSegments + 1));\n    const indexCount = radialSegments * tubularSegments * 2 * 3;\n    // buffers\n    const indices = new (indexCount > 65535 ? Uint32Array : Uint16Array)(indexCount);\n    const vertices = new Float32Array(vertexCount * 3);\n    const normals = new Float32Array(vertexCount * 3);\n    const uvs = new Float32Array(vertexCount * 2);\n    // offset variables\n    let vertexBufferOffset = 0;\n    let uvBufferOffset = 0;\n    let indexBufferOffset = 0;\n    // helper variables\n    const center = new Vector3();\n    const vertex = new Vector3();\n    const normal = new Vector3();\n    // generate vertices, normals and uvs\n    for (let j = 0; j <= radialSegments; j ++) {\n      for (let i = 0; i <= tubularSegments; i ++) {\n        const u = i / tubularSegments * arc;\n        const v = j / radialSegments * Math.PI * 2;\n        // vertex\n        vertex.x = (radius + tube * Math.cos(v)) * Math.cos(u);\n        vertex.y = (radius + tube * Math.cos(v)) * Math.sin(u);\n        vertex.z = tube * Math.sin(v);\n        vertices[vertexBufferOffset] = vertex.x;\n        vertices[vertexBufferOffset + 1] = vertex.y;\n        vertices[vertexBufferOffset + 2] = vertex.z;\n        // this vector is used to calculate the normal\n        center.x = radius * Math.cos(u);\n        center.y = radius * Math.sin(u);\n        // normal\n        normal.subVectors(vertex, center).normalize();\n        normals[vertexBufferOffset] = normal.x;\n        normals[vertexBufferOffset + 1] = normal.y;\n        normals[vertexBufferOffset + 2] = normal.z;\n        // uv\n        uvs[uvBufferOffset] = i / tubularSegments;\n        uvs[uvBufferOffset + 1] = j / radialSegments;\n        // update offsets\n        vertexBufferOffset += 3;\n        uvBufferOffset += 2;\n      }\n    }\n    // generate indices\n    for (let j = 1; j <= radialSegments; j ++) {\n      for (let i = 1; i <= tubularSegments; i ++) {\n        // indices\n        const a = (tubularSegments + 1) * j + i - 1;\n        const b = (tubularSegments + 1) * (j - 1) + i - 1;\n        const c = (tubularSegments + 1) * (j - 1) + i;\n        const d = (tubularSegments + 1) * j + i;\n        // face one\n        indices[indexBufferOffset] = a;\n        indices[indexBufferOffset + 1] = b;\n        indices[indexBufferOffset + 2] = d;\n        // face two\n        indices[indexBufferOffset + 3] = b;\n        indices[indexBufferOffset + 4] = c;\n        indices[indexBufferOffset + 5] = d;\n        // update offset\n        indexBufferOffset += 6;\n      }\n    }\n    // build geometry\n    this.setIndex(new BufferAttribute(indices, 1));\n    this.addAttribute('position', new BufferAttribute(vertices, 3));\n    this.addAttribute('normal', new BufferAttribute(normals, 3));\n    this.addAttribute('uv', new BufferAttribute(uvs, 2));\n  }\n}\n","import { Geometry } from \"../core/Geometry\";\nimport { TorusBufferGeometry } from \"./TorusBufferGeometry\";\n/**\n * @author oosmoxiecode\n * @author mrdoob / http://mrdoob.com/\n * based on http://code.google.com/p/away3d/source/browse/trunk/fp10/Away3DLite/src/away3dlite/primitives/Torus.as?r=2888\n */\nexport class TorusGeometry extends Geometry {\n  constructor(radius: number, tube: number, radialSegments: number, tubularSegments: number, arc?: number) {\n    super();\n    this.type = 'TorusGeometry';\n    this.parameters = {\n      radius: radius,\n      tube: tube,\n      radialSegments: radialSegments,\n      tubularSegments: tubularSegments,\n      arc: arc\n    };\n    this.fromBufferGeometry(new TorusBufferGeometry(radius, tube, radialSegments, tubularSegments, arc));\n  }\n}\n","/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n */\nimport { Vector2 } from \"../math/Vector2\";\nexport class ShapeUtils {\n  // calculate area of the contour polygon\n  static area(contour: Vector2[]): number {\n    let n = contour.length;\n    let a = 0.0;\n    for (let p = n - 1, q = 0; q < n; p = q ++) {\n      a += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\n    }\n    return a * 0.5;\n  }\n  static triangulate(contour: Vector2[], indices: boolean): Vector2[][] | number[][] {\n    /**\n     * This code is a quick port of code written in C++ which was submitted to\n     * flipcode.com by John W. Ratcliff  // July 22, 2000\n     * See original code and more information here:\n     * http://www.flipcode.com/archives/Efficient_Polygon_Triangulation.shtml\n     *\n     * ported to actionscript by Zevan Rosser\n     * www.actionsnippet.com\n     *\n     * ported to javascript by Joshua Koo\n     * http://www.lab4games.net/zz85/blog\n     *\n     */\n    function snip(contour: Vector2[], u: number, v: number, w: number, n: number, verts: number[]): boolean {\n      let p: number;\n      let ax: number, ay: number, bx: number, by: number;\n      let cx: number, cy: number, px: number, py: number;\n      ax = contour[ verts[ u ] ].x;\n      ay = contour[ verts[ u ] ].y;\n      bx = contour[ verts[ v ] ].x;\n      by = contour[ verts[ v ] ].y;\n      cx = contour[ verts[ w ] ].x;\n      cy = contour[ verts[ w ] ].y;\n      if ((bx - ax) * (cy - ay) - (by - ay) * (cx - ax) <= 0) return false;\n      let aX: number, aY: number, bX: number, bY: number, cX: number, cY: number;\n      let apx: number, apy: number, bpx: number, bpy: number, cpx: number, cpy: number;\n      let cCROSSap: number, bCROSScp: number, aCROSSbp: number;\n      aX = cx - bx;  aY = cy - by;\n      bX = ax - cx;  bY = ay - cy;\n      cX = bx - ax;  cY = by - ay;\n      for (p = 0; p < n; p ++) {\n        px = contour[ verts[ p ] ].x;\n        py = contour[ verts[ p ] ].y;\n        if (((px === ax) && (py === ay)) ||\n           ((px === bx) && (py === by)) ||\n           ((px === cx) && (py === cy)))  continue;\n        apx = px - ax;  apy = py - ay;\n        bpx = px - bx;  bpy = py - by;\n        cpx = px - cx;  cpy = py - cy;\n        // see if p is inside triangle abc\n        aCROSSbp = aX * bpy - aY * bpx;\n        cCROSSap = cX * apy - cY * apx;\n        bCROSScp = bX * cpy - bY * cpx;\n        if ((aCROSSbp >= - Number.EPSILON) && (bCROSScp >= - Number.EPSILON) && (cCROSSap >= - Number.EPSILON)) return false;\n      }\n      return true;\n    }\n    // takes in an contour array and returns\n    //return function triangulate(contour, indices) {\n      let n: number = contour.length;\n      if (n < 3) return null;\n      const result: Vector2[][] = [];\n      const verts: number[] = [];\n      const vertIndices: number[][] = [];\n      /* we want a counter-clockwise polygon in verts */\n      let u: number, v: number, w: number;\n      if (ShapeUtils.area(contour) > 0.0) {\n        for (v = 0; v < n; v ++) verts[ v ] = v;\n      } else {\n        for (v = 0; v < n; v ++) verts[ v ] = (n - 1) - v;\n      }\n      let nv: number = n;\n      /*  remove nv - 2 vertices, creating 1 triangle every time */\n      let count: number = 2 * nv;   /* error detection */\n      for (v = nv - 1; nv > 2; ) {\n        /* if we loop, it is probably a non-simple polygon */\n        if ((count --) <= 0) {\n          //** Triangulate: ERROR - probable bad polygon!\n          //throw (\"Warning, unable to triangulate polygon!\");\n          //return null;\n          // Sometimes warning is fine, especially polygons are triangulated in reverse.\n          console.warn('THREE.ShapeUtils: Unable to triangulate polygon! in triangulate()');\n          if (indices) return vertIndices;\n          return result;\n        }\n        /* three consecutive vertices in current polygon, <u,v,w> */\n        u = v;      if (nv <= u) u = 0;     /* previous */\n        v = u + 1;  if (nv <= v) v = 0;     /* new v    */\n        w = v + 1;  if (nv <= w) w = 0;     /* next     */\n        if (snip(contour, u, v, w, nv, verts)) {\n          let a: number, b: number, c: number, s: number, t: number;\n          /* true names of the vertices */\n          a = verts[ u ];\n          b = verts[ v ];\n          c = verts[ w ];\n          /* output Triangle */\n          result.push([ contour[ a ], contour[ b ], contour[ c ] ]);\n          vertIndices.push([ verts[ u ], verts[ v ], verts[ w ] ]);\n          /* remove v from the remaining polygon */\n          for (s = v, t = v + 1; t < nv; s ++, t ++) {\n            verts[ s ] = verts[ t ];\n          }\n          nv --;\n          /* reset error detection counter */\n          count = 2 * nv;\n        }\n      }\n      if (indices) return vertIndices;\n      return result;\n    //};\n  }\n  static triangulateShape(contour: Vector2[], holes: Vector2[][]): number[][] {\n    function removeDupEndPts(points: Vector2[]): void {\n      let l: number = points.length;\n      if (l > 2 && points[ l - 1 ].equals(points[ 0 ])) {\n        points.pop();\n      }\n    }\n    removeDupEndPts(contour);\n    holes.forEach(removeDupEndPts);\n    function point_in_segment_2D_colin(inSegPt1: Vector2, inSegPt2: Vector2, inOtherPt: Vector2): boolean {\n      // inOtherPt needs to be collinear to the inSegment\n      if (inSegPt1.x !== inSegPt2.x) {\n        if (inSegPt1.x < inSegPt2.x) {\n          return  ((inSegPt1.x <= inOtherPt.x) && (inOtherPt.x <= inSegPt2.x));\n        } else {\n          return  ((inSegPt2.x <= inOtherPt.x) && (inOtherPt.x <= inSegPt1.x));\n        }\n      } else {\n        if (inSegPt1.y < inSegPt2.y) {\n          return  ((inSegPt1.y <= inOtherPt.y) && (inOtherPt.y <= inSegPt2.y));\n        } else {\n          return  ((inSegPt2.y <= inOtherPt.y) && (inOtherPt.y <= inSegPt1.y));\n        }\n      }\n    }\n    function intersect_segments_2D(inSeg1Pt1: Vector2, inSeg1Pt2: Vector2, inSeg2Pt1: Vector2, inSeg2Pt2: Vector2, inExcludeAdjacentSegs: boolean): Vector2[] {\n      let seg1dx: number = inSeg1Pt2.x - inSeg1Pt1.x, seg1dy: number = inSeg1Pt2.y - inSeg1Pt1.y;\n      let seg2dx: number = inSeg2Pt2.x - inSeg2Pt1.x, seg2dy: number = inSeg2Pt2.y - inSeg2Pt1.y;\n      let seg1seg2dx: number = inSeg1Pt1.x - inSeg2Pt1.x;\n      let seg1seg2dy: number = inSeg1Pt1.y - inSeg2Pt1.y;\n      let limit: number = seg1dy * seg2dx - seg1dx * seg2dy;\n      let perpSeg1: number = seg1dy * seg1seg2dx - seg1dx * seg1seg2dy;\n      if (Math.abs(limit) > Number.EPSILON) {\n        // not parallel\n        let perpSeg2: number;\n        if (limit > 0) {\n          if ((perpSeg1 < 0) || (perpSeg1 > limit)) return [];\n          perpSeg2 = seg2dy * seg1seg2dx - seg2dx * seg1seg2dy;\n          if ((perpSeg2 < 0) || (perpSeg2 > limit)) return [];\n        } else {\n          if ((perpSeg1 > 0) || (perpSeg1 < limit)) return [];\n          perpSeg2 = seg2dy * seg1seg2dx - seg2dx * seg1seg2dy;\n          if ((perpSeg2 > 0) || (perpSeg2 < limit)) return [];\n        }\n        // i.e. to reduce rounding errors\n        // intersection at endpoint of segment#1?\n        if (perpSeg2 === 0) {\n          if ((inExcludeAdjacentSegs) &&\n             ((perpSeg1 === 0) || (perpSeg1 === limit))) return [];\n          return [ inSeg1Pt1 ];\n        }\n        if (perpSeg2 === limit) {\n          if ((inExcludeAdjacentSegs) &&\n             ((perpSeg1 === 0) || (perpSeg1 === limit))) return [];\n          return [ inSeg1Pt2 ];\n        }\n        // intersection at endpoint of segment#2?\n        if (perpSeg1 === 0) return [ inSeg2Pt1 ];\n        if (perpSeg1 === limit) return [ inSeg2Pt2 ];\n        // return real intersection point\n        let factorSeg1 = perpSeg2 / limit;\n        return [ new Vector2(inSeg1Pt1.x + factorSeg1 * seg1dx, inSeg1Pt1.y + factorSeg1 * seg1dy) ];\n      } else {\n        // parallel or collinear\n        if ((perpSeg1 !== 0) ||\n           (seg2dy * seg1seg2dx !== seg2dx * seg1seg2dy)) return [];\n        // they are collinear or degenerate\n        let seg1Pt: boolean = ((seg1dx === 0) && (seg1dy === 0));  // segment1 is just a point?\n        let seg2Pt: boolean = ((seg2dx === 0) && (seg2dy === 0));  // segment2 is just a point?\n        // both segments are points\n        if (seg1Pt && seg2Pt) {\n          if ((inSeg1Pt1.x !== inSeg2Pt1.x) || (inSeg1Pt1.y !== inSeg2Pt1.y)) return [];  // they are distinct  points\n          return [ inSeg1Pt1 ]; // they are the same point\n        }\n        // segment#1  is a single point\n        if (seg1Pt) {\n          if (! point_in_segment_2D_colin(inSeg2Pt1, inSeg2Pt2, inSeg1Pt1)) return [];    // but not in segment#2\n          return [ inSeg1Pt1 ];\n        }\n        // segment#2  is a single point\n        if (seg2Pt) {\n          if (! point_in_segment_2D_colin(inSeg1Pt1, inSeg1Pt2, inSeg2Pt1)) return [];    // but not in segment#1\n          return [ inSeg2Pt1 ];\n        }\n        // they are collinear segments, which might overlap\n        let seg1min: Vector2, seg1max: Vector2, seg1minVal: number, seg1maxVal: number;\n        let seg2min: Vector2, seg2max: Vector2, seg2minVal: number, seg2maxVal: number;\n        if (seg1dx !== 0) {\n          // the segments are NOT on a vertical line\n          if (inSeg1Pt1.x < inSeg1Pt2.x) {\n            seg1min = inSeg1Pt1; seg1minVal = inSeg1Pt1.x;\n            seg1max = inSeg1Pt2; seg1maxVal = inSeg1Pt2.x;\n          } else {\n            seg1min = inSeg1Pt2; seg1minVal = inSeg1Pt2.x;\n            seg1max = inSeg1Pt1; seg1maxVal = inSeg1Pt1.x;\n          }\n          if (inSeg2Pt1.x < inSeg2Pt2.x) {\n            seg2min = inSeg2Pt1; seg2minVal = inSeg2Pt1.x;\n            seg2max = inSeg2Pt2; seg2maxVal = inSeg2Pt2.x;\n          } else {\n            seg2min = inSeg2Pt2; seg2minVal = inSeg2Pt2.x;\n            seg2max = inSeg2Pt1; seg2maxVal = inSeg2Pt1.x;\n          }\n        } else {\n          // the segments are on a vertical line\n          if (inSeg1Pt1.y < inSeg1Pt2.y) {\n            seg1min = inSeg1Pt1; seg1minVal = inSeg1Pt1.y;\n            seg1max = inSeg1Pt2; seg1maxVal = inSeg1Pt2.y;\n          } else {\n            seg1min = inSeg1Pt2; seg1minVal = inSeg1Pt2.y;\n            seg1max = inSeg1Pt1; seg1maxVal = inSeg1Pt1.y;\n          }\n          if (inSeg2Pt1.y < inSeg2Pt2.y) {\n            seg2min = inSeg2Pt1; seg2minVal = inSeg2Pt1.y;\n            seg2max = inSeg2Pt2; seg2maxVal = inSeg2Pt2.y;\n          } else {\n            seg2min = inSeg2Pt2; seg2minVal = inSeg2Pt2.y;\n            seg2max = inSeg2Pt1; seg2maxVal = inSeg2Pt1.y;\n          }\n        }\n        if (seg1minVal <= seg2minVal) {\n          if (seg1maxVal <  seg2minVal) return [];\n          if (seg1maxVal === seg2minVal) {\n            if (inExcludeAdjacentSegs) return [];\n            return [ seg2min ];\n          }\n          if (seg1maxVal <= seg2maxVal)  return [ seg2min, seg1max ];\n          return  [ seg2min, seg2max ];\n        } else {\n          if (seg1minVal >  seg2maxVal) return [];\n          if (seg1minVal === seg2maxVal) {\n            if (inExcludeAdjacentSegs) return [];\n            return [ seg1min ];\n          }\n          if (seg1maxVal <= seg2maxVal) return [ seg1min, seg1max ];\n          return  [ seg1min, seg2max ];\n        }\n      }\n    }\n    function isPointInsideAngle(inVertex: Vector2, inLegFromPt: Vector2, inLegToPt: Vector2, inOtherPt: Vector2): boolean {\n      // The order of legs is important\n      // translation of all points, so that Vertex is at (0,0)\n      let legFromPtX: number = inLegFromPt.x - inVertex.x, legFromPtY: number = inLegFromPt.y - inVertex.y;\n      let legToPtX: number = inLegToPt.x - inVertex.x, legToPtY: number = inLegToPt.y  - inVertex.y;\n      let otherPtX: number = inOtherPt.x - inVertex.x, otherPtY: number = inOtherPt.y  - inVertex.y;\n      // main angle >0: < 180 deg.; 0: 180 deg.; <0: > 180 deg.\n      let from2toAngle: number = legFromPtX * legToPtY - legFromPtY * legToPtX;\n      let from2otherAngle: number  = legFromPtX * otherPtY - legFromPtY * otherPtX;\n      if (Math.abs(from2toAngle) > Number.EPSILON) {\n        // angle != 180 deg.\n        let other2toAngle: number = otherPtX * legToPtY - otherPtY * legToPtX;\n        // console.log(\"from2to: \" + from2toAngle + \", from2other: \" + from2otherAngle + \", other2to: \" + other2toAngle);\n        if (from2toAngle > 0) {\n          // main angle < 180 deg.\n          return ((from2otherAngle >= 0) && (other2toAngle >= 0));\n        } else {\n          // main angle > 180 deg.\n          return ((from2otherAngle >= 0) || (other2toAngle >= 0));\n        }\n      } else {\n        // angle == 180 deg.\n        // console.log(\"from2to: 180 deg., from2other: \" + from2otherAngle);\n        return (from2otherAngle > 0);\n      }\n    }\n    function removeHoles(contour: Vector2[], holes: Vector2[][]) {\n      let shape: Vector2[] = contour.concat(); // work on this shape\n      let hole: Vector2[];\n      function isCutLineInsideAngles(inShapeIdx: number, inHoleIdx: number): boolean {\n        // Check if hole point lies within angle around shape point\n        let lastShapeIdx: number = shape.length - 1;\n        let prevShapeIdx: number = inShapeIdx - 1;\n        if (prevShapeIdx < 0) prevShapeIdx = lastShapeIdx;\n        let nextShapeIdx: number = inShapeIdx + 1;\n        if (nextShapeIdx > lastShapeIdx)  nextShapeIdx = 0;\n        let insideAngle: boolean = isPointInsideAngle(shape[ inShapeIdx ], shape[ prevShapeIdx ], shape[ nextShapeIdx ], hole[ inHoleIdx ]);\n        if (! insideAngle) {\n          // console.log(\"Vertex (Shape): \" + inShapeIdx + \", Point: \" + hole[inHoleIdx].x + \"/\" + hole[inHoleIdx].y);\n          return false;\n        }\n        // Check if shape point lies within angle around hole point\n        let lastHoleIdx: number = hole.length - 1;\n        let prevHoleIdx: number = inHoleIdx - 1;\n        if (prevHoleIdx < 0) prevHoleIdx = lastHoleIdx;\n        let nextHoleIdx: number = inHoleIdx + 1;\n        if (nextHoleIdx > lastHoleIdx)  nextHoleIdx = 0;\n        insideAngle = isPointInsideAngle(hole[ inHoleIdx ], hole[ prevHoleIdx ], hole[ nextHoleIdx ], shape[ inShapeIdx ]);\n        if (! insideAngle) {\n          // console.log(\"Vertex (Hole): \" + inHoleIdx + \", Point: \" + shape[inShapeIdx].x + \"/\" + shape[inShapeIdx].y);\n          return false;\n        }\n        return true;\n      }\n      function intersectsShapeEdge(inShapePt: Vector2, inHolePt: Vector2): boolean {\n        // checks for intersections with shape edges\n        let sIdx: number, nextIdx: number, intersection: Vector2[];\n        for (sIdx = 0; sIdx < shape.length; sIdx ++) {\n          nextIdx = sIdx + 1; nextIdx %= shape.length;\n          intersection = intersect_segments_2D(inShapePt, inHolePt, shape[ sIdx ], shape[ nextIdx ], true);\n          if (intersection.length > 0) return true;\n        }\n        return false;\n      }\n      let indepHoles: number[] = [];\n      function intersectsHoleEdge(inShapePt: Vector2, inHolePt: Vector2) {\n        // checks for intersections with hole edges\n        let ihIdx, chkHole, hIdx, nextIdx, intersection;\n        for (ihIdx = 0; ihIdx < indepHoles.length; ihIdx ++) {\n          chkHole = holes[ indepHoles[ ihIdx ]];\n          for (hIdx = 0; hIdx < chkHole.length; hIdx ++) {\n            nextIdx = hIdx + 1; nextIdx %= chkHole.length;\n            intersection = intersect_segments_2D(inShapePt, inHolePt, chkHole[ hIdx ], chkHole[ nextIdx ], true);\n            if (intersection.length > 0) return true;\n          }\n        }\n        return false;\n      }\n      let holeIndex, shapeIndex,\n        shapePt, holePt,\n        holeIdx, cutKey, failedCuts: boolean[] = [],\n        tmpShape1, tmpShape2,\n        tmpHole1, tmpHole2;\n      for (let h = 0, hl = holes.length; h < hl; h ++) {\n        indepHoles.push(h);\n      }\n      let minShapeIndex = 0;\n      let counter = indepHoles.length * 2;\n      while (indepHoles.length > 0) {\n        counter --;\n        if (counter < 0) {\n          console.log(\"Infinite Loop! Holes left:\" + indepHoles.length + \", Probably Hole outside Shape!\");\n          break;\n        }\n        // search for shape-vertex and hole-vertex,\n        // which can be connected without intersections\n        for (shapeIndex = minShapeIndex; shapeIndex < shape.length; shapeIndex ++) {\n          shapePt = shape[ shapeIndex ];\n          holeIndex  = - 1;\n          // search for hole which can be reached without intersections\n          for (let h = 0; h < indepHoles.length; h ++) {\n            holeIdx = indepHoles[ h ];\n            // prevent multiple checks\n            cutKey = shapePt.x + \":\" + shapePt.y + \":\" + holeIdx;\n            if (failedCuts[ cutKey ] !== undefined)      continue;\n            hole = holes[ holeIdx ];\n            for (let h2 = 0; h2 < hole.length; h2 ++) {\n              holePt = hole[ h2 ];\n              if (! isCutLineInsideAngles(shapeIndex, h2))    continue;\n              if (intersectsShapeEdge(shapePt, holePt))    continue;\n              if (intersectsHoleEdge(shapePt, holePt))    continue;\n              holeIndex = h2;\n              indepHoles.splice(h, 1);\n              tmpShape1 = shape.slice(0, shapeIndex + 1);\n              tmpShape2 = shape.slice(shapeIndex);\n              tmpHole1 = hole.slice(holeIndex);\n              tmpHole2 = hole.slice(0, holeIndex + 1);\n              shape = tmpShape1.concat(tmpHole1).concat(tmpHole2).concat(tmpShape2);\n              minShapeIndex = shapeIndex;\n              // Debug only, to show the selected cuts\n              // glob_CutLines.push([ shapePt, holePt ]);\n              break;\n            }\n            if (holeIndex >= 0)  break;    // hole-vertex found\n            failedCuts[ cutKey ] = true;      // remember failure\n          }\n          if (holeIndex >= 0)  break;    // hole-vertex found\n        }\n      }\n      return shape;       /* shape with no holes */\n    }\n    const allPointsMap = {};\n    // To maintain reference to old shape, one must match coordinates, or offset the indices from original arrays. It's probably easier to do the first.\n    const allpoints = contour.concat();\n    for (let h = 0, hl = holes.length; h < hl; h ++) {\n      Array.prototype.push.apply(allpoints, holes[ h ]);\n    }\n    //console.log(\"allpoints\",allpoints, allpoints.length);\n    // prepare all points map\n    for (let i = 0, il = allpoints.length; i < il; i ++) {\n      const key = allpoints[ i ].x + \":\" + allpoints[ i ].y;\n      if (allPointsMap[ key ] !== undefined) {\n        console.warn(\"THREE.ShapeUtils: Duplicate point\", key, i);\n      }\n      allPointsMap[ key ] = i;\n    }\n    // remove holes by cutting paths to holes and adding them to the shape\n    const shapeWithoutHoles = removeHoles(contour, holes);\n    const triangle_vertices: Vector2[][] = <Vector2[][]>ShapeUtils.triangulate(shapeWithoutHoles, false); // True returns indices for points of spooled shape\n    const triangle_indices: number[][] = [];\n    //console.log(\"triangles\",triangles, triangles.length);\n    // check all face vertices against all points map\n    for (let i = 0, il = triangle_vertices.length; i < il; i ++) {\n      const face_vertices = triangle_vertices[ i ];\n      const face_indices = triangle_indices[ i ] = [];\n      for (let f = 0; f < 3; f ++) {\n        const key = face_vertices[ f ].x + \":\" + face_vertices[ f ].y;\n        const index = allPointsMap[ key ];\n        if (index !== undefined) {\n          face_indices[ f ] = index;\n        }\n      }\n    }\n    return triangle_indices;\n  }\n  static isClockWise(pts: Vector2[]): boolean {\n    return ShapeUtils.area(pts) < 0;\n  }\n  // Bezier Curves formulas obtained from\n  // http://en.wikipedia.org/wiki/B%C3%A9zier_curve\n  // Quad Bezier Functions\n  static b2(t: number, p0: number, p1: number, p2: number): number {\n    function b2p0(t: number, p: number) {\n      let k = 1 - t;\n      return k * k * p;\n    }\n    function b2p1(t: number, p: number): number {\n      return 2 * (1 - t) * t * p;\n    }\n    function b2p2(t: number, p: number): number {\n      return t * t * p;\n    }\n    //return function b2(t, p0, p1, p2) {\n      return b2p0(t, p0) + b2p1(t, p1) + b2p2(t, p2);\n    //};\n  }\n  // Cubic Bezier Functions\n  static b3(t: number, p0: number, p1: number, p2: number, p3: number): number {\n    function b3p0(t: number, p: number): number {\n      let k = 1 - t;\n      return k * k * k * p;\n    }\n    function b3p1(t: number, p: number): number {\n      let k = 1 - t;\n      return 3 * k * k * t * p;\n    }\n    function b3p2(t: number, p: number): number {\n      let k = 1 - t;\n      return 3 * k * t * t * p;\n    }\n    function b3p3(t: number, p: number): number {\n      return t * t * t * p;\n    }\n    //return function b3(t, p0, p1, p2, p3) {\n      return b3p0(t, p0) + b3p1(t, p1) + b3p2(t, p2) + b3p3(t, p3);\n    //};\n  }\n}\n","/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n *\n * Creates extruded geometry from a path shape.\n *\n * parameters = {\n *\n *  curveSegments: <int>, // number of points on the curves\n *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n *  amount: <int>, // Depth to extrude the shape\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into the original shape bevel goes\n *  bevelSize: <float>, // how far from shape outline is bevel\n *  bevelSegments: <int>, // number of bevel layers\n *\n *  extrudePath: <THREE.CurvePath> // 3d spline path to extrude shape along. (creates Frames if .frames aren't defined)\n *  frames: <Object> // containing arrays of tangents, normals, binormals\n *\n *  uvGenerator: <Object> // object that provides UV generator functions\n *\n * }\n **/\nimport { Geometry } from \"../core/Geometry\";\nimport { Vector2 } from \"../math/Vector2\";\nimport { Face3 } from \"../core/Face3\";\nimport { Vector3 } from \"../math/Vector3\";\nimport { ShapeUtils } from \"../extras/ShapeUtils\";\nimport { Shape } from \"../extras/core/Shape\";\nexport class ExtrudeGeometry extends Geometry {\n  constructor(shapes?: Shape | Shape[], options?: any) {\n    if (typeof(shapes) === \"undefined\") {\n      shapes = [];\n      return;\n    }\n    super();\n    this.type = 'ExtrudeGeometry';\n    shapes = Array.isArray(shapes) ? shapes : [ shapes ];\n    this.addShapeList(shapes, options);\n    this.computeFaceNormals();\n    // can't really use automatic vertex normals\n    // as then front and back sides get smoothed too\n    // should do separate smoothing just for sides\n    //this.computeVertexNormals();\n    //console.log(\"took\", (Date.now() - startTime));\n  }\n  addShapeList(shapes: Shape[], options?: any) {\n    const sl = shapes.length;\n    for (let s = 0; s < sl; s ++) {\n      const shape = shapes[ s ];\n      this.addShape(shape, options);\n    }\n  }\n  addShape(shape: Shape, options?: any) {\n    const amount = options.amount !== undefined ? options.amount : 100;\n    let bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 6; // 10\n    let bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 2; // 8\n    let bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n    let bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true; // false\n    const curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n    const steps = options.steps !== undefined ? options.steps : 1;\n    const extrudePath = options.extrudePath;\n    let extrudePts;\n    let extrudeByPath = false;\n    // Use default WorldUVGenerator if no UV generators are specified.\n    const uvgen: UVGenerator = options.UVGenerator !== undefined ? options.UVGenerator : ExtrudeGeometry.WorldUVGenerator;\n    let splineTube, binormal, normal, position2;\n    if (extrudePath) {\n      extrudePts = extrudePath.getSpacedPoints(steps);\n      extrudeByPath = true;\n      bevelEnabled = false; // bevels not supported for path extrusion\n      // SETUP TNB variables\n      // TODO1 - have a .isClosed in spline?\n      splineTube = options.frames !== undefined ? options.frames : extrudePath.computeFrenetFrames(steps, false);\n      // console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n      binormal = new Vector3();\n      normal = new Vector3();\n      position2 = new Vector3();\n    }\n    // Safeguards if bevels are not enabled\n    if (! bevelEnabled) {\n      bevelSegments = 0;\n      bevelThickness = 0;\n      bevelSize = 0;\n    }\n    // Variables initialization\n    const scope = this;\n    const shapesOffset = this.vertices.length;\n    const shapePoints = shape.extractPoints(curveSegments);\n    let vertices = shapePoints.shape;\n    const holes = shapePoints.holes;\n    let reverse = ! ShapeUtils.isClockWise(vertices);\n    if (reverse) {\n      vertices = vertices.reverse();\n      // Maybe we should also check if holes are in the opposite direction, just to be safe ...\n      for (let h = 0, hl = holes.length; h < hl; h ++) {\n        const ahole = holes[ h ];\n        if (ShapeUtils.isClockWise(ahole)) {\n          holes[ h ] = ahole.reverse();\n        }\n      }\n      reverse = false; // If vertices are in order now, we shouldn't need to worry about them again (hopefully)!\n    }\n    const faces = ShapeUtils.triangulateShape(vertices, holes);\n    /* Vertices */\n    const contour = vertices; // vertices has all points but contour has only points of circumference\n    for (let h = 0, hl = holes.length; h < hl; h ++) {\n      const ahole = holes[ h ];\n      vertices = vertices.concat(ahole);\n    }\n    function scalePt2(pt: Vector2, vec: Vector2, size: number): Vector2 {\n      if (! vec) console.error(\"THREE.ExtrudeGeometry: vec does not exist\");\n      return vec.clone().multiplyScalar(size).add(pt);\n    }\n    const vlen = vertices.length;\n    const flen = faces.length;\n    // Find directions for point movement\n    function getBevelVec(inPt: Vector2, inPrev: Vector2, inNext: Vector2): Vector2 {\n      // computes for inPt the corresponding point inPt' on a new contour\n      //   shifted by 1 unit (length of normalized vector) to the left\n      // if we walk along contour clockwise, this new contour is outside the old one\n      //\n      // inPt' is the intersection of the two lines parallel to the two\n      //  adjacent edges of inPt at a distance of 1 unit on the left side.\n      let v_trans_x, v_trans_y, shrink_by = 1;    // resulting translation vector for inPt\n      // good reading for geometry algorithms (here: line-line intersection)\n      // http://geomalgorithms.com/a05-_intersect-1.html\n      const v_prev_x = inPt.x - inPrev.x, v_prev_y = inPt.y - inPrev.y;\n      const v_next_x = inNext.x - inPt.x, v_next_y = inNext.y - inPt.y;\n      const v_prev_lensq = (v_prev_x * v_prev_x + v_prev_y * v_prev_y);\n      // check for collinear edges\n      const collinear0 = (v_prev_x * v_next_y - v_prev_y * v_next_x);\n      if (Math.abs(collinear0) > Number.EPSILON) {\n        // not collinear\n        // length of vectors for normalizing\n        const v_prev_len = Math.sqrt(v_prev_lensq);\n        const v_next_len = Math.sqrt(v_next_x * v_next_x + v_next_y * v_next_y);\n        // shift adjacent points by unit vectors to the left\n        const ptPrevShift_x = (inPrev.x - v_prev_y / v_prev_len);\n        const ptPrevShift_y = (inPrev.y + v_prev_x / v_prev_len);\n        const ptNextShift_x = (inNext.x - v_next_y / v_next_len);\n        const ptNextShift_y = (inNext.y + v_next_x / v_next_len);\n        // scaling factor for v_prev to intersection point\n        const sf = ((ptNextShift_x - ptPrevShift_x) * v_next_y -\n          (ptNextShift_y - ptPrevShift_y) * v_next_x) /\n          (v_prev_x * v_next_y - v_prev_y * v_next_x);\n        // vector from inPt to intersection point\n        v_trans_x = (ptPrevShift_x + v_prev_x * sf - inPt.x);\n        v_trans_y = (ptPrevShift_y + v_prev_y * sf - inPt.y);\n        // Don't normalize!, otherwise sharp corners become ugly\n        //  but prevent crazy spikes\n        const v_trans_lensq = (v_trans_x * v_trans_x + v_trans_y * v_trans_y);\n        if (v_trans_lensq <= 2) {\n          return new Vector2(v_trans_x, v_trans_y);\n        } else {\n          shrink_by = Math.sqrt(v_trans_lensq / 2);\n        }\n      } else {\n        // handle special case of collinear edges\n        let direction_eq = false;    // assumes: opposite\n        if (v_prev_x > Number.EPSILON) {\n          if (v_next_x > Number.EPSILON) {\n            direction_eq = true;\n          }\n        } else {\n          if (v_prev_x < - Number.EPSILON) {\n            if (v_next_x < - Number.EPSILON) {\n              direction_eq = true;\n            }\n          } else {\n            if (Math.sign(v_prev_y) === Math.sign(v_next_y)) {\n              direction_eq = true;\n            }\n          }\n        }\n        if (direction_eq) {\n          // console.log(\"Warning: lines are a straight sequence\");\n          v_trans_x = - v_prev_y;\n          v_trans_y =  v_prev_x;\n          shrink_by = Math.sqrt(v_prev_lensq);\n        } else {\n          // console.log(\"Warning: lines are a straight spike\");\n          v_trans_x = v_prev_x;\n          v_trans_y = v_prev_y;\n          shrink_by = Math.sqrt(v_prev_lensq / 2);\n        }\n      }\n      return new Vector2(v_trans_x / shrink_by, v_trans_y / shrink_by);\n    }\n    const contourMovements = [];\n    for (let i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++) {\n      if (j === il) j = 0;\n      if (k === il) k = 0;\n      //  (j)---(i)---(k)\n      // console.log('i,j,k', i, j , k)\n      contourMovements[ i ] = getBevelVec(contour[ i ], contour[ j ], contour[ k ]);\n    }\n    const holesMovements = [];\n    let verticesMovements = contourMovements.concat();\n    for (let h = 0, hl = holes.length; h < hl; h ++) {\n      const ahole = holes[ h ];\n      const oneHoleMovements = [];\n      for (let i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++) {\n        if (j === il) j = 0;\n        if (k === il) k = 0;\n        //  (j)---(i)---(k)\n        oneHoleMovements[ i ] = getBevelVec(ahole[ i ], ahole[ j ], ahole[ k ]);\n      }\n      holesMovements.push(oneHoleMovements);\n      verticesMovements = verticesMovements.concat(oneHoleMovements);\n    }\n    // Loop bevelSegments, 1 for the front, 1 for the back\n    for (let b = 0; b < bevelSegments; b ++) {\n      //for (b = bevelSegments; b > 0; b --) {\n      const t = b / bevelSegments;\n      const z = bevelThickness * Math.cos(t * Math.PI / 2);\n      const bs = bevelSize * Math.sin(t * Math.PI / 2);\n      // contract shape\n      for (let i = 0, il = contour.length; i < il; i ++) {\n        const vert = scalePt2(contour[ i ], contourMovements[ i ], bs);\n        v(vert.x, vert.y,  - z);\n      }\n      // expand holes\n      for (let h = 0, hl = holes.length; h < hl; h ++) {\n        const ahole = holes[ h ];\n        const oneHoleMovements = holesMovements[ h ];\n        for (let i = 0, il = ahole.length; i < il; i ++) {\n          const vert = scalePt2(ahole[ i ], oneHoleMovements[ i ], bs);\n          v(vert.x, vert.y,  - z);\n        }\n      }\n    }\n    const bs = bevelSize;\n    // Back facing vertices\n    for (let i = 0; i < vlen; i ++) {\n      const vert = bevelEnabled ? scalePt2(vertices[ i ], verticesMovements[ i ], bs) : vertices[ i ];\n      if (! extrudeByPath) {\n        v(vert.x, vert.y, 0);\n      } else {\n        // v(vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x);\n        normal.copy(splineTube.normals[ 0 ]).multiplyScalar(vert.x);\n        binormal.copy(splineTube.binormals[ 0 ]).multiplyScalar(vert.y);\n        position2.copy(extrudePts[ 0 ]).add(normal).add(binormal);\n        v(position2.x, position2.y, position2.z);\n      }\n    }\n    // Add stepped vertices...\n    // Including front facing vertices\n    for (let s = 1; s <= steps; s ++) {\n      for (let i = 0; i < vlen; i ++) {\n        const vert = bevelEnabled ? scalePt2(vertices[ i ], verticesMovements[ i ], bs) : vertices[ i ];\n        if (! extrudeByPath) {\n          v(vert.x, vert.y, amount / steps * s);\n        } else {\n          // v(vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x);\n          normal.copy(splineTube.normals[ s ]).multiplyScalar(vert.x);\n          binormal.copy(splineTube.binormals[ s ]).multiplyScalar(vert.y);\n          position2.copy(extrudePts[ s ]).add(normal).add(binormal);\n          v(position2.x, position2.y, position2.z);\n        }\n      }\n    }\n    // Add bevel segments planes\n    //for (let b = 1; b <= bevelSegments; b ++) {\n    for (let b = bevelSegments - 1; b >= 0; b --) {\n      const t = b / bevelSegments;\n      const z = bevelThickness * Math.cos(t * Math.PI / 2);\n      const bs = bevelSize * Math.sin(t * Math.PI / 2);\n      // contract shape\n      for (let i = 0, il = contour.length; i < il; i ++) {\n        const vert = scalePt2(contour[ i ], contourMovements[ i ], bs);\n        v(vert.x, vert.y,  amount + z);\n      }\n      // expand holes\n      for (let h = 0, hl = holes.length; h < hl; h ++) {\n        const ahole = holes[ h ];\n        const oneHoleMovements = holesMovements[ h ];\n        for (let i = 0, il = ahole.length; i < il; i ++) {\n          const vert = scalePt2(ahole[ i ], oneHoleMovements[ i ], bs);\n          if (! extrudeByPath) {\n            v(vert.x, vert.y,  amount + z);\n          } else {\n            v(vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z);\n          }\n        }\n      }\n    }\n    /* Faces */\n    // Top and bottom faces\n    buildLidFaces();\n    // Sides faces\n    buildSideFaces();\n    /////  Internal functions\n    function buildLidFaces() {\n      if (bevelEnabled) {\n        let layer = 0; // steps + 1\n        let offset = vlen * layer;\n        // Bottom faces\n        for (let i = 0; i < flen; i ++) {\n          const face = faces[ i ];\n          f3(face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset);\n        }\n        layer = steps + bevelSegments * 2;\n        offset = vlen * layer;\n        // Top faces\n        for (let i = 0; i < flen; i ++) {\n          const face = faces[ i ];\n          f3(face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset);\n        }\n      } else {\n        // Bottom faces\n        for (let i = 0; i < flen; i ++) {\n          const face = faces[ i ];\n          f3(face[ 2 ], face[ 1 ], face[ 0 ]);\n        }\n        // Top faces\n        for (let i = 0; i < flen; i ++) {\n          const face = faces[ i ];\n          f3(face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps);\n        }\n      }\n    }\n    // Create faces for the z-sides of the shape\n    function buildSideFaces() {\n      let layeroffset = 0;\n      sidewalls(contour, layeroffset);\n      layeroffset += contour.length;\n      for (let h = 0, hl = holes.length; h < hl; h ++) {\n        const ahole = holes[ h ];\n        sidewalls(ahole, layeroffset);\n        //, true\n        layeroffset += ahole.length;\n      }\n    }\n    function sidewalls(contour: any[], layeroffset: number): void {\n      let i = contour.length;\n      while (-- i >= 0) {\n        let j = i;\n        let k = i - 1;\n        if (k < 0) k = contour.length - 1;\n        //console.log('b', i,j, i-1, k,vertices.length);\n        const sl = steps + bevelSegments * 2;\n        for (let s = 0; s < sl; s ++) {\n          const slen1 = vlen * s;\n          const slen2 = vlen * (s + 1);\n          const a = layeroffset + j + slen1,\n            b = layeroffset + k + slen1,\n            c = layeroffset + k + slen2,\n            d = layeroffset + j + slen2;\n          f4(a, b, c, d, contour, s, sl, j, k);\n        }\n      }\n    }\n    function v(x: number, y: number, z: number): void {\n      scope.vertices.push(new Vector3(x, y, z));\n    }\n    function f3(a: number, b: number, c: number): void {\n      a += shapesOffset;\n      b += shapesOffset;\n      c += shapesOffset;\n      scope.faces.push(new Face3(a, b, c, null, null, 0));\n      const uvs = uvgen.generateTopUV(scope, a, b, c);\n      scope.faceVertexUvs[ 0 ].push(uvs);\n    }\n    function f4(a: number, b: number, c: number, d: number, wallContour: any, stepIndex: number, stepsLength: number, contourIndex1: number, contourIndex2: number): void {\n      a += shapesOffset;\n      b += shapesOffset;\n      c += shapesOffset;\n      d += shapesOffset;\n      scope.faces.push(new Face3(a, b, d, null, null, 1));\n      scope.faces.push(new Face3(b, c, d, null, null, 1));\n      const uvs = uvgen.generateSideWallUV(scope, a, b, c, d);\n      scope.faceVertexUvs[ 0 ].push([ uvs[ 0 ], uvs[ 1 ], uvs[ 3 ] ]);\n      scope.faceVertexUvs[ 0 ].push([ uvs[ 1 ], uvs[ 2 ], uvs[ 3 ] ]);\n    }\n  }\n  private static _WorldUVGenerator = class implements UVGenerator {\n    generateTopUV(geometry: any, indexA: number, indexB: number, indexC: number): Vector2[] {\n      const vertices = geometry.vertices;\n      const a = vertices[ indexA ];\n      const b = vertices[ indexB ];\n      const c = vertices[ indexC ];\n      return [\n        new Vector2(a.x, a.y),\n        new Vector2(b.x, b.y),\n        new Vector2(c.x, c.y)\n      ];\n    }\n    generateSideWallUV(geometry: any, indexA: number, indexB: number, indexC: number, indexD: number): Vector2[] {\n      const vertices = geometry.vertices;\n      const a = vertices[ indexA ];\n      const b = vertices[ indexB ];\n      const c = vertices[ indexC ];\n      const d = vertices[ indexD ];\n      if (Math.abs(a.y - b.y) < 0.01) {\n        return [\n          new Vector2(a.x, 1 - a.z),\n          new Vector2(b.x, 1 - b.z),\n          new Vector2(c.x, 1 - c.z),\n          new Vector2(d.x, 1 - d.z)\n        ];\n      } else {\n        return [\n          new Vector2(a.y, 1 - a.z),\n          new Vector2(b.y, 1 - b.z),\n          new Vector2(c.y, 1 - c.z),\n          new Vector2(d.y, 1 - d.z)\n        ];\n      }\n    }\n  };\n  static WorldUVGenerator = new ExtrudeGeometry._WorldUVGenerator();\n}\nexport interface UVGenerator {\n  generateTopUV(geometry: any, indexA: number, indexB: number, indexC: number): Vector2[];\n  generateSideWallUV(geometry: any, indexA: number, indexB: number, indexC: number, indexD: number): Vector2[];\n}\n","/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * Extensible curve object\n *\n * Some common of Curve methods\n * .getPoint(t), getTangent(t)\n * .getPointAt(u), getTangentAt(u)\n * .getPoints(), .getSpacedPoints()\n * .getLength()\n * .updateArcLengths()\n *\n * This following classes subclasses THREE.Curve:\n *\n * -- 2d classes --\n * THREE.LineCurve\n * THREE.QuadraticBezierCurve\n * THREE.CubicBezierCurve\n * THREE.SplineCurve\n * THREE.ArcCurve\n * THREE.EllipseCurve\n *\n * -- 3d classes --\n * THREE.LineCurve3\n * THREE.QuadraticBezierCurve3\n * THREE.CubicBezierCurve3\n * THREE.SplineCurve3\n *\n * A series of curves can be represented as a THREE.CurvePath\n *\n **/\n/**************************************************************\n *  Abstract Curve base class\n **************************************************************/\nimport { _Math } from \"../../math/Math\";\nimport { Vector2 } from \"../../math/Vector2\";\nimport { Vector3 } from \"../../math/Vector3\";\nimport { Matrix4 } from \"../../math/Matrix4\";\ninterface Vector {\n  clone(): this;\n  distanceTo(v: Vector): number;\n  sub(v: Vector);\n}\nexport class Curve<T extends Vector> {\n  __arcLengthDivisions: any;\n  cacheArcLengths: any;\n  needsUpdate: boolean;\n  // Virtual base class method to overwrite and implement in subclasses\n  //  - t [0 .. 1]\n  getPoint(t: number): T {\n    console.warn(\"THREE.Curve: Warning, getPoint() not implemented!\");\n    return null;\n  }\n  // Get point at relative position in curve according to arc length\n  // - u [0 .. 1]\n  getPointAt(u: number): T {\n    const t: number = this.getUtoTmapping(u);\n    return this.getPoint(t);\n  }\n  // Get sequence of points using getPoint(t)\n  getPoints(divisions: number = 5): T[] {\n    const points: T[] = [];\n    for (let d = 0; d <= divisions; d ++) {\n      points.push(this.getPoint(d / divisions));\n    }\n    return points;\n  }\n  // Get sequence of points using getPointAt(u)\n  getSpacedPoints(divisions: number = 5): T[] {\n    const points: T[] = [];\n    for (let d = 0; d <= divisions; d ++) {\n      points.push(this.getPointAt(d / divisions));\n    }\n    return points;\n  }\n  // Get total curve arc length\n  getLength(): number {\n    const lengths = this.getLengths();\n    return lengths[lengths.length - 1];\n  }\n  // Get list of cumulative segment lengths\n  getLengths(divisions?: number): number[] {\n    if (! divisions) divisions = (this.__arcLengthDivisions) ? (this.__arcLengthDivisions) : 200;\n    if (this.cacheArcLengths\n      && (this.cacheArcLengths.length === divisions + 1)\n      && ! this.needsUpdate) {\n      //console.log(\"cached\", this.cacheArcLengths);\n      return this.cacheArcLengths;\n    }\n    this.needsUpdate = false;\n    const cache: number[] = [];\n    let current: T;\n    let last: T = this.getPoint(0);\n    let sum: number = 0;\n    cache.push(0);\n    for (let p = 1; p <= divisions; p ++) {\n      current = this.getPoint(p / divisions);\n      sum += current.distanceTo(last);\n      cache.push(sum);\n      last = current;\n    }\n    this.cacheArcLengths = cache;\n    return cache; // { sums: cache, sum:sum }; Sum is in the last element.\n  }\n  updateArcLengths(): void {\n    this.needsUpdate = true;\n    this.getLengths();\n  }\n  // Given u (0 .. 1), get a t to find p. This gives you points which are equidistant\n  getUtoTmapping(u: number, distance?: number): number {\n    const arcLengths = this.getLengths();\n    let i = 0;\n    const il = arcLengths.length;\n    let targetArcLength; // The targeted u distance value to get\n    if (distance) {\n      targetArcLength = distance;\n    } else {\n      targetArcLength = u * arcLengths[il - 1];\n    }\n    //const time = Date.now();\n    // binary search for the index with largest value smaller than target u distance\n    let low = 0, high = il - 1, comparison;\n    while (low <= high) {\n      i = Math.floor(low + (high - low) / 2); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n      comparison = arcLengths[i] - targetArcLength;\n      if (comparison < 0) {\n        low = i + 1;\n      } else if (comparison > 0) {\n        high = i - 1;\n      } else {\n        high = i;\n        break;\n        // DONE\n      }\n    }\n    i = high;\n    //console.log('b' , i, low, high, Date.now()- time);\n    if (arcLengths[i] === targetArcLength) {\n      const t = i / (il - 1);\n      return t;\n    }\n    // we could get finer grain at lengths, or use simple interpolation between two points\n    const lengthBefore = arcLengths[i];\n    const lengthAfter = arcLengths[i + 1];\n    const segmentLength = lengthAfter - lengthBefore;\n    // determine where we are between the 'before' and 'after' points\n    const segmentFraction = (targetArcLength - lengthBefore) / segmentLength;\n    // add that fractional amount to t\n    const t = (i + segmentFraction) / (il - 1);\n    return t;\n  }\n  // Returns a unit vector tangent at t\n  // In case any sub curve does not implement its tangent derivation,\n  // 2 points a small delta apart will be used to find its gradient\n  // which seems to give a reasonable approximation\n  getTangent(t: number): T {\n    const delta = 0.0001;\n    let t1 = t - delta;\n    let t2 = t + delta;\n    // Capping in case of danger\n    if (t1 < 0) t1 = 0;\n    if (t2 > 1) t2 = 1;\n    const pt1 = this.getPoint(t1);\n    const pt2 = this.getPoint(t2);\n    const vec = pt2.clone().sub(pt1);\n    return vec.normalize();\n  }\n  getTangentAt(u: number): T {\n    const t = this.getUtoTmapping(u);\n    return this.getTangent(t);\n  }\n  computeFrenetFrames(segments, closed) {\n    // see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\n    let normal = new Vector3();\n    let tangents: Vector3[] = [];\n    let normals: Vector3[] = [];\n    let binormals: Vector3[] = [];\n    let vec = new Vector3();\n    let mat = new Matrix4();\n    let i, u, theta;\n    // compute the tangent vectors for each segment on the curve\n    for (i = 0; i <= segments; i ++) {\n      u = i / segments;\n      tangents[ i ] = <any>this.getTangentAt(u);\n      tangents[ i ].normalize();\n    }\n    // select an initial normal vector perpendicular to the first tangent vector,\n    // and in the direction of the minimum tangent xyz component\n    normals[ 0 ] = new Vector3();\n    binormals[ 0 ] = new Vector3();\n    let min = Number.MAX_VALUE;\n    let tx = Math.abs(tangents[ 0 ].x);\n    let ty = Math.abs(tangents[ 0 ].y);\n    let tz = Math.abs(tangents[ 0 ].z);\n    if (tx <= min) {\n      min = tx;\n      normal.set(1, 0, 0);\n    }\n    if (ty <= min) {\n      min = ty;\n      normal.set(0, 1, 0);\n    }\n    if (tz <= min) {\n      normal.set(0, 0, 1);\n    }\n    vec.crossVectors(tangents[ 0 ], normal).normalize();\n    normals[ 0 ].crossVectors(tangents[ 0 ], vec);\n    binormals[ 0 ].crossVectors(tangents[ 0 ], normals[ 0 ]);\n    // compute the slowly-varying normal and binormal vectors for each segment on the curve\n    for (i = 1; i <= segments; i ++) {\n      normals[ i ] = normals[ i - 1 ].clone();\n      binormals[ i ] = binormals[ i - 1 ].clone();\n      vec.crossVectors(tangents[ i - 1 ], tangents[ i ]);\n      if (vec.length() > Number.EPSILON) {\n        vec.normalize();\n        theta = Math.acos(_Math.clamp(tangents[ i - 1 ].dot(tangents[ i ]), - 1, 1)); // clamp for floating pt errors\n        normals[ i ].applyMatrix4(mat.makeRotationAxis(vec, theta));\n      }\n      binormals[ i ].crossVectors(tangents[ i ], normals[ i ]);\n    }\n    // if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n    if (closed === true) {\n      theta = Math.acos(_Math.clamp(normals[ 0 ].dot(normals[ segments ]), - 1, 1));\n      theta /= segments;\n      if (tangents[ 0 ].dot(vec.crossVectors(normals[ 0 ], normals[ segments ])) > 0) {\n        theta = - theta;\n      }\n      for (i = 1; i <= segments; i ++) {\n        // twist a little...\n        normals[ i ].applyMatrix4(mat.makeRotationAxis(tangents[ i ], theta * i));\n        binormals[ i ].crossVectors(tangents[ i ], normals[ i ]);\n      }\n    }\n    return {\n      tangents: tangents,\n      normals: normals,\n      binormals: binormals\n    };\n  }\n  // TODO: Transformation for Curves?\n  /**************************************************************\n   *  3D Curves\n   **************************************************************/\n  // A Factory method for creating new curve subclasses\n  static create(constructor: any, getPointFunc: (t: number) => Vector3): any {\n    constructor.prototype = Object.create(Curve.prototype);\n    constructor.prototype.constructor = constructor;\n    constructor.prototype.getPoint = getPointFunc;\n    return constructor;\n  }\n}\nexport class Curve2 extends Curve<Vector2> {}\nexport class Curve3 extends Curve<Vector3> {}\n/*\n// For computing of Frenet frames, exposing the tangents, normals and binormals the spline\nstatic FrenetFrames = class {\n  tangents: Vector3[];\n  normals: Vector3[];\n  binormals: Vector3[];\n  constructor(path: Curve<Vector3>, segments: number, closed: boolean) {\n    const normal = new Vector3();\n    const tangents: Vector3[] = [];\n    const normals: Vector3[] = [];\n    const binormals: Vector3[] = [];\n    const vec = new Vector3();\n    const mat = new Matrix4();\n    const numpoints = segments + 1;\n    // expose internals\n    this.tangents = tangents;\n    this.normals = normals;\n    this.binormals = binormals;\n    // compute the tangent vectors for each segment on the path\n    for (let i = 0; i < numpoints; i ++) {\n      const u = i / (numpoints - 1);\n      tangents[i] = path.getTangentAt(u);\n      tangents[i].normalize();\n    }\n    initialNormal3();\n    //function initialNormal1(lastBinormal) {\n    //  // fixed start binormal. Has dangers of 0 vectors\n    //  normals[0] = new THREE.Vector3();\n    //  binormals[0] = new THREE.Vector3();\n    //  if (lastBinormal===undefined) lastBinormal = new THREE.Vector3(0, 0, 1);\n    //  normals[0].crossVectors(lastBinormal, tangents[0]).normalize();\n    //  binormals[0].crossVectors(tangents[0], normals[0]).normalize();\n    //}\n    //function initialNormal2() {\n    //  // This uses the Frenet-Serret formula for deriving binormal\n    //  const t2 = path.getTangentAt(epsilon);\n    //  normals[0] = new THREE.Vector3().subVectors(t2, tangents[0]).normalize();\n    //  binormals[0] = new THREE.Vector3().crossVectors(tangents[0], normals[0]);\n    //  normals[0].crossVectors(binormals[0], tangents[0]).normalize(); // last binormal x tangent\n    //  binormals[0].crossVectors(tangents[0], normals[0]).normalize();\n    //}\n    function initialNormal3() {\n      // select an initial normal vector perpendicular to the first tangent vector,\n      // and in the direction of the smallest tangent xyz component\n      normals[0] = new Vector3();\n      binormals[0] = new Vector3();\n      let smallest = Number.MAX_VALUE;\n      const tx = Math.abs(tangents[0].x);\n      const ty = Math.abs(tangents[0].y);\n      const tz = Math.abs(tangents[0].z);\n      if (tx <= smallest) {\n        smallest = tx;\n        normal.set(1, 0, 0);\n      }\n      if (ty <= smallest) {\n        smallest = ty;\n        normal.set(0, 1, 0);\n      }\n      if (tz <= smallest) {\n        normal.set(0, 0, 1);\n      }\n      vec.crossVectors(tangents[0], normal).normalize();\n      normals[0].crossVectors(tangents[0], vec);\n      binormals[0].crossVectors(tangents[0], normals[0]);\n    }\n    // compute the slowly-varying normal and binormal vectors for each segment on the path\n    for (let i = 1; i < numpoints; i ++) {\n      normals[i] = normals[i - 1].clone();\n      binormals[i] = binormals[i - 1].clone();\n      vec.crossVectors(tangents[i - 1], tangents[i]);\n      if (vec.length() > Number.EPSILON) {\n        vec.normalize();\n        const theta = Math.acos(_Math.clamp(tangents[i - 1].dot(tangents[i]), - 1, 1)); // clamp for floating pt errors\n        normals[i].applyMatrix4(mat.makeRotationAxis(vec, theta));\n      }\n      binormals[i].crossVectors(tangents[i], normals[i]);\n    }\n    // if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n    if (closed) {\n      let theta = Math.acos(_Math.clamp(normals[0].dot(normals[numpoints - 1]), - 1, 1));\n      theta /= (numpoints - 1);\n      if (tangents[0].dot(vec.crossVectors(normals[0], normals[numpoints - 1])) > 0) {\n        theta = - theta;\n      }\n      for (let i = 1; i < numpoints; i ++) {\n        // twist a little...\n        normals[i].applyMatrix4(mat.makeRotationAxis(tangents[i], theta * i));\n        binormals[i].crossVectors(tangents[i], normals[i]);\n      }\n    }\n  }\n};\n*/\n","import { Curve } from \"../core/Curve\";\nimport { Vector2 } from \"../../math/Vector2\";\n/**************************************************************\n *  Line\n **************************************************************/\nexport class LineCurve extends Curve<Vector2> {\n  v1: Vector2;\n  v2: Vector2;\n  readonly isLineCurve: boolean = true;\n  constructor(v1: Vector2, v2: Vector2) {\n    super();\n    this.v1 = v1;\n    this.v2 = v2;\n  }\n  getPoint(t: number): Vector2 {\n    if (t === 1) {\n      return this.v2.clone();\n    }\n    let point = this.v2.clone().sub(this.v1);\n    point.multiplyScalar(t).add(this.v1);\n    return point;\n  };\n  // Line curve is linear, so we can overwrite default getPointAt\n  getPointAt(u: number): Vector2 {\n    return this.getPoint(u);\n  }\n  getTangent(t: number): Vector2 {\n    let tangent = this.v2.clone().sub(this.v1);\n    return tangent.normalize();\n  }\n}\n","/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n */\nexport class CurveUtils {\n  static tangentQuadraticBezier(t: number, p0: number, p1: number, p2: number): number {\n    return 2 * (1 - t) * (p1 - p0) + 2 * t * (p2 - p1);\n  }\n  // Puay Bing, thanks for helping with this derivative!\n  static tangentCubicBezier(t: number, p0: number, p1: number, p2: number, p3: number): number {\n    return - 3 * p0 * (1 - t) * (1 - t)  +\n      3 * p1 * (1 - t) * (1 - t) - 6 * t * p1 * (1 - t) +\n      6 * t *  p2 * (1 - t) - 3 * t * t * p2 +\n      3 * t * t * p3;\n  }\n  static tangentSpline(t: number, p0: number, p1: number, p2: number, p3: number): number {\n    // To check if my formulas are correct\n    let h00 = 6 * t * t - 6 * t;   // derived from 2t^3 − 3t^2 + 1\n    let h10 = 3 * t * t - 4 * t + 1; // t^3 − 2t^2 + t\n    let h01 = - 6 * t * t + 6 * t;   // − 2t3 + 3t2\n    let h11 = 3 * t * t - 2 * t;  // t3 − t2\n    return h00 + h10 + h01 + h11;\n  }\n  // Catmull-Rom\n  static interpolate(p0: number, p1: number, p2: number, p3: number, t: number): number {\n    let v0 = (p2 - p0) * 0.5;\n    let v1 = (p3 - p1) * 0.5;\n    let t2 = t * t;\n    let t3 = t * t2;\n    return (2 * p1 - 2 * p2 + v0 + v1) * t3 + (- 3 * p1 + 3 * p2 - 2 * v0 - v1) * t2 + v0 * t + p1;\n  }\n}\n","import { Curve } from \"../core/Curve\";\nimport { Vector2 } from \"../../math/Vector2\";\nimport { CurveUtils } from \"../CurveUtils\";\n/**************************************************************\n *  Spline curve\n **************************************************************/\nexport class SplineCurve extends Curve<Vector2> {\n  points: Vector2[];\n  readonly isSplineCurve: boolean = true;\n  constructor(points: Vector2[] = [] /* array of Vector2 */) {\n    super();\n    this.points = points;\n  }\n  getPoint(t: number): Vector2 {\n    let points = this.points;\n    let point = (points.length - 1) * t;\n    let intPoint = Math.floor(point);\n    let weight = point - intPoint;\n    let point0 = points[intPoint === 0 ? intPoint : intPoint - 1];\n    let point1 = points[intPoint];\n    let point2 = points[intPoint > points.length - 2 ? points.length - 1 : intPoint + 1];\n    let point3 = points[intPoint > points.length - 3 ? points.length - 1 : intPoint + 2];\n    let interpolate = CurveUtils.interpolate;\n    return new Vector2(\n      interpolate(point0.x, point1.x, point2.x, point3.x, weight),\n      interpolate(point0.y, point1.y, point2.y, point3.y, weight)\n    );\n  };\n}\n","import { Curve } from \"../core/Curve\";\nimport { Vector2 } from \"../../math/Vector2\";\n/**************************************************************\n *  Ellipse curve\n **************************************************************/\nexport class EllipseCurve extends Curve<Vector2> {\n  aX: number;\n  aY: number;\n  xRadius: number;\n  yRadius: number;\n  aStartAngle: number;\n  aEndAngle: number;\n  aClockwise: boolean;\n  aRotation: number;\n  readonly isEllipseCurve: boolean = true;\n  constructor(aX: number, aY: number, xRadius: number, yRadius: number, aStartAngle: number, aEndAngle: number, aClockwise: boolean, aRotation: number = 0) {\n    super();\n    this.aX = aX;\n    this.aY = aY;\n    this.xRadius = xRadius;\n    this.yRadius = yRadius;\n    this.aStartAngle = aStartAngle;\n    this.aEndAngle = aEndAngle;\n    this.aClockwise = aClockwise;\n    this.aRotation = aRotation;\n  }\n  getPoint(t: number): Vector2 {\n    let twoPi = Math.PI * 2;\n    let deltaAngle = this.aEndAngle - this.aStartAngle;\n    let samePoints = Math.abs(deltaAngle) < Number.EPSILON;\n    // ensures that deltaAngle is 0 .. 2 PI\n    while (deltaAngle < 0) deltaAngle += twoPi;\n    while (deltaAngle > twoPi) deltaAngle -= twoPi;\n    if (deltaAngle < Number.EPSILON) {\n      if (samePoints) {\n        deltaAngle = 0;\n      } else {\n        deltaAngle = twoPi;\n      }\n    }\n    if (this.aClockwise === true && ! samePoints) {\n      if (deltaAngle === twoPi) {\n        deltaAngle = - twoPi;\n      } else {\n        deltaAngle = deltaAngle - twoPi;\n      }\n    }\n    let angle = this.aStartAngle + t * deltaAngle;\n    let x = this.aX + this.xRadius * Math.cos(angle);\n    let y = this.aY + this.yRadius * Math.sin(angle);\n    if (this.aRotation !== 0) {\n      let cos = Math.cos(this.aRotation);\n      let sin = Math.sin(this.aRotation);\n      let tx = x - this.aX;\n      let ty = y - this.aY;\n      // Rotate the point about the center of the ellipse.\n      x = tx * cos - ty * sin + this.aX;\n      y = tx * sin + ty * cos + this.aY;\n    }\n    return new Vector2(x, y);\n  };\n}\n","import { Curve } from \"./Curve\";\nimport { Vector2 } from \"../../math/Vector2\";\nimport { Vector3 } from \"../../math/Vector3\";\nimport { Geometry } from \"../../core/Geometry\";\nimport { LineCurve } from \"../curves/LineCurve\";\nimport { SplineCurve } from \"../curves/SplineCurve\";\nimport { EllipseCurve } from \"../curves/EllipseCurve\";\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n *\n **/\n/**************************************************************\n *  Curved Path - a curve path is simply a array of connected\n *  curves, but retains the api of a curve\n **************************************************************/\nexport class CurvePath {\n  curves: Curve<Vector2>[];\n  autoClose: boolean;\n  needsUpdate: boolean;\n  cacheLengths: number[];\n  constructor() {\n    this.curves = [];\n    this.autoClose = false; // Automatically closes the path\n  }\n  add(curve: Curve<Vector2>): void {\n    this.curves.push(curve);\n  }\n  closePath(): void {\n    // Add a line curve if start and end of lines are not connected\n    let startPoint = this.curves[0].getPoint(0);\n    let endPoint = this.curves[this.curves.length - 1].getPoint(1);\n    if (! startPoint.equals(endPoint)) {\n      this.curves.push(new LineCurve(endPoint, startPoint));\n    }\n  }\n  // To get accurate point with reference to\n  // entire path distance at time t,\n  // following has to be done:\n  // 1. Length of each sub path have to be known\n  // 2. Locate and identify type of curve\n  // 3. Get t for the curve\n  // 4. Return curve.getPointAt(t')\n  getPoint(t: number): Vector2 {\n    let d = t * this.getLength();\n    let curveLengths = this.getCurveLengths();\n    let i = 0;\n    // To think about boundaries points.\n    while (i < curveLengths.length) {\n      if (curveLengths[i] >= d) {\n        let diff = curveLengths[i] - d;\n        let curve = this.curves[i];\n        let segmentLength = curve.getLength();\n        let u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\n        return curve.getPointAt(u);\n      }\n      i ++;\n    }\n    return null;\n    // loop where sum != 0, sum > d , sum+1 <d\n  }\n  // We cannot use the default THREE.Curve getPoint() with getLength() because in\n  // THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n  // getPoint() depends on getLength\n  getLength() {\n    let lens = this.getCurveLengths();\n    return lens[lens.length - 1];\n  }\n  // cacheLengths must be recalculated.\n  updateArcLengths() {\n    this.needsUpdate = true;\n    this.cacheLengths = null;\n    this.getCurveLengths(); // !!!TODO: this.getLengths();\n  }\n  // Compute lengths and cache them\n  // We cannot overwrite getLengths() because UtoT mapping uses it.\n  getCurveLengths() {\n    // We use cache values if curves and cache array are same length\n    if (this.cacheLengths && this.cacheLengths.length === this.curves.length) {\n      return this.cacheLengths;\n    }\n    // Get length of sub-curve\n    // Push sums into cached array\n    let lengths = [], sums = 0;\n    for (let i = 0, l = this.curves.length; i < l; i ++) {\n      sums += this.curves[i].getLength();\n      lengths.push(sums);\n    }\n    this.cacheLengths = lengths;\n    return lengths;\n  }\n  getSpacedPoints(divisions: number = 40): Vector2[] {\n    let points = [];\n    for (let i = 0; i <= divisions; i ++) {\n      points.push(this.getPoint(i / divisions));\n    }\n    if (this.autoClose) {\n      points.push(points[0]);\n    }\n    return points;\n  }\n  getPoints(divisions: number = 12): Vector2[] {\n    let points = [], last;\n    for (let i = 0, curves = this.curves; i < curves.length; i ++) {\n      let curve = curves[i];\n      let resolution = (curve && curve instanceof EllipseCurve) ? divisions * 2\n        : (curve && curve instanceof LineCurve) ? 1\n        : (curve && curve instanceof SplineCurve) ? divisions * curve.points.length\n        : divisions;\n      let pts = curve.getPoints(resolution);\n      for (let j = 0; j < pts.length; j++) {\n        let point = pts[j];\n        if (last && last.equals(point)) continue; // ensures no consecutive points are duplicates\n        points.push(point);\n        last = point;\n      }\n    }\n    if (this.autoClose && points.length > 1 && !points[points.length - 1].equals(points[0])) {\n      points.push(points[0]);\n    }\n    return points;\n  }\n  /**************************************************************\n   *  Create Geometries Helpers\n   **************************************************************/\n  /// Generate geometry from path points (for Line or Points objects)\n  createPointsGeometry(divisions?: number): Geometry {\n    let pts = this.getPoints(divisions);\n    return this.createGeometry(pts);\n  }\n  // Generate geometry from equidistant sampling along the path\n  createSpacedPointsGeometry(divisions?: number): Geometry {\n    let pts = this.getSpacedPoints(divisions);\n    return this.createGeometry(pts);\n  }\n  createGeometry(points: (Vector2 | Vector3)[]): Geometry {\n    let geometry = new Geometry();\n    for (let i = 0, l = points.length; i < l; i ++) {\n      let point = points[i];\n      geometry.vertices.push(new Vector3(point.x, point.y, (point as Vector3).z || 0));\n    }\n    return geometry;\n  }\n}\n","import { Curve } from \"../core/Curve\";\nimport { Vector2 } from \"../../math/Vector2\";\nimport { CurveUtils } from \"../CurveUtils\";\nimport { ShapeUtils } from \"../ShapeUtils\";\n/**************************************************************\n *  Cubic Bezier curve\n **************************************************************/\nexport class CubicBezierCurve extends Curve<Vector2> {\n  v0: Vector2;\n  v1: Vector2;\n  v2: Vector2;\n  v3: Vector2;\n  constructor(v0: Vector2, v1: Vector2, v2: Vector2, v3: Vector2) {\n    super();\n    this.v0 = v0;\n    this.v1 = v1;\n    this.v2 = v2;\n    this.v3 = v3;\n  }\n  getPoint(t: number): Vector2 {\n    let b3 = ShapeUtils.b3;\n    return new Vector2(\n      b3(t, this.v0.x, this.v1.x, this.v2.x, this.v3.x),\n      b3(t, this.v0.y, this.v1.y, this.v2.y, this.v3.y)\n    );\n  }\n  getTangent(t: number): Vector2 {\n    let tangentCubicBezier = CurveUtils.tangentCubicBezier;\n    return new Vector2(\n      tangentCubicBezier(t, this.v0.x, this.v1.x, this.v2.x, this.v3.x),\n      tangentCubicBezier(t, this.v0.y, this.v1.y, this.v2.y, this.v3.y)\n    ).normalize();\n  }\n}\n","import { Curve } from \"../core/Curve\";\nimport { Vector2 } from \"../../math/Vector2\";\nimport { CurveUtils } from \"../CurveUtils\";\nimport { ShapeUtils } from \"../ShapeUtils\";\n/**************************************************************\n *  Quadratic Bezier curve\n **************************************************************/\nexport class QuadraticBezierCurve extends Curve<Vector2> {\n  v0: Vector2;\n  v1: Vector2;\n  v2: Vector2;\n  constructor(v0: Vector2, v1: Vector2, v2: Vector2) {\n    super();\n    this.v0 = v0;\n    this.v1 = v1;\n    this.v2 = v2;\n  }\n  getPoint(t: number): Vector2 {\n    let b2 = ShapeUtils.b2;\n    return new Vector2(\n      b2(t, this.v0.x, this.v1.x, this.v2.x),\n      b2(t, this.v0.y, this.v1.y, this.v2.y)\n    );\n  }\n  getTangent(t: number): Vector2 {\n    let tangentQuadraticBezier = CurveUtils.tangentQuadraticBezier;\n    return new Vector2(\n      tangentQuadraticBezier(t, this.v0.x, this.v1.x, this.v2.x),\n      tangentQuadraticBezier(t, this.v0.y, this.v1.y, this.v2.y)\n    ).normalize();\n  };\n}\n","//import { Shape } from \"./Shape\";\n//import { ShapeUtils } from \"../ShapeUtils\";\nimport { Vector2 } from \"../../math/Vector2\";\nimport { CurvePath } from \"./CurvePath\";\nimport { EllipseCurve } from \"../curves/EllipseCurve\";\nimport { SplineCurve } from \"../curves/SplineCurve\";\nimport { CubicBezierCurve } from \"../curves/CubicBezierCurve\";\nimport { QuadraticBezierCurve } from \"../curves/QuadraticBezierCurve\";\nimport { LineCurve } from \"../curves/LineCurve\";\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * Creates free form 2d path using series of points, lines or curves.\n *\n **/\nexport class Path extends CurvePath {\n  currentPoint: Vector2;\n  constructor(points?: Vector2[]) {\n    super();\n    this.currentPoint = new Vector2();\n    if (points) {\n      this.fromPoints(points);\n    }\n  }\n  fromPoints(vectors: Vector2[]): void {\n    this.moveTo(vectors[0].x, vectors[0].y);\n    for (let i = 1, l = vectors.length; i < l; i ++) {\n      this.lineTo(vectors[i].x, vectors[i].y);\n    }\n  }\n  moveTo(x: number, y: number): void {\n    this.currentPoint.set(x, y); // TODO consider referencing vectors instead of copying?\n  }\n  lineTo(x: number, y: number): void {\n    let curve = new LineCurve(this.currentPoint.clone(), new Vector2(x, y));\n    this.curves.push(curve);\n    this.currentPoint.set(x, y);\n  }\n  quadraticCurveTo(aCPx: number, aCPy: number, aX: number, aY: number): void {\n    let curve = new QuadraticBezierCurve(\n      this.currentPoint.clone(),\n      new Vector2(aCPx, aCPy),\n      new Vector2(aX, aY)\n    );\n    this.curves.push(curve);\n    this.currentPoint.set(aX, aY);\n  }\n  bezierCurveTo(aCP1x: number, aCP1y: number, aCP2x: number, aCP2y: number, aX: number, aY: number): void {\n    let curve = new CubicBezierCurve(\n      this.currentPoint.clone(),\n      new Vector2(aCP1x, aCP1y),\n      new Vector2(aCP2x, aCP2y),\n      new Vector2(aX, aY)\n    );\n    this.curves.push(curve);\n    this.currentPoint.set(aX, aY);\n  }\n  splineThru(pts: Vector2[] /*Array of Vector*/) {\n    let npts = [this.currentPoint.clone()].concat(pts);\n    let curve = new SplineCurve(npts);\n    this.curves.push(curve);\n    this.currentPoint.copy(pts[pts.length - 1]);\n  }\n  arc(aX: number, aY: number, aRadius: number, aStartAngle: number, aEndAngle: number, aClockwise: boolean): void {\n    let x0 = this.currentPoint.x;\n    let y0 = this.currentPoint.y;\n    this.absarc(aX + x0, aY + y0, aRadius,\n      aStartAngle, aEndAngle, aClockwise);\n  }\n  absarc(aX: number, aY: number, aRadius: number, aStartAngle: number, aEndAngle: number, aClockwise: boolean): void {\n    this.absellipse(aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise);\n  }\n  ellipse(aX: number, aY: number, xRadius: number, yRadius: number, aStartAngle: number, aEndAngle: number, aClockwise: boolean, aRotation?: number): void {\n    let x0 = this.currentPoint.x;\n    let y0 = this.currentPoint.y;\n    this.absellipse(aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation);\n  }\n  absellipse(aX: number, aY: number, xRadius: number, yRadius: number, aStartAngle: number, aEndAngle: number, aClockwise: boolean, aRotation?: number): void {\n    let curve = new EllipseCurve(aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation);\n    if (this.curves.length > 0) {\n      // if a previous curve is present, attempt to join\n      let firstPoint = curve.getPoint(0);\n      if (! firstPoint.equals(this.currentPoint)) {\n        this.lineTo(firstPoint.x, firstPoint.y);\n      }\n    }\n    this.curves.push(curve);\n    let lastPoint = curve.getPoint(1);\n    this.currentPoint.copy(lastPoint);\n  }\n}\n","import { Geometry } from \"../core/Geometry\";\nimport { Face3 } from \"../core/Face3\";\nimport { Vector2 } from \"../math/Vector2\";\nimport { Vector3 } from \"../math/Vector3\";\nimport { ShapeUtils } from \"../extras/ShapeUtils\";\nimport { ExtrudeGeometry } from \"./ExtrudeGeometry\";\nimport { Shape } from \"../extras/core/Shape\";\n/**\n * @author jonobr1 / http://jonobr1.com\n *\n * Creates a one-sided polygonal geometry from a path shape. Similar to\n * ExtrudeGeometry.\n *\n * parameters = {\n *\n *  curveSegments: <int>, // number of points on the curves. NOT USED AT THE MOMENT.\n *\n *  material: <int> // material index for front and back faces\n *  uvGenerator: <Object> // object that provides UV generator functions\n *\n * }\n **/\nexport class ShapeGeometry extends Geometry {\n  constructor(shapes: Shape | Shape[], options?: any) {\n    super();\n    this.type = 'ShapeGeometry';\n    if (Array.isArray(shapes)) {\n      this.addShapeList(shapes, options);\n    } else {\n      this.addShapeList([ shapes ], options);\n    }\n    this.computeFaceNormals();\n  }\n  /**\n   * Add an array of shapes to THREE.ShapeGeometry.\n   */\n  addShapeList(shapes: Shape[], options?: any): ShapeGeometry {\n    for (let i = 0, l = shapes.length; i < l; i ++) {\n      this.addShape(shapes[i], options);\n    }\n    return this;\n  };\n  /**\n   * Adds a shape to THREE.ShapeGeometry, based on THREE.ExtrudeGeometry.\n   */\n  addShape(shape: Shape, options?: any): void {\n    if (options === undefined) options = {};\n    const curveSegments: number = options.curveSegments !== undefined ? options.curveSegments : 12;\n    const material = options.material;\n    const uvgen = options.UVGenerator === undefined ? ExtrudeGeometry.WorldUVGenerator : options.UVGenerator;\n    //\n    const shapesOffset: number = this.vertices.length;\n    const shapePoints: { shape: Vector2[], holes: Vector2[][] } = shape.extractPoints(curveSegments);\n    let vertices: Vector2[] = shapePoints.shape;\n    const holes: Vector2[][] = shapePoints.holes;\n    let reverse: boolean = ! ShapeUtils.isClockWise(vertices);\n    if (reverse) {\n      vertices = vertices.reverse();\n      // Maybe we should also check if holes are in the opposite direction, just to be safe...\n      for (let i = 0, l = holes.length; i < l; i ++) {\n        const hole = holes[i];\n        if (ShapeUtils.isClockWise(hole)) {\n          holes[i] = hole.reverse();\n        }\n      }\n      reverse = false;\n    }\n    const faces: number[][] = ShapeUtils.triangulateShape(vertices, holes);\n    // Vertices\n    for (let i = 0, l = holes.length; i < l; i ++) {\n      const hole: Vector2[] = holes[i];\n      vertices = vertices.concat(hole);\n    }\n    //\n    for (let i = 0, vlen = vertices.length; i < vlen; i ++) {\n      const vert: Vector2 = vertices[i];\n      this.vertices.push(new Vector3(vert.x, vert.y, 0));\n    }\n    for (let i = 0, flen = faces.length; i < flen; i ++) {\n      const face: number[] = faces[i];\n      const a: number = face[0] + shapesOffset;\n      const b: number = face[1] + shapesOffset;\n      const c: number = face[2] + shapesOffset;\n      this.faces.push(new Face3(a, b, c, null, null, material));\n      this.faceVertexUvs[0].push(uvgen.generateTopUV(this, a, b, c));\n    }\n  }\n}\n","/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * Defines a 2d shape plane using paths.\n **/\n// STEP 1 Create a path.\n// STEP 2 Turn path into shape.\n// STEP 3 ExtrudeGeometry takes in Shape/Shapes\n// STEP 3a - Extract points from each shape, turn to vertices\n// STEP 3b - Triangulate each shape, add faces.\nimport { Path } from \"./Path\";\nimport { ExtrudeGeometry } from \"../../geometries/ExtrudeGeometry\";\nimport { ShapeGeometry } from \"../../geometries/ShapeGeometry\";\nimport { Vector2 } from \"../../math/Vector2\";\nexport class Shape extends Path {\n  holes: Path[];\n  constructor(points?: Vector2[]) {\n    super(points);\n    this.holes = [];\n  }\n  getPointsHoles(divisions: number): Vector2[][] {\n    const holesPts: Vector2[][] = [];\n    for (let i = 0, l = this.holes.length; i < l; i ++) {\n      holesPts[i] = this.holes[i].getPoints(divisions);\n    }\n    return holesPts;\n  }\n  // Get points of shape and holes (keypoints based on segments parameter)\n  extractAllPoints(divisions: number): { shape: Vector2[], holes: Vector2[][] } {\n    return {\n      shape: this.getPoints(divisions),\n      holes: this.getPointsHoles(divisions)\n    };\n  }\n  extractPoints(divisions: number): { shape: Vector2[], holes: Vector2[][] } {\n    return this.extractAllPoints(divisions);\n  }\n  extrude(options: any): ExtrudeGeometry {\n    console.warn(\"THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead.\");\n    return new ExtrudeGeometry(this, options);\n  }\n  makeGeometry(options: any): ShapeGeometry {\n    console.warn(\"THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead.\");\n    return new ShapeGeometry(this, options);\n  }\n}\n","import { Vector2 } from \"../../math/Vector2\";\nimport { Path } from \"./Path\";\nimport { Shape } from \"./Shape\";\nimport { ShapeUtils } from \"../ShapeUtils\";\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * Creates free form 2d path using series of points, lines or curves.\n *\n **/\n// minimal class for proxing functions to Path. Replaces old \"extractSubpaths()\"\nexport class ShapePath {\n  subPaths: any[];\n  currentPath: any;\n  constructor() {\n    this.subPaths = [];\n    this.currentPath = null;\n  }\n  moveTo(x: number, y: number): void {\n    this.currentPath = new Path();\n    this.subPaths.push(this.currentPath);\n    this.currentPath.moveTo(x, y);\n  }\n  lineTo(x: number, y: number): void {\n    this.currentPath.lineTo(x, y);\n  }\n  quadraticCurveTo(aCPx: number, aCPy: number, aX: number, aY: number): void {\n    this.currentPath.quadraticCurveTo(aCPx, aCPy, aX, aY);\n  }\n  bezierCurveTo(aCP1x: number, aCP1y: number, aCP2x: number, aCP2y: number, aX: number, aY: number): void {\n    this.currentPath.bezierCurveTo(aCP1x, aCP1y, aCP2x, aCP2y, aX, aY);\n  }\n  splineThru(pts: Vector2[]): void {\n    this.currentPath.splineThru(pts);\n  }\n  arc(aX: number, aY: number, aRadius: number, aStartAngle: number, aEndAngle: number, aClockwise: boolean): void {\n    this.currentPath.arc(aX, aY, aStartAngle, aEndAngle, aClockwise);\n  }\n  absarc(aX: number, aY: number, aRadius: number, aStartAngle: number, aEndAngle: number, aClockwise: boolean): void {\n    this.currentPath.absarc(aX, aY, aStartAngle, aEndAngle, aClockwise);\n  }\n  ellipse(aX: number, aY: number, xRadius: number, yRadius: number, aStartAngle: number, aEndAngle: number, aClockwise: boolean, aRotation?: number): void {\n    this.currentPath.ellipse(aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation);\n  }\n  absellipse(aX: number, aY: number, xRadius: number, yRadius: number, aStartAngle: number, aEndAngle: number, aClockwise: boolean, aRotation?: number): void {\n    this.currentPath.absellipse(aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation);\n  }\n  toShapes(isCCW?: boolean, noHoles?: boolean): Shape[] {\n    function toShapesNoHoles(inSubpaths: Path[]): Shape[] {\n      let shapes = [];\n      for (let i = 0, l = inSubpaths.length; i < l; i ++) {\n        let tmpPath = inSubpaths[i];\n        let tmpShape = new Shape();\n        tmpShape.curves = tmpPath.curves;\n        shapes.push(tmpShape);\n      }\n      return shapes;\n    }\n    function isPointInsidePolygon(inPt: Vector2, inPolygon: Vector2[]): boolean {\n      let polyLen = inPolygon.length;\n      // inPt on polygon contour => immediate success    or\n      // toggling of inside/outside at every single! intersection point of an edge\n      //  with the horizontal line through inPt, left of inPt\n      //  not counting lowerY endpoints of edges and whole edges on that line\n      let inside = false;\n      for (let p = polyLen - 1, q = 0; q < polyLen; p = q ++) {\n        let edgeLowPt  = inPolygon[p];\n        let edgeHighPt = inPolygon[q];\n        let edgeDx = edgeHighPt.x - edgeLowPt.x;\n        let edgeDy = edgeHighPt.y - edgeLowPt.y;\n        if (Math.abs(edgeDy) > Number.EPSILON) {\n          // not parallel\n          if (edgeDy < 0) {\n            edgeLowPt  = inPolygon[q]; edgeDx = - edgeDx;\n            edgeHighPt = inPolygon[p]; edgeDy = - edgeDy;\n          }\n          if ((inPt.y < edgeLowPt.y) || (inPt.y > edgeHighPt.y))     continue;\n          if (inPt.y === edgeLowPt.y) {\n            if (inPt.x === edgeLowPt.x)    return  true;    // inPt is on contour ?\n            // continue;        // no intersection or edgeLowPt => doesn't count !!!\n          } else {\n            let perpEdge = edgeDy * (inPt.x - edgeLowPt.x) - edgeDx * (inPt.y - edgeLowPt.y);\n            if (perpEdge === 0)        return  true;    // inPt is on contour ?\n            if (perpEdge < 0)         continue;\n            inside = ! inside;    // true intersection left of inPt\n          }\n        } else {\n          // parallel or collinear\n          if (inPt.y !== edgeLowPt.y)     continue;      // parallel\n          // edge lies on the same horizontal line as inPt\n          if (((edgeHighPt.x <= inPt.x) && (inPt.x <= edgeLowPt.x)) ||\n             ((edgeLowPt.x <= inPt.x) && (inPt.x <= edgeHighPt.x)))    return  true;  // inPt: Point on contour !\n          // continue;\n        }\n      }\n      return  inside;\n    }\n    let isClockWise = ShapeUtils.isClockWise;\n    let subPaths = this.subPaths;\n    if (subPaths.length === 0) return [];\n    if (noHoles === true)  return  toShapesNoHoles(subPaths);\n    let solid, tmpPath, tmpShape, shapes = [];\n    if (subPaths.length === 1) {\n      tmpPath = subPaths[0];\n      tmpShape = new Shape();\n      tmpShape.curves = tmpPath.curves;\n      shapes.push(tmpShape);\n      return shapes;\n    }\n    let holesFirst: boolean = ! isClockWise(subPaths[0].getPoints());\n    holesFirst = isCCW ? ! holesFirst : holesFirst;\n    // console.log(\"Holes first\", holesFirst);\n    let betterShapeHoles: any[] = [];\n    let newShapes: any[] = [];\n    let newShapeHoles: any[] = [];\n    let mainIdx: number = 0;\n    let tmpPoints;\n    newShapes[mainIdx] = undefined;\n    newShapeHoles[mainIdx] = [];\n    for (let i = 0, l = subPaths.length; i < l; i ++) {\n      tmpPath = subPaths[i];\n      tmpPoints = tmpPath.getPoints();\n      solid = isClockWise(tmpPoints);\n      solid = isCCW ? ! solid : solid;\n      if (solid) {\n        if ((! holesFirst) && (newShapes[mainIdx]))  mainIdx ++;\n        newShapes[mainIdx] = { s: new Shape(), p: tmpPoints };\n        newShapes[mainIdx].s.curves = tmpPath.curves;\n        if (holesFirst)  mainIdx ++;\n        newShapeHoles[mainIdx] = [];\n        //console.log('cw', i);\n      } else {\n        newShapeHoles[mainIdx].push({ h: tmpPath, p: tmpPoints[0] });\n        //console.log('ccw', i);\n      }\n    }\n    // only Holes? -> probably all Shapes with wrong orientation\n    if (! newShapes[0])  return  toShapesNoHoles(subPaths);\n    if (newShapes.length > 1) {\n      let ambiguous = false;\n      let toChange = [];\n      for (let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++) {\n        betterShapeHoles[sIdx] = [];\n      }\n      for (let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++) {\n        let sho = newShapeHoles[sIdx];\n        for (let hIdx = 0; hIdx < sho.length; hIdx ++) {\n          let ho = sho[hIdx];\n          let hole_unassigned = true;\n          for (let s2Idx = 0; s2Idx < newShapes.length; s2Idx ++) {\n            if (isPointInsidePolygon(ho.p, newShapes[s2Idx].p)) {\n              if (sIdx !== s2Idx)  toChange.push({ froms: sIdx, tos: s2Idx, hole: hIdx });\n              if (hole_unassigned) {\n                hole_unassigned = false;\n                betterShapeHoles[s2Idx].push(ho);\n              } else {\n                ambiguous = true;\n              }\n            }\n          }\n          if (hole_unassigned) {\n            betterShapeHoles[sIdx].push(ho);\n          }\n        }\n      }\n      // console.log(\"ambiguous: \", ambiguous);\n      if (toChange.length > 0) {\n        // console.log(\"to change: \", toChange);\n        if (! ambiguous)  newShapeHoles = betterShapeHoles;\n      }\n    }\n    let tmpHoles: any;\n    for (let i = 0, il = newShapes.length; i < il; i ++) {\n      tmpShape = newShapes[i].s;\n      shapes.push(tmpShape);\n      tmpHoles = newShapeHoles[i];\n      for (let j = 0, jl = tmpHoles.length; j < jl; j ++) {\n        tmpShape.holes.push(tmpHoles[j].h);\n      }\n    }\n    //console.log(\"shape\", shapes);\n    return shapes;\n  }\n}\n","import { ShapeUtils } from \"../ShapeUtils\";\nimport { ShapePath } from \"./ShapePath\";\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author mrdoob / http://mrdoob.com/\n */\nexport class Font {\n  data: any;\n  readonly isFont: boolean = true;\n  constructor(data: any) {\n    this.data = data;\n  }\n  generateShapes(text: string, size: number, divisions: number): ShapePath[] {\n    function createPaths(text: string) {\n      let chars = String(text).split('');\n      let scale = size / data.resolution;\n      let offset = 0;\n      let paths = [];\n      for (let i = 0; i < chars.length; i ++) {\n        let ret = createPath(chars[i], scale, offset);\n        offset += ret.offset;\n        paths.push(ret.path);\n      }\n      return paths;\n    }\n    function createPath(c: string, scale: number, offset: number): any {\n      let glyph = data.glyphs[c] || data.glyphs['?'];\n      if (! glyph) return;\n      let path = new ShapePath();\n      let pts: any[] = [], b2 = ShapeUtils.b2, b3 = ShapeUtils.b3;\n      let x, y, cpx, cpy, cpx0, cpy0, cpx1, cpy1, cpx2, cpy2, laste;\n      if (glyph.o) {\n        let outline = glyph._cachedOutline || (glyph._cachedOutline = glyph.o.split(' '));\n        for (let i = 0, l = outline.length; i < l; ) {\n          let action = outline[i ++];\n          switch (action) {\n            case 'm': // moveTo\n              x = outline[i ++] * scale + offset;\n              y = outline[i ++] * scale;\n              path.moveTo(x, y);\n              break;\n            case 'l': // lineTo\n              x = outline[i ++] * scale + offset;\n              y = outline[i ++] * scale;\n              path.lineTo(x, y);\n              break;\n            case 'q': // quadraticCurveTo\n              cpx  = outline[i ++] * scale + offset;\n              cpy  = outline[i ++] * scale;\n              cpx1 = outline[i ++] * scale + offset;\n              cpy1 = outline[i ++] * scale;\n              path.quadraticCurveTo(cpx1, cpy1, cpx, cpy);\n              laste = pts[pts.length - 1];\n              if (laste) {\n                cpx0 = laste.x;\n                cpy0 = laste.y;\n                for (let i2 = 1; i2 <= divisions; i2 ++) {\n                  let t = i2 / divisions;\n                  b2(t, cpx0, cpx1, cpx);\n                  b2(t, cpy0, cpy1, cpy);\n                }\n              }\n              break;\n            case 'b': // bezierCurveTo\n              cpx  = outline[i ++] * scale + offset;\n              cpy  = outline[i ++] * scale;\n              cpx1 = outline[i ++] * scale + offset;\n              cpy1 = outline[i ++] * scale;\n              cpx2 = outline[i ++] * scale + offset;\n              cpy2 = outline[i ++] * scale;\n              path.bezierCurveTo(cpx1, cpy1, cpx2, cpy2, cpx, cpy);\n              laste = pts[pts.length - 1];\n              if (laste) {\n                cpx0 = laste.x;\n                cpy0 = laste.y;\n                for (let i2 = 1; i2 <= divisions; i2 ++) {\n                  let t = i2 / divisions;\n                  b3(t, cpx0, cpx1, cpx2, cpx);\n                  b3(t, cpy0, cpy1, cpy2, cpy);\n                }\n              }\n              break;\n          }\n        }\n      }\n      return { offset: glyph.ha * scale, path: path };\n    }\n    //\n    if (size === undefined) size = 100;\n    if (divisions === undefined) divisions = 4;\n    let data = this.data;\n    let paths = createPaths(text);\n    let shapes: any[] = [];\n    for (let p = 0, pl = paths.length; p < pl; p ++) {\n      Array.prototype.push.apply(shapes, paths[p].toShapes());\n    }\n    return shapes;\n  }\n}\n","/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author alteredq / http://alteredqualia.com/\n *\n * Text = 3D Text\n *\n * parameters = {\n *  font: <THREE.Font>, // font\n *\n *  size: <float>, // size of the text\n *  height: <float>, // thickness to extrude text\n *  curveSegments: <int>, // number of points on the curves\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into text bevel goes\n *  bevelSize: <float> // how far from text outline is bevel\n * }\n */\nimport { ExtrudeGeometry } from \"./ExtrudeGeometry\";\nimport { Font } from \"../extras/core/Font\";\nexport class TextGeometry extends ExtrudeGeometry {\n  constructor(text: string, parameters: any = {}) {\n    const font = parameters.font;\n    if ((font && font instanceof Font) === false) {\n      console.error('THREE.TextGeometry: font parameter is not an instance of THREE.Font.');\n      /// !!!TODO: return new Geometry();\n    }\n    const shapes = font.generateShapes(text, parameters.size, parameters.curveSegments);\n    // translate parameters to ExtrudeGeometry API\n    parameters.amount = parameters.height !== undefined ? parameters.height : 50;\n    // defaults\n    if (parameters.bevelThickness === undefined) parameters.bevelThickness = 10;\n    if (parameters.bevelSize === undefined) parameters.bevelSize = 8;\n    if (parameters.bevelEnabled === undefined) parameters.bevelEnabled = false;\n    super(shapes, parameters);\n    this.type = 'TextGeometry';\n  }\n}\n","import { BufferGeometry } from \"../core/BufferGeometry\";\nimport { Vector3 } from \"../math/Vector3\";\nimport { Sphere } from \"../math/Sphere\";\nimport { Uint16Attribute, Uint32Attribute, BufferAttribute } from \"../core/BufferAttribute\";\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n * based on THREE.SphereGeometry\n */\nexport class SphereBufferGeometry extends BufferGeometry {\n  constructor(radius: number, widthSegments: number, heightSegments: number, phiStart?: number, phiLength?: number, thetaStart?: number, thetaLength?: number) {\n    super();\n    this.type = 'SphereBufferGeometry';\n    this.parameters = {\n      radius: radius,\n      widthSegments: widthSegments,\n      heightSegments: heightSegments,\n      phiStart: phiStart,\n      phiLength: phiLength,\n      thetaStart: thetaStart,\n      thetaLength: thetaLength\n    };\n    radius = radius || 50;\n    widthSegments = Math.max(3, Math.floor(widthSegments) || 8);\n    heightSegments = Math.max(2, Math.floor(heightSegments) || 6);\n    phiStart = phiStart !== undefined ? phiStart : 0;\n    phiLength = phiLength !== undefined ? phiLength : Math.PI * 2;\n    thetaStart = thetaStart !== undefined ? thetaStart : 0;\n    thetaLength = thetaLength !== undefined ? thetaLength : Math.PI;\n    const thetaEnd = thetaStart + thetaLength;\n    const vertexCount = ((widthSegments + 1) * (heightSegments + 1));\n    const positions = new BufferAttribute(new Float32Array(vertexCount * 3), 3);\n    const normals = new BufferAttribute(new Float32Array(vertexCount * 3), 3);\n    const uvs = new BufferAttribute(new Float32Array(vertexCount * 2), 2);\n    let index = 0;\n    const vertices = [], normal = new Vector3();\n    for (let y = 0; y <= heightSegments; y ++) {\n      const verticesRow = [];\n      const v = y / heightSegments;\n      for (let x = 0; x <= widthSegments; x ++) {\n        const u = x / widthSegments;\n        const px = - radius * Math.cos(phiStart + u * phiLength) * Math.sin(thetaStart + v * thetaLength);\n        const py = radius * Math.cos(thetaStart + v * thetaLength);\n        const pz = radius * Math.sin(phiStart + u * phiLength) * Math.sin(thetaStart + v * thetaLength);\n        normal.set(px, py, pz).normalize();\n        positions.setXYZ(index, px, py, pz);\n        normals.setXYZ(index, normal.x, normal.y, normal.z);\n        uvs.setXY(index, u, 1 - v);\n        verticesRow.push(index);\n        index ++;\n      }\n      vertices.push(verticesRow);\n    }\n    const indices = [];\n    for (let y = 0; y < heightSegments; y ++) {\n      for (let x = 0; x < widthSegments; x ++) {\n        const v1 = vertices[y][x + 1];\n        const v2 = vertices[y][x];\n        const v3 = vertices[y + 1][x];\n        const v4 = vertices[y + 1][x + 1];\n        if (y !== 0 || thetaStart > 0) indices.push(v1, v2, v4);\n        if (y !== heightSegments - 1 || thetaEnd < Math.PI) indices.push(v2, v3, v4);\n      }\n    }\n    this.setIndex((positions.count > 65535 ? Uint32Attribute : Uint16Attribute)(indices, 1));\n    this.addAttribute('position', positions);\n    this.addAttribute('normal', normals);\n    this.addAttribute('uv', uvs);\n    this.boundingSphere = new Sphere(new Vector3(), radius);\n  }\n}\n","import { Geometry } from \"../core/Geometry\";\nimport { SphereBufferGeometry } from \"./SphereBufferGeometry\";\n/**\n * @author mrdoob / http://mrdoob.com/\n */\nexport class SphereGeometry extends Geometry {\n  constructor(radius: number, widthSegments?: number, heightSegments?: number, phiStart?: number, phiLength?: number, thetaStart?: number, thetaLength?: number) {\n    super();\n    this.type = 'SphereGeometry';\n    this.parameters = {\n      radius: radius,\n      widthSegments: widthSegments,\n      heightSegments: heightSegments,\n      phiStart: phiStart,\n      phiLength: phiLength,\n      thetaStart: thetaStart,\n      thetaLength: thetaLength\n    };\n    this.fromBufferGeometry(new SphereBufferGeometry(radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength));\n  }\n}\n","import { BufferGeometry } from \"../core/BufferGeometry\";\nimport { Vector2 } from \"../math/Vector2\";\nimport { Vector3 } from \"../math/Vector3\";\nimport { BufferAttribute } from \"../core/BufferAttribute\";\n/**\n * @author Mugen87 / https://github.com/Mugen87\n */\nexport class RingBufferGeometry extends BufferGeometry {\n  constructor(innerRadius: number, outerRadius: number, thetaSegments: number, phiSegments: number, thetaStart: number, thetaLength: number) {\n    super();\n    this.type = 'RingBufferGeometry';\n    this.parameters = {\n      innerRadius: innerRadius,\n      outerRadius: outerRadius,\n      thetaSegments: thetaSegments,\n      phiSegments: phiSegments,\n      thetaStart: thetaStart,\n      thetaLength: thetaLength\n    };\n    innerRadius = innerRadius || 20;\n    outerRadius = outerRadius || 50;\n    thetaStart = thetaStart !== undefined ? thetaStart : 0;\n    thetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n    thetaSegments = thetaSegments !== undefined ? Math.max(3, thetaSegments) : 8;\n    phiSegments = phiSegments !== undefined ? Math.max(1, phiSegments) : 1;\n    // these are used to calculate buffer length\n    const vertexCount = (thetaSegments + 1) * (phiSegments + 1);\n    const indexCount = thetaSegments * phiSegments * 2 * 3;\n    // buffers\n    const indices = new BufferAttribute(new (indexCount > 65535 ? Uint32Array : Uint16Array)(indexCount) , 1);\n    const vertices = new BufferAttribute(new Float32Array(vertexCount * 3), 3);\n    const normals = new BufferAttribute(new Float32Array(vertexCount * 3), 3);\n    const uvs = new BufferAttribute(new Float32Array(vertexCount * 2), 2);\n    // some helper variables\n    let index = 0, indexOffset = 0;\n    let radius = innerRadius;\n    const radiusStep = ((outerRadius - innerRadius) / phiSegments);\n    const vertex = new Vector3();\n    const uv = new Vector2();\n    // generate vertices, normals and uvs\n    // values are generate from the inside of the ring to the outside\n    for (let j = 0; j <= phiSegments; j ++) {\n      for (let i = 0; i <= thetaSegments; i ++) {\n        const segment = thetaStart + i / thetaSegments * thetaLength;\n        // vertex\n        vertex.x = radius * Math.cos(segment);\n        vertex.y = radius * Math.sin(segment);\n        vertices.setXYZ(index, vertex.x, vertex.y, vertex.z);\n        // normal\n        normals.setXYZ(index, 0, 0, 1);\n        // uv\n        uv.x = (vertex.x / outerRadius + 1) / 2;\n        uv.y = (vertex.y / outerRadius + 1) / 2;\n        uvs.setXY(index, uv.x, uv.y);\n        // increase index\n        index++;\n      }\n      // increase the radius for next row of vertices\n      radius += radiusStep;\n    }\n    // generate indices\n    for (let j = 0; j < phiSegments; j ++) {\n      const thetaSegmentLevel = j * (thetaSegments + 1);\n      for (let i = 0; i < thetaSegments; i ++) {\n        const segment = i + thetaSegmentLevel;\n        // indices\n        const a = segment;\n        const b = segment + thetaSegments + 1;\n        const c = segment + thetaSegments + 2;\n        const d = segment + 1;\n        // face one\n        indices.setX(indexOffset, a); indexOffset++;\n        indices.setX(indexOffset, b); indexOffset++;\n        indices.setX(indexOffset, c); indexOffset++;\n        // face two\n        indices.setX(indexOffset, a); indexOffset++;\n        indices.setX(indexOffset, c); indexOffset++;\n        indices.setX(indexOffset, d); indexOffset++;\n      }\n    }\n    // build geometry\n    this.setIndex(indices);\n    this.addAttribute('position', vertices);\n    this.addAttribute('normal', normals);\n    this.addAttribute('uv', uvs);\n  }\n}\n","import { Geometry } from \"../core/Geometry\";\nimport { RingBufferGeometry } from \"./RingBufferGeometry\";\n/**\n * @author Kaleb Murphy\n */\nexport class RingGeometry extends Geometry {\n  constructor(innerRadius: number, outerRadius: number, thetaSegments: number, phiSegments: number, thetaStart: number, thetaLength: number) {\n    super();\n    this.type = 'RingGeometry';\n    this.parameters = {\n      innerRadius: innerRadius,\n      outerRadius: outerRadius,\n      thetaSegments: thetaSegments,\n      phiSegments: phiSegments,\n      thetaStart: thetaStart,\n      thetaLength: thetaLength\n    };\n    this.fromBufferGeometry(new RingBufferGeometry(innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength));\n  }\n}\n","import { Geometry } from \"../core/Geometry\";\nimport { PlaneBufferGeometry } from \"./PlaneBufferGeometry\";\n/**\n * @author mrdoob / http://mrdoob.com/\n * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Plane.as\n */\nexport class PlaneGeometry extends Geometry {\n  constructor(width: number, height: number, widthSegments?: number, heightSegments?: number) {\n    super();\n    this.type = 'PlaneGeometry';\n    this.parameters = {\n      width: width,\n      height: height,\n      widthSegments: widthSegments,\n      heightSegments: heightSegments\n    };\n    this.fromBufferGeometry(new PlaneBufferGeometry(width, height, widthSegments, heightSegments));\n  }\n}\n","import { BufferGeometry } from \"../core/BufferGeometry\";\nimport { Vector3 } from \"../math/Vector3\";\nimport { Vector2 } from \"../math/Vector2\";\nimport { BufferAttribute } from \"../core/BufferAttribute\";\nimport { _Math } from \"../math/Math\";\n/**\n * @author Mugen87 / https://github.com/Mugen87\n */\n // points - to create a closed torus, one must use a set of points\n //    like so: [a, b, c, d, a], see first is the same as last.\n // segments - the number of circumference segments to create\n // phiStart - the starting radian\n // phiLength - the radian (0 to 2PI) range of the lathed section\n //    2PI is a closed lathe, less than 2PI is a portion.\nexport class LatheBufferGeometry extends BufferGeometry {\n  constructor(points: Vector2[], segments: number, phiStart: number, phiLength: number) {\n    super();\n    this.type = 'LatheBufferGeometry';\n    this.parameters = {\n      points: points,\n      segments: segments,\n      phiStart: phiStart,\n      phiLength: phiLength\n    };\n    segments = Math.floor(segments) || 12;\n    phiStart = phiStart || 0;\n    phiLength = phiLength || Math.PI * 2;\n    // clamp phiLength so it's in range of [0, 2PI]\n    phiLength = _Math.clamp(phiLength, 0, Math.PI * 2);\n    // these are used to calculate buffer length\n    const vertexCount = (segments + 1) * points.length;\n    const indexCount = segments * points.length * 2 * 3;\n    // buffers\n    const indices = new BufferAttribute(new (indexCount > 65535 ? Uint32Array : Uint16Array)(indexCount) , 1);\n    const vertices = new BufferAttribute(new Float32Array(vertexCount * 3), 3);\n    const uvs = new BufferAttribute(new Float32Array(vertexCount * 2), 2);\n    // helper variables\n    let index = 0, indexOffset = 0;\n    const inverseSegments = 1.0 / segments;\n    const vertex = new Vector3();\n    const uv = new Vector2();\n    // generate vertices and uvs\n    for (let i = 0; i <= segments; i ++) {\n      const phi = phiStart + i * inverseSegments * phiLength;\n      const sin = Math.sin(phi);\n      const cos = Math.cos(phi);\n      for (let j = 0; j <= (points.length - 1); j ++) {\n        // vertex\n        vertex.x = points[j].x * sin;\n        vertex.y = points[j].y;\n        vertex.z = points[j].x * cos;\n        vertices.setXYZ(index, vertex.x, vertex.y, vertex.z);\n        // uv\n        uv.x = i / segments;\n        uv.y = j / (points.length - 1);\n        uvs.setXY(index, uv.x, uv.y);\n        // increase index\n        index ++;\n      }\n    }\n    // generate indices\n    for (let i = 0; i < segments; i ++) {\n      for (let j = 0; j < (points.length - 1); j ++) {\n        const base = j + i * points.length;\n        // indices\n        const a = base;\n        const b = base + points.length;\n        const c = base + points.length + 1;\n        const d = base + 1;\n        // face one\n        indices.setX(indexOffset, a); indexOffset++;\n        indices.setX(indexOffset, b); indexOffset++;\n        indices.setX(indexOffset, d); indexOffset++;\n        // face two\n        indices.setX(indexOffset, b); indexOffset++;\n        indices.setX(indexOffset, c); indexOffset++;\n        indices.setX(indexOffset, d); indexOffset++;\n      }\n    }\n    // build geometry\n    this.setIndex(indices);\n    this.addAttribute('position', vertices);\n    this.addAttribute('uv', uvs);\n    // generate normals\n    this.computeVertexNormals();\n    // if the geometry is closed, we need to average the normals along the seam.\n    // because the corresponding vertices are identical (but still have different UVs).\n    if (phiLength === Math.PI * 2) {\n      const normals = this.attributes.normal.array;\n      const n1 = new Vector3();\n      const n2 = new Vector3();\n      const n = new Vector3();\n      // this is the buffer offset for the last line of vertices\n      const base = segments * points.length * 3;\n      for (let i = 0, j = 0; i < points.length; i ++, j += 3) {\n        // select the normal of the vertex in the first line\n        n1.x = normals[j + 0];\n        n1.y = normals[j + 1];\n        n1.z = normals[j + 2];\n        // select the normal of the vertex in the last line\n        n2.x = normals[base + j + 0];\n        n2.y = normals[base + j + 1];\n        n2.z = normals[base + j + 2];\n        // average normals\n        n.addVectors(n1, n2).normalize();\n        // assign the new values to both normals\n        normals[j + 0] = normals[base + j + 0] = n.x;\n        normals[j + 1] = normals[base + j + 1] = n.y;\n        normals[j + 2] = normals[base + j + 2] = n.z;\n      } // next row\n    }\n  }\n}\n","import { Vector2 } from \"../math/Vector2\";\nimport { Geometry } from \"../core/Geometry\";\nimport { LatheBufferGeometry } from \"./LatheBufferGeometry\";\n/**\n * @author astrodud / http://astrodud.isgreat.org/\n * @author zz85 / https://github.com/zz85\n * @author bhouston / http://clara.io\n */\n// points - to create a closed torus, one must use a set of points\n//    like so: [a, b, c, d, a], see first is the same as last.\n// segments - the number of circumference segments to create\n// phiStart - the starting radian\n// phiLength - the radian (0 to 2PI) range of the lathed section\n//    2PI is a closed lathe, less than 2PI is a portion.\nexport class LatheGeometry extends Geometry {\n  constructor(points: Vector2[], segments: number, phiStart?: number, phiLength?: number) {\n    super();\n    this.type = 'LatheGeometry';\n    this.parameters = {\n      points: points,\n      segments: segments,\n      phiStart: phiStart,\n      phiLength: phiLength\n    };\n    this.fromBufferGeometry(new LatheBufferGeometry(points, segments, phiStart, phiLength));\n    this.mergeVertices();\n  }\n}\n","import { BufferGeometry } from \"../core/BufferGeometry\";\nimport { BufferAttribute } from \"../core/BufferAttribute\";\nimport { Geometry } from \"../core/Geometry\";\nimport { _Math } from \"../math/Math\";\n/**\n * @author WestLangley / http://github.com/WestLangley\n */\nexport class EdgesGeometry extends BufferGeometry {\n  constructor(geometry: Geometry | BufferGeometry, thresholdAngle: number = 1) {\n    super();\n    const thresholdDot = Math.cos(_Math.DEG2RAD * thresholdAngle);\n    const edge = [0, 0], hash = {};\n    function sortFunction(a: number, b: number): number {\n      return a - b;\n    }\n    const keys = ['a', 'b', 'c'];\n    let geometry2: Geometry;\n    if ((geometry && geometry instanceof BufferGeometry)) {\n      geometry2 = new Geometry();\n      geometry2.fromBufferGeometry(geometry);\n    } else if (geometry && geometry instanceof Geometry) {\n      geometry2 = geometry.clone();\n    }\n    geometry2.mergeVertices();\n    geometry2.computeFaceNormals();\n    const vertices = geometry2.vertices;\n    const faces = geometry2.faces;\n    for (let i = 0, l = faces.length; i < l; i ++) {\n      const face = faces[i];\n      for (let j = 0; j < 3; j ++) {\n        edge[0] = face[keys[j]];\n        edge[1] = face[keys[(j + 1) % 3]];\n        edge.sort(sortFunction);\n        const key = edge.toString();\n        if (hash[key] === undefined) {\n          hash[key] = { vert1: edge[0], vert2: edge[1], face1: i, face2: undefined };\n        } else {\n          hash[key].face2 = i;\n        }\n      }\n    }\n    const coords = [];\n    for (let key in hash) {\n      const h = hash[key];\n      if (h.face2 === undefined || faces[h.face1].normal.dot(faces[h.face2].normal) <= thresholdDot) {\n        const vertex1 = vertices[h.vert1];\n        coords.push(vertex1.x);\n        coords.push(vertex1.y);\n        coords.push(vertex1.z);\n        const vertex2 = vertices[h.vert2];\n        coords.push(vertex2.x);\n        coords.push(vertex2.y);\n        coords.push(vertex2.z);\n      }\n    }\n    this.addAttribute('position', new BufferAttribute(new Float32Array(coords), 3));\n  }\n}\n","import { BufferGeometry } from \"../core/BufferGeometry\";\nimport { Vector3 } from \"../math/Vector3\";\nimport { Vector2 } from \"../math/Vector2\";\nimport { BufferAttribute } from \"../core/BufferAttribute\";\n/**\n * @author Mugen87 / https://github.com/Mugen87\n */\nexport class CylinderBufferGeometry extends BufferGeometry {\n  constructor(radiusTop: number, radiusBottom: number, height: number, radialSegments: number, heightSegments: number, openEnded?: boolean, thetaStart?: number, thetaLength?: number) {\n    super();\n    this.type = 'CylinderBufferGeometry';\n    this.parameters = {\n      radiusTop: radiusTop,\n      radiusBottom: radiusBottom,\n      height: height,\n      radialSegments: radialSegments,\n      heightSegments: heightSegments,\n      openEnded: openEnded,\n      thetaStart: thetaStart,\n      thetaLength: thetaLength\n    };\n    const scope = this;\n    radiusTop = radiusTop !== undefined ? radiusTop : 20;\n    radiusBottom = radiusBottom !== undefined ? radiusBottom : 20;\n    height = height !== undefined ? height : 100;\n    radialSegments = Math.floor(radialSegments) || 8;\n    heightSegments = Math.floor(heightSegments) || 1;\n    openEnded = openEnded !== undefined ? openEnded : false;\n    thetaStart = thetaStart !== undefined ? thetaStart : 0.0;\n    thetaLength = thetaLength !== undefined ? thetaLength : 2.0 * Math.PI;\n    // used to calculate buffer length\n    let nbCap = 0;\n    if (openEnded === false) {\n      if (radiusTop > 0) nbCap ++;\n      if (radiusBottom > 0) nbCap ++;\n    }\n    const vertexCount = calculateVertexCount();\n    const indexCount = calculateIndexCount();\n    // buffers\n    const indices = new BufferAttribute(new (indexCount > 65535 ? Uint32Array : Uint16Array)(indexCount), 1);\n    const vertices = new BufferAttribute(new Float32Array(vertexCount * 3), 3);\n    const normals = new BufferAttribute(new Float32Array(vertexCount * 3), 3);\n    const uvs = new BufferAttribute(new Float32Array(vertexCount * 2), 2);\n    // helper variables\n    let index = 0,\n        indexOffset = 0,\n        indexArray: any[] = [],\n        halfHeight = height / 2;\n    // group variables\n    let groupStart = 0;\n    // generate geometry\n    generateTorso();\n    if (openEnded === false) {\n      if (radiusTop > 0) generateCap(true);\n      if (radiusBottom > 0) generateCap(false);\n    }\n    // build geometry\n    this.setIndex(indices);\n    this.addAttribute('position', vertices);\n    this.addAttribute('normal', normals);\n    this.addAttribute('uv', uvs);\n    // helper functions\n    function calculateVertexCount() {\n      let count = (radialSegments + 1) * (heightSegments + 1);\n      if (openEnded === false) {\n        count += ((radialSegments + 1) * nbCap) + (radialSegments * nbCap);\n      }\n      return count;\n    }\n    function calculateIndexCount() {\n      let count = radialSegments * heightSegments * 2 * 3;\n      if (openEnded === false) {\n        count += radialSegments * nbCap * 3;\n      }\n      return count;\n    }\n    function generateTorso() {\n      const normal = new Vector3();\n      const vertex = new Vector3();\n      let groupCount = 0;\n      // this will be used to calculate the normal\n      const slope = (radiusBottom - radiusTop) / height;\n      // generate vertices, normals and uvs\n      for (let y = 0; y <= heightSegments; y ++) {\n        const indexRow = [];\n        const v = y / heightSegments;\n        // calculate the radius of the current row\n        const radius = v * (radiusBottom - radiusTop) + radiusTop;\n        for (let x = 0; x <= radialSegments; x ++) {\n          const u = x / radialSegments;\n          const theta = u * thetaLength + thetaStart;\n          const sinTheta = Math.sin(theta);\n          const cosTheta = Math.cos(theta);\n          // vertex\n          vertex.x = radius * sinTheta;\n          vertex.y = - v * height + halfHeight;\n          vertex.z = radius * cosTheta;\n          vertices.setXYZ(index, vertex.x, vertex.y, vertex.z);\n          // normal\n          normal.set(sinTheta, slope, cosTheta).normalize();\n          normals.setXYZ(index, normal.x, normal.y, normal.z);\n          // uv\n          uvs.setXY(index, u, 1 - v);\n          // save index of vertex in respective row\n          indexRow.push(index);\n          // increase index\n          index ++;\n        }\n        // now save vertices of the row in our index array\n        indexArray.push(indexRow);\n      }\n      // generate indices\n      for (let x = 0; x < radialSegments; x ++) {\n        for (let y = 0; y < heightSegments; y ++) {\n          // we use the index array to access the correct indices\n          const i1 = indexArray[y][x];\n          const i2 = indexArray[y + 1][x];\n          const i3 = indexArray[y + 1][x + 1];\n          const i4 = indexArray[y][x + 1];\n          // face one\n          indices.setX(indexOffset, i1); indexOffset ++;\n          indices.setX(indexOffset, i2); indexOffset ++;\n          indices.setX(indexOffset, i4); indexOffset ++;\n          // face two\n          indices.setX(indexOffset, i2); indexOffset ++;\n          indices.setX(indexOffset, i3); indexOffset ++;\n          indices.setX(indexOffset, i4); indexOffset ++;\n          // update counters\n          groupCount += 6;\n        }\n      }\n      // add a group to the geometry. this will ensure multi material support\n      scope.addGroup(groupStart, groupCount, 0);\n      // calculate new start value for groups\n      groupStart += groupCount;\n    }\n    function generateCap(top: boolean) {\n      const uv = new Vector2();\n      const vertex = new Vector3();\n      let groupCount = 0;\n      const radius = (top === true) ? radiusTop : radiusBottom;\n      const sign = (top === true) ? 1 : - 1;\n      // save the index of the first center vertex\n      const centerIndexStart = index;\n      // first we generate the center vertex data of the cap.\n      // because the geometry needs one set of uvs per face,\n      // we must generate a center vertex per face/segment\n      for (let x = 1; x <= radialSegments; x ++) {\n        // vertex\n        vertices.setXYZ(index, 0, halfHeight * sign, 0);\n        // normal\n        normals.setXYZ(index, 0, sign, 0);\n        // uv\n        uv.x = 0.5;\n        uv.y = 0.5;\n        uvs.setXY(index, uv.x, uv.y);\n        // increase index\n        index ++;\n      }\n      // save the index of the last center vertex\n      const centerIndexEnd = index;\n      // now we generate the surrounding vertices, normals and uvs\n      for (let x = 0; x <= radialSegments; x ++) {\n        const u = x / radialSegments;\n        const theta = u * thetaLength + thetaStart;\n        const cosTheta = Math.cos(theta);\n        const sinTheta = Math.sin(theta);\n        // vertex\n        vertex.x = radius * sinTheta;\n        vertex.y = halfHeight * sign;\n        vertex.z = radius * cosTheta;\n        vertices.setXYZ(index, vertex.x, vertex.y, vertex.z);\n        // normal\n        normals.setXYZ(index, 0, sign, 0);\n        // uv\n        uv.x = (cosTheta * 0.5) + 0.5;\n        uv.y = (sinTheta * 0.5 * sign) + 0.5;\n        uvs.setXY(index, uv.x, uv.y);\n        // increase index\n        index ++;\n      }\n      // generate indices\n      for (let x = 0; x < radialSegments; x ++) {\n        const c = centerIndexStart + x;\n        const i = centerIndexEnd + x;\n        if (top === true) {\n          // face top\n          indices.setX(indexOffset, i); indexOffset ++;\n          indices.setX(indexOffset, i + 1); indexOffset ++;\n          indices.setX(indexOffset, c); indexOffset ++;\n        } else {\n          // face bottom\n          indices.setX(indexOffset, i + 1); indexOffset ++;\n          indices.setX(indexOffset, i); indexOffset ++;\n          indices.setX(indexOffset, c); indexOffset ++;\n        }\n        // update counters\n        groupCount += 3;\n      }\n      // add a group to the geometry. this will ensure multi material support\n      scope.addGroup(groupStart, groupCount, top === true ? 1 : 2);\n      // calculate new start value for groups\n      groupStart += groupCount;\n    }\n  }\n}\n","import { Geometry } from \"../core/Geometry\";\nimport { CylinderBufferGeometry } from \"./CylinderBufferGeometry\";\n/**\n * @author mrdoob / http://mrdoob.com/\n */\nexport class CylinderGeometry extends Geometry {\n  constructor(radiusTop: number, radiusBottom: number, height: number, radialSegments: number, heightSegments: number, openEnded?: boolean, thetaStart?: number, thetaLength?: number) {\n    super();\n    this.type = 'CylinderGeometry';\n    this.parameters = {\n      radiusTop: radiusTop,\n      radiusBottom: radiusBottom,\n      height: height,\n      radialSegments: radialSegments,\n      heightSegments: heightSegments,\n      openEnded: openEnded,\n      thetaStart: thetaStart,\n      thetaLength: thetaLength\n    };\n    this.fromBufferGeometry(new CylinderBufferGeometry(radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength));\n    this.mergeVertices();\n  }\n}\n","import { CylinderGeometry } from \"./CylinderGeometry\";\n/**\n * @author abelnation / http://github.com/abelnation\n */\nexport class ConeGeometry extends CylinderGeometry {\n  constructor(radius: number, height: number, radialSegments: number, heightSegments: number, openEnded: boolean, thetaStart: number, thetaLength: number) {\n    super(0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength);\n    this.type = 'ConeGeometry';\n    this.parameters = {\n      radius: radius,\n      height: height,\n      radialSegments: radialSegments,\n      heightSegments: heightSegments,\n      openEnded: openEnded,\n      thetaStart: thetaStart,\n      thetaLength: thetaLength\n    };\n  }\n}\n","import { CylinderBufferGeometry } from \"./CylinderBufferGeometry\";\n/*\n * @author: abelnation / http://github.com/abelnation\n */\nexport class ConeBufferGeometry extends CylinderBufferGeometry {\n  constructor(\n    radius: number, height: number, radialSegments: number, heightSegments: number, openEnded: boolean, thetaStart: number, thetaLength: number) {\n    super(0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength);\n    this.type = 'ConeBufferGeometry';\n    this.parameters = {\n      radius: radius,\n      height: height,\n      radialSegments: radialSegments,\n      heightSegments: heightSegments,\n      openEnded: openEnded,\n      thetaStart: thetaStart,\n      thetaLength: thetaLength\n    };\n  }\n}\n","import { BufferGeometry } from \"../core/BufferGeometry\";\nimport { Vector3 } from \"../math/Vector3\";\nimport { Sphere } from \"../math/Sphere\";\nimport { BufferAttribute } from \"../core/BufferAttribute\";\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\nexport class CircleBufferGeometry extends BufferGeometry {\n  constructor(radius: number, segments: number, thetaStart: number, thetaLength: number) {\n    super();\n    this.type = 'CircleBufferGeometry';\n    this.parameters = {\n      radius: radius,\n      segments: segments,\n      thetaStart: thetaStart,\n      thetaLength: thetaLength\n    };\n    radius = radius || 50;\n    segments = segments !== undefined ? Math.max(3, segments) : 8;\n    thetaStart = thetaStart !== undefined ? thetaStart : 0;\n    thetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n    const vertices = segments + 2;\n    const positions = new Float32Array(vertices * 3);\n    const normals = new Float32Array(vertices * 3);\n    const uvs = new Float32Array(vertices * 2);\n    // center data is already zero, but need to set a few extras\n    normals[2] = 1.0;\n    uvs[0] = 0.5;\n    uvs[1] = 0.5;\n    for (let s = 0, i = 3, ii = 2 ; s <= segments; s ++, i += 3, ii += 2) {\n      const segment = thetaStart + s / segments * thetaLength;\n      positions[i] = radius * Math.cos(segment);\n      positions[i + 1] = radius * Math.sin(segment);\n      normals[i + 2] = 1; // normal z\n      uvs[ii] = (positions[i] / radius + 1) / 2;\n      uvs[ii + 1] = (positions[i + 1] / radius + 1) / 2;\n    }\n    const indices = [];\n    for (let i = 1; i <= segments; i ++) {\n      indices.push(i, i + 1, 0);\n    }\n    this.setIndex(new BufferAttribute(new Uint16Array(indices), 1));\n    this.addAttribute('position', new BufferAttribute(positions, 3));\n    this.addAttribute('normal', new BufferAttribute(normals, 3));\n    this.addAttribute('uv', new BufferAttribute(uvs, 2));\n    this.boundingSphere = new Sphere(new Vector3(), radius);\n  }\n}\n","import { Geometry } from \"../core/Geometry\";\nimport { CircleBufferGeometry } from \"./CircleBufferGeometry\";\n/**\n * @author hughes\n */\nexport class CircleGeometry extends Geometry {\n  constructor(radius: number, segments: number, thetaStart: number, thetaLength: number) {\n    super();\n    this.type = 'CircleGeometry';\n    this.parameters = {\n      radius: radius,\n      segments: segments,\n      thetaStart: thetaStart,\n      thetaLength: thetaLength\n    };\n    this.fromBufferGeometry(new CircleBufferGeometry(radius, segments, thetaStart, thetaLength));\n  }\n}\n","import { Geometry } from \"../core/Geometry\";\nimport { BoxBufferGeometry } from \"./BoxBufferGeometry\";\n/**\n * @author mrdoob / http://mrdoob.com/\n * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Cube.as\n */\nexport class BoxGeometry extends Geometry {\n  constructor(width: number, height: number, depth: number, widthSegments?: number, heightSegments?: number, depthSegments?: number) {\n    super();\n    this.type = 'BoxGeometry';\n    this.parameters = {\n      width: width,\n      height: height,\n      depth: depth,\n      widthSegments: widthSegments,\n      heightSegments: heightSegments,\n      depthSegments: depthSegments\n    };\n    this.fromBufferGeometry(new BoxBufferGeometry(width, height, depth, widthSegments, heightSegments, depthSegments));\n    this.mergeVertices();\n  }\n}\n","import { ShaderMaterial, ShaderMaterialParameters } from \"./ShaderMaterial\";\nimport { ShaderChunk } from \"../renderers/shaders/ShaderChunk\";\nimport { UniformsLib } from \"../renderers/shaders/UniformsLib\";\nimport { UniformsUtils } from \"../renderers/shaders/UniformsUtils\";\n/**\n * @author mrdoob / http://mrdoob.com/\n */\nexport interface ShadowMaterialParameters extends ShaderMaterialParameters {\n}\nexport class ShadowMaterial extends ShaderMaterial {\n  readonly isShadowMaterial: boolean = true;\n  constructor() {\n    super({\n      uniforms: UniformsUtils.merge([\n        UniformsLib[\"lights\"],\n        {\n          opacity: { value: 1.0 }\n        }\n      ]),\n      vertexShader: ShaderChunk['shadow_vert'],\n      fragmentShader: ShaderChunk['shadow_frag']\n    });\n    this.lights = true;\n    this.transparent = true;\n  }\n  get opacity(): number { return this.uniforms.opacity.value; }\n  set opacity(value: number) { this.uniforms.opacity.value = value; }\n}\n","/**\n * @author mrdoob / http://mrdoob.com/\n */\nexport class Cache {\n  static enabled: boolean = false;\n  static files = {};\n  static add(key: string, file: any): void {\n    if (Cache.enabled === false) return;\n    // console.log('THREE.Cache', 'Adding key:', key);\n    Cache.files[key] = file;\n  }\n  static get(key: string): any {\n    if (Cache.enabled === false) return;\n    // console.log('THREE.Cache', 'Checking key:', key);\n    return Cache.files[key];\n  }\n  static remove(key: string): void {\n    delete Cache.files[key];\n  }\n  static clear(): void {\n    Cache.files = {};\n  }\n}\n","/**\n * @author mrdoob / http://mrdoob.com/\n */\nexport class LoadingManager {\n  isLoading: boolean = false;\n  itemsLoaded: number = 0;\n  itemsTotal: number = 0;\n  onStart: (url: string, itemsLoaded: number, itemsTotal: number) => void;\n  onLoad: () => void;\n  onProgress: (url: string, itemsLoaded: number, itemsTotal: number) => void;\n  onError: (url: string) => void;\n  constructor(onLoad?: () => void, onProgress?: (url: string, itemsLoaded: number, itemsTotal: number) => void, onError?: (url: string) => void) {\n    this.onStart = undefined;\n    this.onLoad = onLoad;\n    this.onProgress = onProgress;\n    this.onError = onError;\n  }\n  itemStart(url: string): void {\n    this.itemsTotal ++;\n    if (this.isLoading === false) {\n      if (this.onStart !== undefined) {\n        this.onStart(url, this.itemsLoaded, this.itemsTotal);\n      }\n    }\n    this.isLoading = true;\n  }\n  itemEnd(url: string): void {\n    this.itemsLoaded ++;\n    if (this.onProgress !== undefined) {\n      this.onProgress(url, this.itemsLoaded, this.itemsTotal);\n    }\n    if (this.itemsLoaded === this.itemsTotal) {\n      this.isLoading = false;\n      if (this.onLoad !== undefined) {\n        this.onLoad();\n      }\n    }\n  };\n  itemError(url: string): void {\n    if (this.onError !== undefined) {\n      this.onError(url);\n    }\n  };\n}\nexport const DefaultLoadingManager = new LoadingManager();\n","import { Cache } from \"./Cache\";\nimport { LoadingManager, DefaultLoadingManager } from \"./LoadingManager\";\n/**\n * @author mrdoob / http://mrdoob.com/\n */\nexport class XHRLoader {\n  manager: LoadingManager;\n  path: string;\n  responseType: XMLHttpRequestResponseType;\n  withCredentials: boolean;\n  constructor(manager: LoadingManager = DefaultLoadingManager) {\n    this.manager = manager;\n  }\n  load(url: string, onLoad?: (response: string | ArrayBuffer | Blob) => void, onProgress?: (event: ProgressEvent) => void, onError?: (event: ErrorEvent) => void): XMLHttpRequest {\n    if (url === undefined) url = '';\n    if (this.path !== undefined) url = this.path + url;\n    const scope: XHRLoader = this;\n    const cached: any = Cache.get(url);\n    if (cached !== undefined) {\n      scope.manager.itemStart(url);\n      setTimeout(function(): void {\n        if (onLoad) onLoad(cached);\n        scope.manager.itemEnd(url);\n      }, 0);\n      return cached;\n    }\n    let request: XMLHttpRequest;\n    // Check for data: URI\n    let dataUriRegex = /^data:(.*?)(;base64)?,(.*)$/;\n    let dataUriRegexResult = url.match(dataUriRegex);\n    // Safari can not handle Data URIs through XMLHttpRequest so process manually\n    if (dataUriRegexResult) {\n      let mimeType = dataUriRegexResult[1];\n      let isBase64 = !!dataUriRegexResult[2];\n      let data = dataUriRegexResult[3];\n      data = decodeURIComponent(data);\n      if (isBase64) {\n        data = window.atob(data);\n      }\n      try {\n        let response;\n        let responseType = (this.responseType || '').toLowerCase();\n        switch (responseType) {\n          case 'arraybuffer':\n          case 'blob':\n             response = new ArrayBuffer(data.length);\n            let view = new Uint8Array(response);\n            for (let i = 0; i < data.length; i ++) {\n                view[ i ] = data.charCodeAt(i);\n            }\n            if (responseType === 'blob') {\n              response = new Blob([ response ], { \"type\" : mimeType });\n            }\n            break;\n          case 'document':\n            let parser = new DOMParser();\n            response = parser.parseFromString(data, mimeType);\n            break;\n          case 'json':\n            response = JSON.parse(data);\n            break;\n          default: // 'text' or other\n            response = data;\n            break;\n        }\n        // Wait for next browser tick\n        window.setTimeout(function() {\n          if (onLoad) onLoad(response);\n          scope.manager.itemEnd(url);\n        }, 0);\n      } catch (error) {\n        // Wait for next browser tick\n        window.setTimeout(function() {\n          if (onError) onError(error);\n          scope.manager.itemError(url);\n        }, 0);\n      }\n    } else {\n      request = new XMLHttpRequest();\n      request.open('GET', url, true);\n      request.addEventListener('load', function(event: UIEvent) {\n        const response: string = request.response;\n        Cache.add(url, response);\n        if (request.status === 200) {\n          if (onLoad) onLoad(response);\n          scope.manager.itemEnd(url);\n        } else if (request.status === 0) {\n          // Some browsers return HTTP Status 0 when using non-http protocol\n          // e.g. 'file://' or 'data://'. Handle as success.\n          console.warn('THREE.XHRLoader: HTTP Status 0 received.');\n          if (onLoad) onLoad(response);\n          scope.manager.itemEnd(url);\n        } else {\n          if (onError) onError(<any>event);\n          scope.manager.itemError(url);\n        }\n      }, false);\n      if (onProgress !== undefined) {\n        request.addEventListener('progress', function(event: ProgressEvent): void {\n          onProgress(event);\n        }, false);\n      }\n      request.addEventListener('error', function(event: ErrorEvent): void {\n        if (onError) onError(event);\n        scope.manager.itemError(url);\n      }, false);\n      if (this.responseType !== undefined) request.responseType = this.responseType;\n      if (this.withCredentials !== undefined) request.withCredentials = this.withCredentials;\n      if (request.overrideMimeType) request.overrideMimeType('text/plain');\n      request.send(null);\n    }\n    scope.manager.itemStart(url);\n    return request;\n  }\n  setPath(value: string): XHRLoader {\n    this.path = value;\n    return this;\n  }\n  setResponseType(value: XMLHttpRequestResponseType): XHRLoader {\n    this.responseType = value;\n    return this;\n  }\n  setWithCredentials(value: boolean): XHRLoader {\n    this.withCredentials = value;\n    return this;\n  }\n}\n","import { TextureFilter } from \"../constants\";\nimport { XHRLoader } from \"./XHRLoader\";\nimport { CompressedTexture } from \"../textures/CompressedTexture\";\nimport { LoadingManager, DefaultLoadingManager } from \"./LoadingManager\";\n/**\n * @author mrdoob / http://mrdoob.com/\n *\n * Abstract Base class to block based textures loader (dds, pvr, ...)\n */\nexport class CompressedTextureLoader {\n  manager: LoadingManager;\n  _parser: (buffer: ArrayBuffer, x: boolean) => any;\n  path: string;\n  constructor(manager: LoadingManager = DefaultLoadingManager) {\n    this.manager = manager;\n    // override in sub classes\n    this._parser = null;\n  }\n  load(url: string | string[], onLoad: (texture: CompressedTexture) => void, onProgress?: (event: ProgressEvent) => void, onError?: (event: ErrorEvent) => void): CompressedTexture {\n    const scope: CompressedTextureLoader = this;\n    const images: any[] = [];\n    const texture: CompressedTexture = new CompressedTexture();\n    texture.image = images;\n    const loader: XHRLoader = new XHRLoader(this.manager);\n    loader.setPath(this.path);\n    loader.setResponseType('arraybuffer');\n    let loaded: number = 0;\n    function loadTexture(i: number): void {\n      loader.load(url[i], function(buffer: ArrayBuffer): void {\n        const texDatas = scope._parser(buffer, true);\n        images[i] = {\n          width: texDatas.width,\n          height: texDatas.height,\n          format: texDatas.format,\n          mipmaps: texDatas.mipmaps\n        };\n        loaded += 1;\n        if (loaded === 6) {\n          if (texDatas.mipmapCount === 1)\n            texture.minFilter = TextureFilter.Linear;\n          texture.format = texDatas.format;\n          texture.needsUpdate = true;\n          if (onLoad) onLoad(texture);\n        }\n      }, onProgress, onError);\n    }\n    if (Array.isArray(url)) {\n      loaded = 0;\n      for (let i = 0, il = url.length; i < il; ++ i) {\n        loadTexture(i);\n      }\n    } else {\n      // compressed cubemap texture stored in a single DDS file\n      loader.load(url, function(buffer: ArrayBuffer): void {\n        const texDatas = scope._parser(buffer, true);\n        if (texDatas.isCubemap) {\n          const faces = texDatas.mipmaps.length / texDatas.mipmapCount;\n          for (let f = 0; f < faces; f ++) {\n            images[f] = { mipmaps : [] };\n            for (let i = 0; i < texDatas.mipmapCount; i ++) {\n              images[f].mipmaps.push(texDatas.mipmaps[f * texDatas.mipmapCount + i]);\n              images[f].format = texDatas.format;\n              images[f].width = texDatas.width;\n              images[f].height = texDatas.height;\n            }\n          }\n        } else {\n          texture.image.width = texDatas.width;\n          texture.image.height = texDatas.height;\n          texture.mipmaps = texDatas.mipmaps;\n        }\n        if (texDatas.mipmapCount === 1) {\n          texture.minFilter = TextureFilter.Linear;\n        }\n        texture.format = texDatas.format;\n        texture.needsUpdate = true;\n        if (onLoad) onLoad(texture);\n      }, onProgress, onError);\n    }\n    return texture;\n  }\n  setPath(value: string): CompressedTextureLoader {\n    this.path = value;\n    return this;\n  }\n}\n","import { TextureFilter, TextureWrapping } from \"../constants\";\nimport { XHRLoader } from \"./XHRLoader\";\nimport { DataTexture } from \"../textures/DataTexture\";\nimport { LoadingManager, DefaultLoadingManager } from \"./LoadingManager\";\n/**\n * @author Nikos M. / https://github.com/foo123/\n *\n * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n */\nexport class BinaryTextureLoader {\n  manager: LoadingManager;\n  _parser: (buffer: ArrayBuffer) => any;\n  constructor(manager: LoadingManager = DefaultLoadingManager) {\n    this.manager = manager;\n    // override in sub classes\n    this._parser = null;\n  }\n  load(url: string, onLoad?: (texture: DataTexture, texData: any) => void, onProgress?: (event: ProgressEvent) => void, onError?: (event: ErrorEvent) => void): DataTexture {\n    const scope: BinaryTextureLoader = this;\n    const texture: DataTexture = new DataTexture();\n    const loader: XHRLoader = new XHRLoader(this.manager);\n    loader.setResponseType('arraybuffer');\n    loader.load(url, function(buffer: ArrayBuffer): void {\n      const texData: any = scope._parser(buffer);\n      if (! texData) return;\n      if (undefined !== texData.image) {\n        texture.image = texData.image;\n      } else if (undefined !== texData.data) {\n        texture.image.width = texData.width;\n        texture.image.height = texData.height;\n        texture.image.data = texData.data;\n      }\n      texture.wrapS = undefined !== texData.wrapS ? texData.wrapS : TextureWrapping.ClampToEdge;\n      texture.wrapT = undefined !== texData.wrapT ? texData.wrapT : TextureWrapping.ClampToEdge;\n      texture.magFilter = undefined !== texData.magFilter ? texData.magFilter : TextureFilter.Linear;\n      texture.minFilter = undefined !== texData.minFilter ? texData.minFilter : TextureFilter.LinearMipMapLinear;\n      texture.anisotropy = undefined !== texData.anisotropy ? texData.anisotropy : 1;\n      if (undefined !== texData.format) {\n        texture.format = texData.format;\n      }\n      if (undefined !== texData.type) {\n        texture.type = texData.type;\n      }\n      if (undefined !== texData.mipmaps) {\n        texture.mipmaps = texData.mipmaps;\n      }\n      if (1 === texData.mipmapCount) {\n        texture.minFilter = TextureFilter.Linear;\n      }\n      texture.needsUpdate = true;\n      if (onLoad) onLoad(texture, texData);\n    }, onProgress, onError);\n    return texture;\n  }\n}\nexport const DataTextureLoader = BinaryTextureLoader;\n","import { XHRLoader } from \"./XHRLoader\";\nimport { LoadingManager, DefaultLoadingManager } from \"./LoadingManager\";\n/**\n * @author mrdoob / http://mrdoob.com/\n */\nexport class ImageLoader {\n  manager: LoadingManager;\n  path: string;\n  crossOrigin: string;\n  withCredentials: boolean;\n  constructor(manager: LoadingManager = DefaultLoadingManager) {\n    this.manager = manager;\n  }\n  load(url: string, onLoad: (image: HTMLImageElement) => void, onProgress?: (event: ProgressEvent) => void, onError?: (event: ErrorEvent) => void): HTMLImageElement {\n    const scope: ImageLoader = this;\n    const image: HTMLImageElement = <HTMLImageElement> document.createElementNS('http://www.w3.org/1999/xhtml', 'img');\n    image.onload = function(event: UIEvent): void {\n      image.onload = null;\n      URL.revokeObjectURL(image.src);\n      if (onLoad) onLoad(image);\n      scope.manager.itemEnd(url);\n    };\n    image.onerror = onError;\n    if (url.indexOf('data:') === 0) {\n      image.src = url;\n    } else {\n      const loader: XHRLoader = new XHRLoader();\n      loader.setPath(this.path);\n      loader.setResponseType('blob');\n      loader.setWithCredentials(this.withCredentials);\n      loader.load(url, function(blob: Blob): void {\n        image.src = URL.createObjectURL(blob);\n      }, onProgress, onError);\n    }\n    scope.manager.itemStart(url);\n    return image;\n  }\n  setCrossOrigin(value: string): ImageLoader {\n    this.crossOrigin = value;\n    return this;\n  }\n  setWithCredentials(value: boolean): ImageLoader {\n    this.withCredentials = value;\n    return this;\n  }\n  setPath(value: string): ImageLoader {\n    this.path = value;\n    return this;\n  }\n}\n","import { ImageLoader } from \"./ImageLoader\";\nimport { CubeTexture } from \"../textures/CubeTexture\";\nimport { LoadingManager, DefaultLoadingManager } from \"./LoadingManager\";\n/**\n * @author mrdoob / http://mrdoob.com/\n */\nexport class CubeTextureLoader {\n  manager: LoadingManager;\n  path: string;\n  crossOrigin: string;\n  constructor(manager: LoadingManager = DefaultLoadingManager) {\n    this.manager = manager;\n  }\n  load(urls: string[], onLoad: (texture: CubeTexture) => void, onProgress?: (event: ProgressEvent) => void, onError?: (event: ErrorEvent) => void) {\n    const texture: CubeTexture = new CubeTexture();\n    const loader: ImageLoader = new ImageLoader(this.manager);\n    loader.setCrossOrigin(this.crossOrigin);\n    loader.setPath(this.path);\n    let loaded: number = 0;\n    function loadTexture(i: number): void {\n      loader.load(urls[i], function(image: HTMLImageElement): void {\n        texture.images[i] = image;\n        loaded ++;\n        if (loaded === 6) {\n          texture.needsUpdate = true;\n          if (onLoad) onLoad(texture);\n        }\n      }, undefined, onError);\n    }\n    for (let i = 0; i < urls.length; ++ i) {\n      loadTexture(i);\n    }\n    return texture;\n  }\n  setCrossOrigin(value: string): CubeTextureLoader {\n    this.crossOrigin = value;\n    return this;\n  }\n  setPath(value: string): CubeTextureLoader {\n    this.path = value;\n    return this;\n  }\n}\n","import { TextureFormat } from \"../constants\";\nimport { ImageLoader } from \"./ImageLoader\";\nimport { Texture } from \"../textures/Texture\";\nimport { LoadingManager, DefaultLoadingManager } from \"./LoadingManager\";\n/**\n * @author mrdoob / http://mrdoob.com/\n */\nexport class TextureLoader {\n  manager: LoadingManager;\n  path: string;\n  crossOrigin: string;\n  withCredentials: boolean;\n  constructor(manager: LoadingManager = DefaultLoadingManager) {\n    this.manager = manager;\n  }\n  load(url: string, onLoad?: (texture: Texture) => void, onProgress?: (event: ProgressEvent) => void, onError?: (event: ErrorEvent) => void): Texture {\n    const texture: Texture = new Texture();\n    const loader: ImageLoader = new ImageLoader(this.manager);\n    loader.setCrossOrigin(this.crossOrigin);\n    loader.setWithCredentials(this.withCredentials);\n    loader.setPath(this.path);\n    loader.load(url, function(image: HTMLImageElement): void {\n      // JPEGs can't have an alpha channel, so memory can be saved by storing them as RGB.\n      const isJPEG = url.search(/\\.(jpg|jpeg)$/) > 0 || url.search(/^data\\:image\\/jpeg/) === 0;\n      texture.format = isJPEG ? TextureFormat.RGB : TextureFormat.RGBA;\n      texture.image = image;\n      texture.needsUpdate = true;\n      if (onLoad !== undefined) {\n        onLoad(texture);\n      }\n    }, onProgress, onError);\n    return texture;\n  }\n  setCrossOrigin(value: string): TextureLoader {\n    this.crossOrigin = value;\n    return this;\n  }\n  setWithCredentials(value: boolean): TextureLoader {\n    this.withCredentials = value;\n    return this;\n  }\n  setPath(value: string): TextureLoader {\n    this.path = value;\n    return this;\n  }\n}\n","/**\n * @author tschw\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n */\nexport class AnimationUtils {\n  // same as Array.prototype.slice, but also works on typed arrays\n  static arraySlice(array: any, from: number, to: number): any {\n    if (AnimationUtils.isTypedArray(array)) {\n      return new array.constructor(array.subarray(from, to));\n    }\n    return array.slice(from, to);\n  }\n  // converts an array to a specific type\n  static convertArray(array: any, type: any, forceClone: boolean = false) {\n    if (! array || // let 'undefined' and 'null' pass\n        ! forceClone && array.constructor === type) return array;\n    if (typeof type.BYTES_PER_ELEMENT === 'number') {\n      return new type(array); // create typed array\n    }\n    return Array.prototype.slice.call(array); // create Array\n  }\n  static isTypedArray(object: any): boolean {\n    return ArrayBuffer.isView(object) &&\n        ! (object instanceof DataView);\n  }\n  // returns an array by which times and values can be sorted\n  static getKeyframeOrder(times: number[]): number[] {\n    function compareTime(i: number, j: number): number {\n      return times[ i ] - times[ j ];\n    }\n    const n = times.length;\n    const result = new Array(n);\n    for (let i = 0; i !== n; ++ i) result[ i ] = i;\n    result.sort(compareTime);\n    return result;\n  }\n  // uses the array previously returned by 'getKeyframeOrder' to sort data\n  static sortedArray(values: any, stride: number, order: number[]) {\n    const nValues = values.length;\n    const result = new values.constructor(nValues);\n    for (let i = 0, dstOffset = 0; dstOffset !== nValues; ++ i) {\n      const srcOffset = order[ i ] * stride;\n      for (let j = 0; j !== stride; ++ j) {\n        result[ dstOffset ++ ] = values[ srcOffset + j ];\n      }\n    }\n    return result;\n  }\n  // function for parsing AOS keyframe formats\n  static flattenJSON(jsonKeys: any, times: number[], values: any, valuePropertyName: string): void {\n    let i = 1, key = jsonKeys[ 0 ];\n    while (key !== undefined && key[ valuePropertyName ] === undefined) {\n      key = jsonKeys[ i ++ ];\n    }\n    if (key === undefined) return; // no data\n    let value = key[ valuePropertyName ];\n    if (value === undefined) return; // no data\n    if (Array.isArray(value)) {\n      do {\n        value = key[ valuePropertyName ];\n        if (value !== undefined) {\n          times.push(key.time);\n          values.push.apply(values, value); // push all elements\n        }\n        key = jsonKeys[ i ++ ];\n      } while (key !== undefined);\n    } else if (value.toArray !== undefined) {\n      // ...assume THREE.Math-ish\n      do {\n        value = key[ valuePropertyName ];\n        if (value !== undefined) {\n          times.push(key.time);\n          value.toArray(values, values.length);\n        }\n        key = jsonKeys[ i ++ ];\n      } while (key !== undefined);\n    } else {\n      // otherwise push as-is\n      do {\n        value = key[ valuePropertyName ];\n        if (value !== undefined) {\n          times.push(key.time);\n          values.push(value);\n        }\n        key = jsonKeys[ i ++ ];\n      } while (key !== undefined);\n    }\n  }\n}\n","/**\n * Abstract base class of interpolants over parametric samples.\n *\n * The parameter domain is one dimensional, typically the time or a path\n * along a curve defined by the data.\n *\n * The sample values can have any dimensionality and derived classes may\n * apply special interpretations to the data.\n *\n * This class provides the interval seek in a Template Method, deferring\n * the actual interpolation to derived classes.\n *\n * Time complexity is O(1) for linear access crossing at most two points\n * and O(log N) for random access, where N is the number of positions.\n *\n * References:\n *\n *     http://www.oodesign.com/template-method-pattern.html\n *\n * @author tschw\n */\nexport class Interpolant {\n  parameterPositions: number[] | Float32Array | Float64Array;\n  resultBuffer: number[] | Float32Array | Float64Array;\n  _cachedIndex: number;\n  sampleValues: number[] | Float32Array | Float64Array;\n  valueSize: number;\n  constructor(parameterPositions: number[] | Float32Array | Float64Array, sampleValues: number[] | Float32Array | Float64Array, sampleSize: number, resultBuffer?: number[] | Float32Array | Float64Array) {\n    this.parameterPositions = parameterPositions;\n    this._cachedIndex = 0;\n    this.resultBuffer = resultBuffer !== undefined ?\n        resultBuffer : new (sampleValues.constructor as any)(sampleSize);\n    this.sampleValues = sampleValues;\n    this.valueSize = sampleSize;\n  }\n  evaluate(t: number): any {\n    const pp = this.parameterPositions;\n    let i1 = this._cachedIndex;\n    let t1 = pp[   i1   ];\n    let t0 = pp[ i1 - 1 ];\n    validate_interval: {\n      seek: {\n        let right;\n        linear_scan: {\n//- See http://jsperf.com/comparison-to-undefined/3\n//- slower code:\n//-\n//-         if (t >= t1 || t1 === undefined) {\n          forward_scan: if (! (t < t1)) {\n            for (let giveUpAt = i1 + 2; ; ) {\n              if (t1 === undefined) {\n                if (t < t0) break forward_scan;\n                // after end\n                i1 = pp.length;\n                this._cachedIndex = i1;\n                return this.afterEnd_(i1 - 1, t, t0);\n              }\n              if (i1 === giveUpAt) break; // this loop\n              t0 = t1;\n              t1 = pp[ ++ i1 ];\n              if (t < t1) {\n                // we have arrived at the sought interval\n                break seek;\n              }\n            }\n            // prepare binary search on the right side of the index\n            right = pp.length;\n            break linear_scan;\n          }\n//- slower code:\n//-          if (t < t0 || t0 === undefined) {\n          if (! (t >= t0)) {\n            // looping?\n            const t1global = pp[ 1 ];\n            if (t < t1global) {\n              i1 = 2; // + 1, using the scan for the details\n              t0 = t1global;\n            }\n            // linear reverse scan\n            for (let giveUpAt = i1 - 2; ; ) {\n              if (t0 === undefined) {\n                // before start\n                this._cachedIndex = 0;\n                return this.beforeStart_(0, t, t1);\n              }\n              if (i1 === giveUpAt) break; // this loop\n              t1 = t0;\n              t0 = pp[ -- i1 - 1 ];\n              if (t >= t0) {\n                // we have arrived at the sought interval\n                break seek;\n              }\n            }\n            // prepare binary search on the left side of the index\n            right = i1;\n            i1 = 0;\n            break linear_scan;\n          }\n          // the interval is valid\n          break validate_interval;\n        } // linear scan\n        // binary search\n        while (i1 < right) {\n          const mid: number = (i1 + right) >>> 1;\n          if (t < pp[ mid ]) {\n            right = mid;\n          } else {\n            i1 = mid + 1;\n          }\n        }\n        t1 = pp[   i1   ];\n        t0 = pp[ i1 - 1 ];\n        // check boundary cases, again\n        if (t0 === undefined) {\n          this._cachedIndex = 0;\n          return this.beforeStart_(0, t, t1);\n        }\n        if (t1 === undefined) {\n          i1 = pp.length;\n          this._cachedIndex = i1;\n          return this.afterEnd_(i1 - 1, t0, t);\n        }\n      } // seek\n      this._cachedIndex = i1;\n      this.intervalChanged_(i1, t0, t1);\n    } // validate_interval\n    return this.interpolate_(i1, t0, t, t1);\n  }\n  settings: any = null; // optional, subclass-specific settings structure\n  // Note: The indirection allows central control of many interpolants.\n  // --- Protected interface\n  DefaultSettings_ = {};\n  getSettings_(): any {\n    return this.settings || this.DefaultSettings_;\n  }\n  protected copySampleValue_(index: number, t0?: number, t1?: number): any {\n    // copies a sample value to the result buffer\n    const result = this.resultBuffer;\n    const values = this.sampleValues;\n    const stride = this.valueSize;\n    const offset = index * stride;\n    for (let i = 0; i !== stride; ++ i) {\n      result[ i ] = values[ offset + i ];\n    }\n    return result;\n  }\n  // Template methods for derived classes:\n  protected interpolate_(i1: number, t0: number, t: number, t1: number): any {\n    throw new Error(\"call to abstract method\");\n    // implementations shall return this.resultBuffer\n  }\n  protected intervalChanged_(i1: number, t0: number, t1: number): void {\n    // empty\n  }\n  private beforeStart_(i: number, t0: number, t1: number): any {\n    return this.copySampleValue_(i, t0, t1); //(0, t, t0), returns this.resultBuffer\n  }\n  private afterEnd_(i: number, t0: number, t1: number): any {\n    return this.copySampleValue_(i, t0, t1); //(N-1, tN-1, t), returns this.resultBuffer\n  }\n}\n","import { EndingMode } from \"../../constants\";\nimport { Interpolant } from \"../Interpolant\";\n/**\n * Fast and simple cubic spline interpolant.\n *\n * It was derived from a Hermitian construction setting the first derivative\n * at each sample position to the linear slope between neighboring positions\n * over their parameter interval.\n *\n * @author tschw\n */\nexport class CubicInterpolant extends Interpolant {\n  _weightPrev: number;\n  _offsetPrev: number;\n  _weightNext: number;\n  _offsetNext: number;\n  DefaultSettings_ = {\n    endingStart:   EndingMode.ZeroCurvature,\n    endingEnd:    EndingMode.ZeroCurvature\n  };\n  constructor(parameterPositions: number[] | Float32Array | Float64Array, sampleValues: number[] | Float32Array | Float64Array, sampleSize: number, resultBuffer?: number[] | Float32Array | Float64Array) {\n    super(parameterPositions, sampleValues, sampleSize, resultBuffer);\n    this._weightPrev = -0;\n    this._offsetPrev = -0;\n    this._weightNext = -0;\n    this._offsetNext = -0;\n  }\n  intervalChanged_(i1: number, t0: number, t1: number): void {\n    const pp = this.parameterPositions;\n    let iPrev = i1 - 2;\n    let iNext = i1 + 1;\n    let tPrev = pp[ iPrev ];\n    let tNext = pp[ iNext ];\n    if (tPrev === undefined) {\n      switch (this.getSettings_().endingStart) {\n        case EndingMode.ZeroSlope:\n          // f'(t0) = 0\n          iPrev = i1;\n          tPrev = 2 * t0 - t1;\n          break;\n        case EndingMode.WrapAround:\n          // use the other end of the curve\n          iPrev = pp.length - 2;\n          tPrev = t0 + pp[ iPrev ] - pp[ iPrev + 1 ];\n          break;\n        default: // EndingMode.ZeroCurvature\n          // f''(t0) = 0 a.k.a. Natural Spline\n          iPrev = i1;\n          tPrev = t1;\n      }\n    }\n    if (tNext === undefined) {\n      switch (this.getSettings_().endingEnd) {\n        case EndingMode.ZeroSlope:\n          // f'(tN) = 0\n          iNext = i1;\n          tNext = 2 * t1 - t0;\n          break;\n        case EndingMode.WrapAround:\n          // use the other end of the curve\n          iNext = 1;\n          tNext = t1 + pp[ 1 ] - pp[ 0 ];\n          break;\n        default: // EndingMode.ZeroCurvature\n          // f''(tN) = 0, a.k.a. Natural Spline\n          iNext = i1 - 1;\n          tNext = t0;\n      }\n    }\n    const halfDt = (t1 - t0) * 0.5;\n    const stride = this.valueSize;\n    this._weightPrev = halfDt / (t0 - tPrev);\n    this._weightNext = halfDt / (tNext - t1);\n    this._offsetPrev = iPrev * stride;\n    this._offsetNext = iNext * stride;\n  }\n  interpolate_(i1: number, t0: number, t: number, t1: number): any {\n    const result = this.resultBuffer;\n    const values = this.sampleValues;\n    const stride = this.valueSize;\n    const o1 = i1 * stride;\n    const o0 = o1 - stride;\n    const oP = this._offsetPrev;\n    const oN = this._offsetNext;\n    const wP = this._weightPrev;\n    const wN = this._weightNext;\n    const p = (t - t0) / (t1 - t0);\n    const pp = p * p;\n    const ppp = pp * p;\n    // evaluate polynomials\n    const sP =     - wP   * ppp   +         2 * wP    * pp    -          wP   * p;\n    const s0 = (1 + wP) * ppp   + (-1.5 - 2 * wP)  * pp    + (-0.5 + wP) * p     + 1;\n    const s1 = (-1 - wN) * ppp   + (1.5 +   wN)  * pp    +    0.5        * p;\n    const sN =       wN   * ppp   -           wN      * pp;\n    // combine data linearly\n    for (let i = 0; i !== stride; ++ i) {\n      result[ i ] =\n          sP * values[ oP + i ] +\n          s0 * values[ o0 + i ] +\n          s1 * values[ o1 + i ] +\n          sN * values[ oN + i ];\n    }\n    return result;\n  }\n}\n","import { Interpolant } from \"../Interpolant\";\n/**\n * @author tschw\n */\nexport class LinearInterpolant extends Interpolant {\n  constructor(parameterPositions: number[] | Float32Array | Float64Array, sampleValues: number[] | Float32Array | Float64Array, sampleSize: number, resultBuffer?: number[] | Float32Array | Float64Array) {\n    super(parameterPositions, sampleValues, sampleSize, resultBuffer);\n  }\n  interpolate_(i1: number, t0: number, t: number, t1: number): any {\n    const result = this.resultBuffer;\n    const values = this.sampleValues;\n    const stride = this.valueSize;\n    const offset1 = i1 * stride;\n    const offset0 = offset1 - stride;\n    const weight1 = (t - t0) / (t1 - t0);\n    const weight0 = 1 - weight1;\n    for (let i = 0; i !== stride; ++ i) {\n      result[ i ] =\n          values[ offset0 + i ] * weight0 +\n          values[ offset1 + i ] * weight1;\n    }\n    return result;\n  }\n}\n","import { Interpolant } from \"../Interpolant\";\n/**\n *\n * Interpolant that evaluates to the sample value at the position preceeding\n * the parameter.\n *\n * @author tschw\n */\nexport class DiscreteInterpolant extends Interpolant {\n  constructor(parameterPositions: number[] | Float32Array | Float64Array, sampleValues: number[] | Float32Array | Float64Array, sampleSize: number, resultBuffer?: number[] | Float32Array | Float64Array) {\n    super(parameterPositions, sampleValues, sampleSize, resultBuffer);\n  }\n  interpolate_(i1: number, t0: number, t: number, t1: number): any {\n    return this.copySampleValue_(i1 - 1);\n  }\n}\n","import { AnimationUtils } from \"./AnimationUtils\";\nimport { InterpolateMode } from \"../constants\";\nimport { Interpolant } from \"../math/Interpolant\";\nimport { CubicInterpolant } from \"../math/interpolants/CubicInterpolant\";\nimport { LinearInterpolant } from \"../math/interpolants/LinearInterpolant\";\nimport { DiscreteInterpolant } from \"../math/interpolants/DiscreteInterpolant\";\n/**\n *\n * A timed sequence of keyframes for a specific property.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\nexport class KeyframeTrack {\n  name: string;\n  times: number[];\n  values: number[] | Float32Array | Float64Array;\n  constructor(name: string, times: number[], values: number[] | Float32Array | Float64Array, interpolation: number) {\n    if (name === undefined) throw new Error(\"track name is undefined\");\n    if (times === undefined || times.length === 0) {\n      throw new Error(\"no keyframes in track named \" + name);\n    }\n    this.name = name;\n    this.times = AnimationUtils.convertArray(times, this.TimeBufferType);\n    this.values = AnimationUtils.convertArray(values, this.ValueBufferType);\n    this.setInterpolation(interpolation || this.DefaultInterpolation);\n    this.validate();\n    this.optimize();\n  }\n  TimeBufferType: ArrayConstructor | Float32ArrayConstructor | Float64ArrayConstructor = Float32Array;\n  ValueBufferType: ArrayConstructor | Float32ArrayConstructor | Float64ArrayConstructor = Float32Array;\n  DefaultInterpolation: InterpolateMode = InterpolateMode.Linear;\n  InterpolantFactoryMethodDiscrete(result: number[] | Float32Array | Float64Array): Interpolant {\n    return new DiscreteInterpolant(\n        this.times, this.values, this.getValueSize(), result);\n  }\n  InterpolantFactoryMethodLinear(result: number[] | Float32Array | Float64Array): Interpolant {\n    return new LinearInterpolant(\n        this.times, this.values, this.getValueSize(), result);\n  }\n  InterpolantFactoryMethodSmooth(result: number[] | Float32Array | Float64Array): Interpolant {\n    return new CubicInterpolant(\n        this.times, this.values, this.getValueSize(), result);\n  }\n  ValueTypeName: string;\n  createInterpolant: (result: number[] | Float32Array | Float64Array) => Interpolant;\n  setInterpolation(interpolation: InterpolateMode): void {\n    let factoryMethod: (result: number[] | Float32Array | Float64Array) => Interpolant;\n    switch (interpolation) {\n      case InterpolateMode.Discrete:\n        factoryMethod = this.InterpolantFactoryMethodDiscrete;\n        break;\n      case InterpolateMode.Linear:\n        factoryMethod = this.InterpolantFactoryMethodLinear;\n        break;\n      case InterpolateMode.Smooth:\n        factoryMethod = this.InterpolantFactoryMethodSmooth;\n        break;\n    }\n    if (factoryMethod === undefined) {\n      const message = \"unsupported interpolation for \" +\n          this.ValueTypeName + \" keyframe track named \" + this.name;\n      if (this.createInterpolant === undefined) {\n        // fall back to default, unless the default itself is messed up\n        if (interpolation !== this.DefaultInterpolation) {\n          this.setInterpolation(this.DefaultInterpolation);\n        } else {\n          throw new Error(message); // fatal, in this case\n        }\n      }\n      console.warn(message);\n      return;\n    }\n    this.createInterpolant = factoryMethod;\n  }\n  getInterpolation(): InterpolateMode {\n    switch (this.createInterpolant) {\n      case this.InterpolantFactoryMethodDiscrete:\n        return InterpolateMode.Discrete;\n      case this.InterpolantFactoryMethodLinear:\n        return InterpolateMode.Linear;\n      case this.InterpolantFactoryMethodSmooth:\n        return InterpolateMode.Smooth;\n    }\n    throw new Error();\n  }\n  getValueSize(): number {\n    return this.values.length / this.times.length;\n  }\n  // move all keyframes either forwards or backwards in time\n  shift(timeOffset: number): any {\n    if (timeOffset !== 0.0) {\n      const times = this.times;\n      for (let i = 0, n = times.length; i !== n; ++ i) {\n        times[ i ] += timeOffset;\n      }\n    }\n    return this;\n  }\n  // scale all keyframe times by a factor (useful for frame <-> seconds conversions)\n  scale(timeScale: number): any {\n    if (timeScale !== 1.0) {\n      const times = this.times;\n      for (let i = 0, n = times.length; i !== n; ++ i) {\n        times[ i ] *= timeScale;\n      }\n    }\n    return this;\n  }\n  // removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n  // IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\n  trim(startTime: number, endTime: number): any {\n    const times = this.times;\n    const nKeys = times.length;\n    let from = 0;\n    let to = nKeys - 1;\n    while (from !== nKeys && times[ from ] < startTime) ++ from;\n    while (to !== -1 && times[ to ] > endTime) -- to;\n    ++ to; // inclusive -> exclusive bound\n    if (from !== 0 || to !== nKeys) {\n      // empty tracks are forbidden, so keep at least one keyframe\n      if (from >= to) to = Math.max(to , 1), from = to - 1;\n      const stride = this.getValueSize();\n      this.times = AnimationUtils.arraySlice(times, from, to);\n      this.values = AnimationUtils.\n          arraySlice(this.values, from * stride, to * stride);\n    }\n    return this;\n  }\n  // ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\n  validate(): boolean {\n    let valid = true;\n    const valueSize = this.getValueSize();\n    if (valueSize - Math.floor(valueSize) !== 0) {\n      console.error(\"invalid value size in track\", this);\n      valid = false;\n    }\n    const times = this.times;\n    const values = this.values;\n    const nKeys = times.length;\n    if (nKeys === 0) {\n      console.error(\"track is empty\", this);\n      valid = false;\n    }\n    let prevTime = null;\n    for (let i = 0; i !== nKeys; i ++) {\n      const currTime = times[ i ];\n      if (typeof currTime === 'number' && isNaN(currTime)) {\n        console.error(\"time is not a valid number\", this, i, currTime);\n        valid = false;\n        break;\n      }\n      if (prevTime !== null && prevTime > currTime) {\n        console.error(\"out of order keys\", this, i, currTime, prevTime);\n        valid = false;\n        break;\n      }\n      prevTime = currTime;\n    }\n    if (values !== undefined) {\n      if (AnimationUtils.isTypedArray(values)) {\n        for (let i = 0, n = values.length; i !== n; ++ i) {\n          const value = values[ i ];\n          if (isNaN(value)) {\n            console.error(\"value is not a valid number\", this, i, value);\n            valid = false;\n            break;\n          }\n        }\n      }\n    }\n    return valid;\n  }\n  // removes equivalent sequential keys as common in morph target sequences\n  // (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\n  optimize(): any {\n    const times = this.times;\n    const values = this.values;\n    const stride = this.getValueSize();\n    const smoothInterpolation = this.getInterpolation() === InterpolateMode.Smooth;\n    let writeIndex = 1;\n    const lastIndex = times.length - 1;\n    for (let i = 1; i < lastIndex; ++ i) {\n      let keep = false;\n      const time = times[ i ];\n      const timeNext = times[ i + 1 ];\n      // remove adjacent keyframes scheduled at the same time\n      if (time !== timeNext && (i !== 1 || time !== time[ 0 ])) {\n        if (! smoothInterpolation) {\n          // remove unnecessary keyframes same as their neighbors\n          const offset = i * stride;\n          const offsetP = offset - stride;\n          const offsetN = offset + stride;\n          for (let j = 0; j !== stride; ++ j) {\n            const value = values[ offset + j ];\n            if (value !== values[ offsetP + j ] ||\n                value !== values[ offsetN + j ]) {\n              keep = true;\n              break;\n            }\n          }\n        } else keep = true;\n      }\n      // in-place compaction\n      if (keep) {\n        if (i !== writeIndex) {\n          times[ writeIndex ] = times[ i ];\n          const readOffset = i * stride;\n          const writeOffset = writeIndex * stride;\n          for (let j = 0; j !== stride; ++ j)\n            values[ writeOffset + j ] = values[ readOffset + j ];\n        }\n        ++ writeIndex;\n      }\n    }\n    // flush last keyframe (compaction looks ahead)\n    if (lastIndex > 0) {\n      times[ writeIndex ] = times[ lastIndex ];\n      for (let readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++ j)\n        values[ writeOffset + j ] = values[ readOffset + j ];\n      ++ writeIndex;\n    }\n    if (writeIndex !== times.length) {\n      this.times = AnimationUtils.arraySlice(times, 0, writeIndex);\n      this.values = AnimationUtils.arraySlice(values, 0, writeIndex * stride);\n    }\n    return this;\n  }\n}\n","import { InterpolateMode } from \"../../constants\";\nimport { KeyframeTrack } from \"../KeyframeTrack\";\n/**\n *\n * A Track that interpolates Strings\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\nexport class NewStringKeyframeTrack extends KeyframeTrack {\n  constructor(name: string, times: number[], values: any, interpolation?: number) {\n    super(name, times, values, interpolation);\n  }\n  ValueTypeName: string = 'string';\n  ValueBufferType = Array;\n  DefaultInterpolation: InterpolateMode = InterpolateMode.Discrete;\n  ///InterpolantFactoryMethodLinear = undefined; // !!TODO\n  ///InterpolantFactoryMethodSmooth = undefined; // !!TODO\n}\n/*\nexport function OldStringKeyframeTrack(name: string, times: number[], values: any, interpolation: number) {\n  KeyframeTrack.call(this, name, times, values, interpolation);\n}\nOldStringKeyframeTrack.prototype = Object.assign(Object.create(KeyframeTrack.prototype), {\n  constructor: OldStringKeyframeTrack,\n  ValueTypeName: 'string',\n  ValueBufferType: Array,\n  DefaultInterpolation: InterpolateMode.Discrete,\n  InterpolantFactoryMethodLinear: undefined,\n  InterpolantFactoryMethodSmooth: undefined\n});\n*/\nexport { NewStringKeyframeTrack as StringKeyframeTrack }\n","import { InterpolateMode } from \"../../constants\";\nimport { KeyframeTrack } from \"../KeyframeTrack\";\n/**\n *\n * A Track of Boolean keyframe values.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\nexport class NewBooleanKeyframeTrack extends KeyframeTrack {\n  constructor(name: string, times: number[], values: any, interpolation: number) {\n    super(name, times, values, interpolation);\n  }\n  ValueTypeName: string = 'color';\n  ValueBufferType = Array;\n  DefaultInterpolation: InterpolateMode = InterpolateMode.Discrete;\n  ///InterpolantFactoryMethodLinear: undefined; // !!TODO\n  ///InterpolantFactoryMethodSmooth: undefined; // !!TODO\n  // Note: Actually this track could have a optimized / compressed\n  // representation of a single value and a custom interpolant that\n  // computes \"firstValue ^ isOdd(index)\".\n}\n/*\nexport function OldBooleanKeyframeTrack(name: string, times: number, values: number[] | Float32Array) {\n  KeyframeTrack.call(this, name, times, values);\n}\nOldBooleanKeyframeTrack.prototype = Object.assign(Object.create(KeyframeTrack.prototype), {\n  constructor: OldBooleanKeyframeTrack,\n  ValueTypeName: 'bool',\n  ValueBufferType: Array,\n  DefaultInterpolation: InterpolateMode.Discrete,\n  InterpolantFactoryMethodLinear: undefined,\n  InterpolantFactoryMethodSmooth: undefined\n  // Note: Actually this track could have a optimized / compressed\n  // representation of a single value and a custom interpolant that\n  // computes \"firstValue ^ isOdd(index)\".\n});\n*/\nexport { NewBooleanKeyframeTrack as BooleanKeyframeTrack }\n","import { Interpolant } from \"../Interpolant\";\nimport { Quaternion } from \"../Quaternion\";\n/**\n * Spherical linear unit quaternion interpolant.\n *\n * @author tschw\n */\nexport class QuaternionLinearInterpolant extends Interpolant {\n  constructor(parameterPositions: number[] | Float32Array | Float64Array, sampleValues: number[] | Float32Array | Float64Array, sampleSize: number, resultBuffer: number[] | Float32Array | Float64Array) {\n    super(parameterPositions, sampleValues, sampleSize, resultBuffer);\n  }\n  interpolate_(i1: number, t0: number, t: number, t1: number): any {\n    const result = this.resultBuffer;\n    const values = this.sampleValues;\n    const stride = this.valueSize;\n    let offset = i1 * stride;\n    const alpha = (t - t0) / (t1 - t0);\n    for (let end = offset + stride; offset !== end; offset += 4) {\n      Quaternion.slerpFlat(result, 0,\n          values, offset - stride, values, offset, alpha);\n    }\n    return result;\n  }\n}\n","import { InterpolateMode } from \"../../constants\";\nimport { QuaternionLinearInterpolant } from \"../../math/interpolants/QuaternionLinearInterpolant\";\nimport { KeyframeTrack } from \"../KeyframeTrack\";\nimport { Interpolant } from \"../../math/Interpolant\";\n/**\n *\n * A Track of quaternion keyframe values.\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\nexport class NewQuaternionKeyframeTrack extends KeyframeTrack {\n  constructor(name: string, times: number[], values: any, interpolation: number) {\n    super(name, times, values, interpolation);\n  }\n  ValueTypeName: string = 'quaternion';\n  // ValueBufferType is inherited\n  DefaultInterpolation: InterpolateMode = InterpolateMode.Linear;\n  InterpolantFactoryMethodLinear(result: number[] | Float32Array): Interpolant {\n    return new QuaternionLinearInterpolant(\n        this.times, this.values, this.getValueSize(), result);\n  }\n  ///InterpolantFactoryMethodSmooth = undefined; // !!TODO: not yet implemented\n}\n/*\nexport function OldQuaternionKeyframeTrack(name: string, times: number[], values: any, interpolation: number) {\n  KeyframeTrack.call(this, name, times, values, interpolation);\n}\nOldQuaternionKeyframeTrack.prototype = Object.assign(Object.create(KeyframeTrack.prototype), {\n  constructor: OldQuaternionKeyframeTrack,\n  ValueTypeName: 'quaternion',\n  // ValueBufferType is inherited\n  DefaultInterpolation: InterpolateMode.Linear,\n  InterpolantFactoryMethodLinear: function(result: number[] | Float32Array): Interpolant {\n    return new QuaternionLinearInterpolant(\n        this.times, this.values, this.getValueSize(), result);\n  },\n  InterpolantFactoryMethodSmooth: undefined // not yet implemented\n});\n*/\nexport { NewQuaternionKeyframeTrack as QuaternionKeyframeTrack }\n","import { KeyframeTrack } from \"../KeyframeTrack\";\n/**\n *\n * A Track of keyframe values that represent color.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\nexport class NewColorKeyframeTrack extends KeyframeTrack {\n  constructor(name: string, times: number[], values: any, interpolation: number) {\n    super(name, times, values, interpolation);\n  }\n  ValueTypeName: string = 'color';\n  // ValueBufferType is inherited\n  // DefaultInterpolation is inherited\n  // Note: Very basic implementation and nothing special yet.\n  // However, this is the place for color space parameterization.\n}\n/*\nexport function OldColorKeyframeTrack(name: string, times: number[], values: any, interpolation: number) {\n  KeyframeTrack.call(this, name, times, values, interpolation);\n}\nOldColorKeyframeTrack.prototype = Object.assign(Object.create(KeyframeTrack.prototype), {\n  constructor: OldColorKeyframeTrack,\n  ValueTypeName: 'color'\n  // ValueBufferType is inherited\n  // DefaultInterpolation is inherited\n  // Note: Very basic implementation and nothing special yet.\n  // However, this is the place for color space parameterization.\n});\n*/\nexport { NewColorKeyframeTrack as ColorKeyframeTrack }\n","import { KeyframeTrack } from \"../KeyframeTrack\";\n/**\n *\n * A Track of vectored keyframe values.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\nexport class NewVectorKeyframeTrack extends KeyframeTrack {\n  constructor(name: string, times: number[], values: any, interpolation: number) {\n    super(name, times, values, interpolation);\n  }\n  ValueTypeName: string = 'vector';\n  // ValueBufferType is inherited\n  // DefaultInterpolation is inherited\n}\n/*\nexport function OldVectorKeyframeTrack(name: string, times: number[], values: any, interpolation: number) {\n  KeyframeTrack.call(this, name, times, values, interpolation);\n}\nOldVectorKeyframeTrack.prototype = Object.assign(Object.create(KeyframeTrack.prototype), {\n  constructor: OldVectorKeyframeTrack,\n  ValueTypeName: 'vector'\n  // ValueBufferType is inherited\n  // DefaultInterpolation is inherited\n});\n*/\nexport { NewVectorKeyframeTrack as VectorKeyframeTrack }\n","import { KeyframeTrack } from \"../KeyframeTrack\";\n/**\n *\n * A Track of numeric keyframe values.\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\nexport class NewNumberKeyframeTrack extends KeyframeTrack {\n  constructor(name: string, times: number[], values: any, interpolation?: number) {\n    super(name, times, values, interpolation);\n  }\n  ValueTypeName: string = 'number';\n  // ValueBufferType is inherited\n  // DefaultInterpolation is inherited\n}\n/*\nexport function OldNumberKeyframeTrack(name: string, times: number[], values: any, interpolation?: number) {\n  KeyframeTrack.call(this, name, times, values, interpolation);\n}\nOldNumberKeyframeTrack.prototype = Object.assign(Object.create(KeyframeTrack.prototype), {\n  constructor: OldNumberKeyframeTrack,\n  ValueTypeName: 'number',\n  // ValueBufferType is inherited\n  // DefaultInterpolation is inherited\n});\n*/\nexport { NewNumberKeyframeTrack as NumberKeyframeTrack }\n","import { KeyframeTrack } from \"./KeyframeTrack\";\nimport { StringKeyframeTrack } from \"./tracks/StringKeyframeTrack\";\nimport { BooleanKeyframeTrack } from \"./tracks/BooleanKeyframeTrack\";\nimport { QuaternionKeyframeTrack } from \"./tracks/QuaternionKeyframeTrack\";\nimport { ColorKeyframeTrack } from \"./tracks/ColorKeyframeTrack\";\nimport { VectorKeyframeTrack } from \"./tracks/VectorKeyframeTrack\";\nimport { NumberKeyframeTrack } from \"./tracks/NumberKeyframeTrack\";\nimport { AnimationUtils } from \"./AnimationUtils\";\nexport class KeyframeTrackUtils {\n  // Static methods:\n  // Serialization (in static context, because of constructor invocation\n  // and automatic invocation of .toJSON):\n  static parse(json: any): KeyframeTrack {\n    if (json.type === undefined) {\n      throw new Error(\"track type undefined, can not parse\");\n    }\n    let trackType: any = KeyframeTrackUtils._getTrackTypeForValueTypeName(json.type);\n    if (json.times === undefined) {\n      let times: any[] = [], values: any[] = [];\n      AnimationUtils.flattenJSON(json.keys, times, values, 'value');\n      json.times = times;\n      json.values = values;\n    }\n    // derived classes can define a static parse method\n    if (trackType.parse !== undefined) {\n      return trackType.parse(json);\n    } else {\n      // by default, we asssume a constructor compatible with the base\n      return new trackType(\n          json.name, json.times, json.values, json.interpolation);\n    }\n  }\n  static toJSON(track: KeyframeTrack): any {\n    let trackType: any = track.constructor;\n    let json: any;\n    // derived classes can define a static toJSON method\n    if (trackType.toJSON !== undefined) {\n      json = trackType.toJSON(track);\n    } else {\n      // by default, we assume the data can be serialized as-is\n      json = {\n        'name': track.name,\n        'times': AnimationUtils.convertArray(track.times, Array),\n        'values': AnimationUtils.convertArray(track.values, Array)\n      };\n      let interpolation = track.getInterpolation();\n      if (interpolation !== track.DefaultInterpolation) {\n        json.interpolation = interpolation;\n      }\n    }\n    json.type = track.ValueTypeName; // mandatory\n    return json;\n  }\n  private static _getTrackTypeForValueTypeName(typeName: string): any {\n    switch (typeName.toLowerCase()) {\n      case \"scalar\":\n      case \"double\":\n      case \"float\":\n      case \"number\":\n      case \"integer\":\n        return NumberKeyframeTrack;\n      case \"vector\":\n      case \"vector2\":\n      case \"vector3\":\n      case \"vector4\":\n        return VectorKeyframeTrack;\n      case \"color\":\n        return ColorKeyframeTrack;\n      case \"quaternion\":\n        return QuaternionKeyframeTrack;\n      case \"bool\":\n      case \"boolean\":\n        return BooleanKeyframeTrack;\n      case \"string\":\n        return StringKeyframeTrack;\n    }\n    throw new Error(\"Unsupported typeName: \" + typeName);\n  }\n}\n","///import { KeyframeTrack } from \"./KeyframeTrack\";\nimport { KeyframeTrackUtils } from \"./KeyframeTrackUtils\";\nimport { KeyframeTrack } from \"./KeyframeTrack\";\nimport { VectorKeyframeTrack } from \"./tracks/VectorKeyframeTrack\";\nimport { QuaternionKeyframeTrack } from \"./tracks/QuaternionKeyframeTrack\";\nimport { NumberKeyframeTrack } from \"./tracks/NumberKeyframeTrack\";\nimport { AnimationUtils } from \"./AnimationUtils\";\nimport { _Math } from \"../math/Math\";\nimport { Bone } from \"../objects/Bone\";\n/**\n *\n * Reusable set of Tracks that represent an animation.\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n */\nexport class AnimationClip {\n  name: string;\n  tracks: KeyframeTrack[];\n  duration: number;\n  uuid: string;\n  constructor(name: string, duration: number, tracks: KeyframeTrack[]) {\n    this.name = name;\n    this.tracks = tracks;\n    this.duration = (duration !== undefined) ? duration : -1;\n    this.uuid = _Math.generateUUID();\n    // this means it should figure out its duration by scanning the tracks\n    if (this.duration < 0) {\n      this.resetDuration();\n    }\n    this.optimize();\n  }\n  resetDuration(): void {\n    const tracks = this.tracks;\n    let duration = 0;\n    for (let i = 0, n = tracks.length; i !== n; ++ i) {\n      const track = this.tracks[ i ];\n      duration = Math.max(\n          duration, track.times[ track.times.length - 1 ]);\n    }\n    this.duration = duration;\n  }\n  trim(): AnimationClip {\n    for (let i = 0; i < this.tracks.length; i ++) {\n      this.tracks[ i ].trim(0, this.duration);\n    }\n    return this;\n  }\n  optimize(): AnimationClip {\n    for (let i = 0; i < this.tracks.length; i ++) {\n      this.tracks[ i ].optimize();\n    }\n    return this;\n  }\n  // Static methods:\n  static parse(json: any): any {\n    const tracks = [],\n      jsonTracks = json.tracks,\n      frameTime = 1.0 / (json.fps || 1.0);\n    for (let i = 0, n = jsonTracks.length; i !== n; ++ i) {\n      tracks.push(KeyframeTrackUtils.parse(jsonTracks[ i ]).scale(frameTime));\n    }\n    return new AnimationClip(json.name, json.duration, tracks);\n  }\n  static toJSON(clip: AnimationClip): any {\n    const tracks: any = [];\n    const clipTracks = clip.tracks;\n    const json = {\n      'name': clip.name,\n      'duration': clip.duration,\n      'tracks': tracks\n    };\n    for (let i = 0, n = clipTracks.length; i !== n; ++ i) {\n      tracks.push(KeyframeTrackUtils.toJSON(clipTracks[ i ]));\n    }\n    return json;\n  }\n  static CreateFromMorphTargetSequence(name: string, morphTargetSequence: any[], fps: number, noLoop: boolean): AnimationClip {\n    const numMorphTargets = morphTargetSequence.length;\n    const tracks = [];\n    for (let i = 0; i < numMorphTargets; i ++) {\n      let times = [];\n      let values = [];\n      times.push(\n          (i + numMorphTargets - 1) % numMorphTargets,\n          i,\n          (i + 1) % numMorphTargets);\n      values.push(0, 1, 0);\n      const order = AnimationUtils.getKeyframeOrder(times);\n      times = AnimationUtils.sortedArray(times, 1, order);\n      values = AnimationUtils.sortedArray(values, 1, order);\n      // if there is a key at the first frame, duplicate it as the\n      // last frame as well for perfect loop.\n      if (! noLoop && times[ 0 ] === 0) {\n        times.push(numMorphTargets);\n        values.push(values[ 0 ]);\n      }\n      tracks.push(\n          new NumberKeyframeTrack(\n            '.morphTargetInfluences[' + morphTargetSequence[ i ].name + ']',\n            times, values\n          ).scale(1.0 / fps));\n    }\n    return new AnimationClip(name, -1, tracks);\n  }\n  static findByName(objectOrClipArray: any, name: string): any {\n    let clipArray = objectOrClipArray;\n    if (! Array.isArray(objectOrClipArray)) {\n      const o = objectOrClipArray;\n      clipArray = o.geometry && o.geometry.animations || o.animations;\n    }\n    for (let i = 0; i < clipArray.length; i ++) {\n      if (clipArray[ i ].name === name) {\n        return clipArray[ i ];\n      }\n    }\n    return null;\n  }\n  static CreateClipsFromMorphTargetSequences(morphTargets: any[], fps: number, noLoop?: boolean): AnimationClip[] {\n    const animationToMorphTargets = {};\n    // tested with https://regex101.com/ on trick sequences\n    // such flamingo_flyA_003, flamingo_run1_003, crdeath0059\n    const pattern: RegExp = /^([\\w-]*?)([\\d]+)$/;\n    // sort morph target names into animation groups based\n    // patterns like Walk_001, Walk_002, Run_001, Run_002\n    for (let i = 0, il = morphTargets.length; i < il; i ++) {\n      const morphTarget = morphTargets[ i ];\n      const parts = morphTarget.name.match(pattern);\n      if (parts && parts.length > 1) {\n        const name = parts[ 1 ];\n        let animationMorphTargets = animationToMorphTargets[ name ];\n        if (! animationMorphTargets) {\n          animationToMorphTargets[ name ] = animationMorphTargets = [];\n        }\n        animationMorphTargets.push(morphTarget);\n      }\n    }\n    const clips: AnimationClip[] = [];\n    for (let name in animationToMorphTargets) {\n      clips.push(AnimationClip.CreateFromMorphTargetSequence(name, animationToMorphTargets[ name ], fps, noLoop));\n    }\n    return clips;\n  }\n  // parse the animation.hierarchy format\n  static parseAnimation(animation: any, bones: Bone[]): AnimationClip {\n    if (! animation) {\n      console.error(\"  no animation in JSONLoader data\");\n      return null;\n    }\n    function addNonemptyTrack(trackType: any, trackName: string, animationKeys: any, propertyName: string, destTracks: any): void {\n      // only return track if there are actually keys.\n      if (animationKeys.length !== 0) {\n        const times: any[] = [];\n        const values: any[] = [];\n        AnimationUtils.flattenJSON(\n            animationKeys, times, values, propertyName);\n        // empty keys are filtered out, so check again\n        if (times.length !== 0) {\n          destTracks.push(new trackType(trackName, times, values));\n        }\n      }\n    }\n    const tracks = [];\n    const clipName = animation.name || 'default';\n    // automatic length determination in AnimationClip.\n    let duration = animation.length || -1;\n    const fps = animation.fps || 30;\n    const hierarchyTracks = animation.hierarchy || [];\n    for (let h = 0; h < hierarchyTracks.length; h ++) {\n      const animationKeys = hierarchyTracks[ h ].keys;\n      // skip empty tracks\n      if (! animationKeys || animationKeys.length === 0) continue;\n      // process morph targets in a way exactly compatible\n      // with AnimationHandler.init(animation)\n      if (animationKeys[0].morphTargets) {\n        // figure out all morph targets used in this track\n        const morphTargetNames: any = {};\n        let k;\n        for (k = 0; k < animationKeys.length; k ++) {\n          if (animationKeys[k].morphTargets) {\n            for (let m = 0; m < animationKeys[k].morphTargets.length; m ++) {\n              morphTargetNames[ animationKeys[k].morphTargets[m] ] = -1;\n            }\n          }\n        }\n        // create a track for each morph target with all zero\n        // morphTargetInfluences except for the keys in which\n        // the morphTarget is named.\n        for (let morphTargetName in morphTargetNames) {\n          let times = [];\n          let values = [];\n          for (let m = 0;\n              m !== animationKeys[k].morphTargets.length; ++ m) {\n            const animationKey = animationKeys[k];\n            times.push(animationKey.time);\n            values.push((animationKey.morphTarget === morphTargetName) ? 1 : 0);\n          }\n          tracks.push(new NumberKeyframeTrack(\n              '.morphTargetInfluence[' + morphTargetName + ']', times, values));\n        }\n        duration = morphTargetNames.length * (fps || 1.0);\n      } else {\n        // ...assume skeletal animation\n        const boneName = '.bones[' + bones[ h ].name + ']';\n        addNonemptyTrack(\n            VectorKeyframeTrack, boneName + '.position',\n            animationKeys, 'pos', tracks);\n        addNonemptyTrack(\n            QuaternionKeyframeTrack, boneName + '.quaternion',\n            animationKeys, 'rot', tracks);\n        addNonemptyTrack(\n            VectorKeyframeTrack, boneName + '.scale',\n            animationKeys, 'scl', tracks);\n      }\n    }\n    if (tracks.length === 0) {\n      return null;\n    }\n    const clip = new AnimationClip(clipName, duration, tracks);\n    return clip;\n  }\n}\n","import { Vector2 } from \"../math/Vector2\";\nimport { XHRLoader } from \"./XHRLoader\";\nimport { LoadingManager, DefaultLoadingManager } from \"./LoadingManager\";\nimport { Material } from \"../materials/Material\";\nimport * as Materials from \"../materials/Materials\";\nimport { Texture } from \"../textures/Texture\";\n/**\n * @author mrdoob / http://mrdoob.com/\n */\nexport class MaterialLoader {\n  manager: LoadingManager;\n  textures: Map<string, Texture> = new Map<string, Texture>();\n  constructor(manager: LoadingManager = DefaultLoadingManager) {\n    this.manager = manager;\n  }\n  load(url: string, onLoad: (material: Material) => void, onProgress?: (event: ProgressEvent) => void, onError?: (event: ErrorEvent) => void): void {\n    const scope: MaterialLoader = this;\n    const loader: XHRLoader = new XHRLoader(scope.manager);\n    loader.load(url, function(text: string): void {\n      onLoad(scope.parse(JSON.parse(text)));\n    }, onProgress, onError);\n  }\n  setTextures(value: Map<string, Texture>): void {\n    this.textures = value;\n  }\n  parse(json: any): Material {\n    const textures = this.textures;\n    function getTexture(name: string): Texture {\n      if (textures[name] === undefined) {\n        console.warn('THREE.MaterialLoader: Undefined texture', name);\n      }\n      return textures[name];\n    }\n    const material: any = new Materials[json.type]();\n    if (json.uuid !== undefined) material.uuid = json.uuid;\n    if (json.name !== undefined) material.name = json.name;\n    if (json.color !== undefined) material.color.setHex(json.color);\n    if (json.roughness !== undefined) material.roughness = json.roughness;\n    if (json.metalness !== undefined) material.metalness = json.metalness;\n    if (json.emissive !== undefined) material.emissive.setHex(json.emissive);\n    if (json.specular !== undefined) material.specular.setHex(json.specular);\n    if (json.shininess !== undefined) material.shininess = json.shininess;\n    if (json.uniforms !== undefined) material.uniforms = json.uniforms;\n    if (json.vertexShader !== undefined) material.vertexShader = json.vertexShader;\n    if (json.fragmentShader !== undefined) material.fragmentShader = json.fragmentShader;\n    if (json.vertexColors !== undefined) material.vertexColors = json.vertexColors;\n    if (json.fog !== undefined) material.fog = json.fog;\n    if (json.shading !== undefined) material.shading = json.shading;\n    if (json.blending !== undefined) material.blending = json.blending;\n    if (json.side !== undefined) material.side = json.side;\n    if (json.opacity !== undefined) material.opacity = json.opacity;\n    if (json.transparent !== undefined) material.transparent = json.transparent;\n    if (json.alphaTest !== undefined) material.alphaTest = json.alphaTest;\n    if (json.depthTest !== undefined) material.depthTest = json.depthTest;\n    if (json.depthWrite !== undefined) material.depthWrite = json.depthWrite;\n    if (json.colorWrite !== undefined) material.colorWrite = json.colorWrite;\n    if (json.wireframe !== undefined) material.wireframe = json.wireframe;\n    if (json.wireframeLinewidth !== undefined) material.wireframeLinewidth = json.wireframeLinewidth;\n    if (json.wireframeLinecap !== undefined) material.wireframeLinecap = json.wireframeLinecap;\n    if (json.wireframeLinejoin !== undefined) material.wireframeLinejoin = json.wireframeLinejoin;\n    if (json.skinning !== undefined) material.skinning = json.skinning;\n    if (json.morphTargets !== undefined) material.morphTargets = json.morphTargets;\n    // for PointsMaterial\n    if (json.size !== undefined) material.size = json.size;\n    if (json.sizeAttenuation !== undefined) material.sizeAttenuation = json.sizeAttenuation;\n    // maps\n    if (json.map !== undefined) material.map = getTexture(json.map);\n    if (json.alphaMap !== undefined) {\n      material.alphaMap = getTexture(json.alphaMap);\n      material.transparent = true;\n    }\n    if (json.bumpMap !== undefined) material.bumpMap = getTexture(json.bumpMap);\n    if (json.bumpScale !== undefined) material.bumpScale = json.bumpScale;\n    if (json.normalMap !== undefined) material.normalMap = getTexture(json.normalMap);\n    if (json.normalScale !== undefined) {\n      let normalScale = json.normalScale;\n      if (Array.isArray(normalScale) === false) {\n        // Blender exporter used to export a scalar. See #7459\n        normalScale = [ normalScale, normalScale ];\n      }\n      material.normalScale = new Vector2().fromArray(normalScale);\n    }\n    if (json.displacementMap !== undefined) material.displacementMap = getTexture(json.displacementMap);\n    if (json.displacementScale !== undefined) material.displacementScale = json.displacementScale;\n    if (json.displacementBias !== undefined) material.displacementBias = json.displacementBias;\n    if (json.roughnessMap !== undefined) material.roughnessMap = getTexture(json.roughnessMap);\n    if (json.metalnessMap !== undefined) material.metalnessMap = getTexture(json.metalnessMap);\n    if (json.emissiveMap !== undefined) material.emissiveMap = getTexture(json.emissiveMap);\n    if (json.emissiveIntensity !== undefined) material.emissiveIntensity = json.emissiveIntensity;\n    if (json.specularMap !== undefined) material.specularMap = getTexture(json.specularMap);\n    if (json.envMap !== undefined) material.envMap = getTexture(json.envMap);\n    if (json.reflectivity !== undefined) material.reflectivity = json.reflectivity;\n    if (json.lightMap !== undefined) material.lightMap = getTexture(json.lightMap);\n    if (json.lightMapIntensity !== undefined) material.lightMapIntensity = json.lightMapIntensity;\n    if (json.aoMap !== undefined) material.aoMap = getTexture(json.aoMap);\n    if (json.aoMapIntensity !== undefined) material.aoMapIntensity = json.aoMapIntensity;\n    // MultiMaterial\n    if (json.materials !== undefined) {\n      for (let i = 0, l = json.materials.length; i < l; i ++) {\n        material.materials.push(this.parse(json.materials[i]));\n      }\n    }\n    return material;\n  }\n}\n","import { Sphere } from \"../math/Sphere\";\nimport { Vector3 } from \"../math/Vector3\";\nimport { BufferAttribute, TypedArray, TypedArrayConstructor } from \"../core/BufferAttribute\";\nimport { BufferGeometry } from \"../core/BufferGeometry\";\nimport { XHRLoader } from \"./XHRLoader\";\nimport { LoadingManager, DefaultLoadingManager } from \"./LoadingManager\";\n/**\n * @author mrdoob / http://mrdoob.com/\n */\nexport class BufferGeometryLoader {\n  manager: LoadingManager;\n  constructor(manager: LoadingManager = DefaultLoadingManager) {\n    this.manager = manager;\n  }\n  load(url: string, onLoad: (geometry: BufferGeometry) => void, onProgress?: (event: ProgressEvent) => void, onError?: (event: ErrorEvent) => void): void {\n    const scope: BufferGeometryLoader = this;\n    const loader: XHRLoader = new XHRLoader(scope.manager);\n    loader.load(url, function(text: string): void {\n      onLoad(scope.parse(JSON.parse(text)));\n    }, onProgress, onError);\n  }\n  parse(json: any): BufferGeometry {\n    const geometry: BufferGeometry = new BufferGeometry();\n    const index: any = json.data.index;\n    const TYPED_ARRAYS: { [key: string]: TypedArrayConstructor } = {\n      'Int8Array': Int8Array,\n      'Uint8Array': Uint8Array,\n      'Uint8ClampedArray': Uint8ClampedArray,\n      'Int16Array': Int16Array,\n      'Uint16Array': Uint16Array,\n      'Int32Array': Int32Array,\n      'Uint32Array': Uint32Array,\n      'Float32Array': Float32Array,\n      'Float64Array': Float64Array\n    };\n    if (index !== undefined) {\n      const typedArray: TypedArray = new TYPED_ARRAYS[index.type](index.array);\n      geometry.setIndex(new BufferAttribute(typedArray, 1));\n    }\n    const attributes = json.data.attributes;\n    for (let key in attributes) {\n      const attribute = attributes[key];\n      const typedArray: TypedArray = new TYPED_ARRAYS[attribute.type](attribute.array);\n      geometry.addAttribute(key, new BufferAttribute(typedArray, attribute.itemSize, attribute.normalized));\n    }\n    const groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n    if (groups !== undefined) {\n      for (let i = 0, n = groups.length; i !== n; ++ i) {\n        const group = groups[i];\n        geometry.addGroup(group.start, group.count, group.materialIndex);\n      }\n    }\n    const boundingSphere = json.data.boundingSphere;\n    if (boundingSphere !== undefined) {\n      const center = new Vector3();\n      if (boundingSphere.center !== undefined) {\n        center.fromArray(boundingSphere.center);\n      }\n      geometry.boundingSphere = new Sphere(center, boundingSphere.radius);\n    }\n    return geometry;\n  }\n}\n","import { ColorsMode, SideMode, TextureWrapping, BlendingMode } from \"../constants\";\nimport { _Math } from \"../math/Math\";\nimport { Vector2 } from \"../math/Vector2\";\nimport { MaterialLoader } from \"./MaterialLoader\";\nimport { TextureLoader } from \"./TextureLoader\";\nimport { Color } from \"../math/Color\";\nimport { Material } from \"../materials/Material\";\nimport { Texture } from \"../textures/Texture\";\n/**\n * @author alteredq / http://alteredqualia.com/\n */\nexport class Loader {\n  onLoadStart: () => void = function() {};\n  onLoadProgress: () => void = function() {};\n  onLoadComplete: () => void = function() {};\n  crossOrigin: string;\n  extractUrlBase(url: string): string {\n    const parts: string[] = url.split('/');\n    if (parts.length === 1) return './';\n    parts.pop();\n    return parts.join('/') + '/';\n  }\n  initMaterials(materials: Material[], texturePath: string, crossOrigin: string): Material[] {\n    const array: Material[] = [];\n    for (let i = 0; i < materials.length; ++ i) {\n      array[i] = this.createMaterial(materials[i], texturePath, crossOrigin);\n    }\n    return array;\n  }\n  createMaterial(m: any, texturePath: string, crossOrigin: string): Material {\n    const color = new Color(), textureLoader = new TextureLoader(), materialLoader = new MaterialLoader();\n    //return function createMaterial(m, texturePath, crossOrigin) {\n      // convert from old material format\n      const textures = new Map<string, Texture>();\n      function loadTexture(path: string, repeat: number[], offset: Vector2, wrap: string[], anisotropy: number): string {\n        const fullPath: string = texturePath + path;\n        const loader = Loader.Handlers.get(fullPath);\n        let texture;\n        if (loader !== null) {\n          texture = loader.load(fullPath);\n        } else {\n          textureLoader.setCrossOrigin(crossOrigin);\n          texture = textureLoader.load(fullPath);\n        }\n        if (repeat !== undefined) {\n          texture.repeat.fromArray(repeat);\n          if (repeat[0] !== 1) texture.wrapS = TextureWrapping.Repeat;\n          if (repeat[1] !== 1) texture.wrapT = TextureWrapping.Repeat;\n        }\n        if (offset !== undefined) {\n          texture.offset.fromArray(offset);\n        }\n        if (wrap !== undefined) {\n          if (wrap[0] === 'repeat') texture.wrapS = TextureWrapping.Repeat;\n          if (wrap[0] === 'mirror') texture.wrapS = TextureWrapping.MirroredRepeat;\n          if (wrap[1] === 'repeat') texture.wrapT = TextureWrapping.Repeat;\n          if (wrap[1] === 'mirror') texture.wrapT = TextureWrapping.MirroredRepeat;\n        }\n        if (anisotropy !== undefined) {\n          texture.anisotropy = anisotropy;\n        }\n        const uuid = _Math.generateUUID();\n        textures[uuid] = texture;\n        return uuid;\n      }\n      //\n      const json: any = {\n        uuid: _Math.generateUUID(),\n        type: 'MeshLambertMaterial'\n      };\n      for (let name in m) {\n        const value = m[name];\n        switch (name) {\n          case 'DbgColor':\n          case 'DbgIndex':\n          case 'opticalDensity':\n          case 'illumination':\n            break;\n          case 'DbgName':\n            json.name = value;\n            break;\n          case 'blending':\n            json.blending = BlendingMode[value];\n            break;\n          case 'colorAmbient':\n          case 'mapAmbient':\n            console.warn('THREE.Loader.createMaterial:', name, 'is no longer supported.');\n            break;\n          case 'colorDiffuse':\n            json.color = color.fromArray(value).getHex();\n            break;\n          case 'colorSpecular':\n            json.specular = color.fromArray(value).getHex();\n            break;\n          case 'colorEmissive':\n            json.emissive = color.fromArray(value).getHex();\n            break;\n          case 'specularCoef':\n            json.shininess = value;\n            break;\n          case 'shading':\n            if (value.toLowerCase() === 'basic') json.type = 'MeshBasicMaterial';\n            if (value.toLowerCase() === 'phong') json.type = 'MeshPhongMaterial';\n            if (value.toLowerCase() === 'standard') json.type = 'MeshStandardMaterial';\n            break;\n          case 'mapDiffuse':\n            json.map = loadTexture(value, m.mapDiffuseRepeat, m.mapDiffuseOffset, m.mapDiffuseWrap, m.mapDiffuseAnisotropy);\n            break;\n          case 'mapDiffuseRepeat':\n          case 'mapDiffuseOffset':\n          case 'mapDiffuseWrap':\n          case 'mapDiffuseAnisotropy':\n            break;\n          case 'mapEmissive':\n            json.emissiveMap = loadTexture(value, m.mapEmissiveRepeat, m.mapEmissiveOffset, m.mapEmissiveWrap, m.mapEmissiveAnisotropy);\n            break;\n          case 'mapEmissiveRepeat':\n          case 'mapEmissiveOffset':\n          case 'mapEmissiveWrap':\n          case 'mapEmissiveAnisotropy':\n            break;\n          case 'mapLight':\n            json.lightMap = loadTexture(value, m.mapLightRepeat, m.mapLightOffset, m.mapLightWrap, m.mapLightAnisotropy);\n            break;\n          case 'mapLightRepeat':\n          case 'mapLightOffset':\n          case 'mapLightWrap':\n          case 'mapLightAnisotropy':\n            break;\n          case 'mapAO':\n            json.aoMap = loadTexture(value, m.mapAORepeat, m.mapAOOffset, m.mapAOWrap, m.mapAOAnisotropy);\n            break;\n          case 'mapAORepeat':\n          case 'mapAOOffset':\n          case 'mapAOWrap':\n          case 'mapAOAnisotropy':\n            break;\n          case 'mapBump':\n            json.bumpMap = loadTexture(value, m.mapBumpRepeat, m.mapBumpOffset, m.mapBumpWrap, m.mapBumpAnisotropy);\n            break;\n          case 'mapBumpScale':\n            json.bumpScale = value;\n            break;\n          case 'mapBumpRepeat':\n          case 'mapBumpOffset':\n          case 'mapBumpWrap':\n          case 'mapBumpAnisotropy':\n            break;\n          case 'mapNormal':\n            json.normalMap = loadTexture(value, m.mapNormalRepeat, m.mapNormalOffset, m.mapNormalWrap, m.mapNormalAnisotropy);\n            break;\n          case 'mapNormalFactor':\n            json.normalScale = [value, value];\n            break;\n          case 'mapNormalRepeat':\n          case 'mapNormalOffset':\n          case 'mapNormalWrap':\n          case 'mapNormalAnisotropy':\n            break;\n          case 'mapSpecular':\n            json.specularMap = loadTexture(value, m.mapSpecularRepeat, m.mapSpecularOffset, m.mapSpecularWrap, m.mapSpecularAnisotropy);\n            break;\n          case 'mapSpecularRepeat':\n          case 'mapSpecularOffset':\n          case 'mapSpecularWrap':\n          case 'mapSpecularAnisotropy':\n            break;\n          case 'mapMetalness':\n            json.metalnessMap = loadTexture(value, m.mapMetalnessRepeat, m.mapMetalnessOffset, m.mapMetalnessWrap, m.mapMetalnessAnisotropy);\n            break;\n          case 'mapMetalnessRepeat':\n          case 'mapMetalnessOffset':\n          case 'mapMetalnessWrap':\n          case 'mapMetalnessAnisotropy':\n            break;\n          case 'mapRoughness':\n            json.roughnessMap = loadTexture(value, m.mapRoughnessRepeat, m.mapRoughnessOffset, m.mapRoughnessWrap, m.mapRoughnessAnisotropy);\n            break;\n          case 'mapRoughnessRepeat':\n          case 'mapRoughnessOffset':\n          case 'mapRoughnessWrap':\n          case 'mapRoughnessAnisotropy':\n            break;\n          case 'mapAlpha':\n            json.alphaMap = loadTexture(value, m.mapAlphaRepeat, m.mapAlphaOffset, m.mapAlphaWrap, m.mapAlphaAnisotropy);\n            break;\n          case 'mapAlphaRepeat':\n          case 'mapAlphaOffset':\n          case 'mapAlphaWrap':\n          case 'mapAlphaAnisotropy':\n            break;\n          case 'flipSided':\n            json.side = SideMode.Back;\n            break;\n          case 'doubleSided':\n            json.side = SideMode.Double;\n            break;\n          case 'transparency':\n            console.warn('THREE.Loader.createMaterial: transparency has been renamed to opacity');\n            json.opacity = value;\n            break;\n          case 'depthTest':\n          case 'depthWrite':\n          case 'colorWrite':\n          case 'opacity':\n          case 'reflectivity':\n          case 'transparent':\n          case 'visible':\n          case 'wireframe':\n            json[name] = value;\n            break;\n          case 'vertexColors':\n            if (value === true) json.vertexColors = ColorsMode.Vertex;\n            if (value === 'face') json.vertexColors = ColorsMode.Face;\n            break;\n          default:\n            console.error('THREE.Loader.createMaterial: Unsupported', name, value);\n            break;\n        }\n      }\n      if (json.type === 'MeshBasicMaterial') delete json.emissive;\n      if (json.type !== 'MeshPhongMaterial') delete json.specular;\n      if (json.opacity < 1) json.transparent = true;\n      materialLoader.setTextures(textures);\n      return materialLoader.parse(json);\n    //};\n  }\n  static Handlers = class {\n    static handlers: any[] = [];\n    static add(regex: RegExp, loader: any): void {\n      this.handlers.push(regex, loader);\n    }\n    static get(file: string): any {\n      const handlers = this.handlers;\n      for (let i = 0, l = handlers.length; i < l; i += 2) {\n        const regex = handlers[i];\n        const loader = handlers[i + 1];\n        if (regex.test(file)) {\n          return loader;\n        }\n      }\n      return null;\n    }\n  };\n}\n","import { Loader } from \"./Loader\";\nimport { AnimationClip } from \"../animation/AnimationClip\";\nimport { Vector3 } from \"../math/Vector3\";\nimport { Vector4 } from \"../math/Vector4\";\nimport { Color } from \"../math/Color\";\nimport { Vector2 } from \"../math/Vector2\";\nimport { Face3 } from \"../core/Face3\";\nimport { Geometry } from \"../core/Geometry\";\nimport { Material } from \"../materials/Material\";\nimport { XHRLoader } from \"./XHRLoader\";\nimport { LoadingManager, DefaultLoadingManager } from \"./LoadingManager\";\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\nexport class JSONLoader {\n  manager: LoadingManager;\n  texturePath: string;\n  crossOrigin: string;\n  withCredentials: boolean = false;\n  constructor(manager: LoadingManager = DefaultLoadingManager) {\n    //if (typeof manager === 'boolean') {\n    //  console.warn('THREE.JSONLoader: showStatus parameter has been removed from constructor.');\n    //  manager = undefined;\n    //}\n    this.manager = manager;\n  }\n  load(url: string, onLoad: (geometry: Geometry, materials: Material[]) => void, onProgress?: (event: ProgressEvent) => void, onError?: (event: ErrorEvent) => void): void {\n    const scope: JSONLoader = this;\n    const texturePath: string = this.texturePath && (typeof this.texturePath === \"string\") ? this.texturePath : Loader.prototype.extractUrlBase(url);\n    const loader: XHRLoader = new XHRLoader(this.manager);\n    loader.setWithCredentials(this.withCredentials);\n    loader.load(url, function(text: string): void {\n      const json = JSON.parse(text);\n      const metadata = json.metadata;\n      if (metadata !== undefined) {\n        const type = metadata.type;\n        if (type !== undefined) {\n          if (type.toLowerCase() === 'object') {\n            console.error('THREE.JSONLoader: ' + url + ' should be loaded with THREE.ObjectLoader instead.');\n            return;\n          }\n          if (type.toLowerCase() === 'scene') {\n            console.error('THREE.JSONLoader: ' + url + ' should be loaded with THREE.SceneLoader instead.');\n            return;\n          }\n        }\n      }\n      const object: any = scope.parse(json, texturePath);\n      onLoad(object.geometry, object.materials);\n    }, onProgress, onError);\n  }\n  setTexturePath(value: string): void {\n    this.texturePath = value;\n  }\n  parse(json: any, texturePath: string): { geometry: Geometry, materials?: Material[] } {\n    const geometry: Geometry = new Geometry();\n    const scale: number = (json.scale !== undefined) ? 1.0 / json.scale : 1.0;\n    parseModel(scale);\n    parseSkin();\n    parseMorphing(scale);\n    parseAnimations();\n    geometry.computeFaceNormals();\n    geometry.computeBoundingSphere();\n    function parseModel(scale: number) {\n      function isBitSet(value: number, position: number): number {\n        return value & (1 << position);\n      }\n      let i, j, fi,\n      offset, zLength,\n      colorIndex, normalIndex, uvIndex, materialIndex,\n      type,\n      isQuad,\n      hasMaterial,\n      hasFaceVertexUv,\n      hasFaceNormal, hasFaceVertexNormal,\n      hasFaceColor, hasFaceVertexColor,\n      vertex, face, faceA, faceB, hex, normal,\n      uvLayer, uv, u, v,\n      faces = json.faces,\n      vertices = json.vertices,\n      normals = json.normals,\n      colors = json.colors,\n      nUvLayers = 0;\n      if (json.uvs !== undefined) {\n        // disregard empty arrays\n        for (i = 0; i < json.uvs.length; i ++) {\n          if (json.uvs[i].length) nUvLayers ++;\n        }\n        for (i = 0; i < nUvLayers; i ++) {\n          geometry.faceVertexUvs[i] = [];\n        }\n      }\n      offset = 0;\n      zLength = vertices.length;\n      while (offset < zLength) {\n        vertex = new Vector3();\n        vertex.x = vertices[offset ++] * scale;\n        vertex.y = vertices[offset ++] * scale;\n        vertex.z = vertices[offset ++] * scale;\n        geometry.vertices.push(vertex);\n      }\n      offset = 0;\n      zLength = faces.length;\n      while (offset < zLength) {\n        type = faces[offset ++];\n        isQuad              = isBitSet(type, 0);\n        hasMaterial         = isBitSet(type, 1);\n        hasFaceVertexUv     = isBitSet(type, 3);\n        hasFaceNormal       = isBitSet(type, 4);\n        hasFaceVertexNormal = isBitSet(type, 5);\n        hasFaceColor        = isBitSet(type, 6);\n        hasFaceVertexColor  = isBitSet(type, 7);\n        // console.log(\"type\", type, \"bits\", isQuad, hasMaterial, hasFaceVertexUv, hasFaceNormal, hasFaceVertexNormal, hasFaceColor, hasFaceVertexColor);\n        if (isQuad) {\n          faceA = new Face3();\n          faceA.a = faces[offset];\n          faceA.b = faces[offset + 1];\n          faceA.c = faces[offset + 3];\n          faceB = new Face3();\n          faceB.a = faces[offset + 1];\n          faceB.b = faces[offset + 2];\n          faceB.c = faces[offset + 3];\n          offset += 4;\n          if (hasMaterial) {\n            materialIndex = faces[offset ++];\n            faceA.materialIndex = materialIndex;\n            faceB.materialIndex = materialIndex;\n          }\n          // to get face <=> uv index correspondence\n          fi = geometry.faces.length;\n          if (hasFaceVertexUv) {\n            for (i = 0; i < nUvLayers; i ++) {\n              uvLayer = json.uvs[i];\n              geometry.faceVertexUvs[i][fi] = [];\n              geometry.faceVertexUvs[i][fi + 1] = [];\n              for (j = 0; j < 4; j ++) {\n                uvIndex = faces[offset ++];\n                u = uvLayer[uvIndex * 2];\n                v = uvLayer[uvIndex * 2 + 1];\n                uv = new Vector2(u, v);\n                if (j !== 2) geometry.faceVertexUvs[i][fi].push(uv);\n                if (j !== 0) geometry.faceVertexUvs[i][fi + 1].push(uv);\n              }\n            }\n          }\n          if (hasFaceNormal) {\n            normalIndex = faces[offset ++] * 3;\n            faceA.normal.set(\n              normals[normalIndex ++],\n              normals[normalIndex ++],\n              normals[normalIndex]\n            );\n            faceB.normal.copy(faceA.normal);\n          }\n          if (hasFaceVertexNormal) {\n            for (i = 0; i < 4; i ++) {\n              normalIndex = faces[offset ++] * 3;\n              normal = new Vector3(\n                normals[normalIndex ++],\n                normals[normalIndex ++],\n                normals[normalIndex]\n              );\n              if (i !== 2) faceA.vertexNormals.push(normal);\n              if (i !== 0) faceB.vertexNormals.push(normal);\n            }\n          }\n          if (hasFaceColor) {\n            colorIndex = faces[offset ++];\n            hex = colors[colorIndex];\n            faceA.color.setHex(hex);\n            faceB.color.setHex(hex);\n          }\n          if (hasFaceVertexColor) {\n            for (i = 0; i < 4; i ++) {\n              colorIndex = faces[offset ++];\n              hex = colors[colorIndex];\n              if (i !== 2) faceA.vertexColors.push(new Color(hex));\n              if (i !== 0) faceB.vertexColors.push(new Color(hex));\n            }\n          }\n          geometry.faces.push(faceA);\n          geometry.faces.push(faceB);\n        } else {\n          face = new Face3();\n          face.a = faces[offset ++];\n          face.b = faces[offset ++];\n          face.c = faces[offset ++];\n          if (hasMaterial) {\n            materialIndex = faces[offset ++];\n            face.materialIndex = materialIndex;\n          }\n          // to get face <=> uv index correspondence\n          fi = geometry.faces.length;\n          if (hasFaceVertexUv) {\n            for (i = 0; i < nUvLayers; i ++) {\n              uvLayer = json.uvs[i];\n              geometry.faceVertexUvs[i][fi] = [];\n              for (j = 0; j < 3; j ++) {\n                uvIndex = faces[offset ++];\n                u = uvLayer[uvIndex * 2];\n                v = uvLayer[uvIndex * 2 + 1];\n                uv = new Vector2(u, v);\n                geometry.faceVertexUvs[i][fi].push(uv);\n              }\n            }\n          }\n          if (hasFaceNormal) {\n            normalIndex = faces[offset ++] * 3;\n            face.normal.set(\n              normals[normalIndex ++],\n              normals[normalIndex ++],\n              normals[normalIndex]\n            );\n          }\n          if (hasFaceVertexNormal) {\n            for (i = 0; i < 3; i ++) {\n              normalIndex = faces[offset ++] * 3;\n              normal = new Vector3(\n                normals[normalIndex ++],\n                normals[normalIndex ++],\n                normals[normalIndex]\n              );\n              face.vertexNormals.push(normal);\n            }\n          }\n          if (hasFaceColor) {\n            colorIndex = faces[offset ++];\n            face.color.setHex(colors[colorIndex]);\n          }\n          if (hasFaceVertexColor) {\n            for (i = 0; i < 3; i ++) {\n              colorIndex = faces[offset ++];\n              face.vertexColors.push(new Color(colors[colorIndex]));\n            }\n          }\n          geometry.faces.push(face);\n        }\n      }\n    }\n    function parseSkin(): void {\n      const influencesPerVertex: number = (json.influencesPerVertex !== undefined) ? json.influencesPerVertex : 2;\n      if (json.skinWeights) {\n        for (let i = 0, l = json.skinWeights.length; i < l; i += influencesPerVertex) {\n          let x =                             json.skinWeights[i];\n          let y = (influencesPerVertex > 1) ? json.skinWeights[i + 1] : 0;\n          let z = (influencesPerVertex > 2) ? json.skinWeights[i + 2] : 0;\n          let w = (influencesPerVertex > 3) ? json.skinWeights[i + 3] : 0;\n          geometry.skinWeights.push(new Vector4(x, y, z, w));\n        }\n      }\n      if (json.skinIndices) {\n        for (let i = 0, l = json.skinIndices.length; i < l; i += influencesPerVertex) {\n          let a =                             json.skinIndices[i];\n          let b = (influencesPerVertex > 1) ? json.skinIndices[i + 1] : 0;\n          let c = (influencesPerVertex > 2) ? json.skinIndices[i + 2] : 0;\n          let d = (influencesPerVertex > 3) ? json.skinIndices[i + 3] : 0;\n          geometry.skinIndices.push(new Vector4(a, b, c, d));\n        }\n      }\n      geometry.bones = json.bones;\n      if (geometry.bones && geometry.bones.length > 0 && (geometry.skinWeights.length !== geometry.skinIndices.length || geometry.skinIndices.length !== geometry.vertices.length)) {\n        console.warn('When skinning, number of vertices (' + geometry.vertices.length + '), skinIndices (' +\n          geometry.skinIndices.length + '), and skinWeights (' + geometry.skinWeights.length + ') should match.');\n      }\n    }\n    function parseMorphing(scale: number): void {\n      if (json.morphTargets !== undefined) {\n        for (let i = 0, l = json.morphTargets.length; i < l; i ++) {\n          geometry.morphTargets[i] = {};\n          geometry.morphTargets[i].name = json.morphTargets[i].name;\n          geometry.morphTargets[i].vertices = [];\n          let dstVertices = geometry.morphTargets[i].vertices;\n          let srcVertices = json.morphTargets[i].vertices;\n          for (let v = 0, vl = srcVertices.length; v < vl; v += 3) {\n            let vertex = new Vector3();\n            vertex.x = srcVertices[v] * scale;\n            vertex.y = srcVertices[v + 1] * scale;\n            vertex.z = srcVertices[v + 2] * scale;\n            dstVertices.push(vertex);\n          }\n        }\n      }\n      if (json.morphColors !== undefined && json.morphColors.length > 0) {\n        console.warn('THREE.JSONLoader: \"morphColors\" no longer supported. Using them as face colors.');\n        let faces = geometry.faces;\n        let morphColors = json.morphColors[0].colors;\n        for (let i = 0, l = faces.length; i < l; i ++) {\n          faces[i].color.fromArray(morphColors, i * 3);\n        }\n      }\n    }\n    function parseAnimations(): void {\n      let outputAnimations: AnimationClip[] = [];\n      // parse old style Bone/Hierarchy animations\n      let animations = [];\n      if (json.animation !== undefined) {\n        animations.push(json.animation);\n      }\n      if (json.animations !== undefined) {\n        if (json.animations.length) {\n          animations = animations.concat(json.animations);\n        } else {\n          animations.push(json.animations);\n        }\n      }\n      for (let i = 0; i < animations.length; i ++) {\n        const clip = AnimationClip.parseAnimation(animations[i], geometry.bones);\n        if (clip) outputAnimations.push(clip);\n      }\n      // parse implicit morph animations\n      if (geometry.morphTargets) {\n        // TODO: Figure out what an appropraite FPS is for morph target animations -- defaulting to 10, but really it is completely arbitrary.\n        const morphAnimationClips = AnimationClip.CreateClipsFromMorphTargetSequences(geometry.morphTargets, 10);\n        outputAnimations = outputAnimations.concat(morphAnimationClips);\n      }\n      if (outputAnimations.length > 0) geometry.animations = outputAnimations;\n    }\n    if (json.materials === undefined || json.materials.length === 0) {\n      return { geometry: geometry };\n    } else {\n      let materials = Loader.prototype.initMaterials(json.materials, texturePath, this.crossOrigin);\n      return { geometry: geometry, materials: materials };\n    }\n  }\n}\n","import { TextureMapping, TextureWrapping, TextureFilter } from \"../constants\";\nimport { Color } from \"../math/Color\";\nimport { Matrix4 } from \"../math/Matrix4\";\nimport { Object3D } from \"../core/Object3D\";\nimport { Group } from \"../objects/Group\";\nimport { Sprite } from \"../objects/Sprite\";\nimport { Points } from \"../objects/Points\";\nimport { Line } from \"../objects/Line\";\nimport { LineSegments } from \"../objects/LineSegments\";\nimport { LOD } from \"../objects/LOD\";\nimport { Mesh } from \"../objects/Mesh\";\nimport { SkinnedMesh } from \"../objects/SkinnedMesh\";\nimport { Fog } from \"../scenes/Fog\";\nimport { FogExp2 } from \"../scenes/FogExp2\";\nimport { HemisphereLight } from \"../lights/HemisphereLight\";\nimport { SpotLight } from \"../lights/SpotLight\";\nimport { PointLight } from \"../lights/PointLight\";\nimport { DirectionalLight } from \"../lights/DirectionalLight\";\nimport { AmbientLight } from \"../lights/AmbientLight\";\nimport { OrthographicCamera } from \"../cameras/OrthographicCamera\";\nimport { PerspectiveCamera } from \"../cameras/PerspectiveCamera\";\nimport { Scene } from \"../scenes/Scene\";\nimport { Texture } from \"../textures/Texture\";\nimport { ImageLoader } from \"./ImageLoader\";\nimport { LoadingManager, DefaultLoadingManager } from \"./LoadingManager\";\nimport { AnimationClip } from \"../animation/AnimationClip\";\nimport { MaterialLoader } from \"./MaterialLoader\";\nimport { BufferGeometryLoader } from \"./BufferGeometryLoader\";\nimport { JSONLoader } from \"./JSONLoader\";\nimport { XHRLoader } from \"./XHRLoader\";\nimport { Geometry } from \"../core/Geometry\";\nimport { BufferGeometry } from \"../core/BufferGeometry\";\nimport * as Geometries from \"../geometries/Geometries\";\nimport { Material } from \"../materials/Material\";\n/**\n * @author mrdoob / http://mrdoob.com/\n */\nexport class ObjectLoader {\n  manager: LoadingManager;\n  texturePath: string = '';\n  crossOrigin: string;\n  constructor(manager: LoadingManager = DefaultLoadingManager) {\n    this.manager = manager;\n  }\n  load(url: string, onLoad: (object: Object3D) => void, onProgress?: (event: ProgressEvent) => void, onError?: (event: ErrorEvent) => void): void {\n    if (this.texturePath === '') {\n      this.texturePath = url.substring(0, url.lastIndexOf('/') + 1);\n    }\n    const scope: ObjectLoader = this;\n    const loader: XHRLoader = new XHRLoader(scope.manager);\n    loader.load(url, function(text: string): void {\n      scope.parse(JSON.parse(text), onLoad);\n    }, onProgress, onError);\n  }\n  setTexturePath(value: string): void {\n    this.texturePath = value;\n  }\n  setCrossOrigin(value: string): void {\n    this.crossOrigin = value;\n  }\n  parse(json: any, onLoad: (object: Object3D) => void): Object3D {\n    const geometries = this.parseGeometries(json.geometries);\n    const images = this.parseImages(json.images, function(): void {\n      if (onLoad !== undefined) onLoad(object);\n    });\n    const textures  = this.parseTextures(json.textures, images);\n    const materials = this.parseMaterials(json.materials, textures);\n    const object = this.parseObject(json.object, geometries, materials);\n    if (json.animations) {\n      object.animations = this.parseAnimations(json.animations);\n    }\n    if (json.images === undefined || json.images.length === 0) {\n      if (onLoad !== undefined) onLoad(object);\n    }\n    return object;\n  }\n  parseGeometries(json: any[]): Map<string, Geometry | BufferGeometry> {\n    const geometries = new Map<string, Geometry | BufferGeometry>();\n    if (json !== undefined) {\n      const geometryLoader = new JSONLoader();\n      const bufferGeometryLoader = new BufferGeometryLoader();\n      for (let i = 0, l = json.length; i < l; i ++) {\n        let geometry: Geometry | BufferGeometry;\n        const data: any = json[i];\n        switch (data.type) {\n          case 'PlaneGeometry':\n          case 'PlaneBufferGeometry':\n            geometry = new Geometries[data.type](\n              data.width,\n              data.height,\n              data.widthSegments,\n              data.heightSegments\n            );\n            break;\n          case 'BoxGeometry':\n          case 'BoxBufferGeometry':\n          case 'CubeGeometry': // backwards compatible\n            geometry = new Geometries[data.type](\n              data.width,\n              data.height,\n              data.depth,\n              data.widthSegments,\n              data.heightSegments,\n              data.depthSegments\n            );\n            break;\n          case 'CircleGeometry':\n          case 'CircleBufferGeometry':\n            geometry = new Geometries[data.type](\n              data.radius,\n              data.segments,\n              data.thetaStart,\n              data.thetaLength\n            );\n            break;\n          case 'CylinderGeometry':\n          case 'CylinderBufferGeometry':\n            geometry = new Geometries[data.type](\n              data.radiusTop,\n              data.radiusBottom,\n              data.height,\n              data.radialSegments,\n              data.heightSegments,\n              data.openEnded,\n              data.thetaStart,\n              data.thetaLength\n            );\n            break;\n          case 'ConeGeometry':\n          case 'ConeBufferGeometry':\n            geometry = new Geometries[data.type](\n              data.radius,\n              data.height,\n              data.radialSegments,\n              data.heightSegments,\n              data.openEnded,\n              data.thetaStart,\n              data.thetaLength\n            );\n            break;\n          case 'SphereGeometry':\n          case 'SphereBufferGeometry':\n            geometry = new Geometries[data.type](\n              data.radius,\n              data.widthSegments,\n              data.heightSegments,\n              data.phiStart,\n              data.phiLength,\n              data.thetaStart,\n              data.thetaLength\n            );\n            break;\n          case 'DodecahedronGeometry':\n          case 'IcosahedronGeometry':\n          case 'OctahedronGeometry':\n          case 'TetrahedronGeometry':\n            geometry = new Geometries[data.type](\n              data.radius,\n              data.detail\n            );\n            break;\n          case 'RingGeometry':\n          case 'RingBufferGeometry':\n            geometry = new Geometries[data.type](\n              data.innerRadius,\n              data.outerRadius,\n              data.thetaSegments,\n              data.phiSegments,\n              data.thetaStart,\n              data.thetaLength\n            );\n            break;\n          case 'TorusGeometry':\n          case 'TorusBufferGeometry':\n            geometry = new Geometries[data.type](\n              data.radius,\n              data.tube,\n              data.radialSegments,\n              data.tubularSegments,\n              data.arc\n            );\n            break;\n          case 'TorusKnotGeometry':\n          case 'TorusKnotBufferGeometry':\n            geometry = new Geometries[data.type](\n              data.radius,\n              data.tube,\n              data.tubularSegments,\n              data.radialSegments,\n              data.p,\n              data.q\n            );\n            break;\n          case 'LatheGeometry':\n          case 'LatheBufferGeometry':\n            geometry = new Geometries[data.type](\n              data.points,\n              data.segments,\n              data.phiStart,\n              data.phiLength\n            );\n            break;\n          case 'BufferGeometry':\n            geometry = bufferGeometryLoader.parse(data);\n            break;\n          case 'Geometry':\n            geometry = geometryLoader.parse(data.data, this.texturePath).geometry;\n            break;\n          default:\n            console.warn('THREE.ObjectLoader: Unsupported geometry type \"' + data.type + '\"');\n            continue;\n        }\n        geometry.uuid = data.uuid;\n        if (data.name !== undefined) geometry.name = data.name;\n        geometries[data.uuid] = geometry;\n      }\n    }\n    return geometries;\n  }\n  parseMaterials(json: any[], textures: Map<string, Texture>): Map<string, Material> {\n    const materials = new Map<string, Material>();\n    if (json !== undefined) {\n      const loader = new MaterialLoader();\n      loader.setTextures(textures);\n      for (let i = 0, l = json.length; i < l; i ++) {\n        const material = loader.parse(json[i]);\n        materials[material.uuid] = material;\n      }\n    }\n    return materials;\n  }\n  parseAnimations(json: any[]): any[] {\n    const animations = [];\n    for (let i = 0; i < json.length; i ++) {\n      const clip = AnimationClip.parse(json[i]);\n      animations.push(clip);\n    }\n    return animations;\n  }\n  parseImages(json: any[], onLoad: any): Map<string, HTMLImageElement> {\n    const scope: ObjectLoader = this;\n    const images = new Map<string, HTMLImageElement>();\n    let loader: ImageLoader;\n    function loadImage(url: string): HTMLImageElement {\n      scope.manager.itemStart(url);\n      return loader.load(url, function(): void {\n        scope.manager.itemEnd(url);\n      }, undefined, function(): void {\n        scope.manager.itemError(url);\n      });\n    }\n    if (json !== undefined && json.length > 0) {\n      const manager = new LoadingManager(onLoad);\n      loader = new ImageLoader(manager);\n      loader.setCrossOrigin(this.crossOrigin);\n      for (let i = 0, l = json.length; i < l; i ++) {\n        const image = json[i];\n        const path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test(image.url) ? image.url : scope.texturePath + image.url;\n        images[image.uuid] = loadImage(path);\n      }\n    }\n    return images;\n  }\n  parseTextures(json: any[], images: any): Map<string, Texture> {\n    function parseConstant(value: any, type: any) {\n      if (typeof(value) === 'number') return value;\n      console.warn('THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value);\n      return type[value];\n    }\n    const textures = new Map<string, Texture>();\n    if (json !== undefined) {\n      for (let i = 0, l = json.length; i < l; i ++) {\n        const data = json[i];\n        if (data.image === undefined) {\n          console.warn('THREE.ObjectLoader: No \"image\" specified for', data.uuid);\n        }\n        if (images[data.image] === undefined) {\n          console.warn('THREE.ObjectLoader: Undefined image', data.image);\n        }\n        const texture = new Texture(images[data.image]);\n        texture.needsUpdate = true;\n        texture.uuid = data.uuid;\n        if (data.name !== undefined) texture.name = data.name;\n        if (data.mapping !== undefined) texture.mapping = parseConstant(data.mapping, TextureMapping);\n        if (data.offset !== undefined) texture.offset.fromArray(data.offset);\n        if (data.repeat !== undefined) texture.repeat.fromArray(data.repeat);\n        if (data.wrap !== undefined) {\n          texture.wrapS = parseConstant(data.wrap[0], TextureWrapping);\n          texture.wrapT = parseConstant(data.wrap[1], TextureWrapping);\n        }\n        if (data.minFilter !== undefined) texture.minFilter = parseConstant(data.minFilter, TextureFilter);\n        if (data.magFilter !== undefined) texture.magFilter = parseConstant(data.magFilter, TextureFilter);\n        if (data.anisotropy !== undefined) texture.anisotropy = data.anisotropy;\n        if (data.flipY !== undefined) texture.flipY = data.flipY;\n        textures[data.uuid] = texture;\n      }\n    }\n    return textures;\n  }\n  parseObject(data: any, geometries?: Map<string, Geometry | BufferGeometry>, materials?: Map<string, Material>): Object3D {\n    const matrix = new Matrix4();\n    //return function parseObject(data, geometries, materials) {\n      let object: Object3D;\n      function getGeometry(name: string): Geometry | BufferGeometry {\n        if (geometries[name] === undefined) {\n          console.warn('THREE.ObjectLoader: Undefined geometry', name);\n        }\n        return geometries[name];\n      }\n      function getMaterial(name: string): Material {\n        if (name === undefined) return undefined;\n        if (materials[name] === undefined) {\n          console.warn('THREE.ObjectLoader: Undefined material', name);\n        }\n        return materials[name];\n      }\n      switch (data.type) {\n        case 'Scene':\n          object = new Scene();\n          if (data.background !== undefined) {\n            if (Number.isInteger(data.background)) {\n              (object as Scene).background = new Color(data.background);\n            }\n          }\n          if (data.fog !== undefined) {\n            if (data.fog.type === 'Fog') {\n              (object as Scene).fog = new Fog(data.fog.color, data.fog.near, data.fog.far);\n            } else if (data.fog.type === 'FogExp2') {\n              (object as Scene).fog = new FogExp2(data.fog.color, data.fog.density);\n            }\n          }\n          break;\n        case 'PerspectiveCamera':\n          object = new PerspectiveCamera(data.fov, data.aspect, data.near, data.far);\n          if (data.focus !== undefined) (object as PerspectiveCamera).focus = data.focus;\n          if (data.zoom !== undefined) (object as PerspectiveCamera).zoom = data.zoom;\n          if (data.filmGauge !== undefined) (object as PerspectiveCamera).filmGauge = data.filmGauge;\n          if (data.filmOffset !== undefined) (object as PerspectiveCamera).filmOffset = data.filmOffset;\n          if (data.view !== undefined) (object as PerspectiveCamera).view = Object.assign({}, data.view);\n          break;\n        case 'OrthographicCamera':\n          object = new OrthographicCamera(data.left, data.right, data.top, data.bottom, data.near, data.far);\n          break;\n        case 'AmbientLight':\n          object = new AmbientLight(data.color, data.intensity);\n          break;\n        case 'DirectionalLight':\n          object = new DirectionalLight(data.color, data.intensity);\n          break;\n        case 'PointLight':\n          object = new PointLight(data.color, data.intensity, data.distance, data.decay);\n          break;\n        case 'SpotLight':\n          object = new SpotLight(data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay);\n          break;\n        case 'HemisphereLight':\n          object = new HemisphereLight(data.color, data.groundColor, data.intensity);\n          break;\n        case 'Mesh':\n          const geometry = getGeometry(data.geometry);\n          const material = getMaterial(data.material);\n          if (geometry.bones && geometry.bones.length > 0) {\n            object = new SkinnedMesh(geometry, material);\n          } else {\n            object = new Mesh(geometry, material);\n          }\n          break;\n        case 'LOD':\n          object = new LOD();\n          break;\n        case 'Line':\n          object = new Line(getGeometry(data.geometry), getMaterial(data.material), data.mode);\n          break;\n        case 'LineSegments':\n          object = new LineSegments(getGeometry(data.geometry), getMaterial(data.material));\n          break;\n        case 'PointCloud':\n        case 'Points':\n          object = new Points(getGeometry(data.geometry), getMaterial(data.material));\n          break;\n        case 'Sprite':\n          object = new Sprite(getMaterial(data.material));\n          break;\n        case 'Group':\n          object = new Group();\n          break;\n        default:\n          object = new Object3D();\n      }\n      object.uuid = data.uuid;\n      if (data.name !== undefined) object.name = data.name;\n      if (data.matrix !== undefined) {\n        matrix.fromArray(data.matrix);\n        matrix.decompose(object.position, object.quaternion, object.scale);\n      } else {\n        if (data.position !== undefined) object.position.fromArray(data.position);\n        if (data.rotation !== undefined) object.rotation.fromArray(data.rotation);\n        if (data.quaternion !== undefined) object.quaternion.fromArray(data.quaternion);\n        if (data.scale !== undefined) object.scale.fromArray(data.scale);\n      }\n      if (data.castShadow !== undefined) object.castShadow = data.castShadow;\n      if (data.receiveShadow !== undefined) object.receiveShadow = data.receiveShadow;\n      if (data.shadow) {\n        if (data.shadow.bias !== undefined) object.shadow.bias = data.shadow.bias;\n        if (data.shadow.radius !== undefined) object.shadow.radius = data.shadow.radius;\n        if (data.shadow.mapSize !== undefined) object.shadow.mapSize.fromArray(data.shadow.mapSize);\n        if (data.shadow.camera !== undefined) object.shadow.camera = this.parseObject(data.shadow.camera);\n      }\n      if (data.visible !== undefined) object.visible = data.visible;\n      if (data.userData !== undefined) object.userData = data.userData;\n      if (data.children !== undefined) {\n        for (const child in data.children) {\n          object.add(this.parseObject(data.children[child], geometries, materials));\n        }\n      }\n      if (data.type === 'LOD') {\n        const levels = data.levels;\n        for (let l = 0; l < levels.length; l ++) {\n          const level = levels[l];\n          const child = object.getObjectByProperty('uuid', level.object);\n          if (child !== undefined) {\n            (object as LOD).addLevel(child, level.distance);\n          }\n        }\n      }\n      return object;\n    //};\n  }\n}\n","import { Font } from \"../extras/core/Font\";\nimport { XHRLoader } from \"./XHRLoader\";\nimport { LoadingManager, DefaultLoadingManager } from \"./LoadingManager\";\n/**\n * @author mrdoob / http://mrdoob.com/\n */\nexport class FontLoader {\n  manager: LoadingManager;\n  constructor(manager: LoadingManager = DefaultLoadingManager) {\n    this.manager = manager;\n  }\n  load(url: string, onLoad: (font: Font) => void, onProgress?: (event: ProgressEvent) => void, onError?: (event: ErrorEvent) => void) {\n    const scope: FontLoader = this;\n    const loader: XHRLoader = new XHRLoader(this.manager);\n    loader.load(url, function(text: string): void {\n      let json: any;\n      try {\n        json = JSON.parse(text);\n      } catch (e) {\n        console.warn('THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead.');\n        json = JSON.parse(text.substring(65, text.length - 2));\n      }\n      const font: Font = scope.parse(json);\n      if (onLoad) onLoad(font);\n    }, onProgress, onError);\n  }\n  parse(json: any): Font {\n    return new Font(json);\n  }\n}\n","let context: AudioContext;\nexport function getAudioContext(): AudioContext {\n  if (context === undefined) {\n    // !!!TODO: context = new (window.AudioContext || window.webkitAudioContext)();\n    context = new AudioContext();\n  }\n  return context;\n}\n","import { getAudioContext } from \"../audio/AudioContext\";\nimport { XHRLoader } from \"./XHRLoader\";\nimport { LoadingManager, DefaultLoadingManager } from \"./LoadingManager\";\n/**\n * @author Reece Aaron Lecrivain / http://reecenotes.com/\n */\nexport class AudioLoader {\n  manager: LoadingManager;\n  constructor(manager: LoadingManager = DefaultLoadingManager) {\n    this.manager = manager;\n  }\n  load(url: string, onLoad: (audioBuffer: AudioBuffer) => void, onProgress?: (event: ProgressEvent) => void, onError?: (event: ErrorEvent) => void): void {\n    const loader: XHRLoader = new XHRLoader(this.manager);\n    loader.setResponseType('arraybuffer');\n    loader.load(url, function(buffer: ArrayBuffer): void {\n      const context: AudioContext = getAudioContext();\n      context.decodeAudioData(buffer, function(audioBuffer: AudioBuffer): void {\n        onLoad(audioBuffer);\n      });\n    }, onProgress, onError);\n  }\n}\n","import { Matrix4 } from \"../math/Matrix4\";\nimport { _Math } from \"../math/Math\";\nimport { PerspectiveCamera } from \"./PerspectiveCamera\";\n/**\n * @author mrdoob / http://mrdoob.com/\n */\nexport class StereoCamera {\n  type: string = 'StereoCamera';\n  aspect: number = 1;\n  eyeSep: number = 0.064;\n  cameraL: PerspectiveCamera;\n  cameraR: PerspectiveCamera;\n  constructor() {\n    this.cameraL = new PerspectiveCamera();\n    this.cameraL.layers.enable(1);\n    this.cameraL.matrixAutoUpdate = false;\n    this.cameraR = new PerspectiveCamera();\n    this.cameraR.layers.enable(2);\n    this.cameraR.matrixAutoUpdate = false;\n  }\n  update(camera: PerspectiveCamera): void {\n    let instance, focus, fov, aspect, near, far, zoom;\n    const eyeRight = new Matrix4();\n    const eyeLeft = new Matrix4();\n    //return function update(camera) {\n      const needsUpdate = instance !== this || focus !== camera.focus || fov !== camera.fov ||\n                        aspect !== camera.aspect * this.aspect || near !== camera.near ||\n                        far !== camera.far || zoom !== camera.zoom;\n      if (needsUpdate) {\n        instance = this;\n        focus = camera.focus;\n        fov = camera.fov;\n        aspect = camera.aspect * this.aspect;\n        near = camera.near;\n        far = camera.far;\n        zoom = camera.zoom;\n        // Off-axis stereoscopic effect based on\n        // http://paulbourke.net/stereographics/stereorender/\n        const projectionMatrix = camera.projectionMatrix.clone();\n        const eyeSep = this.eyeSep / 2;\n        const eyeSepOnProjection = eyeSep * near / focus;\n        const ymax = (near * Math.tan(_Math.DEG2RAD * fov * 0.5)) / zoom;\n        let xmin, xmax;\n        // translate xOffset\n        eyeLeft.elements[12] = - eyeSep;\n        eyeRight.elements[12] = eyeSep;\n        // for left eye\n        xmin = - ymax * aspect + eyeSepOnProjection;\n        xmax = ymax * aspect + eyeSepOnProjection;\n        projectionMatrix.elements[0] = 2 * near / (xmax - xmin);\n        projectionMatrix.elements[8] = (xmax + xmin) / (xmax - xmin);\n        this.cameraL.projectionMatrix.copy(projectionMatrix);\n        // for right eye\n        xmin = - ymax * aspect - eyeSepOnProjection;\n        xmax = ymax * aspect - eyeSepOnProjection;\n        projectionMatrix.elements[0] = 2 * near / (xmax - xmin);\n        projectionMatrix.elements[8] = (xmax + xmin) / (xmax - xmin);\n        this.cameraR.projectionMatrix.copy(projectionMatrix);\n      }\n      this.cameraL.matrixWorld.copy(camera.matrixWorld).multiply(eyeLeft);\n      this.cameraR.matrixWorld.copy(camera.matrixWorld).multiply(eyeRight);\n    //};\n  }\n}\n","import { Object3D } from \"../core/Object3D\";\nimport { WebGLRenderTargetCube } from \"../renderers/WebGLRenderTargetCube\";\nimport { TextureFilter, TextureFormat } from \"../constants\";\nimport { Vector3 } from \"../math/Vector3\";\nimport { PerspectiveCamera } from \"./PerspectiveCamera\";\nimport { Scene } from \"../scenes/Scene\";\n/**\n * Camera for rendering cube maps\n *  - renders scene into axis-aligned cube\n *\n * @author alteredq / http://alteredqualia.com/\n */\nexport class CubeCamera extends Object3D {\n  cameraPX: PerspectiveCamera;\n  cameraNX: PerspectiveCamera;\n  cameraPY: PerspectiveCamera;\n  cameraNY: PerspectiveCamera;\n  cameraPZ: PerspectiveCamera;\n  cameraNZ: PerspectiveCamera;\n  renderTarget: WebGLRenderTargetCube;\n  constructor(near: number, far: number, cubeResolution: number) {\n    super();\n    this.type = 'CubeCamera';\n    const fov = 90, aspect = 1;\n    this.cameraPX = new PerspectiveCamera(fov, aspect, near, far);\n    this.cameraPX.up.set(0, - 1, 0);\n    this.cameraPX.lookAt(new Vector3(1, 0, 0));\n    this.add(this.cameraPX);\n    this.cameraNX = new PerspectiveCamera(fov, aspect, near, far);\n    this.cameraNX.up.set(0, - 1, 0);\n    this.cameraNX.lookAt(new Vector3(- 1, 0, 0));\n    this.add(this.cameraNX);\n    this.cameraPY = new PerspectiveCamera(fov, aspect, near, far);\n    this.cameraPY.up.set(0, 0, 1);\n    this.cameraPY.lookAt(new Vector3(0, 1, 0));\n    this.add(this.cameraPY);\n    this.cameraNY = new PerspectiveCamera(fov, aspect, near, far);\n    this.cameraNY.up.set(0, 0, - 1);\n    this.cameraNY.lookAt(new Vector3(0, - 1, 0));\n    this.add(this.cameraNY);\n    this.cameraPZ = new PerspectiveCamera(fov, aspect, near, far);\n    this.cameraPZ.up.set(0, - 1, 0);\n    this.cameraPZ.lookAt(new Vector3(0, 0, 1));\n    this.add(this.cameraPZ);\n    this.cameraNZ = new PerspectiveCamera(fov, aspect, near, far);\n    this.cameraNZ.up.set(0, - 1, 0);\n    this.cameraNZ.lookAt(new Vector3(0, 0, - 1));\n    this.add(this.cameraNZ);\n    const options = { format: TextureFormat.RGB, magFilter: TextureFilter.Linear, minFilter: TextureFilter.Linear };\n    this.renderTarget = new WebGLRenderTargetCube(cubeResolution, cubeResolution, options);\n  }\n  updateCubeMap(renderer: any, scene: Scene): void {\n    if (this.parent === null) this.updateMatrixWorld();\n    const renderTarget = this.renderTarget;\n    const generateMipmaps = renderTarget.texture.generateMipmaps;\n    renderTarget.texture.generateMipmaps = false;\n    renderTarget.activeCubeFace = 0;\n    renderer.render(scene, this.cameraPX, renderTarget);\n    renderTarget.activeCubeFace = 1;\n    renderer.render(scene, this.cameraNX, renderTarget);\n    renderTarget.activeCubeFace = 2;\n    renderer.render(scene, this.cameraPY, renderTarget);\n    renderTarget.activeCubeFace = 3;\n    renderer.render(scene, this.cameraNY, renderTarget);\n    renderTarget.activeCubeFace = 4;\n    renderer.render(scene, this.cameraPZ, renderTarget);\n    renderTarget.texture.generateMipmaps = generateMipmaps;\n    renderTarget.activeCubeFace = 5;\n    renderer.render(scene, this.cameraNZ, renderTarget);\n    renderer.setRenderTarget(null);\n  }\n}\n","/**\n * @author mrdoob / http://mrdoob.com/\n */\nimport { Vector3 } from \"../math/Vector3\";\nimport { Quaternion } from \"../math/Quaternion\";\nimport { Object3D } from \"../core/Object3D\";\nimport { getAudioContext } from \"./AudioContext\";\nexport class AudioListener extends Object3D {\n  context: AudioContext;\n  gain: GainNode;\n  filter: AudioNode;\n  constructor() {\n    super();\n    this.type = 'AudioListener';\n    this.context = getAudioContext();\n    this.gain = this.context.createGain();\n    this.gain.connect(this.context.destination);\n    this.filter = null;\n  }\n  getInput(): GainNode {\n    return this.gain;\n  }\n  removeFilter(): void {\n    if (this.filter !== null) {\n      this.gain.disconnect(this.filter);\n      this.filter.disconnect(this.context.destination);\n      this.gain.connect(this.context.destination);\n      this.filter = null;\n    }\n  }\n  getFilter(): AudioNode {\n    return this.filter;\n  }\n  setFilter(value: AudioNode): void {\n    if (this.filter !== null) {\n      this.gain.disconnect(this.filter);\n      this.filter.disconnect(this.context.destination);\n    } else {\n      this.gain.disconnect(this.context.destination);\n    }\n    this.filter = value;\n    this.gain.connect(this.filter);\n    this.filter.connect(this.context.destination);\n  }\n  getMasterVolume(): number {\n    return this.gain.gain.value;\n  }\n  setMasterVolume(value: number): void {\n    this.gain.gain.value = value;\n  }\n  updateMatrixWorld(force: boolean): void {\n    const position = new Vector3();\n    const quaternion = new Quaternion();\n    const scale = new Vector3();\n    const orientation = new Vector3();\n    //return function updateMatrixWorld(force) {\n      super.updateMatrixWorld(force);\n      const listener = this.context.listener;\n      const up = this.up;\n      this.matrixWorld.decompose(position, quaternion, scale);\n      orientation.set(0, 0, - 1).applyQuaternion(quaternion);\n      listener.setPosition(position.x, position.y, position.z);\n      listener.setOrientation(orientation.x, orientation.y, orientation.z, up.x, up.y, up.z);\n    //};\n  }\n}\n","/**\n * @author mrdoob / http://mrdoob.com/\n * @author Reece Aaron Lecrivain / http://reecenotes.com/\n */\nimport { Object3D } from \"../core/Object3D\";\nimport { AudioListener } from \"./AudioListener\";\nimport { AudioLoader } from \"../loaders/AudioLoader\";\nexport class Audio extends Object3D {\n  context: AudioContext;\n  source: AudioBufferSourceNode;\n  gain: GainNode;\n  autoplay: boolean = false;\n  startTime: number = 0;\n  playbackRate: number = 1;\n  isPlaying: boolean = false;\n  hasPlaybackControl: boolean = true;\n  sourceType: string = 'empty';\n  filters: AudioNode[] = [];\n  constructor(listener: AudioListener) {\n    super();\n    this.type = 'Audio';\n    this.context = listener.context;\n    this.source = this.context.createBufferSource();\n    this.source.onended = this.onEnded.bind(this);\n    this.gain = this.context.createGain();\n    this.gain.connect(listener.getInput());\n  }\n  getOutput(): AudioNode {\n    return this.gain;\n  }\n  setNodeSource(audioNode: AudioBufferSourceNode): Audio {\n    this.hasPlaybackControl = false;\n    this.sourceType = 'audioNode';\n    this.source = audioNode;\n    this.connect();\n    return this;\n  }\n  setBuffer(audioBuffer: AudioBuffer): Audio {\n    this.source.buffer = audioBuffer;\n    this.sourceType = 'buffer';\n    if (this.autoplay) this.play();\n    return this;\n  }\n  play(): Audio {\n    if (this.isPlaying === true) {\n      console.warn('THREE.Audio: Audio is already playing.');\n      return this;\n    }\n    if (this.hasPlaybackControl === false) {\n      console.warn('THREE.Audio: this Audio has no playback control.');\n      return this;\n    }\n    const source = this.context.createBufferSource();\n    source.buffer = this.source.buffer;\n    source.loop = this.source.loop;\n    source.onended = this.source.onended;\n    source.start(0, this.startTime);\n    source.playbackRate.value = this.playbackRate;\n    this.isPlaying = true;\n    this.source = source;\n    return this.connect();\n  }\n  pause(): Audio {\n    if (this.hasPlaybackControl === false) {\n      console.warn('THREE.Audio: this Audio has no playback control.');\n      return this;\n    }\n    this.source.stop();\n    this.startTime = this.context.currentTime;\n    this.isPlaying = false;\n    return this;\n  }\n  stop(): Audio {\n    if (this.hasPlaybackControl === false) {\n      console.warn('THREE.Audio: this Audio has no playback control.');\n      return this;\n    }\n    this.source.stop();\n    this.startTime = 0;\n    this.isPlaying = false;\n    return this;\n  }\n  connect(): Audio {\n    if (this.filters.length > 0) {\n      this.source.connect(this.filters[0]);\n      for (let i = 1, l = this.filters.length; i < l; i ++) {\n        this.filters[i - 1].connect(this.filters[i]);\n      }\n      this.filters[this.filters.length - 1].connect(this.getOutput());\n    } else {\n      this.source.connect(this.getOutput());\n    }\n    return this;\n  }\n  disconnect(): Audio {\n    if (this.filters.length > 0) {\n      this.source.disconnect(this.filters[0]);\n      for (let i = 1, l = this.filters.length; i < l; i ++) {\n        this.filters[i - 1].disconnect(this.filters[i]);\n      }\n      this.filters[this.filters.length - 1].disconnect(this.getOutput());\n    } else {\n      this.source.disconnect(this.getOutput());\n    }\n    return this;\n  }\n  getFilters(): AudioNode[] {\n    return this.filters;\n  }\n  setFilters(value: AudioNode[] = []): Audio {\n    if (this.isPlaying === true) {\n      this.disconnect();\n      this.filters = value;\n      this.connect();\n    } else {\n      this.filters = value;\n    }\n    return this;\n  }\n  getFilter(): AudioNode {\n    return this.getFilters()[0];\n  }\n  setFilter(filter: AudioNode): Audio {\n    return this.setFilters(filter ? [ filter ] : []);\n  }\n  setPlaybackRate(value: number): Audio {\n    if (this.hasPlaybackControl === false) {\n      console.warn('THREE.Audio: this Audio has no playback control.');\n      return this;\n    }\n    this.playbackRate = value;\n    if (this.isPlaying === true) {\n      this.source.playbackRate.value = this.playbackRate;\n    }\n    return this;\n  }\n  getPlaybackRate(): number {\n    return this.playbackRate;\n  }\n  onEnded(): void {\n    this.isPlaying = false;\n  }\n  getLoop(): boolean {\n    if (this.hasPlaybackControl === false) {\n      console.warn('THREE.Audio: this Audio has no playback control.');\n      return false;\n    }\n    return this.source.loop;\n  }\n  setLoop(value: boolean): void {\n    if (this.hasPlaybackControl === false) {\n      console.warn('THREE.Audio: this Audio has no playback control.');\n      return;\n    }\n    this.source.loop = value;\n  }\n  getVolume(): number {\n    return this.gain.gain.value;\n  }\n  setVolume(value: number): Audio {\n    this.gain.gain.value = value;\n    return this;\n  }\n  load(file: string): Audio {\n    console.warn(\"THREE.Audio: .load has been deprecated. Please use THREE.AudioLoader.\");\n    const scope: Audio = this;\n    const audioLoader: AudioLoader = new AudioLoader();\n    audioLoader.load(file, function(buffer: AudioBuffer): void {\n      scope.setBuffer(buffer);\n    });\n    return this;\n  }\n}\n","/**\n * @author mrdoob / http://mrdoob.com/\n */\nimport { Vector3 } from \"../math/Vector3\";\nimport { Audio } from \"./Audio\";\nimport { AudioListener } from \"./AudioListener\";\nexport class PositionalAudio extends Audio {\n  panner: PannerNode;\n  constructor(listener: AudioListener) {\n    super(listener);\n    this.panner = this.context.createPanner();\n    this.panner.connect(this.gain);\n  }\n  getOutput(): AudioNode {\n    return this.panner;\n  }\n  getRefDistance(): number {\n    return this.panner.refDistance;\n  }\n  setRefDistance(value: number): void {\n    this.panner.refDistance = value;\n  }\n  getRolloffFactor(): number {\n    return this.panner.rolloffFactor;\n  }\n  setRolloffFactor(value: number): void {\n    this.panner.rolloffFactor = value;\n  }\n  getDistanceModel(): string {\n    return this.panner.distanceModel;\n  }\n  setDistanceModel(value: string): void {\n    this.panner.distanceModel = value as DistanceModelType;\n  }\n  getMaxDistance(): number {\n    return this.panner.maxDistance;\n  }\n  setMaxDistance(value: number): void {\n    this.panner.maxDistance = value;\n  }\n  updateMatrixWorld(force: boolean): void {\n    const position = new Vector3();\n    //return function updateMatrixWorld(force) {\n      super.updateMatrixWorld(force);\n      position.setFromMatrixPosition(this.matrixWorld);\n      this.panner.setPosition(position.x, position.y, position.z);\n    //};\n  }\n}\n","/**\n * @author mrdoob / http://mrdoob.com/\n */\nimport { Audio } from \"./Audio\";\nexport class AudioAnalyser {\n  analyser: AnalyserNode;\n  data: Uint8Array;\n  constructor(audio: Audio, fftSize: number = 2048) {\n    this.analyser = audio.context.createAnalyser();\n    this.analyser.fftSize = fftSize;\n    this.data = new Uint8Array(this.analyser.frequencyBinCount);\n    audio.getOutput().connect(this.analyser);\n  }\n  getFrequencyData(): Uint8Array {\n    this.analyser.getByteFrequencyData(this.data);\n    return this.data;\n  }\n  getAverageFrequency(): number {\n    let value = 0;\n    const data = this.getFrequencyData();\n    for (let i = 0; i < data.length; i ++) {\n      value += data[i];\n    }\n    return value / data.length;\n  }\n  getData(file: string): Uint8Array {\n    console.warn(\"THREE.AudioAnalyser: .getData() is now .getFrequencyData().\");\n    return this.getFrequencyData();\n  }\n}\n","import { Quaternion } from \"../math/Quaternion\";\n/**\n *\n * Buffered scene graph property that allows weighted accumulation.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\nexport class PropertyMixer {\n  binding: any;\n  valueSize: number;\n  buffer: Float64Array | any[];\n  _mixBufferRegion: (buffer: any, dstOffset: any, srcOffset: any, t: any, stride: any) => void;\n  cumulativeWeight: number;\n  useCount: number;\n  referenceCount: number;\n  constructor(binding: any, typeName: any, valueSize: any) {\n    this.binding = binding;\n    this.valueSize = valueSize;\n    let bufferType: Float64ArrayConstructor | ArrayConstructor = Float64Array,\n      mixFunction;\n    switch (typeName) {\n      case 'quaternion':      mixFunction = this._slerp;    break;\n      case 'string':\n      case 'bool':\n        bufferType = Array,    mixFunction = this._select;    break;\n      default:          mixFunction = this._lerp;\n    }\n    this.buffer = new bufferType(valueSize * 4);\n    // layout: [ incoming | accu0 | accu1 | orig ]\n    //\n    // interpolators can use .buffer as their .result\n    // the data then goes to 'incoming'\n    //\n    // 'accu0' and 'accu1' are used frame-interleaved for\n    // the cumulative result and are compared to detect\n    // changes\n    //\n    // 'orig' stores the original state of the property\n    this._mixBufferRegion = mixFunction;\n    this.cumulativeWeight = 0;\n    this.useCount = 0;\n    this.referenceCount = 0;\n  }\n  // accumulate data in the 'incoming' region into 'accu<i>'\n  accumulate(accuIndex: any, weight: any) {\n    // note: happily accumulating nothing when weight = 0, the caller knows\n    // the weight and shouldn't have made the call in the first place\n    const buffer = this.buffer,\n      stride = this.valueSize,\n      offset = accuIndex * stride + stride;\n    let currentWeight = this.cumulativeWeight;\n    if (currentWeight === 0) {\n      // accuN := incoming * weight\n      for (let i = 0; i !== stride; ++ i) {\n        buffer[ offset + i ] = buffer[ i ];\n      }\n      currentWeight = weight;\n    } else {\n      // accuN := accuN + incoming * weight\n      currentWeight += weight;\n      const mix = weight / currentWeight;\n      this._mixBufferRegion(buffer, offset, 0, mix, stride);\n    }\n    this.cumulativeWeight = currentWeight;\n  }\n  // apply the state of 'accu<i>' to the binding when accus differ\n  apply(accuIndex: any) {\n    const stride = this.valueSize,\n      buffer = this.buffer,\n      offset = accuIndex * stride + stride,\n      weight = this.cumulativeWeight,\n      binding = this.binding;\n    this.cumulativeWeight = 0;\n    if (weight < 1) {\n      // accuN := accuN + original * (1 - cumulativeWeight)\n      const originalValueOffset = stride * 3;\n      this._mixBufferRegion(\n          buffer, offset, originalValueOffset, 1 - weight, stride);\n    }\n    for (let i = stride, e = stride + stride; i !== e; ++ i) {\n      if (buffer[ i ] !== buffer[ i + stride ]) {\n        // value has changed -> update scene graph\n        binding.setValue(buffer, offset);\n        break;\n      }\n    }\n  }\n  // remember the state of the bound property and copy it to both accus\n  saveOriginalState() {\n    const binding = this.binding;\n    const buffer = this.buffer,\n      stride = this.valueSize,\n      originalValueOffset = stride * 3;\n    binding.getValue(buffer, originalValueOffset);\n    // accu[0..1] := orig -- initially detect changes against the original\n    for (let i = stride, e = originalValueOffset; i !== e; ++ i) {\n      buffer[ i ] = buffer[ originalValueOffset + (i % stride) ];\n    }\n    this.cumulativeWeight = 0;\n  }\n  // apply the state previously taken via 'saveOriginalState' to the binding\n  restoreOriginalState() {\n    const originalValueOffset = this.valueSize * 3;\n    this.binding.setValue(this.buffer, originalValueOffset);\n  }\n  // mix functions\n  _select(buffer: any, dstOffset: any, srcOffset: any, t: any, stride: any) {\n    if (t >= 0.5) {\n      for (let i = 0; i !== stride; ++ i) {\n        buffer[ dstOffset + i ] = buffer[ srcOffset + i ];\n      }\n    }\n  }\n  _slerp(buffer: any, dstOffset: any, srcOffset: any, t: any, stride: any) {\n    Quaternion.slerpFlat(buffer, dstOffset,\n        buffer, dstOffset, buffer, srcOffset, t);\n  }\n  _lerp(buffer: any, dstOffset: any, srcOffset: any, t: any, stride: any) {\n    const s = 1 - t;\n    for (let i = 0; i !== stride; ++ i) {\n      const j = dstOffset + i;\n      buffer[ j ] = buffer[ j ] * s + buffer[ srcOffset + i ] * t;\n    }\n  }\n}\n","import { PropertyBinding } from \"./PropertyBinding\";\nimport { _Math } from \"../math/Math\";\n/**\n *\n * A group of objects that receives a shared animation state.\n *\n * Usage:\n *\n *   -  Add objects you would otherwise pass as 'root' to the\n *     constructor or the .clipAction method of AnimationMixer.\n *\n *   -  Instead pass this object as 'root'.\n *\n *   -  You can also add and remove objects later when the mixer\n *     is running.\n *\n * Note:\n *\n *    Objects of this class appear as one object to the mixer,\n *    so cache control of the individual objects must be done\n *    on the group.\n *\n * Limitation:\n *\n *   -   The animated properties must be compatible among the\n *     all objects in the group.\n *\n *  -  A single property can either be controlled through a\n *    target group or directly, but not both.\n *\n * @author tschw\n */\nexport class AnimationObjectGroup {\n  uuid: any;\n  _objects: any;\n  nCachedObjects_: any;\n  _indicesByUUID: any;\n  _paths: any;\n  _parsedPaths: any;\n  _bindings: any;\n  _bindingsIndicesByPath: any;\n  stats: any;\n  static isAnimationObjectGroup: boolean = true;\n  constructor(var_args: any) {\n    this.uuid = _Math.generateUUID();\n    // cached objects followed by the active ones\n    this._objects = Array.prototype.slice.call(arguments);\n    this.nCachedObjects_ = 0;      // threshold\n    // note: read by PropertyBinding.Composite\n    let indices = {};\n    this._indicesByUUID = indices;    // for bookkeeping\n    for (let i = 0, n = arguments.length; i !== n; ++ i) {\n      indices[ arguments[ i ].uuid ] = i;\n    }\n    this._paths = [];          // inside: string\n    this._parsedPaths = [];        // inside: { we don't care, here }\n    this._bindings = [];         // inside: Array< PropertyBinding >\n    this._bindingsIndicesByPath = {};   // inside: indices in these arrays\n    let scope = this;\n    this.stats = {\n      objects: {\n        get total() { return scope._objects.length; },\n        get inUse() { return scope._objects.length - scope.nCachedObjects_; }\n      },\n      get bindingsPerObject() { return scope._bindings.length; }\n    };\n  }\n  add(var_args: any) {\n    let objects = this._objects,\n      nObjects = objects.length,\n      nCachedObjects = this.nCachedObjects_,\n      indicesByUUID = this._indicesByUUID,\n      paths = this._paths,\n      parsedPaths = this._parsedPaths,\n      bindings = this._bindings,\n      nBindings = bindings.length,\n      knownObject;\n    for (let i = 0, n = arguments.length; i !== n; ++ i) {\n      let object = arguments[ i ],\n        uuid = object.uuid,\n        index = indicesByUUID[ uuid ];\n      if (index === undefined) {\n        // unknown object -> add it to the ACTIVE region\n        index = nObjects ++;\n        indicesByUUID[ uuid ] = index;\n        objects.push(object);\n        // accounting is done, now do the same for all bindings\n        for (let j = 0, m = nBindings; j !== m; ++ j) {\n          bindings[ j ].push(\n              new PropertyBinding(\n                object, paths[ j ], parsedPaths[ j ]));\n        }\n      } else if (index < nCachedObjects) {\n        knownObject = objects[ index ];\n        // move existing object to the ACTIVE region\n        let firstActiveIndex = -- nCachedObjects,\n          lastCachedObject = objects[ firstActiveIndex ];\n        indicesByUUID[ lastCachedObject.uuid ] = index;\n        objects[ index ] = lastCachedObject;\n        indicesByUUID[ uuid ] = firstActiveIndex;\n        objects[ firstActiveIndex ] = object;\n        // accounting is done, now do the same for all bindings\n        for (let j = 0, m = nBindings; j !== m; ++ j) {\n          let bindingsForPath = bindings[ j ],\n            lastCached = bindingsForPath[ firstActiveIndex ],\n            binding = bindingsForPath[ index ];\n          bindingsForPath[ index ] = lastCached;\n          if (binding === undefined) {\n            // since we do not bother to create new bindings\n            // for objects that are cached, the binding may\n            // or may not exist\n            binding = new PropertyBinding(\n                object, paths[ j ], parsedPaths[ j ]);\n          }\n          bindingsForPath[ firstActiveIndex ] = binding;\n        }\n      } else if (objects[ index ] !== knownObject) {\n        console.error(\"Different objects with the same UUID \" +\n            \"detected. Clean the caches or recreate your \" +\n            \"infrastructure when reloading scenes...\");\n      } // else the object is already where we want it to be\n    } // for arguments\n    this.nCachedObjects_ = nCachedObjects;\n  }\n  remove(var_args: any) {\n    let objects = this._objects,\n      nCachedObjects = this.nCachedObjects_,\n      indicesByUUID = this._indicesByUUID,\n      bindings = this._bindings,\n      nBindings = bindings.length;\n    for (let i = 0, n = arguments.length; i !== n; ++ i) {\n      let object = arguments[ i ],\n        uuid = object.uuid,\n        index = indicesByUUID[ uuid ];\n      if (index !== undefined && index >= nCachedObjects) {\n        // move existing object into the CACHED region\n        let lastCachedIndex = nCachedObjects ++,\n          firstActiveObject = objects[ lastCachedIndex ];\n        indicesByUUID[ firstActiveObject.uuid ] = index;\n        objects[ index ] = firstActiveObject;\n        indicesByUUID[ uuid ] = lastCachedIndex;\n        objects[ lastCachedIndex ] = object;\n        // accounting is done, now do the same for all bindings\n        for (let j = 0, m = nBindings; j !== m; ++ j) {\n          let bindingsForPath = bindings[ j ],\n            firstActive = bindingsForPath[ lastCachedIndex ],\n            binding = bindingsForPath[ index ];\n          bindingsForPath[ index ] = firstActive;\n          bindingsForPath[ lastCachedIndex ] = binding;\n        }\n      }\n    } // for arguments\n    this.nCachedObjects_ = nCachedObjects;\n  }\n  // remove & forget\n  uncache(var_args: any) {\n    let objects = this._objects,\n      nObjects = objects.length,\n      nCachedObjects = this.nCachedObjects_,\n      indicesByUUID = this._indicesByUUID,\n      bindings = this._bindings,\n      nBindings = bindings.length;\n    for (let i = 0, n = arguments.length; i !== n; ++ i) {\n      let object = arguments[ i ],\n        uuid = object.uuid,\n        index = indicesByUUID[ uuid ];\n      if (index !== undefined) {\n        delete indicesByUUID[ uuid ];\n        if (index < nCachedObjects) {\n          // object is cached, shrink the CACHED region\n          let firstActiveIndex = -- nCachedObjects,\n            lastCachedObject = objects[ firstActiveIndex ],\n            lastIndex = -- nObjects,\n            lastObject = objects[ lastIndex ];\n          // last cached object takes this object's place\n          indicesByUUID[ lastCachedObject.uuid ] = index;\n          objects[ index ] = lastCachedObject;\n          // last object goes to the activated slot and pop\n          indicesByUUID[ lastObject.uuid ] = firstActiveIndex;\n          objects[ firstActiveIndex ] = lastObject;\n          objects.pop();\n          // accounting is done, now do the same for all bindings\n          for (let j = 0, m = nBindings; j !== m; ++ j) {\n            let bindingsForPath = bindings[ j ],\n              lastCached = bindingsForPath[ firstActiveIndex ],\n              last = bindingsForPath[ lastIndex ];\n            bindingsForPath[ index ] = lastCached;\n            bindingsForPath[ firstActiveIndex ] = last;\n            bindingsForPath.pop();\n          }\n        } else {\n          // object is active, just swap with the last and pop\n          let lastIndex = -- nObjects,\n            lastObject = objects[ lastIndex ];\n          indicesByUUID[ lastObject.uuid ] = index;\n          objects[ index ] = lastObject;\n          objects.pop();\n          // accounting is done, now do the same for all bindings\n          for (let j = 0, m = nBindings; j !== m; ++ j) {\n            let bindingsForPath = bindings[ j ];\n            bindingsForPath[ index ] = bindingsForPath[ lastIndex ];\n            bindingsForPath.pop();\n          }\n        } // cached or active\n      } // if object is known\n    } // for arguments\n    this.nCachedObjects_ = nCachedObjects;\n  }\n  // Internal interface used by befriended PropertyBinding.Composite:\n  subscribe_(path: any, parsedPath: any) {\n    // returns an array of bindings for the given path that is changed\n    // according to the contained objects in the group\n    let indicesByPath = this._bindingsIndicesByPath,\n      index = indicesByPath[ path ],\n      bindings = this._bindings;\n    if (index !== undefined) return bindings[ index ];\n    let paths = this._paths,\n      parsedPaths = this._parsedPaths,\n      objects = this._objects,\n      nObjects = objects.length,\n      nCachedObjects = this.nCachedObjects_,\n      bindingsForPath = new Array(nObjects);\n    index = bindings.length;\n    indicesByPath[ path ] = index;\n    paths.push(path);\n    parsedPaths.push(parsedPath);\n    bindings.push(bindingsForPath);\n    for (let i = nCachedObjects,\n        n = objects.length; i !== n; ++ i) {\n      let object = objects[ i ];\n      bindingsForPath[ i ] =\n          new PropertyBinding(object, path, parsedPath);\n    }\n    return bindingsForPath;\n  }\n  unsubscribe_(path: any) {\n    // tells the group to forget about a property path and no longer\n    // update the array previously obtained with 'subscribe_'\n    let indicesByPath = this._bindingsIndicesByPath,\n      index = indicesByPath[ path ];\n    if (index !== undefined) {\n      let paths = this._paths,\n        parsedPaths = this._parsedPaths,\n        bindings = this._bindings,\n        lastBindingsIndex = bindings.length - 1,\n        lastBindings = bindings[ lastBindingsIndex ],\n        lastBindingsPath = path[ lastBindingsIndex ];\n      indicesByPath[ lastBindingsPath ] = index;\n      bindings[ index ] = lastBindings;\n      bindings.pop();\n      parsedPaths[ index ] = parsedPaths[ lastBindingsIndex ];\n      parsedPaths.pop();\n      paths[ index ] = paths[ lastBindingsIndex ];\n      paths.pop();\n    }\n  }\n}\n","/**\n *\n * A reference to a real property in the scene graph.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\nimport { AnimationObjectGroup } from \"./AnimationObjectGroup\";\ntype PropertyGetter = (targetArray: any, offset: number) => void;\ntype PropertySetter = (targetArray: any, offset: number) => void;\nexport class PropertyBinding {\n  path: any;\n  parsedPath: any;\n  node: any;\n  rootNode: any;\n  targetObject: any;\n  resolvedProperty: any;\n  propertyIndex: any;\n  propertyName: any;\n  // initial state of these methods that calls 'bind'\n  getValue: PropertyGetter = this._getValue_unbound;\n  setValue: PropertySetter = this._setValue_unbound;\n  constructor(rootNode: any, path: string, parsedPath?: string) {\n    this.path = path;\n    this.parsedPath = parsedPath || PropertyBinding.parseTrackName(path);\n    this.node = PropertyBinding.findNode(rootNode, this.parsedPath.nodeName) || rootNode;\n    this.rootNode = rootNode;\n  }\n  private _getValue_unbound(targetArray: any, offset: number): void {\n    this.bind();\n    this.getValue(targetArray, offset);\n    // Note: This class uses a State pattern on a per-method basis:\n    // 'bind' sets 'this.getValue' / 'setValue' and shadows the\n    // prototype version of these methods with one that represents\n    // the bound state. When the property is not found, the methods\n    // become no-ops.\n  }\n  private _setValue_unbound(sourceArray: any, offset: number): void {\n    this.bind();\n    this.setValue(sourceArray, offset);\n  }\n  // create getter / setter pair for a property in the scene graph\n  bind(): void {\n    let targetObject = this.node;\n    const parsedPath = this.parsedPath;\n    const objectName = parsedPath.objectName;\n    const propertyName = parsedPath.propertyName;\n    let propertyIndex = parsedPath.propertyIndex;\n    if (! targetObject) {\n      targetObject = PropertyBinding.findNode(\n          this.rootNode, parsedPath.nodeName) || this.rootNode;\n      this.node = targetObject;\n    }\n    // set fail state so we can just 'return' on error\n    this.getValue = this._getValue_unavailable;\n    this.setValue = this._setValue_unavailable;\n     // ensure there is a value node\n    if (! targetObject) {\n      console.error(\"  trying to update node for track: \" + this.path + \" but it wasn't found.\");\n      return;\n    }\n    if (objectName) {\n      let objectIndex = parsedPath.objectIndex;\n      // special cases were we need to reach deeper into the hierarchy to get the face materials....\n      switch (objectName) {\n        case 'materials':\n          if (! targetObject.material) {\n            console.error('  can not bind to material as node does not have a material', this);\n            return;\n          }\n          if (! targetObject.material.materials) {\n            console.error('  can not bind to material.materials as node.material does not have a materials array', this);\n            return;\n          }\n          targetObject = targetObject.material.materials;\n          break;\n        case 'bones':\n          if (! targetObject.skeleton) {\n            console.error('  can not bind to bones as node does not have a skeleton', this);\n            return;\n          }\n          // potential future optimization: skip this if propertyIndex is already an integer\n          // and convert the integer string to a true integer.\n          targetObject = targetObject.skeleton.bones;\n          // support resolving morphTarget names into indices.\n          for (let i = 0; i < targetObject.length; i ++) {\n            if (targetObject[ i ].name === objectIndex) {\n              objectIndex = i;\n              break;\n            }\n          }\n          break;\n        default:\n          if (targetObject[ objectName ] === undefined) {\n            console.error('  can not bind to objectName of node, undefined', this);\n            return;\n          }\n          targetObject = targetObject[ objectName ];\n      }\n      if (objectIndex !== undefined) {\n        if (targetObject[ objectIndex ] === undefined) {\n          console.error(\"  trying to bind to objectIndex of objectName, but is undefined:\", this, targetObject);\n          return;\n        }\n        targetObject = targetObject[ objectIndex ];\n      }\n    }\n    // resolve property\n    const nodeProperty = targetObject[ propertyName ];\n    if (nodeProperty === undefined) {\n      const nodeName = parsedPath.nodeName;\n      console.error(\"  trying to update property for track: \" + nodeName +\n          '.' + propertyName + \" but it wasn't found.\", targetObject);\n      return;\n    }\n    // determine versioning scheme\n    let versioning = this.Versioning.None;\n    if (targetObject.needsUpdate !== undefined) { // material\n      versioning = this.Versioning.NeedsUpdate;\n      this.targetObject = targetObject;\n    } else if (targetObject.matrixWorldNeedsUpdate !== undefined) { // node transform\n      versioning = this.Versioning.MatrixWorldNeedsUpdate;\n      this.targetObject = targetObject;\n    }\n    // determine how the property gets bound\n    let bindingType = this.BindingType.Direct;\n    if (propertyIndex !== undefined) {\n      // access a sub element of the property array (only primitives are supported right now)\n      if (propertyName === \"morphTargetInfluences\") {\n        // potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n        // support resolving morphTarget names into indices.\n        if (! targetObject.geometry) {\n          console.error('  can not bind to morphTargetInfluences becasuse node does not have a geometry', this);\n          return;\n        }\n        if (! targetObject.geometry.morphTargets) {\n          console.error('  can not bind to morphTargetInfluences becasuse node does not have a geometry.morphTargets', this);\n          return;\n        }\n        for (let i = 0; i < this.node.geometry.morphTargets.length; i ++) {\n          if (targetObject.geometry.morphTargets[ i ].name === propertyIndex) {\n            propertyIndex = i;\n            break;\n          }\n        }\n      }\n      bindingType = this.BindingType.ArrayElement;\n      this.resolvedProperty = nodeProperty;\n      this.propertyIndex = propertyIndex;\n    } else if (nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined) {\n      // must use copy for Object3D.Euler/Quaternion\n      bindingType = this.BindingType.HasFromToArray;\n      this.resolvedProperty = nodeProperty;\n    } else if (nodeProperty.length !== undefined) {\n      bindingType = this.BindingType.EntireArray;\n      this.resolvedProperty = nodeProperty;\n    } else {\n      this.propertyName = propertyName;\n    }\n    // select getter / setter\n    this.getValue = this.GetterByBindingType[ bindingType ];\n    this.setValue = this.SetterByBindingTypeAndVersioning[ bindingType ][ versioning ];\n  }\n  unbind(): void {\n    this.node = null;\n    // back to the prototype version of getValue / setValue\n    // note: avoiding to mutate the shape of 'this' via 'delete'\n    this.getValue = this._getValue_unbound;\n    this.setValue = this._setValue_unbound;\n  }\n  static Composite = class {\n    _targetGroup: any;\n    _bindings: any;\n    constructor(targetGroup: any, path: string, optionalParsedPath: string) {\n      const parsedPath = optionalParsedPath ||\n          PropertyBinding.parseTrackName(path);\n      this._targetGroup = targetGroup;\n      this._bindings = targetGroup.subscribe_(path, parsedPath);\n    }\n    getValue(array: any, offset: number): void {\n      this.bind(); // bind all binding\n      const firstValidIndex = this._targetGroup.nCachedObjects_,\n        binding = this._bindings[ firstValidIndex ];\n      // and only call .getValue on the first\n      if (binding !== undefined) binding.getValue(array, offset);\n    }\n    setValue(array: any, offset: number): void {\n      const bindings = this._bindings;\n      for (let i = this._targetGroup.nCachedObjects_,\n          n = bindings.length; i !== n; ++ i) {\n        bindings[ i ].setValue(array, offset);\n      }\n    }\n    bind(): void {\n      const bindings = this._bindings;\n      for (let i = this._targetGroup.nCachedObjects_,\n          n = bindings.length; i !== n; ++ i) {\n        bindings[ i ].bind();\n      }\n    }\n    unbind(): void {\n      const bindings = this._bindings;\n      for (let i = this._targetGroup.nCachedObjects_,\n          n = bindings.length; i !== n; ++ i) {\n        bindings[ i ].unbind();\n      }\n    }\n  };\n  // these are used to \"bind\" a nonexistent property\n  private _getValue_unavailable(targetArray: any, offset: number): void {}\n  private _setValue_unavailable(targetArray: any, offset: number): void {}\n  BindingType = {\n    Direct: 0,\n    EntireArray: 1,\n    ArrayElement: 2,\n    HasFromToArray: 3\n  };\n  Versioning = {\n    None: 0,\n    NeedsUpdate: 1,\n    MatrixWorldNeedsUpdate: 2\n  };\n  GetterByBindingType: PropertyGetter[] = [\n    this.getValue_direct,\n    this.getValue_array,\n    this.getValue_arrayElement,\n    this.getValue_toArray\n  ];\n  private getValue_direct(buffer: any, offset: number): void {\n    buffer[ offset ] = this.node[ this.propertyName ];\n  }\n  private getValue_array(buffer: any, offset: number): void {\n    const source = this.resolvedProperty;\n    for (let i = 0, n = source.length; i !== n; ++ i) {\n      buffer[ offset ++ ] = source[ i ];\n    }\n  }\n  private getValue_arrayElement(buffer: any, offset: number): void {\n    buffer[ offset ] = this.resolvedProperty[ this.propertyIndex ];\n  }\n  private getValue_toArray(buffer: any, offset: number): void {\n    this.resolvedProperty.toArray(buffer, offset);\n  }\n  SetterByBindingTypeAndVersioning: PropertySetter[][] = [\n    [\n      // Direct\n      this.setValue_direct,\n      this.setValue_direct_setNeedsUpdate,\n      this.setValue_direct_setMatrixWorldNeedsUpdate\n    ], [\n      // EntireArray\n      this.setValue_array,\n      this.setValue_array_setNeedsUpdate,\n      this.setValue_array_setMatrixWorldNeedsUpdate\n    ], [\n      // ArrayElement\n      this.setValue_arrayElement,\n      this.setValue_arrayElement_setNeedsUpdate,\n      this.setValue_arrayElement_setMatrixWorldNeedsUpdate\n    ], [\n      // HasToFromArray\n      this.setValue_fromArray,\n      this.setValue_fromArray_setNeedsUpdate,\n      this.setValue_fromArray_setMatrixWorldNeedsUpdate\n    ]\n  ];\n  // Direct\n  private setValue_direct(buffer: any, offset: number): void {\n    this.node[ this.propertyName ] = buffer[ offset ];\n  }\n  private setValue_direct_setNeedsUpdate(buffer: any, offset: number): void {\n    this.node[ this.propertyName ] = buffer[ offset ];\n    this.targetObject.needsUpdate = true;\n  }\n  private setValue_direct_setMatrixWorldNeedsUpdate(buffer: any, offset: number): void {\n    this.node[ this.propertyName ] = buffer[ offset ];\n    this.targetObject.matrixWorldNeedsUpdate = true;\n  }\n  // EntireArray\n  private setValue_array(buffer: any, offset: number): void {\n    const dest = this.resolvedProperty;\n    for (let i = 0, n = dest.length; i !== n; ++ i) {\n      dest[ i ] = buffer[ offset ++ ];\n    }\n  }\n  private setValue_array_setNeedsUpdate(buffer: any, offset: number): void {\n    const dest = this.resolvedProperty;\n    for (let i = 0, n = dest.length; i !== n; ++ i) {\n      dest[ i ] = buffer[ offset ++ ];\n    }\n    this.targetObject.needsUpdate = true;\n  }\n  private setValue_array_setMatrixWorldNeedsUpdate(buffer: any, offset: number): void {\n    const dest = this.resolvedProperty;\n    for (let i = 0, n = dest.length; i !== n; ++ i) {\n      dest[ i ] = buffer[ offset ++ ];\n    }\n    this.targetObject.matrixWorldNeedsUpdate = true;\n  }\n  // ArrayElement\n  private setValue_arrayElement(buffer: any, offset: number): void {\n    this.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n  }\n  private setValue_arrayElement_setNeedsUpdate(buffer: any, offset: number): void {\n    this.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n    this.targetObject.needsUpdate = true;\n  }\n  private setValue_arrayElement_setMatrixWorldNeedsUpdate(buffer: any, offset: number) {\n    this.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n    this.targetObject.matrixWorldNeedsUpdate = true;\n  }\n  // HasToFromArray\n  private setValue_fromArray(buffer: any, offset: number): void {\n    this.resolvedProperty.fromArray(buffer, offset);\n  }\n  private setValue_fromArray_setNeedsUpdate(buffer: any, offset: number): void {\n    this.resolvedProperty.fromArray(buffer, offset);\n    this.targetObject.needsUpdate = true;\n  }\n  private setValue_fromArray_setMatrixWorldNeedsUpdate(buffer: any, offset: number): void {\n    this.resolvedProperty.fromArray(buffer, offset);\n    this.targetObject.matrixWorldNeedsUpdate = true;\n  }\n  static create(root: any, path: any, parsedPath: any): any {\n    if (! ((root && root instanceof AnimationObjectGroup))) {\n      return new PropertyBinding(root, path, parsedPath);\n    } else {\n      return new PropertyBinding.Composite(root, path, parsedPath);\n    }\n  }\n  static parseTrackName(trackName: string): any {\n    // matches strings in the form of:\n    //    nodeName.property\n    //    nodeName.property[accessor]\n    //    nodeName.material.property[accessor]\n    //    uuid.property[accessor]\n    //    uuid.objectName[objectIndex].propertyName[propertyIndex]\n    //    parentName/nodeName.property\n    //    parentName/parentName/nodeName.property[index]\n    //    .bone[Armature.DEF_cog].position\n    //    scene:helium_balloon_model:helium_balloon_model.position\n    // created and tested via https://regex101.com/#javascript\n    const re: RegExp = /^((?:\\w+[\\/:])*)(\\w+)?(?:\\.(\\w+)(?:\\[(.+)\\])?)?\\.(\\w+)(?:\\[(.+)\\])?$/;\n    const matches = re.exec(trackName);\n    if (! matches) {\n      throw new Error(\"cannot parse trackName at all: \" + trackName);\n    }\n    const results = {\n      // directoryName: matches[ 1 ], // (tschw) currently unused\n      nodeName: matches[ 2 ],   // allowed to be null, specified root node.\n      objectName: matches[ 3 ],\n      objectIndex: matches[ 4 ],\n      propertyName: matches[ 5 ],\n      propertyIndex: matches[ 6 ]  // allowed to be null, specifies that the whole property is set.\n    };\n    if (results.propertyName === null || results.propertyName.length === 0) {\n      throw new Error(\"can not parse propertyName from trackName: \" + trackName);\n    }\n    return results;\n  }\n  static findNode(root: any, nodeName: string | number): any {\n    if (! nodeName || nodeName === \"\" || nodeName === \"root\" || nodeName === \".\" || nodeName === -1 || nodeName === root.name || nodeName === root.uuid) {\n      return root;\n    }\n    // search into skeleton bones.\n    if (root.skeleton) {\n      const searchSkeleton = function(skeleton: any) {\n        for (let i = 0; i < skeleton.bones.length; i ++) {\n          const bone = skeleton.bones[ i ];\n          if (bone.name === nodeName) {\n            return bone;\n          }\n        }\n        return null;\n      };\n      const bone = searchSkeleton(root.skeleton);\n      if (bone) {\n        return bone;\n      }\n    }\n    // search into node subtree.\n    if (root.children) {\n      const searchNodeSubtree = function(children: any): any {\n        for (let i = 0; i < children.length; i ++) {\n          const childNode = children[ i ];\n          if (childNode.name === nodeName || childNode.uuid === nodeName) {\n            return childNode;\n          }\n          const result = searchNodeSubtree(childNode.children);\n          if (result) return result;\n        }\n        return null;\n      };\n      const subTreeNode = searchNodeSubtree(root.children);\n      if (subTreeNode) {\n        return subTreeNode;\n      }\n    }\n    return null;\n  }\n}\n","import { EndingMode, LoopMode } from \"../constants\";\n/**\n *\n * Action provided by AnimationMixer for scheduling clip playback on specific\n * objects.\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n *\n */\nexport class AnimationAction {\n  private _mixer: any;\n  private _clip: any;\n  private _localRoot: any;\n  private _interpolantSettings: any;\n  private _interpolants: any;\n  private _propertyBindings: any;\n  private _cacheIndex: any;\n  private _byClipCacheIndex: any;\n  private _timeScaleInterpolant: any;\n  private _weightInterpolant: any;\n  loop: LoopMode;\n  private _loopCount: any;\n  private _startTime: any;\n  time: any;\n  timeScale: any;\n  private _effectiveTimeScale: any;\n  weight: any;\n  private _effectiveWeight: any;\n  repetitions: any;\n  paused: any;\n  enabled: any;\n  clampWhenFinished: any;\n  zeroSlopeAtStart: any;\n  zeroSlopeAtEnd: any;\n  loopCount: any;\n  constructor(mixer: any, clip: any, localRoot: any) {\n    this._mixer = mixer;\n    this._clip = clip;\n    this._localRoot = localRoot || null;\n    let tracks = clip.tracks,\n      nTracks = tracks.length,\n      interpolants = new Array(nTracks);\n    let interpolantSettings = {\n        endingStart:   EndingMode.ZeroCurvature,\n        endingEnd:    EndingMode.ZeroCurvature\n    };\n    for (let i = 0; i !== nTracks; ++ i) {\n      let interpolant = tracks[ i ].createInterpolant(null);\n      interpolants[ i ] = interpolant;\n      interpolant.settings = interpolantSettings;\n    }\n    this._interpolantSettings = interpolantSettings;\n    this._interpolants = interpolants;  // bound by the mixer\n    // inside: PropertyMixer (managed by the mixer)\n    this._propertyBindings = new Array(nTracks);\n    this._cacheIndex = null;      // for the memory manager\n    this._byClipCacheIndex = null;    // for the memory manager\n    this._timeScaleInterpolant = null;\n    this._weightInterpolant = null;\n    this.loop = LoopMode.Repeat;\n    this._loopCount = -1;\n    // global mixer time when the action is to be started\n    // it's set back to 'null' upon start of the action\n    this._startTime = null;\n    // scaled local time of the action\n    // gets clamped or wrapped to 0..clip.duration according to loop\n    this.time = 0;\n    this.timeScale = 1;\n    this._effectiveTimeScale = 1;\n    this.weight = 1;\n    this._effectiveWeight = 1;\n    this.repetitions = Infinity;     // no. of repetitions when looping\n    this.paused = false;        // false -> zero effective time scale\n    this.enabled = true;        // true -> zero effective weight\n    this.clampWhenFinished   = false;  // keep feeding the last frame?\n    this.zeroSlopeAtStart   = true;    // for smooth interpolation w/o separate\n    this.zeroSlopeAtEnd    = true;    // clips for start, loop and end\n  }\n  // State & Scheduling\n  play() {\n    this._mixer._activateAction(this);\n    return this;\n  }\n  stop() {\n    this._mixer._deactivateAction(this);\n    return this.reset();\n  }\n  reset() {\n    this.paused = false;\n    this.enabled = true;\n    this.time = 0;      // restart clip\n    this._loopCount = -1;  // forget previous loops\n    this._startTime = null;  // forget scheduling\n    return this.stopFading().stopWarping();\n  }\n  isRunning() {\n    return this.enabled && ! this.paused && this.timeScale !== 0 &&\n        this._startTime === null && this._mixer._isActiveAction(this);\n  }\n  // return true when play has been called\n  isScheduled() {\n    return this._mixer._isActiveAction(this);\n  }\n  startAt(time: number): AnimationAction {\n    this._startTime = time;\n    return this;\n  }\n  setLoop(mode: any, repetitions: number): AnimationAction {\n    this.loop = mode;\n    this.repetitions = repetitions;\n    return this;\n  }\n  // Weight\n  // set the weight stopping any scheduled fading\n  // although .enabled = false yields an effective weight of zero, this\n  // method does *not* change .enabled, because it would be confusing\n  setEffectiveWeight(weight: number): AnimationAction {\n    this.weight = weight;\n    // note: same logic as when updated at runtime\n    this._effectiveWeight = this.enabled ? weight : 0;\n    return this.stopFading();\n  }\n  // return the weight considering fading and .enabled\n  getEffectiveWeight(): number {\n    return this._effectiveWeight;\n  }\n  fadeIn(duration: number): AnimationAction {\n    return this._scheduleFading(duration, 0, 1);\n  }\n  fadeOut(duration: number): AnimationAction {\n    return this._scheduleFading(duration, 1, 0);\n  }\n  crossFadeFrom(fadeOutAction: any, duration: number, warp: boolean): AnimationAction {\n    fadeOutAction.fadeOut(duration);\n    this.fadeIn(duration);\n    if (warp) {\n      let fadeInDuration = this._clip.duration,\n        fadeOutDuration = fadeOutAction._clip.duration,\n        startEndRatio = fadeOutDuration / fadeInDuration,\n        endStartRatio = fadeInDuration / fadeOutDuration;\n      fadeOutAction.warp(1.0, startEndRatio, duration);\n      this.warp(endStartRatio, 1.0, duration);\n    }\n    return this;\n  }\n  crossFadeTo(fadeInAction: any, duration: number, warp: boolean): AnimationAction {\n    return fadeInAction.crossFadeFrom(this, duration, warp);\n  }\n  stopFading(): AnimationAction {\n    let weightInterpolant = this._weightInterpolant;\n    if (weightInterpolant !== null) {\n      this._weightInterpolant = null;\n      this._mixer._takeBackControlInterpolant(weightInterpolant);\n    }\n    return this;\n  }\n  // Time Scale Control\n  // set the weight stopping any scheduled warping\n  // although .paused = true yields an effective time scale of zero, this\n  // method does *not* change .paused, because it would be confusing\n  setEffectiveTimeScale(timeScale: number): AnimationAction {\n    this.timeScale = timeScale;\n    this._effectiveTimeScale = this.paused ? 0 : timeScale;\n    return this.stopWarping();\n  }\n  // return the time scale considering warping and .paused\n  getEffectiveTimeScale(): number {\n    return this._effectiveTimeScale;\n  }\n  setDuration(duration: number): AnimationAction {\n    this.timeScale = this._clip.duration / duration;\n    return this.stopWarping();\n  }\n  syncWith(action: any): AnimationAction {\n    this.time = action.time;\n    this.timeScale = action.timeScale;\n    return this.stopWarping();\n  }\n  halt(duration: number): AnimationAction {\n    return this.warp(this._effectiveTimeScale, 0, duration);\n  }\n  warp(startTimeScale: number, endTimeScale: number, duration: number): AnimationAction {\n    let mixer = this._mixer, now = mixer.time,\n      interpolant = this._timeScaleInterpolant,\n      timeScale = this.timeScale;\n    if (interpolant === null) {\n      interpolant = mixer._lendControlInterpolant(),\n      this._timeScaleInterpolant = interpolant;\n    }\n    let times = interpolant.parameterPositions,\n      values = interpolant.sampleValues;\n    times[ 0 ] = now;\n    times[ 1 ] = now + duration;\n    values[ 0 ] = startTimeScale / timeScale;\n    values[ 1 ] = endTimeScale / timeScale;\n    return this;\n  }\n  stopWarping(): AnimationAction {\n    let timeScaleInterpolant = this._timeScaleInterpolant;\n    if (timeScaleInterpolant !== null) {\n      this._timeScaleInterpolant = null;\n      this._mixer._takeBackControlInterpolant(timeScaleInterpolant);\n    }\n    return this;\n  }\n  // Object Accessors\n  getMixer() {\n    return this._mixer;\n  }\n  getClip() {\n    return this._clip;\n  }\n  getRoot() {\n    return this._localRoot || this._mixer._root;\n  }\n  // Interna\n  _update(time: number, deltaTime: number, timeDirection: number, accuIndex: number) {\n    // called by the mixer\n    let startTime = this._startTime;\n    if (startTime !== null) {\n      // check for scheduled start of action\n      let timeRunning = (time - startTime) * timeDirection;\n      if (timeRunning < 0 || timeDirection === 0) {\n        return; // yet to come / don't decide when delta = 0\n      }\n      // start\n      this._startTime = null; // unschedule\n      deltaTime = timeDirection * timeRunning;\n    }\n    // apply time scale and advance time\n    deltaTime *= this._updateTimeScale(time);\n    let clipTime = this._updateTime(deltaTime);\n    // note: _updateTime may disable the action resulting in\n    // an effective weight of 0\n    let weight = this._updateWeight(time);\n    if (weight > 0) {\n      let interpolants = this._interpolants;\n      let propertyMixers = this._propertyBindings;\n      for (let j = 0, m = interpolants.length; j !== m; ++ j) {\n        interpolants[ j ].evaluate(clipTime);\n        propertyMixers[ j ].accumulate(accuIndex, weight);\n      }\n    }\n  }\n  private _updateWeight(time: number) {\n    let weight = 0;\n    if (this.enabled) {\n      weight = this.weight;\n      let interpolant = this._weightInterpolant;\n      if (interpolant !== null) {\n        let interpolantValue = interpolant.evaluate(time)[ 0 ];\n        weight *= interpolantValue;\n        if (time > interpolant.parameterPositions[ 1 ]) {\n          this.stopFading();\n          if (interpolantValue === 0) {\n            // faded out, disable\n            this.enabled = false;\n          }\n        }\n      }\n    }\n    this._effectiveWeight = weight;\n    return weight;\n  }\n  private _updateTimeScale(time: number) {\n    let timeScale = 0;\n    if (! this.paused) {\n      timeScale = this.timeScale;\n      let interpolant = this._timeScaleInterpolant;\n      if (interpolant !== null) {\n        let interpolantValue = interpolant.evaluate(time)[ 0 ];\n        timeScale *= interpolantValue;\n        if (time > interpolant.parameterPositions[ 1 ]) {\n          this.stopWarping();\n          if (timeScale === 0) {\n            // motion has halted, pause\n            this.paused = true;\n          } else {\n            // warp done - apply final time scale\n            this.timeScale = timeScale;\n          }\n        }\n      }\n    }\n    this._effectiveTimeScale = timeScale;\n    return timeScale;\n  }\n  private _updateTime(deltaTime: number) {\n    let time = this.time + deltaTime;\n    if (deltaTime === 0) return time;\n    let duration = this._clip.duration,\n      loop = this.loop,\n      loopCount = this._loopCount;\n    if (loop === LoopMode.Once) {\n      if (loopCount === -1) {\n        // just started\n        this.loopCount = 0;\n        this._setEndings(true, true, false);\n      }\n      handle_stop: {\n        if (time >= duration) {\n          time = duration;\n        } else if (time < 0) {\n          time = 0;\n        } else break handle_stop;\n        if (this.clampWhenFinished) this.paused = true;\n        else this.enabled = false;\n        this._mixer.dispatchEvent({\n          type: 'finished', action: this,\n          direction: deltaTime < 0 ? -1 : 1\n        });\n      }\n    } else { // repetitive Repeat or PingPong\n      let pingPong = (loop === LoopMode.PingPong);\n      if (loopCount === -1) {\n        // just started\n        if (deltaTime >= 0) {\n          loopCount = 0;\n          this._setEndings(\n              true, this.repetitions === 0, pingPong);\n        } else {\n          // when looping in reverse direction, the initial\n          // transition through zero counts as a repetition,\n          // so leave loopCount at -1\n          this._setEndings(\n              this.repetitions === 0, true, pingPong);\n        }\n      }\n      if (time >= duration || time < 0) {\n        // wrap around\n        let loopDelta = Math.floor(time / duration); // signed\n        time -= duration * loopDelta;\n        loopCount += Math.abs(loopDelta);\n        let pending = this.repetitions - loopCount;\n        if (pending < 0) {\n          // have to stop (switch state, clamp time, fire event)\n          if (this.clampWhenFinished) this.paused = true;\n          else this.enabled = false;\n          time = deltaTime > 0 ? duration : 0;\n          this._mixer.dispatchEvent({\n            type: 'finished', action: this,\n            direction: deltaTime > 0 ? 1 : -1\n          });\n        } else {\n          // keep running\n          if (pending === 0) {\n            // entering the last round\n            let atStart = deltaTime < 0;\n            this._setEndings(atStart, ! atStart, pingPong);\n          } else {\n            this._setEndings(false, false, pingPong);\n          }\n          this._loopCount = loopCount;\n          this._mixer.dispatchEvent({\n            type: 'loop', action: this, loopDelta: loopDelta\n          });\n        }\n      }\n      if (pingPong && (loopCount & 1) === 1) {\n        // invert time for the \"pong round\"\n        this.time = time;\n        return duration - time;\n      }\n    }\n    this.time = time;\n    return time;\n  }\n  private _setEndings(atStart: boolean, atEnd: boolean, pingPong: boolean) {\n    let settings = this._interpolantSettings;\n    if (pingPong) {\n      settings.endingStart   = EndingMode.ZeroSlope;\n      settings.endingEnd    = EndingMode.ZeroSlope;\n    } else {\n      // assuming for LoopMode.Once atStart == atEnd == true\n      if (atStart) {\n        settings.endingStart = this.zeroSlopeAtStart ?\n            EndingMode.ZeroSlope : EndingMode.ZeroCurvature;\n      } else {\n        settings.endingStart = EndingMode.WrapAround;\n      }\n      if (atEnd) {\n        settings.endingEnd = this.zeroSlopeAtEnd ?\n            EndingMode.ZeroSlope : EndingMode.ZeroCurvature;\n      } else {\n        settings.endingEnd    = EndingMode.WrapAround;\n      }\n    }\n  }\n  private _scheduleFading(duration: number, weightNow: number, weightThen: number) {\n    let mixer = this._mixer, now = mixer.time,\n      interpolant = this._weightInterpolant;\n    if (interpolant === null) {\n      interpolant = mixer._lendControlInterpolant(),\n      this._weightInterpolant = interpolant;\n    }\n    let times = interpolant.parameterPositions,\n      values = interpolant.sampleValues;\n    times[ 0 ] = now;         values[ 0 ] = weightNow;\n    times[ 1 ] = now + duration;  values[ 1 ] = weightThen;\n    return this;\n  }\n}\n","import { AnimationAction } from \"./AnimationAction\";\nimport { EventDispatcher } from \"../core/EventDispatcher\";\nimport { LinearInterpolant } from \"../math/interpolants/LinearInterpolant\";\nimport { PropertyBinding } from \"./PropertyBinding\";\nimport { PropertyMixer } from \"./PropertyMixer\";\nimport { AnimationClip } from \"./AnimationClip\";\n/**\n *\n * Player for AnimationClips.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\nexport class AnimationMixer extends EventDispatcher {\n  time: any;\n  timeScale: any;\n  stats: any;\n  _root: any;\n  _accuIndex: any;\n  _actions: any;\n  _nActiveActions: any;\n  _bindings: any;\n  _nActiveBindings: any;\n  _controlInterpolants: any;\n  _nActiveControlInterpolants: any;\n  _actionsByClip: any;\n  _bindingsByRootAndName: any;\n  constructor(root: any) {\n    super();\n    this._root = root;\n    this._initMemoryManager();\n    this._accuIndex = 0;\n    this.time = 0;\n    this.timeScale = 1.0;\n  }\n  // return an action for a clip optionally using a custom root target\n  // object (this method allocates a lot of dynamic memory in case a\n  // previously unknown clip/root combination is specified)\n  clipAction(clip: any, optionalRoot: any) {\n    let root = optionalRoot || this._root,\n      rootUuid = root.uuid,\n      clipObject = typeof clip === 'string' ?\n          AnimationClip.findByName(root, clip) : clip,\n      clipUuid = clipObject !== null ? clipObject.uuid : clip,\n      actionsForClip = this._actionsByClip[ clipUuid ],\n      prototypeAction = null;\n    if (actionsForClip !== undefined) {\n      let existingAction =\n          actionsForClip.actionByRoot[ rootUuid ];\n      if (existingAction !== undefined) {\n        return existingAction;\n      }\n      // we know the clip, so we don't have to parse all\n      // the bindings again but can just copy\n      prototypeAction = actionsForClip.knownActions[ 0 ];\n      // also, take the clip from the prototype action\n      if (clipObject === null)\n        clipObject = prototypeAction._clip;\n    }\n    // clip must be known when specified via string\n    if (clipObject === null) return null;\n    // allocate all resources required to run it\n    let newAction = new AnimationAction(this, clipObject, optionalRoot);\n    this._bindAction(newAction, prototypeAction);\n    // and make the action known to the memory manager\n    this._addInactiveAction(newAction, clipUuid, rootUuid);\n    return newAction;\n  }\n  // get an existing action\n  existingAction(clip: any, optionalRoot: any) {\n    let root = optionalRoot || this._root,\n      rootUuid = root.uuid,\n      clipObject = typeof clip === 'string' ?\n          AnimationClip.findByName(root, clip) : clip,\n      clipUuid = clipObject ? clipObject.uuid : clip,\n      actionsForClip = this._actionsByClip[ clipUuid ];\n    if (actionsForClip !== undefined) {\n      return actionsForClip.actionByRoot[ rootUuid ] || null;\n    }\n    return null;\n  }\n  // deactivates all previously scheduled actions\n  stopAllAction() {\n    let actions = this._actions,\n      nActions = this._nActiveActions,\n      bindings = this._bindings,\n      nBindings = this._nActiveBindings;\n    this._nActiveActions = 0;\n    this._nActiveBindings = 0;\n    for (let i = 0; i !== nActions; ++ i) {\n      actions[ i ].reset();\n    }\n    for (let i = 0; i !== nBindings; ++ i) {\n      bindings[ i ].useCount = 0;\n    }\n    return this;\n  }\n  // advance the time and update apply the animation\n  update(deltaTime: any) {\n    deltaTime *= this.timeScale;\n    let actions = this._actions,\n      nActions = this._nActiveActions,\n      time = this.time += deltaTime,\n      timeDirection = Math.sign(deltaTime),\n      accuIndex = this._accuIndex ^= 1;\n    // run active actions\n    for (let i = 0; i !== nActions; ++ i) {\n      let action = actions[ i ];\n      if (action.enabled) {\n        action._update(time, deltaTime, timeDirection, accuIndex);\n      }\n    }\n    // update scene graph\n    let bindings = this._bindings,\n      nBindings = this._nActiveBindings;\n    for (let i = 0; i !== nBindings; ++ i) {\n      bindings[ i ].apply(accuIndex);\n    }\n    return this;\n  }\n  // return this mixer's root target object\n  getRoot() {\n    return this._root;\n  }\n  // free all resources specific to a particular clip\n  uncacheClip(clip: any) {\n    let actions = this._actions,\n      clipUuid = clip.uuid,\n      actionsByClip = this._actionsByClip,\n      actionsForClip = actionsByClip[ clipUuid ];\n    if (actionsForClip !== undefined) {\n      // note: just calling _removeInactiveAction would mess up the\n      // iteration state and also require updating the state we can\n      // just throw away\n      let actionsToRemove = actionsForClip.knownActions;\n      for (let i = 0, n = actionsToRemove.length; i !== n; ++ i) {\n        let action = actionsToRemove[ i ];\n        this._deactivateAction(action);\n        let cacheIndex = action._cacheIndex,\n          lastInactiveAction = actions[ actions.length - 1 ];\n        action._cacheIndex = null;\n        action._byClipCacheIndex = null;\n        lastInactiveAction._cacheIndex = cacheIndex;\n        actions[ cacheIndex ] = lastInactiveAction;\n        actions.pop();\n        this._removeInactiveBindingsForAction(action);\n      }\n      delete actionsByClip[ clipUuid ];\n    }\n  }\n  // free all resources specific to a particular root target object\n  uncacheRoot(root: any) {\n    let rootUuid = root.uuid,\n      actionsByClip = this._actionsByClip;\n    for (let clipUuid in actionsByClip) {\n      let actionByRoot = actionsByClip[ clipUuid ].actionByRoot,\n        action = actionByRoot[ rootUuid ];\n      if (action !== undefined) {\n        this._deactivateAction(action);\n        this._removeInactiveAction(action);\n      }\n    }\n    let bindingsByRoot = this._bindingsByRootAndName,\n      bindingByName = bindingsByRoot[ rootUuid ];\n    if (bindingByName !== undefined) {\n      for (let trackName in bindingByName) {\n        let binding = bindingByName[ trackName ];\n        binding.restoreOriginalState();\n        this._removeInactiveBinding(binding);\n      }\n    }\n  }\n  // remove a targeted clip from the cache\n  uncacheAction(clip: any, optionalRoot: any) {\n    let action = this.existingAction(clip, optionalRoot);\n    if (action !== null) {\n      this._deactivateAction(action);\n      this._removeInactiveAction(action);\n    }\n  }\n  // Implementation details:\n  _bindAction(action: any, prototypeAction: any) {\n    let root = action._localRoot || this._root,\n      tracks = action._clip.tracks,\n      nTracks = tracks.length,\n      bindings = action._propertyBindings,\n      interpolants = action._interpolants,\n      rootUuid = root.uuid,\n      bindingsByRoot = this._bindingsByRootAndName,\n      bindingsByName = bindingsByRoot[ rootUuid ];\n    if (bindingsByName === undefined) {\n      bindingsByName = {};\n      bindingsByRoot[ rootUuid ] = bindingsByName;\n    }\n    for (let i = 0; i !== nTracks; ++ i) {\n      let track = tracks[ i ],\n        trackName = track.name,\n        binding = bindingsByName[ trackName ];\n      if (binding !== undefined) {\n        bindings[ i ] = binding;\n      } else {\n        binding = bindings[ i ];\n        if (binding !== undefined) {\n          // existing binding, make sure the cache knows\n          if (binding._cacheIndex === null) {\n            ++ binding.referenceCount;\n            this._addInactiveBinding(binding, rootUuid, trackName);\n          }\n          continue;\n        }\n        let path = prototypeAction && prototypeAction.\n            _propertyBindings[ i ].binding.parsedPath;\n        binding = new PropertyMixer(\n            PropertyBinding.create(root, trackName, path),\n            track.ValueTypeName, track.getValueSize());\n        ++ binding.referenceCount;\n        this._addInactiveBinding(binding, rootUuid, trackName);\n        bindings[ i ] = binding;\n      }\n      interpolants[ i ].resultBuffer = binding.buffer;\n    }\n  }\n  _activateAction(action: any) {\n    if (! this._isActiveAction(action)) {\n      if (action._cacheIndex === null) {\n        // this action has been forgotten by the cache, but the user\n        // appears to be still using it -> rebind\n        let rootUuid = (action._localRoot || this._root).uuid,\n          clipUuid = action._clip.uuid,\n          actionsForClip = this._actionsByClip[ clipUuid ];\n        this._bindAction(action,\n            actionsForClip && actionsForClip.knownActions[ 0 ]);\n        this._addInactiveAction(action, clipUuid, rootUuid);\n      }\n      let bindings = action._propertyBindings;\n      // increment reference counts / sort out state\n      for (let i = 0, n = bindings.length; i !== n; ++ i) {\n        let binding = bindings[ i ];\n        if (binding.useCount ++ === 0) {\n          this._lendBinding(binding);\n          binding.saveOriginalState();\n        }\n      }\n      this._lendAction(action);\n    }\n  }\n  _deactivateAction(action: any) {\n    if (this._isActiveAction(action)) {\n      let bindings = action._propertyBindings;\n      // decrement reference counts / sort out state\n      for (let i = 0, n = bindings.length; i !== n; ++ i) {\n        let binding = bindings[ i ];\n        if (-- binding.useCount === 0) {\n          binding.restoreOriginalState();\n          this._takeBackBinding(binding);\n        }\n      }\n      this._takeBackAction(action);\n    }\n  }\n  // Memory manager\n  _initMemoryManager() {\n    this._actions = []; // 'nActiveActions' followed by inactive ones\n    this._nActiveActions = 0;\n    this._actionsByClip = {};\n    // inside:\n    // {\n    //     knownActions: Array< AnimationAction >  - used as prototypes\n    //     actionByRoot: AnimationAction      - lookup\n    // }\n    this._bindings = []; // 'nActiveBindings' followed by inactive ones\n    this._nActiveBindings = 0;\n    this._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\n    this._controlInterpolants = []; // same game as above\n    this._nActiveControlInterpolants = 0;\n    let scope = this;\n    this.stats = {\n      actions: {\n        get total() { return scope._actions.length; },\n        get inUse() { return scope._nActiveActions; }\n      },\n      bindings: {\n        get total() { return scope._bindings.length; },\n        get inUse() { return scope._nActiveBindings; }\n      },\n      controlInterpolants: {\n        get total() { return scope._controlInterpolants.length; },\n        get inUse() { return scope._nActiveControlInterpolants; }\n      }\n    };\n  }\n  // Memory management for AnimationAction objects\n  _isActiveAction(action: any) {\n    let index = action._cacheIndex;\n    return index !== null && index < this._nActiveActions;\n  }\n  _addInactiveAction(action: any, clipUuid: any, rootUuid: any) {\n    let actions = this._actions,\n      actionsByClip = this._actionsByClip,\n      actionsForClip = actionsByClip[ clipUuid ];\n    if (actionsForClip === undefined) {\n      actionsForClip = {\n        knownActions: [ action ],\n        actionByRoot: {}\n      };\n      action._byClipCacheIndex = 0;\n      actionsByClip[ clipUuid ] = actionsForClip;\n    } else {\n      let knownActions = actionsForClip.knownActions;\n      action._byClipCacheIndex = knownActions.length;\n      knownActions.push(action);\n    }\n    action._cacheIndex = actions.length;\n    actions.push(action);\n    actionsForClip.actionByRoot[ rootUuid ] = action;\n  }\n  _removeInactiveAction(action: any) {\n    let actions = this._actions,\n      lastInactiveAction = actions[ actions.length - 1 ],\n      cacheIndex = action._cacheIndex;\n    lastInactiveAction._cacheIndex = cacheIndex;\n    actions[ cacheIndex ] = lastInactiveAction;\n    actions.pop();\n    action._cacheIndex = null;\n    let clipUuid = action._clip.uuid,\n      actionsByClip = this._actionsByClip,\n      actionsForClip = actionsByClip[ clipUuid ],\n      knownActionsForClip = actionsForClip.knownActions,\n      lastKnownAction =\n        knownActionsForClip[ knownActionsForClip.length - 1 ],\n      byClipCacheIndex = action._byClipCacheIndex;\n    lastKnownAction._byClipCacheIndex = byClipCacheIndex;\n    knownActionsForClip[ byClipCacheIndex ] = lastKnownAction;\n    knownActionsForClip.pop();\n    action._byClipCacheIndex = null;\n    let actionByRoot = actionsForClip.actionByRoot,\n      rootUuid = (actions._localRoot || this._root).uuid;\n    delete actionByRoot[ rootUuid ];\n    if (knownActionsForClip.length === 0) {\n      delete actionsByClip[ clipUuid ];\n    }\n    this._removeInactiveBindingsForAction(action);\n  }\n  _removeInactiveBindingsForAction(action: any) {\n    let bindings = action._propertyBindings;\n    for (let i = 0, n = bindings.length; i !== n; ++ i) {\n      let binding = bindings[ i ];\n      if (-- binding.referenceCount === 0) {\n        this._removeInactiveBinding(binding);\n      }\n    }\n  }\n  _lendAction(action: any) {\n    // [ active actions |  inactive actions  ]\n    // [  active actions >| inactive actions ]\n    //                 s        a\n    //                  <-swap->\n    //                 a        s\n    let actions = this._actions,\n      prevIndex = action._cacheIndex,\n      lastActiveIndex = this._nActiveActions ++,\n      firstInactiveAction = actions[ lastActiveIndex ];\n    action._cacheIndex = lastActiveIndex;\n    actions[ lastActiveIndex ] = action;\n    firstInactiveAction._cacheIndex = prevIndex;\n    actions[ prevIndex ] = firstInactiveAction;\n  }\n  _takeBackAction(action: any) {\n    // [  active actions  | inactive actions ]\n    // [ active actions |< inactive actions  ]\n    //        a        s\n    //         <-swap->\n    //        s        a\n    let actions = this._actions,\n      prevIndex = action._cacheIndex,\n      firstInactiveIndex = -- this._nActiveActions,\n      lastActiveAction = actions[ firstInactiveIndex ];\n    action._cacheIndex = firstInactiveIndex;\n    actions[ firstInactiveIndex ] = action;\n    lastActiveAction._cacheIndex = prevIndex;\n    actions[ prevIndex ] = lastActiveAction;\n  }\n  // Memory management for PropertyMixer objects\n  _addInactiveBinding(binding: any, rootUuid: any, trackName: any) {\n    let bindingsByRoot = this._bindingsByRootAndName,\n      bindingByName = bindingsByRoot[ rootUuid ],\n      bindings = this._bindings;\n    if (bindingByName === undefined) {\n      bindingByName = {};\n      bindingsByRoot[ rootUuid ] = bindingByName;\n    }\n    bindingByName[ trackName ] = binding;\n    binding._cacheIndex = bindings.length;\n    bindings.push(binding);\n  }\n  _removeInactiveBinding(binding: any) {\n    let bindings = this._bindings,\n      propBinding = binding.binding,\n      rootUuid = propBinding.rootNode.uuid,\n      trackName = propBinding.path,\n      bindingsByRoot = this._bindingsByRootAndName,\n      bindingByName = bindingsByRoot[ rootUuid ],\n      lastInactiveBinding = bindings[ bindings.length - 1 ],\n      cacheIndex = binding._cacheIndex;\n    lastInactiveBinding._cacheIndex = cacheIndex;\n    bindings[ cacheIndex ] = lastInactiveBinding;\n    bindings.pop();\n    delete bindingByName[ trackName ];\n    remove_empty_map: {\n      for (let _ in bindingByName) break remove_empty_map;\n      delete bindingsByRoot[ rootUuid ];\n    }\n  }\n  _lendBinding(binding: any) {\n    let bindings = this._bindings,\n      prevIndex = binding._cacheIndex,\n      lastActiveIndex = this._nActiveBindings ++,\n      firstInactiveBinding = bindings[ lastActiveIndex ];\n    binding._cacheIndex = lastActiveIndex;\n    bindings[ lastActiveIndex ] = binding;\n    firstInactiveBinding._cacheIndex = prevIndex;\n    bindings[ prevIndex ] = firstInactiveBinding;\n  }\n  _takeBackBinding(binding: any) {\n    let bindings = this._bindings,\n      prevIndex = binding._cacheIndex,\n      firstInactiveIndex = -- this._nActiveBindings,\n      lastActiveBinding = bindings[ firstInactiveIndex ];\n    binding._cacheIndex = firstInactiveIndex;\n    bindings[ firstInactiveIndex ] = binding;\n    lastActiveBinding._cacheIndex = prevIndex;\n    bindings[ prevIndex ] = lastActiveBinding;\n  }\n  // Memory management of Interpolants for weight and time scale\n  _lendControlInterpolant() {\n    let interpolants = this._controlInterpolants,\n      lastActiveIndex = this._nActiveControlInterpolants ++,\n      interpolant = interpolants[ lastActiveIndex ];\n    if (interpolant === undefined) {\n      interpolant = new LinearInterpolant(\n          new Float32Array(2), new Float32Array(2),\n            1, this._controlInterpolantsResultBuffer);\n      interpolant.__cacheIndex = lastActiveIndex;\n      interpolants[ lastActiveIndex ] = interpolant;\n    }\n    return interpolant;\n  }\n  _takeBackControlInterpolant(interpolant: any) {\n    let interpolants = this._controlInterpolants,\n      prevIndex = interpolant.__cacheIndex,\n      firstInactiveIndex = -- this._nActiveControlInterpolants,\n      lastActiveInterpolant = interpolants[ firstInactiveIndex ];\n    interpolant.__cacheIndex = firstInactiveIndex;\n    interpolants[ firstInactiveIndex ] = interpolant;\n    lastActiveInterpolant.__cacheIndex = prevIndex;\n    interpolants[ prevIndex ] = lastActiveInterpolant;\n  }\n  _controlInterpolantsResultBuffer = new Float32Array(1);\n}\n","/**\n * @author mrdoob / http://mrdoob.com/\n */\nexport class Uniform {\n  value: any;\n  constructor(value: any) {\n    if (typeof value === 'string') {\n      console.warn('THREE.Uniform: Type parameter is no longer needed.');\n      value = arguments[1];\n    }\n    this.value = value;\n  }\n  set dynamic(value) {\n    console.warn('THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.');\n  }\n  onUpdate(callback: () => void): Uniform {\n    console.warn('THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead.');\n    return this;\n  }\n}\n","import { Vector2 } from \"../math/Vector2\";\nimport { Vector3 } from \"../math/Vector3\";\nimport { Ray } from \"../math/Ray\";\nimport { Face3 } from \"./Face3\";\nimport { Object3D } from \"./Object3D\";\nimport { Camera } from \"../cameras/Camera\";\nimport { OrthographicCamera } from \"../cameras/OrthographicCamera\";\nimport { PerspectiveCamera } from \"../cameras/PerspectiveCamera\";\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author bhouston / http://clara.io/\n * @author stephomi / http://stephaneginier.com/\n */\nexport class Intersect {\n  distance?: number;\n  distanceToRay?: number;\n  point?: Vector3;\n  index?: number;\n  face?: Face3;\n  faceIndex?: number;\n  uv?: Vector2;\n  object?: Object3D;\n}\nexport class Raycaster {\n  ray: Ray;\n  near: number;\n  far: number;\n  params: any;\n  linePrecision: number = 1;\n  constructor(origin?: Vector3, direction?: Vector3, near?: number, far?: number) {\n    this.ray = new Ray(origin, direction);\n    // direction is assumed to be normalized (for accurate distance calculations)\n    this.near = near || 0;\n    this.far = far || Infinity;\n    this.params = {\n      Mesh: {},\n      Line: {},\n      LOD: {},\n      Points: { threshold: 1 },\n      Sprite: {}\n    };\n    //Object.defineProperties(this.params, {\n    //  PointCloud: {\n    //    get: function () {\n    //      console.warn('THREE.Raycaster: params.PointCloud has been renamed to params.Points.');\n    //      return this.Points;\n    //    }\n    //  }\n    //});\n  }\n  set(origin: Vector3, direction: Vector3): void {\n    // direction is assumed to be normalized (for accurate distance calculations)\n    this.ray.set(origin, direction);\n  }\n  setFromCamera(coords: Vector2, camera: Camera): void {\n    if ((camera && camera instanceof PerspectiveCamera)) {\n      this.ray.origin.setFromMatrixPosition(camera.matrixWorld);\n      this.ray.direction.set(coords.x, coords.y, 0.5).unproject(camera).sub(this.ray.origin).normalize();\n    } else if ((camera && camera instanceof OrthographicCamera)) {\n      this.ray.origin.set(coords.x, coords.y, (camera.near + camera.far) / (camera.near - camera.far)).unproject(camera); // set origin in plane of camera\n      this.ray.direction.set(0, 0, - 1).transformDirection(camera.matrixWorld);\n    } else {\n      console.error('THREE.Raycaster: Unsupported camera type.');\n    }\n  }\n  intersectObject(object: Object3D, recursive: boolean): Intersect[] {\n    const intersects: Intersect[] = [];\n    intersectObject(object, this, intersects, recursive);\n    intersects.sort(ascSort);\n    return intersects;\n  }\n  intersectObjects(objects: Object3D[], recursive?: boolean): any[] {\n    const intersects: Intersect[] = [];\n    if (Array.isArray(objects) === false) {\n      console.warn('THREE.Raycaster.intersectObjects: objects is not an Array.');\n      return intersects;\n    }\n    for (let i = 0, l = objects.length; i < l; i ++) {\n      intersectObject(objects[i], this, intersects, recursive);\n    }\n    intersects.sort(ascSort);\n    return intersects;\n  }\n}\nfunction ascSort(a: Intersect, b: Intersect): number {\n  return a.distance - b.distance;\n}\nfunction intersectObject(object: Object3D, raycaster: Raycaster, intersects: Intersect[], recursive: boolean): void {\n  if (object.visible === false) return;\n  object.raycast(raycaster, intersects);\n  if (recursive === true) {\n    const children = object.children;\n    for (let i = 0, l = children.length; i < l; i ++) {\n      intersectObject(children[i], raycaster, intersects, true);\n    }\n  }\n}\n","/**\n * @author alteredq / http://alteredqualia.com/\n */\nexport class Clock {\n  autoStart: boolean;\n  startTime: number = 0;\n  oldTime: number = 0;\n  elapsedTime: number = 0;\n  running: boolean = false;\n  constructor(autoStart: boolean = true) {\n    this.autoStart = autoStart;\n  }\n  start(): void {\n    this.startTime = (performance || Date).now();\n    this.oldTime = this.startTime;\n    this.elapsedTime = 0;\n    this.running = true;\n  }\n  stop(): void {\n    this.getElapsedTime();\n    this.running = false;\n  }\n  getElapsedTime(): number {\n    this.getDelta();\n    return this.elapsedTime;\n  }\n  getDelta(): number {\n    let diff: number = 0;\n    if (this.autoStart && ! this.running) {\n      this.start();\n    }\n    if (this.running) {\n      const newTime: number = (performance || Date).now();\n      diff = (newTime - this.oldTime) / 1000;\n      this.oldTime = newTime;\n      this.elapsedTime += diff;\n    }\n    return diff;\n  }\n}\n","import { Vector3 } from \"./Vector3\";\n/**\n * Spline from Tween.js, slightly optimized (and trashed)\n * http://sole.github.com/tween.js/examples/05_spline.html\n *\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\nexport class Spline {\n  points: any[];\n  constructor(points: any[]) {\n    this.points = points;\n  }\n  initFromArray(a: any[]): void {\n    this.points = [];\n    for (let i = 0; i < a.length; i ++) {\n      this.points[i] = { x: a[i][0], y: a[i][1], z: a[i][2] };\n    }\n  }\n  getPoint(k: number): any {\n    const c = [], v3 = { x: 0, y: 0, z: 0 };\n    let point, intPoint, weight, w2, w3,\n    pa, pb, pc, pd;\n    point = (this.points.length - 1) * k;\n    intPoint = Math.floor(point);\n    weight = point - intPoint;\n    c[0] = intPoint === 0 ? intPoint : intPoint - 1;\n    c[1] = intPoint;\n    c[2] = intPoint  > this.points.length - 2 ? this.points.length - 1 : intPoint + 1;\n    c[3] = intPoint  > this.points.length - 3 ? this.points.length - 1 : intPoint + 2;\n    pa = this.points[c[0]];\n    pb = this.points[c[1]];\n    pc = this.points[c[2]];\n    pd = this.points[c[3]];\n    w2 = weight * weight;\n    w3 = weight * w2;\n    v3.x = Spline.interpolate(pa.x, pb.x, pc.x, pd.x, weight, w2, w3);\n    v3.y = Spline.interpolate(pa.y, pb.y, pc.y, pd.y, weight, w2, w3);\n    v3.z = Spline.interpolate(pa.z, pb.z, pc.z, pd.z, weight, w2, w3);\n    return v3;\n  }\n  getControlPointsArray(): any[] {\n    const l = this.points.length,\n      coords = [];\n    for (let i = 0; i < l; i ++) {\n      const p = this.points[i];\n      coords[i] = [ p.x, p.y, p.z ];\n    }\n    return coords;\n  }\n  // approximate length by summing linear segments\n  getLength(nSubDivisions: number = 100): any {\n    let oldIntPoint = 0;\n    const oldPosition = new Vector3();\n    const tmpVec = new Vector3();\n    const chunkLengths = [];\n    let totalLength = 0;\n    // first point has 0 length\n    chunkLengths[0] = 0;\n    const nSamples = this.points.length * nSubDivisions;\n    oldPosition.copy(this.points[0]);\n    for (let i = 1; i < nSamples; i ++) {\n      const index = i / nSamples;\n      const position = this.getPoint(index);\n      tmpVec.copy(position);\n      totalLength += tmpVec.distanceTo(oldPosition);\n      oldPosition.copy(position);\n      const point = (this.points.length - 1) * index;\n      const intPoint = Math.floor(point);\n      if (intPoint !== oldIntPoint) {\n        chunkLengths[intPoint] = totalLength;\n        oldIntPoint = intPoint;\n      }\n    }\n    // last point ends with total length\n    chunkLengths[chunkLengths.length] = totalLength;\n    return { chunks: chunkLengths, total: totalLength };\n  }\n  reparametrizeByArcLength(samplingCoef: number): void {\n    const newpoints = [];\n    const tmpVec = new Vector3();\n    const sl = this.getLength();\n    newpoints.push(tmpVec.copy(this.points[0]).clone());\n    for (let i = 1; i < this.points.length; i ++) {\n      //tmpVec.copy(this.points[i - 1]);\n      //linearDistance = tmpVec.distanceTo(this.points[i]);\n      const realDistance = sl.chunks[i] - sl.chunks[i - 1];\n      const sampling = Math.ceil(samplingCoef * realDistance / sl.total);\n      const indexCurrent = (i - 1) / (this.points.length - 1);\n      const indexNext = i / (this.points.length - 1);\n      for (let j = 1; j < sampling - 1; j ++) {\n        const index = indexCurrent + j * (1 / sampling) * (indexNext - indexCurrent);\n        const position = this.getPoint(index);\n        newpoints.push(tmpVec.copy(position).clone());\n      }\n      newpoints.push(tmpVec.copy(this.points[i]).clone());\n    }\n    this.points = newpoints;\n  }\n  // Catmull-Rom\n  static interpolate(p0: number, p1: number, p2: number, p3: number, t: number, t2: number, t3: number): number {\n    const v0 = (p2 - p0) * 0.5;\n    const v1 = (p3 - p1) * 0.5;\n    return (2 * (p1 - p2) + v0 + v1) * t3 + (- 3 * (p1 - p2) - 2 * v0 - v1) * t2 + v0 * t + p1;\n  }\n}\n","import { _Math } from \"./Math\";\nimport { Vector3 } from \"./Vector3\";\n/**\n * @author bhouston / http://clara.io\n * @author WestLangley / http://github.com/WestLangley\n *\n * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n *\n * The poles (phi) are at the positive and negative y axis.\n * The equator starts at positive z.\n */\nexport class Spherical {\n  radius: number;\n  phi: number;\n  theta: number;\n  constructor(radius: number = 1.0, phi: number = 0, theta: number = 0) {\n    this.radius = radius;\n    this.phi = phi; // up / down towards top and bottom pole\n    this.theta = theta; // around the equator of the sphere\n  }\n  set(radius: number, phi: number, theta: number): Spherical {\n    this.radius = radius;\n    this.phi = phi;\n    this.theta = theta;\n    return this;\n  }\n  clone(): Spherical {\n    return new (this.constructor as any)().copy(this);\n  }\n  copy(other: Spherical): Spherical {\n    this.radius = other.radius;\n    this.phi = other.phi;\n    this.theta = other.theta;\n    return this;\n  }\n  // restrict phi to be betwee EPS and PI-EPS\n  makeSafe(): Spherical {\n    const EPS = 0.000001;\n    this.phi = Math.max(EPS, Math.min(Math.PI - EPS, this.phi));\n    return this;\n  }\n  setFromVector3(vec3: Vector3): Spherical {\n    this.radius = vec3.length();\n    if (this.radius === 0) {\n      this.theta = 0;\n      this.phi = 0;\n    } else {\n      this.theta = Math.atan2(vec3.x, vec3.z); // equator angle around y-up axis\n      this.phi = Math.acos(_Math.clamp(vec3.y / this.radius, - 1, 1)); // polar angle\n    }\n    return this;\n  }\n}\n","import { Mesh } from \"../../objects/Mesh\";\r\nimport { _Math } from \"../../math/Math\";\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\nexport class MorphBlendMesh extends Mesh {\r\n  firstAnimation: any;\r\n  animationsMap: any;\r\n  animationsList: any;\r\n  constructor(geometry: any, material: any) {\r\n    super(geometry, material);\r\n    this.animationsMap = {};\r\n    this.animationsList = [];\r\n    // prepare default animation\r\n    // (all frames played together in 1 second)\r\n    let numFrames = this.geometry.morphTargets.length;\r\n    let name = \"__default\";\r\n    let startFrame = 0;\r\n    let endFrame = numFrames - 1;\r\n    let fps = numFrames / 1;\r\n    this.createAnimation(name, startFrame, endFrame, fps);\r\n    this.setAnimationWeight(name, 1);\r\n  }\r\n  createAnimation(name: string, start: number, end: number, fps: number): any {\r\n    let animation = {\r\n      start: start,\r\n      end: end,\r\n      length: end - start + 1,\r\n      fps: fps,\r\n      duration: (end - start) / fps,\r\n      lastFrame: 0,\r\n      currentFrame: 0,\r\n      active: false,\r\n      time: 0,\r\n      direction: 1,\r\n      weight: 1,\r\n      directionBackwards: false,\r\n      mirroredLoop: false\r\n    };\r\n    this.animationsMap[name] = animation;\r\n    this.animationsList.push(animation);\r\n  };\r\n  autoCreateAnimations(fps: number) {\r\n    let pattern = /([a-z]+)_?(\\d+)/i;\r\n    let firstAnimation, frameRanges = {};\r\n    let geometry = this.geometry;\r\n    for (let i = 0, il = geometry.morphTargets.length; i < il; i ++) {\r\n      let morph = geometry.morphTargets[i];\r\n      let chunks = morph.name.match(pattern);\r\n      if (chunks && chunks.length > 1) {\r\n        let name = chunks[1];\r\n        if (! frameRanges[name]) frameRanges[name] = { start: Infinity, end: - Infinity };\r\n        let range = frameRanges[name];\r\n        if (i < range.start) range.start = i;\r\n        if (i > range.end) range.end = i;\r\n        if (! firstAnimation) firstAnimation = name;\r\n      }\r\n    }\r\n    for (let name in frameRanges) {\r\n      let range = frameRanges[name];\r\n      this.createAnimation(name, range.start, range.end, fps);\r\n    }\r\n    this.firstAnimation = firstAnimation;\r\n  }\r\n  setAnimationDirectionForward(name: string) {\r\n    let animation = this.animationsMap[name];\r\n    if (animation) {\r\n      animation.direction = 1;\r\n      animation.directionBackwards = false;\r\n    }\r\n  }\r\n  setAnimationDirectionBackward(name: string) {\r\n    let animation = this.animationsMap[name];\r\n    if (animation) {\r\n      animation.direction = - 1;\r\n      animation.directionBackwards = true;\r\n    }\r\n  }\r\n  setAnimationFPS(name: string, fps: number) {\r\n    let animation = this.animationsMap[name];\r\n    if (animation) {\r\n      animation.fps = fps;\r\n      animation.duration = (animation.end - animation.start) / animation.fps;\r\n    }\r\n  }\r\n  setAnimationDuration(name: string, duration: number) {\r\n    let animation = this.animationsMap[name];\r\n    if (animation) {\r\n      animation.duration = duration;\r\n      animation.fps = (animation.end - animation.start) / animation.duration;\r\n    }\r\n  }\r\n  setAnimationWeight(name: string, weight: number) {\r\n    let animation = this.animationsMap[name];\r\n    if (animation) {\r\n      animation.weight = weight;\r\n    }\r\n  }\r\n  setAnimationTime(name: string, time: number) {\r\n    let animation = this.animationsMap[name];\r\n    if (animation) {\r\n      animation.time = time;\r\n    }\r\n  };\r\n  getAnimationTime(name: string): number {\r\n    let time = 0;\r\n    let animation = this.animationsMap[name];\r\n    if (animation) {\r\n      time = animation.time;\r\n    }\r\n    return time;\r\n  }\r\n  getAnimationDuration(name: string): number {\r\n    let duration = - 1;\r\n    let animation = this.animationsMap[name];\r\n    if (animation) {\r\n      duration = animation.duration;\r\n    }\r\n    return duration;\r\n  }\r\n  playAnimation(name: string): void {\r\n    let animation = this.animationsMap[name];\r\n    if (animation) {\r\n      animation.time = 0;\r\n      animation.active = true;\r\n    } else {\r\n      console.warn(\"THREE.MorphBlendMesh: animation[\" + name + \"] undefined in .playAnimation()\");\r\n    }\r\n  }\r\n  stopAnimation(name: string): void {\r\n    let animation = this.animationsMap[name];\r\n    if (animation) {\r\n      animation.active = false;\r\n    }\r\n  }\r\n  update(delta: number): void {\r\n    for (let i = 0, il = this.animationsList.length; i < il; i ++) {\r\n      let animation = this.animationsList[i];\r\n      if (! animation.active) continue;\r\n      let frameTime = animation.duration / animation.length;\r\n      animation.time += animation.direction * delta;\r\n      if (animation.mirroredLoop) {\r\n        if (animation.time > animation.duration || animation.time < 0) {\r\n          animation.direction *= - 1;\r\n          if (animation.time > animation.duration) {\r\n            animation.time = animation.duration;\r\n            animation.directionBackwards = true;\r\n          }\r\n          if (animation.time < 0) {\r\n            animation.time = 0;\r\n            animation.directionBackwards = false;\r\n          }\r\n        }\r\n      } else {\r\n        animation.time = animation.time % animation.duration;\r\n        if (animation.time < 0) animation.time += animation.duration;\r\n      }\r\n      let keyframe = animation.start + _Math.clamp(Math.floor(animation.time / frameTime), 0, animation.length - 1);\r\n      let weight = animation.weight;\r\n      if (keyframe !== animation.currentFrame) {\r\n        this.morphTargetInfluences[animation.lastFrame] = 0;\r\n        this.morphTargetInfluences[animation.currentFrame] = 1 * weight;\r\n        this.morphTargetInfluences[keyframe] = 0;\r\n        animation.lastFrame = animation.currentFrame;\r\n        animation.currentFrame = keyframe;\r\n      }\r\n      let mix = (animation.time % frameTime) / frameTime;\r\n      if (animation.directionBackwards) mix = 1 - mix;\r\n      if (animation.currentFrame !== animation.lastFrame) {\r\n        this.morphTargetInfluences[animation.currentFrame] = mix * weight;\r\n        this.morphTargetInfluences[animation.lastFrame] = (1 - mix) * weight;\r\n      } else {\r\n        this.morphTargetInfluences[animation.currentFrame] = weight;\r\n      }\r\n    }\r\n  };\r\n}\r\n","import { Matrix3 } from \"../../math/Matrix3\";\nimport { Vector3 } from \"../../math/Vector3\";\nimport { LineSegments } from \"../../objects/LineSegments\";\nimport { LineBasicMaterial } from \"../../materials/LineBasicMaterial\";\nimport { Float32Attribute } from \"../../core/BufferAttribute\";\nimport { Geometry } from \"../../core/Geometry\";\nimport { BufferGeometry } from \"../../core/BufferGeometry\";\nimport { Object3D } from \"../../core/Object3D\";\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n*/\nexport class VertexNormalsHelper extends LineSegments {\n  object: Object3D;\n  size: number;\n  constructor(object: Object3D, size = 1, color = 0xff0000, linewidth = 1) {\n    ///this.object = object;\n    ///this.size = size;\n    //\n    let nNormals = 0;\n    let objGeometry = object.geometry;\n    if ((objGeometry && objGeometry instanceof Geometry)) {\n      nNormals = objGeometry.faces.length * 3;\n    } else if ((objGeometry && objGeometry instanceof BufferGeometry)) {\n      nNormals = objGeometry.attributes.normal.count;\n    }\n    //\n    let geometry = new BufferGeometry();\n    let positions = Float32Attribute(nNormals * 2 * 3, 3);\n    geometry.addAttribute('position', positions);\n    super(geometry, new LineBasicMaterial({ color: color, linewidth: linewidth }));\n    //\n    this.object = object;\n    this.size = size;\n    this.matrixAutoUpdate = false;\n    this.update();\n  }\n  update() {\n    let v1 = new Vector3();\n    let v2 = new Vector3();\n    let normalMatrix = new Matrix3();\n    //return function update() {\n      let keys = ['a', 'b', 'c'];\n      this.object.updateMatrixWorld(true);\n      normalMatrix.getNormalMatrix(this.object.matrixWorld);\n      let matrixWorld = this.object.matrixWorld;\n      let position = (this.geometry as BufferGeometry).attributes.position;\n      //\n      let objGeometry = this.object.geometry;\n      if ((objGeometry && objGeometry instanceof Geometry)) {\n        let vertices = objGeometry.vertices;\n        let faces = objGeometry.faces;\n        let idx = 0;\n        for (let i = 0, l = faces.length; i < l; i ++) {\n          let face = faces[i];\n          for (let j = 0, jl = face.vertexNormals.length; j < jl; j ++) {\n            let vertex = vertices[face[keys[j]]];\n            let normal = face.vertexNormals[j];\n            v1.copy(vertex).applyMatrix4(matrixWorld);\n            v2.copy(normal).applyMatrix3(normalMatrix).normalize().multiplyScalar(this.size).add(v1);\n            position.setXYZ(idx, v1.x, v1.y, v1.z);\n            idx = idx + 1;\n            position.setXYZ(idx, v2.x, v2.y, v2.z);\n            idx = idx + 1;\n          }\n        }\n      } else if ((objGeometry && objGeometry instanceof BufferGeometry)) {\n        let objPos = objGeometry.attributes.position;\n        let objNorm = objGeometry.attributes.normal;\n        let idx = 0;\n        // for simplicity, ignore index and drawcalls, and render every normal\n        for (let j = 0, jl = objPos.count; j < jl; j ++) {\n          v1.set(objPos.getX(j), objPos.getY(j), objPos.getZ(j)).applyMatrix4(matrixWorld);\n          v2.set(objNorm.getX(j), objNorm.getY(j), objNorm.getZ(j));\n          v2.applyMatrix3(normalMatrix).normalize().multiplyScalar(this.size).add(v1);\n          position.setXYZ(idx, v1.x, v1.y, v1.z);\n          idx = idx + 1;\n          position.setXYZ(idx, v2.x, v2.y, v2.z);\n          idx = idx + 1;\n        }\n      }\n      position.needsUpdate = true;\n      return this;\n    //};\n  }\n}\n","import { Vector3 } from \"../../math/Vector3\";\nimport { Object3D } from \"../../core/Object3D\";\nimport { LineSegments } from \"../../objects/LineSegments\";\nimport { LineBasicMaterial } from \"../../materials/LineBasicMaterial\";\nimport { Float32Attribute } from \"../../core/BufferAttribute\";\nimport { BufferGeometry } from \"../../core/BufferGeometry\";\nimport { SpotLight } from \"../../lights/SpotLight\";\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n*/\nexport class SpotLightHelper extends Object3D {\n  light: SpotLight;\n  cone: LineSegments;\n  constructor(light: SpotLight) {\n    super();\n    this.light = light;\n    this.light.updateMatrixWorld();\n    this.matrix = light.matrixWorld;\n    this.matrixAutoUpdate = false;\n    let geometry = new BufferGeometry();\n    let positions = [\n      0, 0, 0,   0,   0,   1,\n      0, 0, 0,   1,   0,   1,\n      0, 0, 0, - 1,   0,   1,\n      0, 0, 0,   0,   1,   1,\n      0, 0, 0,   0, - 1,   1\n    ];\n    for (let i = 0, j = 1, l = 32; i < l; i ++, j ++) {\n      let p1 = (i / l) * Math.PI * 2;\n      let p2 = (j / l) * Math.PI * 2;\n      positions.push(\n        Math.cos(p1), Math.sin(p1), 1,\n        Math.cos(p2), Math.sin(p2), 1\n      );\n    }\n    geometry.addAttribute('position', Float32Attribute(positions, 3));\n    let material = new LineBasicMaterial({ fog: false });\n    this.cone = new LineSegments(geometry, material);\n    this.add(this.cone);\n    this.update();\n  }\n  dispose() {\n    this.cone.geometry.dispose();\n    this.cone.material.dispose();\n  }\n  update() {\n    let vector = new Vector3();\n    let vector2 = new Vector3();\n    //return function update() {\n      let coneLength = this.light.distance ? this.light.distance : 1000;\n      let coneWidth = coneLength * Math.tan(this.light.angle);\n      this.cone.scale.set(coneWidth, coneWidth, coneLength);\n      vector.setFromMatrixPosition(this.light.matrixWorld);\n      vector2.setFromMatrixPosition(this.light.target.matrixWorld);\n      this.cone.lookAt(vector2.sub(vector));\n      this.cone.material.color.copy(this.light.color).multiplyScalar(this.light.intensity);\n    //};\n  }\n}\n","import { LineSegments } from \"../../objects/LineSegments\";\nimport { Matrix4 } from \"../../math/Matrix4\";\nimport { ColorsMode } from \"../../constants\";\nimport { LineBasicMaterial } from \"../../materials/LineBasicMaterial\";\nimport { Color } from \"../../math/Color\";\nimport { Vector3 } from \"../../math/Vector3\";\nimport { Geometry } from \"../../core/Geometry\";\nimport { BufferGeometry } from \"../../core/BufferGeometry\";\nimport { Object3D } from \"../../core/Object3D\";\nimport { Bone } from \"../../objects/Bone\";\n/**\n * @author Sean Griffin / http://twitter.com/sgrif\n * @author Michael Guerrero / http://realitymeltdown.com\n * @author mrdoob / http://mrdoob.com/\n * @author ikerr / http://verold.com\n */\nexport class SkeletonHelper extends LineSegments {\n  bones: Bone[];\n  root: Object3D;\n  constructor(object: Object3D) {\n    const bones: Bone[] = SkeletonHelper.getBoneList(object);\n    const geometry: Geometry = new Geometry();\n    for (let i = 0; i < bones.length; i ++) {\n      const bone: Bone = bones[i];\n      if ((bone.parent && bone.parent instanceof Bone)) {\n        geometry.vertices.push(new Vector3());\n        geometry.vertices.push(new Vector3());\n        geometry.colors.push(new Color(0, 0, 1));\n        geometry.colors.push(new Color(0, 1, 0));\n      }\n    }\n    geometry.dynamic = true;\n    const material = new LineBasicMaterial({ vertexColors: ColorsMode.Vertex, depthTest: false, depthWrite: false, transparent: true });\n    super(geometry, material);\n    this.bones = bones;\n    this.root = object;\n    this.matrix = object.matrixWorld;\n    this.matrixAutoUpdate = false;\n    this.update();\n  }\n  static getBoneList(object: Object3D): Bone[] {\n    const boneList: Bone[] = [];\n    if ((object && object instanceof Bone)) {\n      boneList.push(object);\n    }\n    for (let i = 0; i < object.children.length; i ++) {\n      boneList.push.apply(boneList, SkeletonHelper.getBoneList(object.children[i]));\n    }\n    return boneList;\n  }\n  getBonesList(object: Object3D): Bone[] {\n    return SkeletonHelper.getBoneList(object);\n  }\n  update(): void {\n    const geometry: Geometry | BufferGeometry = this.geometry;\n    if (geometry instanceof Geometry) {\n      const matrixWorldInv = new Matrix4().getInverse(this.root.matrixWorld);\n      const boneMatrix = new Matrix4();\n      let j = 0;\n      for (let i = 0; i < this.bones.length; i ++) {\n        const bone: Bone = this.bones[i];\n        if ((bone.parent && bone.parent instanceof Bone)) {\n          boneMatrix.multiplyMatrices(matrixWorldInv, bone.matrixWorld);\n          geometry.vertices[j].setFromMatrixPosition(boneMatrix);\n          boneMatrix.multiplyMatrices(matrixWorldInv, bone.parent.matrixWorld);\n          geometry.vertices[j + 1].setFromMatrixPosition(boneMatrix);\n          j += 2;\n        }\n      }\n      geometry.verticesNeedUpdate = true;\n      geometry.computeBoundingSphere();\n    }\n  }\n}\n","import { Mesh } from \"../../objects/Mesh\";\nimport { MeshBasicMaterial } from \"../../materials/MeshBasicMaterial\";\nimport { SphereBufferGeometry } from \"../../geometries/SphereBufferGeometry\";\nimport { PointLight } from \"../../lights/PointLight\";\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\nexport class PointLightHelper extends Mesh {\n  light: PointLight;\n  constructor(light: PointLight, sphereSize: number) {\n    light.updateMatrixWorld();\n    let geometry = new SphereBufferGeometry(sphereSize, 4, 2);\n    let material = new MeshBasicMaterial({ wireframe: true, fog: false });\n    material.color.copy(light.color).multiplyScalar(light.intensity);\n    super(geometry, material);\n    this.light = light;\n    this.matrix = this.light.matrixWorld;\n    this.matrixAutoUpdate = false;\n    /*\n    let distanceGeometry = new THREE.IcosahedronGeometry(1, 2);\n    let distanceMaterial = new THREE.MeshBasicMaterial({ color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true });\n    this.lightSphere = new THREE.Mesh(bulbGeometry, bulbMaterial);\n    this.lightDistance = new THREE.Mesh(distanceGeometry, distanceMaterial);\n    let d = light.distance;\n    if (d === 0.0) {\n      this.lightDistance.visible = false;\n    } else {\n      this.lightDistance.scale.set(d, d, d);\n    }\n    this.add(this.lightDistance);\n    */\n  }\n  dispose(): void {\n    this.geometry.dispose();\n    this.material.dispose();\n  }\n  update(): void {\n    this.material.color.copy(this.light.color).multiplyScalar(this.light.intensity);\n    /*\n    let d = this.light.distance;\n    if (d === 0.0) {\n      this.lightDistance.visible = false;\n    } else {\n      this.lightDistance.visible = true;\n      this.lightDistance.scale.set(d, d, d);\n    }\n    */\n  }\n}\n","import { Vector3 } from \"../../math/Vector3\";\nimport { Object3D } from \"../../core/Object3D\";\nimport { Mesh } from \"../../objects/Mesh\";\nimport { ColorsMode } from \"../../constants\";\nimport { MeshBasicMaterial } from \"../../materials/MeshBasicMaterial\";\nimport { SphereGeometry } from \"../../geometries/SphereGeometry\";\nimport { Color } from \"../../math/Color\";\nimport { HemisphereLight } from \"../../lights/HemisphereLight\";\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\nexport class HemisphereLightHelper extends Object3D {\n  light: HemisphereLight;\n  colors: Color[];\n  lightSphere: Mesh;\n  constructor(light: any, sphereSize: number) {\n    super();\n    this.light = light;\n    this.light.updateMatrixWorld();\n    this.matrix = light.matrixWorld;\n    this.matrixAutoUpdate = false;\n    this.colors = [ new Color(), new Color() ];\n    let geometry = new SphereGeometry(sphereSize, 4, 2);\n    geometry.rotateX(- Math.PI / 2);\n    for (let i = 0, il = 8; i < il; i ++) {\n      geometry.faces[i].color = this.colors[i < 4 ? 0 : 1];\n    }\n    let material = new MeshBasicMaterial({ vertexColors: ColorsMode.Face, wireframe: true });\n    this.lightSphere = new Mesh(geometry, material);\n    this.add(this.lightSphere);\n    this.update();\n  }\n  dispose() {\n    this.lightSphere.geometry.dispose();\n    this.lightSphere.material.dispose();\n  }\n  update() {\n    let vector = new Vector3();\n    //return function update() {\n      this.colors[0].copy(this.light.color).multiplyScalar(this.light.intensity);\n      this.colors[1].copy(this.light.groundColor).multiplyScalar(this.light.intensity);\n      this.lightSphere.lookAt(vector.setFromMatrixPosition(this.light.matrixWorld).negate());\n      (this.lightSphere.geometry as SphereGeometry).colorsNeedUpdate = true;\n    //};\n  }\n}\n","import { LineSegments } from \"../../objects/LineSegments\";\nimport { ColorsMode } from \"../../constants\";\nimport { LineBasicMaterial } from \"../../materials/LineBasicMaterial\";\nimport { Float32Attribute } from \"../../core/BufferAttribute\";\nimport { BufferGeometry } from \"../../core/BufferGeometry\";\nimport { Color } from \"../../math/Color\";\n/**\n * @author mrdoob / http://mrdoob.com/\n */\nexport class GridHelper extends LineSegments {\n  constructor(size: number, divisions = 1, color1 = 0x444444, color2 = 0x888888) {\n    const _color1 = new Color(color1);\n    const _color2 = new Color(color2);\n    let center = divisions / 2;\n    let step = (size * 2) / divisions;\n    let vertices = [], colors: number[] = [];\n    for (let i = 0, j = 0, k = - size; i <= divisions; i ++, k += step) {\n      vertices.push(- size, 0, k, size, 0, k);\n      vertices.push(k, 0, - size, k, 0, size);\n      let color = i === center ? _color1 : _color2;\n      color.toArray(colors, j); j += 3;\n      color.toArray(colors, j); j += 3;\n      color.toArray(colors, j); j += 3;\n      color.toArray(colors, j); j += 3;\n    }\n    let geometry = new BufferGeometry();\n    geometry.addAttribute('position', Float32Attribute(vertices, 3));\n    geometry.addAttribute('color', Float32Attribute(colors, 3));\n    let material = new LineBasicMaterial({ vertexColors: ColorsMode.Vertex });\n    super(geometry, material);\n  }\n  setColors() {\n    console.error('THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.');\n  }\n}\n","import { Matrix3 } from \"../../math/Matrix3\";\nimport { Vector3 } from \"../../math/Vector3\";\nimport { LineSegments } from \"../../objects/LineSegments\";\nimport { LineBasicMaterial } from \"../../materials/LineBasicMaterial\";\nimport { Float32Attribute } from \"../../core/BufferAttribute\";\nimport { Geometry } from \"../../core/Geometry\";\nimport { BufferGeometry } from \"../../core/BufferGeometry\";\nimport { Object3D } from \"../../core/Object3D\";\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n*/\nexport class FaceNormalsHelper extends LineSegments {\n  object: Object3D;\n  size: number;\n  constructor(object: Object3D, size: number = 1, color: number = 0xffff00, linewidth: number = 1) {\n    // FaceNormalsHelper only supports THREE.Geometry\n    ///this.object = object;\n    ///this.size = (size !== undefined) ? size : 1;\n    //\n    let nNormals = 0;\n    let objGeometry = object.geometry;\n    if ((objGeometry && objGeometry instanceof Geometry)) {\n      nNormals = objGeometry.faces.length;\n    } else {\n      console.warn('THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.');\n    }\n    //\n    let geometry = new BufferGeometry();\n    let positions = Float32Attribute(nNormals * 2 * 3, 3);\n    geometry.addAttribute('position', positions);\n    super(geometry, new LineBasicMaterial({ color: color, linewidth: linewidth }));\n    //\n    this.object = object;\n    this.size = size;\n    this.matrixAutoUpdate = false;\n    this.update();\n  }\n  update() {\n    let v1 = new Vector3();\n    let v2 = new Vector3();\n    let normalMatrix = new Matrix3();\n    //return function update() {\n      this.object.updateMatrixWorld(true);\n      normalMatrix.getNormalMatrix(this.object.matrixWorld);\n      let matrixWorld = this.object.matrixWorld;\n      let position = (this.geometry as BufferGeometry).attributes.position;\n      //\n      let objGeometry = this.object.geometry;\n      let vertices = (objGeometry as Geometry).vertices;\n      let faces = (objGeometry as Geometry).faces;\n      let idx = 0;\n      for (let i = 0, l = faces.length; i < l; i ++) {\n        let face = faces[i];\n        let normal = face.normal;\n        v1.copy(vertices[face.a])\n          .add(vertices[face.b])\n          .add(vertices[face.c])\n          .divideScalar(3)\n          .applyMatrix4(matrixWorld);\n        v2.copy(normal).applyMatrix3(normalMatrix).normalize().multiplyScalar(this.size).add(v1);\n        position.setXYZ(idx, v1.x, v1.y, v1.z);\n        idx = idx + 1;\n        position.setXYZ(idx, v2.x, v2.y, v2.z);\n        idx = idx + 1;\n      }\n      position.needsUpdate = true;\n      return this;\n    //};\n  }\n}\n","import { Vector3 } from \"../../math/Vector3\";\nimport { Object3D } from \"../../core/Object3D\";\nimport { Line } from \"../../objects/Line\";\nimport { Float32Attribute } from \"../../core/BufferAttribute\";\nimport { BufferGeometry } from \"../../core/BufferGeometry\";\nimport { LineBasicMaterial } from \"../../materials/LineBasicMaterial\";\nimport { Light } from \"../../lights/Light\";\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n */\nexport class DirectionalLightHelper extends Object3D {\n  light: Light;\n  constructor(light: Light, size: number = 1) {\n    super();\n    this.light = light;\n    this.light.updateMatrixWorld();\n    this.matrix = light.matrixWorld;\n    this.matrixAutoUpdate = false;\n    let geometry = new BufferGeometry();\n    geometry.addAttribute('position', Float32Attribute([\n      - size,   size, 0,\n        size,   size, 0,\n        size, - size, 0,\n      - size, - size, 0,\n      - size,   size, 0\n    ], 3));\n    let material = new LineBasicMaterial({ fog: false });\n    this.add(new Line(geometry, material));\n    geometry = new BufferGeometry();\n    geometry.addAttribute('position', Float32Attribute([0, 0, 0, 0, 0, 1], 3));\n    this.add(new Line(geometry, material));\n    this.update();\n  }\n  dispose(): void {\n    let lightPlane = this.children[0];\n    let targetLine = this.children[1];\n    lightPlane.geometry.dispose();\n    lightPlane.material.dispose();\n    targetLine.geometry.dispose();\n    targetLine.material.dispose();\n  }\n  update(): void {\n    let v1 = new Vector3();\n    let v2 = new Vector3();\n    let v3 = new Vector3();\n    //return function update() {\n      v1.setFromMatrixPosition(this.light.matrixWorld);\n      v2.setFromMatrixPosition(this.light.target.matrixWorld);\n      v3.subVectors(v2, v1);\n      let lightPlane = this.children[0];\n      let targetLine = this.children[1];\n      lightPlane.lookAt(v3);\n      lightPlane.material.color.copy(this.light.color).multiplyScalar(this.light.intensity);\n      targetLine.lookAt(v3);\n      targetLine.scale.z = v3.length();\n    //};\n  };\n}\n","import { Camera } from \"../../cameras/Camera\";\nimport { Vector3 } from \"../../math/Vector3\";\nimport { LineSegments } from \"../../objects/LineSegments\";\nimport { Color } from \"../../math/Color\";\nimport { ColorsMode } from \"../../constants\";\nimport { LineBasicMaterial } from \"../../materials/LineBasicMaterial\";\nimport { Geometry } from \"../../core/Geometry\";\n/**\n * @author alteredq / http://alteredqualia.com/\n *\n *  - shows frustum, line of sight and up of the camera\n *  - suitable for fast updates\n *   - based on frustum visualization in lightgl.js shadowmap example\n *    http://evanw.github.com/lightgl.js/tests/shadowmap.html\n */\nexport class CameraHelper extends LineSegments {\n  camera: Camera;\n  pointMap: any;\n  constructor(camera: Camera) {\n    let geometry = new Geometry();\n    let material = new LineBasicMaterial({ color: 0xffffff, vertexColors: ColorsMode.Face });\n    let pointMap = {};\n    // colors\n    let hexFrustum = 0xffaa00;\n    let hexCone = 0xff0000;\n    let hexUp = 0x00aaff;\n    let hexTarget = 0xffffff;\n    let hexCross = 0x333333;\n    // near\n    addLine(\"n1\", \"n2\", hexFrustum);\n    addLine(\"n2\", \"n4\", hexFrustum);\n    addLine(\"n4\", \"n3\", hexFrustum);\n    addLine(\"n3\", \"n1\", hexFrustum);\n    // far\n    addLine(\"f1\", \"f2\", hexFrustum);\n    addLine(\"f2\", \"f4\", hexFrustum);\n    addLine(\"f4\", \"f3\", hexFrustum);\n    addLine(\"f3\", \"f1\", hexFrustum);\n    // sides\n    addLine(\"n1\", \"f1\", hexFrustum);\n    addLine(\"n2\", \"f2\", hexFrustum);\n    addLine(\"n3\", \"f3\", hexFrustum);\n    addLine(\"n4\", \"f4\", hexFrustum);\n    // cone\n    addLine(\"p\", \"n1\", hexCone);\n    addLine(\"p\", \"n2\", hexCone);\n    addLine(\"p\", \"n3\", hexCone);\n    addLine(\"p\", \"n4\", hexCone);\n    // up\n    addLine(\"u1\", \"u2\", hexUp);\n    addLine(\"u2\", \"u3\", hexUp);\n    addLine(\"u3\", \"u1\", hexUp);\n    // target\n    addLine(\"c\", \"t\", hexTarget);\n    addLine(\"p\", \"c\", hexCross);\n    // cross\n    addLine(\"cn1\", \"cn2\", hexCross);\n    addLine(\"cn3\", \"cn4\", hexCross);\n    addLine(\"cf1\", \"cf2\", hexCross);\n    addLine(\"cf3\", \"cf4\", hexCross);\n    function addLine(a: string, b: string, hex: number): void {\n      addPoint(a, hex);\n      addPoint(b, hex);\n    }\n    function addPoint(id: string, hex: number): void {\n      geometry.vertices.push(new Vector3());\n      geometry.colors.push(new Color(hex));\n      if (pointMap[id] === undefined) {\n        pointMap[id] = [];\n      }\n      pointMap[id].push(geometry.vertices.length - 1);\n    }\n    super(geometry, material);\n    this.camera = camera;\n    this.camera.updateProjectionMatrix();\n    this.matrix = camera.matrixWorld;\n    this.matrixAutoUpdate = false;\n    this.pointMap = pointMap;\n    this.update();\n  }\n  update(): void {\n    let geometry: any, pointMap: any;\n    let vector = new Vector3();\n    let camera = new Camera();\n    function setPoint(point: string, x: number, y: number, z: number): void {\n      vector.set(x, y, z).unproject(camera);\n      let points = pointMap[point];\n      if (points !== undefined) {\n        for (let i = 0, il = points.length; i < il; i ++) {\n          geometry.vertices[points[i]].copy(vector);\n        }\n      }\n    }\n    //return function update() {\n      geometry = this.geometry;\n      pointMap = this.pointMap;\n      let w = 1, h = 1;\n      // we need just camera projection matrix\n      // world matrix must be identity\n      camera.projectionMatrix.copy(this.camera.projectionMatrix);\n      // center / target\n      setPoint(\"c\", 0, 0, - 1);\n      setPoint(\"t\", 0, 0,  1);\n      // near\n      setPoint(\"n1\", - w, - h, - 1);\n      setPoint(\"n2\",   w, - h, - 1);\n      setPoint(\"n3\", - w,   h, - 1);\n      setPoint(\"n4\",   w,   h, - 1);\n      // far\n      setPoint(\"f1\", - w, - h, 1);\n      setPoint(\"f2\",   w, - h, 1);\n      setPoint(\"f3\", - w,   h, 1);\n      setPoint(\"f4\",   w,   h, 1);\n      // up\n      setPoint(\"u1\",   w * 0.7, h * 1.1, - 1);\n      setPoint(\"u2\", - w * 0.7, h * 1.1, - 1);\n      setPoint(\"u3\",         0, h * 2,   - 1);\n      // cross\n      setPoint(\"cf1\", - w,   0, 1);\n      setPoint(\"cf2\",   w,   0, 1);\n      setPoint(\"cf3\",   0, - h, 1);\n      setPoint(\"cf4\",   0,   h, 1);\n      setPoint(\"cn1\", - w,   0, - 1);\n      setPoint(\"cn2\",   w,   0, - 1);\n      setPoint(\"cn3\",   0, - h, - 1);\n      setPoint(\"cn4\",   0,   h, - 1);\n      geometry.verticesNeedUpdate = true;\n    //};\n  }\n}\n","import { Mesh } from \"../../objects/Mesh\";\nimport { MeshBasicMaterial } from \"../../materials/MeshBasicMaterial\";\nimport { BoxGeometry } from \"../../geometries/BoxGeometry\";\nimport { Box3 } from \"../../math/Box3\";\nimport { Object3D } from \"../../core/Object3D\";\n/**\n * @author WestLangley / http://github.com/WestLangley\n */\n// a helper to show the world-axis-aligned bounding box for an object\nexport class BoundingBoxHelper extends Mesh {\n  object: Object3D;\n  box: Box3;\n  constructor(object: Object3D, color: number = 0x888888) {\n    super(new BoxGeometry(1, 1, 1), new MeshBasicMaterial({ color: color, wireframe: true }));\n    this.object = object;\n    this.box = new Box3();\n  }\n  update(): void {\n    this.box.setFromObject(this.object);\n    this.box.getSize(this.scale);\n    this.box.getCenter(this.position);\n  }\n}\n","import { Box3 } from \"../../math/Box3\";\nimport { LineSegments } from \"../../objects/LineSegments\";\nimport { LineBasicMaterial } from \"../../materials/LineBasicMaterial\";\nimport { BufferAttribute } from \"../../core/BufferAttribute\";\nimport { BufferGeometry } from \"../../core/BufferGeometry\";\nimport { Object3D } from \"../../core/Object3D\";\n/**\n * @author mrdoob / http://mrdoob.com/\n */\nexport class BoxHelper extends LineSegments {\n  constructor(object: Object3D, color: number = 0xffff00) {\n    const indices = new Uint16Array([0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7]);\n    const positions = new Float32Array(8 * 3);\n    const geometry = new BufferGeometry();\n    geometry.setIndex(new BufferAttribute(indices, 1));\n    geometry.addAttribute('position', new BufferAttribute(positions, 3));\n    super(geometry, new LineBasicMaterial({ color: color }));\n    if (object !== undefined) {\n      this.update(object);\n    }\n  }\n  update(object: Object3D): void {\n    const box = new Box3();\n    //return function update(object) {\n      if ((object && object instanceof Box3)) {\n        box.copy(object);\n      } else {\n        box.setFromObject(object);\n      }\n      if (box.isEmpty()) return;\n      const min = box.min;\n      const max = box.max;\n      /*\n        5____4\n      1/___0/|\n      | 6__|_7\n      2/___3/\n      0: max.x, max.y, max.z\n      1: min.x, max.y, max.z\n      2: min.x, min.y, max.z\n      3: max.x, min.y, max.z\n      4: max.x, max.y, min.z\n      5: min.x, max.y, min.z\n      6: min.x, min.y, min.z\n      7: max.x, min.y, min.z\n      */\n      const position = (this.geometry as BufferGeometry).attributes.position;\n      const array = position.array;\n      array[0] = max.x; array[1] = max.y; array[2] = max.z;\n      array[3] = min.x; array[4] = max.y; array[5] = max.z;\n      array[6] = min.x; array[7] = min.y; array[8] = max.z;\n      array[9] = max.x; array[10] = min.y; array[11] = max.z;\n      array[12] = max.x; array[13] = max.y; array[14] = min.z;\n      array[15] = min.x; array[16] = max.y; array[17] = min.z;\n      array[18] = min.x; array[19] = min.y; array[20] = min.z;\n      array[21] = max.x; array[22] = min.y; array[23] = min.z;\n      position.needsUpdate = true;\n      this.geometry.computeBoundingSphere();\n    //};\n  }\n}\n","/**\n * @author WestLangley / http://github.com/WestLangley\n * @author zz85 / http://github.com/zz85\n * @author bhouston / http://clara.io\n *\n * Creates an arrow for visualizing directions\n *\n * Parameters:\n *  dir - Vector3\n *  origin - Vector3\n *  length - Number\n *  color - color in hex value\n *  headLength - Number\n *  headWidth - Number\n */\nimport { Vector3 } from \"../../math/Vector3\";\nimport { Object3D } from \"../../core/Object3D\";\nimport { CylinderBufferGeometry } from \"../../geometries/CylinderBufferGeometry\";\nimport { Float32Attribute } from \"../../core/BufferAttribute\";\nimport { BufferGeometry } from \"../../core/BufferGeometry\";\nimport { MeshBasicMaterial } from \"../../materials/MeshBasicMaterial\";\nimport { Mesh } from \"../../objects/Mesh\";\nimport { LineBasicMaterial } from \"../../materials/LineBasicMaterial\";\nimport { Line } from \"../../objects/Line\";\nconst lineGeometry = new BufferGeometry();\nlineGeometry.addAttribute('position', Float32Attribute([ 0, 0, 0, 0, 1, 0 ], 3));\nconst coneGeometry = new CylinderBufferGeometry(0, 0.5, 1, 5, 1);\nconeGeometry.translate(0, - 0.5, 0);\nexport class ArrowHelper extends Object3D {\n  line: Line;\n  cone: Mesh;\n  constructor(dir: Vector3, origin: Vector3, length?: number, color?: number, headLength?: number, headWidth?: number) {\n    // dir is assumed to be normalized\n    super();\n    if (color === undefined) color = 0xffff00;\n    if (length === undefined) length = 1;\n    if (headLength === undefined) headLength = 0.2 * length;\n    if (headWidth === undefined) headWidth = 0.2 * headLength;\n    this.position.copy(origin);\n    this.line = new Line(lineGeometry, new LineBasicMaterial({ color: color }));\n    this.line.matrixAutoUpdate = false;\n    this.add(this.line);\n    this.cone = new Mesh(coneGeometry, new MeshBasicMaterial({ color: color }));\n    this.cone.matrixAutoUpdate = false;\n    this.add(this.cone);\n    this.setDirection(dir);\n    this.setLength(length, headLength, headWidth);\n  }\n  setDirection(dir: Vector3): void {\n    const axis = new Vector3();\n    //return function setDirection(dir) {\n      // dir is assumed to be normalized\n      if (dir.y > 0.99999) {\n        this.quaternion.set(0, 0, 0, 1);\n      } else if (dir.y < - 0.99999) {\n        this.quaternion.set(1, 0, 0, 0);\n      } else {\n        axis.set(dir.z, 0, - dir.x).normalize();\n        const radians = Math.acos(dir.y);\n        this.quaternion.setFromAxisAngle(axis, radians);\n      }\n    //};\n  }\n  setLength(length: number, headLength: number, headWidth: number): void {\n    if (headLength === undefined) headLength = 0.2 * length;\n    if (headWidth === undefined) headWidth = 0.2 * headLength;\n    this.line.scale.set(1, Math.max(0, length - headLength), 1);\n    this.line.updateMatrix();\n    this.cone.scale.set(headWidth, headLength, headWidth);\n    this.cone.position.y = length;\n    this.cone.updateMatrix();\n  }\n  setColor(color: number): void {\n    this.line.material.color.copy(color);\n    this.cone.material.color.copy(color);\n  }\n}\n","import { LineSegments } from \"../../objects/LineSegments\";\nimport { ColorsMode } from \"../../constants\";\nimport { LineBasicMaterial } from \"../../materials/LineBasicMaterial\";\nimport { BufferAttribute } from \"../../core/BufferAttribute\";\nimport { BufferGeometry } from \"../../core/BufferGeometry\";\n/**\n * @author sroucheray / http://sroucheray.org/\n * @author mrdoob / http://mrdoob.com/\n */\nexport class AxisHelper extends LineSegments {\n  constructor(size: number = 1) {\n    const vertices = new Float32Array([\n      0, 0, 0,  size, 0, 0,\n      0, 0, 0,  0, size, 0,\n      0, 0, 0,  0, 0, size\n    ]);\n    const colors = new Float32Array([\n      1, 0, 0,  1, 0.6, 0,\n      0, 1, 0,  0.6, 1, 0,\n      0, 0, 1,  0, 0.6, 1\n    ]);\n    const geometry = new BufferGeometry();\n    geometry.addAttribute('position', new BufferAttribute(vertices, 3));\n    geometry.addAttribute('color', new BufferAttribute(colors, 3));\n    const material = new LineBasicMaterial({ vertexColors: ColorsMode.Vertex });\n    super(geometry, material);\n  }\n}\n","import { Vector3 } from \"../../math/Vector3\";\nimport { Curve } from \"../core/Curve\";\n/**\n * @author zz85 https://github.com/zz85\n *\n * Centripetal CatmullRom Curve - which is useful for avoiding\n * cusps and self-intersections in non-uniform catmull rom curves.\n * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n *\n * curve.type accepts centripetal(default), chordal and catmullrom\n * curve.tension is used for catmullrom which defaults to 0.5\n */\nexport class CatmullRomCurve3 extends Curve<Vector3> {\n  type: string;\n  points: Vector3[];\n  closed: boolean = false;\n  tension: number = 0.5;\n  constructor(p: Vector3[] = []) {\n    super();\n    this.points = p;\n    this.closed = false;\n  }\n  getPoint(t: number): Vector3 {\n    const tmp: Vector3 = new Vector3();\n    const px: CubicPoly = new CubicPoly();\n    const py: CubicPoly = new CubicPoly();\n    const pz: CubicPoly = new CubicPoly();\n    const points: Vector3[] = this.points;\n    const l: number = points.length;\n    if (l < 2) console.log('duh, you need at least 2 points');\n    const point: number = (l - (this.closed ? 0 : 1)) * t;\n    let intPoint: number = Math.floor(point);\n    let weight: number = point - intPoint;\n    if (this.closed) {\n      intPoint += intPoint > 0 ? 0 : (Math.floor(Math.abs(intPoint) / points.length) + 1) * points.length;\n    } else if (weight === 0 && intPoint === l - 1) {\n      intPoint = l - 2;\n      weight = 1;\n    }\n    let p0: Vector3, p1: Vector3, p2: Vector3, p3: Vector3; // 4 points\n    if (this.closed || intPoint > 0) {\n      p0 = points[(intPoint - 1) % l];\n    } else {\n      // extrapolate first point\n      tmp.subVectors(points[0], points[1]).add(points[0]);\n      p0 = tmp;\n    }\n    p1 = points[intPoint % l];\n    p2 = points[(intPoint + 1) % l];\n    if (this.closed || intPoint + 2 < l) {\n      p3 = points[(intPoint + 2) % l];\n    } else {\n      // extrapolate last point\n      tmp.subVectors(points[l - 1], points[l - 2]).add(points[l - 1]);\n      p3 = tmp;\n    }\n    if (this.type === undefined || this.type === 'centripetal' || this.type === 'chordal') {\n      // init Centripetal / Chordal Catmull-Rom\n      const pow: number = this.type === 'chordal' ? 0.5 : 0.25;\n      let dt0: number = Math.pow(p0.distanceToSquared(p1), pow);\n      let dt1: number = Math.pow(p1.distanceToSquared(p2), pow);\n      let dt2: number = Math.pow(p2.distanceToSquared(p3), pow);\n      // safety check for repeated points\n      if (dt1 < 1e-4) dt1 = 1.0;\n      if (dt0 < 1e-4) dt0 = dt1;\n      if (dt2 < 1e-4) dt2 = dt1;\n      px.initNonuniformCatmullRom(p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2);\n      py.initNonuniformCatmullRom(p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2);\n      pz.initNonuniformCatmullRom(p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2);\n    } else if (this.type === 'catmullrom') {\n      const tension: number = this.tension;\n      px.initCatmullRom(p0.x, p1.x, p2.x, p3.x, tension);\n      py.initCatmullRom(p0.y, p1.y, p2.y, p3.y, tension);\n      pz.initCatmullRom(p0.z, p1.z, p2.z, p3.z, tension);\n    }\n    const v: Vector3 = new Vector3(\n      px.calc(weight),\n      py.calc(weight),\n      pz.calc(weight)\n    );\n    return v;\n  }\n}\n/*\nBased on an optimized c++ solution in\n - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n - http://ideone.com/NoEbVM\nThis CubicPoly class could be used for reusing some variables and calculations,\nbut for three.js curve use, it could be possible inlined and flatten into a single function call\nwhich can be placed in CurveUtils.\n*/\nclass CubicPoly {\n  c0: number;\n  c1: number;\n  c2: number;\n  c3: number;\n  /*\n   * Compute coefficients for a cubic polynomial\n   *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n   * such that\n   *   p(0) = x0, p(1) = x1\n   *  and\n   *   p'(0) = t0, p'(1) = t1.\n   */\n  init(x0: number, x1: number, t0: number, t1: number): void {\n    this.c0 = x0;\n    this.c1 = t0;\n    this.c2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\n    this.c3 = 2 * x0 - 2 * x1 + t0 + t1;\n  }\n  initNonuniformCatmullRom(x0: number, x1: number, x2: number, x3: number, dt0: number, dt1: number, dt2: number): void {\n    // compute tangents when parameterized in [t1,t2]\n    let t1: number = (x1 - x0) / dt0 - (x2 - x0) / (dt0 + dt1) + (x2 - x1) / dt1;\n    let t2: number = (x2 - x1) / dt1 - (x3 - x1) / (dt1 + dt2) + (x3 - x2) / dt2;\n    // rescale tangents for parametrization in [0,1]\n    t1 *= dt1;\n    t2 *= dt1;\n    // initCubicPoly\n    this.init(x1, x2, t1, t2);\n  }\n  // standard Catmull-Rom spline: interpolate between x1 and x2 with previous/following points x1/x4\n  initCatmullRom(x0: number, x1: number, x2: number, x3: number, tension: number): void {\n    this.init(x1, x2, tension * (x2 - x0), tension * (x3 - x1));\n  }\n  calc(t: number): number {\n    const t2: number = t * t;\n    const t3: number = t2 * t;\n    return this.c0 + this.c1 * t + this.c2 * t2 + this.c3 * t3;\n  }\n}\n","import { CatmullRomCurve3 } from \"./CatmullRomCurve3\";\nimport { Vector3 } from \"../../math/Vector3\";\n/**************************************************************\n *  Closed Spline 3D curve\n **************************************************************/\nexport class ClosedSplineCurve3 extends CatmullRomCurve3 {\n  constructor(points: Vector3[]) {\n    console.warn('THREE.ClosedSplineCurve3 has been deprecated. Please use THREE.CatmullRomCurve3.');\n    super(points);\n    this.type = 'catmullrom';\n    this.closed = true;\n  }\n}\n","import { Vector3 } from \"../../math/Vector3\";\nimport { CurveUtils } from \"../CurveUtils\";\nimport { Curve } from \"../core/Curve\";\n/**************************************************************\n *  Spline 3D curve\n **************************************************************/\nexport class SplineCurve3 extends Curve<Vector3> {\n  points: Vector3[];\n  constructor(points: Vector3[] = [] /* array of Vector3 */) {\n    super();\n    console.warn('THREE.SplineCurve3 will be deprecated. Please use THREE.CatmullRomCurve3');\n    this.points = points;\n  }\n  getPoint(t: number): Vector3 {\n    let points = this.points;\n    let point = (points.length - 1) * t;\n    let intPoint = Math.floor(point);\n    let weight = point - intPoint;\n    let point0 = points[intPoint === 0 ? intPoint : intPoint - 1];\n    let point1 = points[intPoint];\n    let point2 = points[intPoint > points.length - 2 ? points.length - 1 : intPoint + 1];\n    let point3 = points[intPoint > points.length - 3 ? points.length - 1 : intPoint + 2];\n    let interpolate = CurveUtils.interpolate;\n    return new Vector3(\n      interpolate(point0.x, point1.x, point2.x, point3.x, weight),\n      interpolate(point0.y, point1.y, point2.y, point3.y, weight),\n      interpolate(point0.z, point1.z, point2.z, point3.z, weight)\n    );\n  }\n}\n","import { Vector3 } from \"../../math/Vector3\";\nimport { ShapeUtils } from \"../ShapeUtils\";\nimport { Curve } from \"../core/Curve\";\n/**************************************************************\n *  Cubic Bezier 3D curve\n **************************************************************/\nexport class CubicBezierCurve3 extends Curve<Vector3> {\n  v0: Vector3;\n  v1: Vector3;\n  v2: Vector3;\n  v3: Vector3;\n  constructor(v0: Vector3, v1: Vector3, v2: Vector3, v3: Vector3) {\n    super();\n    this.v0 = v0;\n    this.v1 = v1;\n    this.v2 = v2;\n    this.v3 = v3;\n  }\n  getPoint(t: number): Vector3 {\n    let b3 = ShapeUtils.b3;\n    return new Vector3(\n      b3(t, this.v0.x, this.v1.x, this.v2.x, this.v3.x),\n      b3(t, this.v0.y, this.v1.y, this.v2.y, this.v3.y),\n      b3(t, this.v0.z, this.v1.z, this.v2.z, this.v3.z)\n    );\n  }\n}\n","import { Vector3 } from \"../../math/Vector3\";\nimport { ShapeUtils } from \"../ShapeUtils\";\nimport { Curve } from \"../core/Curve\";\n/**************************************************************\n *  Quadratic Bezier 3D curve\n **************************************************************/\nexport class QuadraticBezierCurve3 extends Curve<Vector3> {\n  v0: Vector3;\n  v1: Vector3;\n  v2: Vector3;\n  constructor(v0: Vector3, v1: Vector3, v2: Vector3) {\n    super();\n    this.v0 = v0;\n    this.v1 = v1;\n    this.v2 = v2;\n  }\n  getPoint(t: number): Vector3 {\n    let b2 = ShapeUtils.b2;\n    return new Vector3(\n      b2(t, this.v0.x, this.v1.x, this.v2.x),\n      b2(t, this.v0.y, this.v1.y, this.v2.y),\n      b2(t, this.v0.z, this.v1.z, this.v2.z)\n    );\n  }\n}\n","import { Vector3 } from \"../../math/Vector3\";\nimport { Curve } from \"../core/Curve\";\n/**************************************************************\n *  Line3D\n **************************************************************/\nexport class LineCurve3 extends Curve<Vector3> {\n  v1: Vector3;\n  v2: Vector3;\n  constructor(v1: Vector3, v2: Vector3) {\n    super();\n    this.v1 = v1;\n    this.v2 = v2;\n  }\n  getPoint(t: number): Vector3 {\n    if (t === 1) {\n      return this.v2.clone();\n    }\n    let vector = new Vector3();\n    vector.subVectors(this.v2, this.v1); // diff\n    vector.multiplyScalar(t);\n    vector.add(this.v1);\n    return vector;\n  }\n}\n","import { EllipseCurve } from \"./EllipseCurve\";\n/**************************************************************\n *  Arc curve\n **************************************************************/\nexport class ArcCurve extends EllipseCurve {\n  constructor(aX: number, aY: number, aRadius: number, aStartAngle: number, aEndAngle: number, aClockwise: boolean) {\n    super(aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise);\n  }\n}\n","import { Matrix4 } from \"../math/Matrix4\";\nimport { Mesh } from \"../objects/Mesh\";\nimport { Group } from \"../objects/Group\";\n/**\n * @author alteredq / http://alteredqualia.com/\n */\nexport class SceneUtils {\n  static createMultiMaterialObject(geometry: any, materials: any): any {\n    let group = new Group();\n    for (let i = 0, l = materials.length; i < l; i ++) {\n      group.add(new Mesh(geometry, materials[i]));\n    }\n    return group;\n  }\n  static detach(child: any, parent: any, scene: any): void {\n    child.applyMatrix(parent.matrixWorld);\n    parent.remove(child);\n    scene.add(child);\n  }\n  static attach(child: any, scene: any, parent: any): void {\n    let matrixWorldInverse = new Matrix4();\n    matrixWorldInverse.getInverse(parent.matrixWorld);\n    child.applyMatrix(matrixWorldInverse);\n    scene.remove(child);\n    parent.add(child);\n  }\n}\n","/**\n * @author mrdoob / http://mrdoob.com/\n */\nimport { Face3 } from \"./core/Face3\";\nimport { BoxGeometry } from \"./geometries/BoxGeometry\";\nimport { EdgesGeometry } from \"./geometries/EdgesGeometry\";\nimport { WireframeGeometry } from \"./geometries/WireframeGeometry\";\nimport { CubeTextureLoader } from \"./loaders/CubeTextureLoader\";\nimport { TextureLoader } from \"./loaders/TextureLoader\";\nimport { LineBasicMaterial } from \"./materials/LineBasicMaterial\";\nimport { MultiMaterial } from \"./materials/MultiMaterial\";\nimport { PointsMaterial } from \"./materials/PointsMaterial\";\nimport { Vector3 } from \"./math/Vector3\";\nimport { LineSegments } from \"./objects/LineSegments\";\nimport { Points } from \"./objects/Points\";\nimport { Sprite } from \"./objects/Sprite\";\nimport { Color } from \"./math/Color\";\nimport { Texture } from \"./textures/Texture\";\nimport { CubeTexture } from \"./textures/CubeTexture\";\nimport { Camera } from \"./cameras/Camera\";\nimport { Mesh } from \"./objects/Mesh\";\nexport { BoxGeometry as CubeGeometry };\nexport class Face4 extends Face3 {\n  constructor(a: number, b: number, c: number, d: number, normal: Vector3, color: Color, materialIndex: number) {\n    console.warn(\"THREE.Face4 has been removed. A THREE.Face3 will be created instead.\");\n    super(a, b, c, normal, color, materialIndex);\n  }\n}\nexport const LineStrip = 0;\nexport const LinePieces = 1;\nexport { MultiMaterial as MeshFaceMaterial };\nexport class PointCloud extends Points {\n  constructor(geometry: any, material: any) {\n    console.warn(\"THREE.PointCloud has been renamed to THREE.Points.\");\n    super(geometry, material);\n  }\n}\nexport { Sprite as Particle };\nexport class ParticleSystem extends Points {\n  constructor(geometry: any, material: any) {\n    console.warn(\"THREE.ParticleSystem has been renamed to THREE.Points.\");\n    super(geometry, material);\n  }\n}\nexport class PointCloudMaterial extends PointsMaterial {\n  constructor(parameters: any) {\n    console.warn(\"THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.\");\n    super(parameters);\n  }\n}\nexport class ParticleBasicMaterial extends PointsMaterial {\n  constructor(parameters: any) {\n    console.warn(\"THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.\");\n    super(parameters);\n  }\n}\nexport class ParticleSystemMaterial extends PointsMaterial {\n  constructor(parameters: any) {\n    console.warn(\"THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.\");\n    super(parameters);\n  }\n}\nexport class Vertex extends Vector3 {\n  constructor(x: number, y: number, z: number) {\n    console.warn(\"THREE.Vertex has been removed. Use THREE.Vector3 instead.\");\n    super(x, y, z);\n  }\n}\n//\nexport class EdgesHelper extends LineSegments {\n  constructor(object: any, hex: number = 0xffffff) {\n    console.warn(\"THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead.\");\n    super(new EdgesGeometry(object.geometry), new LineBasicMaterial({ color: hex }));\n  }\n}\nexport class WireframeHelper extends LineSegments {\n  constructor(object: any, hex: number = 0xffffff) {\n    console.warn(\"THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead.\");\n    super(new WireframeGeometry(object.geometry), new LineBasicMaterial({ color: hex }));\n  }\n}\n//\nexport class GeometryUtils {\n  static merge(geometry1: any, geometry2: any, materialIndexOffset: number) {\n    console.warn(\"THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge(geometry2, matrix, materialIndexOffset) instead.\");\n    let matrix;\n    if (geometry2 instanceof Mesh) {\n      geometry2.matrixAutoUpdate && geometry2.updateMatrix();\n      matrix = geometry2.matrix;\n      geometry2 = geometry2.geometry;\n    }\n    geometry1.merge(geometry2, matrix, materialIndexOffset);\n  }\n  static center(geometry: any): Vector3 {\n    console.warn(\"THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.\");\n    return geometry.center();\n  }\n}\nexport class ImageUtils {\n  static crossOrigin: string;\n  static loadTexture(url: string, mapping: number, onLoad: any, onError: any): Texture {\n    console.warn(\"THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.\");\n    const loader = new TextureLoader();\n    loader.setCrossOrigin(this.crossOrigin);\n    const texture = loader.load(url, onLoad, undefined, onError);\n    if (mapping) texture.mapping = mapping;\n    return texture;\n  }\n  loadTextureCube(urls: string[], mapping: number, onLoad: any, onError: any): CubeTexture {\n    console.warn(\"THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.\");\n    const loader = new CubeTextureLoader();\n    loader.setCrossOrigin(ImageUtils.crossOrigin);\n    const texture = loader.load(urls, onLoad, undefined, onError);\n    if (mapping) texture.mapping = mapping;\n    return texture;\n  }\n  loadCompressedTexture () {\n    console.error(\"THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.\");\n  }\n  loadCompressedTextureCube() {\n    console.error(\"THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.\");\n  }\n}\n//\nexport class Projector {\n  constructor() {\n    console.error(\"THREE.Projector has been moved to /examples/js/renderers/Projector.ts.\");\n  }\n  projectVector(vector: Vector3, camera: Camera) {\n    console.warn(\"THREE.Projector: .projectVector() is now vector.project().\");\n    vector.project(camera);\n  }\n  unprojectVector(vector: Vector3, camera: Camera) {\n    console.warn(\"THREE.Projector: .unprojectVector() is now vector.unproject().\");\n    vector.unproject(camera);\n  }\n  pickingRay(vector: Vector3, camera: Camera) {\n    console.error(\"THREE.Projector: .pickingRay() is now raycaster.setFromCamera().\");\n  };\n}\n//\nexport class CanvasRenderer {\n  domElement: HTMLCanvasElement;\n  constructor() {\n    console.error(\"THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.ts\");\n    this.domElement = <HTMLCanvasElement> document.createElementNS(\"http://www.w3.org/1999/xhtml\", \"canvas\");\n  }\n  clear() {}\n  render() {}\n  setClearColor() {}\n  setSize() {}\n}\n"],"names":["MOUSE","CullFace","FrontFaceDirection","ShadowMap","SideMode","ShadingMode","ColorsMode","BlendingMode","BlendingEquation","BlendingFactor","DepthFunction","BlendingOperation","ToneMapping","TextureMapping","TextureWrapping","TextureFilter","TextureType","TextureFormat","LoopMode","InterpolateMode","EndingMode","DrawMode","TextureEncoding","DepthPacking","tslib_1.__extends","count","NumberKeyframeTrack","VectorKeyframeTrack","ColorKeyframeTrack","QuaternionKeyframeTrack","BooleanKeyframeTrack","StringKeyframeTrack"],"mappings":"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G,EAAE,CAAC;UACvC;cAAM,IAAI,KAAK,KAAK,KAAK,EAAE;aAC1B,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;aACtC,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;aACtC,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;aACtC,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;UACvC;cAAM,IAAI,KAAK,KAAK,KAAK,EAAE;aAC1B,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;aACtC,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;aACtC,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;aACtC,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;UACvC;cAAM,IAAI,KAAK,KAAK,KAAK,EAAE;aAC1B,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;aACtC,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;aACtC,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;aACtC,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;UACvC;cAAM,IAAI,KAAK,KAAK,KAAK,EAAE;aAC1B,IAAI,C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AAC,EAAE,CAAC,CAAC;SAC1D,IAAM,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;SAC1D,IAAM,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;SAC3D,IAAM,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;SAC3D,IAAM,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;SAC1D,IAAM,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;SAC1D,IAAM,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;SAC3D,IAAM,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;SAC3D,EAAE,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;SACtD,EAAE,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;SACtD,EAAE,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;SACtD,EAAE,CAAC,EAAE,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;SACvD,EAAE,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;SACtD,EAAE,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;SACtD,EAAE,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;SACtD,EAAE,CAAC,EAAE,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;SACvD,EAAE,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;SACtD,EAAE,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;SACtD,EAAE,CAAC,EAAE,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;SACvD,EAAE,CAAC,EAAE,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GA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G,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,MAAM,CAAC;SAC7H,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,MAAM,CAAC;SAC7H,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,MAAM,CAAC;SAC7H,EAAE,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,MAAM,CAAC;SACrB,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,MAAM,CAAC;SAC7H,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,MAAM,CAAC;SAC9H,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,MAAM,CAAC;SAC9H,EAAE,CAAC,EAAE,CAAC,GAAG,GAAG,GAAG,MAAM,CAAC;SACtB,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,MAAM,CAAC;SAC9H,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,MAAM,CAAC;SAC9H,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,MAAM,CAAC;SAC9H,OAAO,IAAI,CAAC;MACb;KACD,uBAAK,GAAL,UAAM,CAAU;SACd,IAAM,EAAE,GAAiB,IAAI,CAAC,QAAQ,CAAC;SACvC,IAAM,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;SAChC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;SAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;SAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;SACnC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;SAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;SAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;SACnC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;SAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;SAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;SACpC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;SAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;SAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;SACpC,OAAO,IAAI,CAAC;MACb;KACD,mCAAiB,GAAjB;SACE,IAAM,EAAE,GAAiB,IAAI,CAAC,QAAQ,CAAC;SACvC,IAAM,QAAQ,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;SAC/D,IAAM,QAAQ,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;SAC/D,IAAM,QAAQ,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;SACjE,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC,CAAC;MAC1D;KACD,iCAAe,GAAf,UAAgB,CAAS,EAAE,CAAS,EAAE,CAAS;SAC7C,IAAI,CAAC,GAAG,CACN,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CACX,CAAC;SACF,OAAO,IAAI,CAAC;MACb;KACD,+BAAa,GAAb,UAAc,KAAa;SACzB,IAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;SAC/C,IAAI,CAAC,GAAG,CACN,CAAC,EAAE,CAAC,EAAG,CAAC,EAAE,CAAC,EACX,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,EACZ,CAAC,EAAE,CAAC,EAAG,CAAC,EAAE,CAAC,EACX,CAAC,EAAE,CAAC,EAAG,CAAC,EAAE,CAAC,CACZ,CAAC;SACF,OAAO,IAAI,CAAC;MACb;KACD,+BAAa,GAAb,UAAc,KAAa;SACzB,IAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;SAC/C,IAAI,CAAC,GAAG,CACL,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACX,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACX,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CACZ,CAAC;SACF,OAAO,IAAI,CAAC;MACb;KACD,+BAAa,GAAb,UAAc,KAAa;SACzB,IAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;SAC/C,IAAI,CAAC,GAAG,CACN,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACZ,CAAC,EAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EACX,CAAC,EAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EACX,CAAC,EAAG,CAAC,EAAE,CAAC,EAAE,CAAC,CACZ,CAAC;SACF,OAAO,IAAI,CAAC;MACb;KACD,kCAAgB,GAAhB,UAAiB,IAAa,EAAE,KAAa;;SAE3C,IAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;SAC1B,IAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;SAC1B,IAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;SAChB,IAAM,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;SACzC,IAAM,EAAE,GAAG,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC;SAC7B,IAAI,CAAC,GAAG,CACN,EAAE,GAAG,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,EAC7C,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,EAC7C,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,EAChD,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CACX,CAAC;SACD,OAAO,IAAI,CAAC;MACd;KACD,2BAAS,GAAT,UAAU,CAAS,EAAE,CAAS,EAAE,CAAS;SACvC,IAAI,CAAC,GAAG,CACN,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CACX,CAAC;SACF,OAAO,IAAI,CAAC;MACb;KACD,yBAAO,GAAP,UAAQ,QAAiB,EAAE,UAAsB,EAAE,KAAc;SAC/D,IAAI,CAAC,0BAA0B,CAAC,UAAU,CAAC,CAAC;SAC5C,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;SAClB,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;SAC3B,OAAO,IAAI,CAAC;MACb;KAGD,2BAAS,GAAT,UAAU,QAAiB,EAAE,UAAsB,EAAE,KAAc;SACjE,IAAM,MAAM,GAAG,OAAO,CAAC,iBAAiB,EAAE,MAAM,GAAG,OAAO,CAAC,iBAAiB,CAAC;SAC7E,IAAM,EAAE,GAAiB,IAAI,CAAC,QAAQ,CAAC;SACvC,IAAI,EAAE,GAAG,MAAM,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC;SAClD,IAAM,EAAE,GAAG,MAAM,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC;SACpD,IAAM,EAAE,GAAG,MAAM,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC;;SAErD,IAAM,GAAG,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;SAC/B,IAAI,GAAG,GAAG,CAAC,EAAE;aACX,EAAE,GAAG,CAAE,EAAE,CAAC;UACX;SACD,QAAQ,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;SACpB,QAAQ,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;SACpB,QAAQ,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;;SAEpB,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SACnC,IAAM,KAAK,GAAG,CAAC,GAAG,EAAE,CAAC;SACrB,IAAM,KAAK,GAAG,CAAC,GAAG,EAAE,CAAC;SACrB,IAAM,KAAK,GAAG,CAAC,GAAG,EAAE,CAAC;SACrB,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC;SAC5B,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC;SAC5B,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC;SAC5B,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC;SAC5B,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC;SAC5B,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC;SAC5B,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC;SAC5B,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC;SAC5B,MAAM,CAAC,QAAQ,CAAC,EAAE,CAAC,IAAI,KAAK,CAAC;SAC7B,UAAU,CAAC,qBAAqB,CAAC,MAAM,CAAC,CAAC;SACzC,KAAK,CAAC,CAAC,GAAG,EAAE,CAAC;SACb,KAAK,CAAC,CAAC,GAAG,EAAE,CAAC;SACb,KAAK,CAAC,CAAC,GAAG,EAAE,CAAC;SACb,OAAO,IAAI,CAAC;MACb;KACD,6BAAW,GAAX,UAAY,IAAY,EAAE,KAAa,EAAE,MAAc,EAAE,GAAW,EAAE,IAAY,EAAE,GAAW;SAC7F,IAAM,EAAE,GAAiB,IAAI,CAAC,QAAQ,CAAC;SACvC,IAAM,CAAC,GAAG,CAAC,GAAG,IAAI,IAAI,KAAK,GAAG,IAAI,CAAC,CAAC;SACpC,IAAM,CAAC,GAAG,CAAC,GAAG,IAAI,IAAI,GAAG,GAAG,MAAM,CAAC,CAAC;SACpC,IAAM,CAAC,GAAG,CAAC,KAAK,GAAG,IAAI,KAAK,KAAK,GAAG,IAAI,CAAC,CAAC;SAC1C,IAAM,CAAC,GAAG,CAAC,GAAG,GAAG,MAAM,KAAK,GAAG,GAAG,MAAM,CAAC,CAAC;SAC1C,IAAM,CAAC,GAAG,EAAG,GAAG,GAAG,IAAI,CAAC,IAAI,GAAG,GAAG,IAAI,CAAC,CAAC;SACxC,IAAM,CAAC,GAAG,CAAE,CAAC,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,CAAC,CAAC;SAC1C,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;SAAE,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;SAAE,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;SAAE,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;SAC/C,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;SAAE,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;SAAE,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;SAAE,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;SAC/C,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;SAAE,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;SAAE,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;SAAE,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;SAChD,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;SAAE,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;SAAE,EAAE,CAAC,EAAE,CAAC,GAAG,CAAE,CAAC,CAAC;SAAE,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;SAClD,OAAO,IAAI,CAAC;MACb;KACD,iCAAe,GAAf,UAAgB,GAAW,EAAE,MAAc,EAAE,IAAY,EAAE,GAAW;SACpE,IAAM,IAAI,GAAG,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;SACxD,IAAM,IAAI,GAAG,CAAE,IAAI,CAAC;SACpB,IAAM,IAAI,GAAG,IAAI,GAAG,MAAM,CAAC;SAC3B,IAAM,IAAI,GAAG,IAAI,GAAG,MAAM,CAAC;SAC3B,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC;MAC5D;KACD,kCAAgB,GAAhB,UAAiB,IAAY,EAAE,KAAa,EAAE,GAAW,EAAE,MAAc,EAAE,IAAY,EAAE,GAAW;SAClG,IAAM,EAAE,GAAiB,IAAI,CAAC,QAAQ,CAAC;SACvC,IAAM,CAAC,GAAG,GAAG,IAAI,KAAK,GAAG,IAAI,CAAC,CAAC;SAC/B,IAAM,CAAC,GAAG,GAAG,IAAI,GAAG,GAAG,MAAM,CAAC,CAAC;SAC/B,IAAM,CAAC,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,CAAC,CAAC;SAC7B,IAAM,CAAC,GAAG,CAAC,KAAK,GAAG,IAAI,IAAI,CAAC,CAAC;SAC7B,IAAM,CAAC,GAAG,CAAC,GAAG,GAAG,MAAM,IAAI,CAAC,CAAC;SAC7B,IAAM,CAAC,GAAG,CAAC,GAAG,GAAG,IAAI,IAAI,CAAC,CAAC;SAC3B,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;SAAE,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;SAAE,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;SAAE,EAAE,CAAC,EAAE,CAAC,GAAG,CAAE,CAAC,CAAC;SACrD,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;SAAE,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;SAAE,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;SAAE,EAAE,CAAC,EAAE,CAAC,GAAG,CAAE,CAAC,CAAC;SACrD,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;SAAE,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;SAAE,EAAE,CAAC,EAAE,CAAC,GAAG,CAAE,CAAC,GAAG,CAAC,CAAC;SAAE,EAAE,CAAC,EAAE,CAAC,GAAG,CAAE,CAAC,CAAC;SACxD,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;SAAE,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;SAAE,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;SAAE,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;SAChD,OAAO,IAAI,CAAC;MACb;KACD,wBAAM,GAAN,UAAO,MAAe;SACpB,IAAM,EAAE,GAAiB,IAAI,CAAC,QAAQ,CAAC;SACvC,IAAM,EAAE,GAAiB,MAAM,CAAC,QAAQ,CAAC;SACzC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAG,EAAE;aAC5B,IAAI,EAAE,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;iBAAE,OAAO,KAAK,CAAC;UACnC;SACD,OAAO,IAAI,CAAC;MACb;KACD,2BAAS,GAAT,UAAU,KAA8B,EAAE,MAAkB;SAAlB,uBAAA,EAAA,UAAkB;SAC1D,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAG,EAAE;aAC5B,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC;UACtC;SACD,OAAO,IAAI,CAAC;MACb;KACD,yBAAO,GAAP,UAAQ,KAAmC,EAAE,MAAkB;SAAvD,sBAAA,EAAA,UAAmC;SAAE,uBAAA,EAAA,UAAkB;SAC7D,IAAM,EAAE,GAAiB,IAAI,CAAC,QAAQ,CAAC;SACvC,KAAK,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;SACtB,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;SAC1B,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;SAC1B,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;SAC1B,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;SAC1B,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;SAC1B,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;SAC1B,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;SAC1B,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,GAAI,EAAE,CAAC,CAAC,CAAC,CAAC;SAC3B,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,GAAI,EAAE,CAAC,CAAC,CAAC,CAAC;SAC3B,KAAK,CAAC,MAAM,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;SAC5B,KAAK,CAAC,MAAM,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;SAC5B,KAAK,CAAC,MAAM,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;SAC5B,KAAK,CAAC,MAAM,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;SAC5B,KAAK,CAAC,MAAM,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;SAC5B,KAAK,CAAC,MAAM,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;SAC5B,OAAO,KAAK,CAAC;MACd;KACD,iCAAe,GAAf,UAAgB,CAAU;SACxB,OAAO,CAAC,IAAI,CAAC,wEAAwE,CAAC,CAAC;SACvF,OAAO,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;MAC7B;KACD,2CAAyB,GAAzB,UAA0B,CAAa;SACrC,OAAO,CAAC,IAAI,CAAC,gGAAgG,CAAC,CAAC;SAC/G,OAAO,IAAI,CAAC,0BAA0B,CAAC,CAAC,CAAC,CAAC;MAC3C;KACD,iCAAe,GAAf,UAAgB,MAAe;SAC7B,OAAO,CAAC,IAAI,CAAC,gIAAgI,CAAC,CAAC;SAC/I,OAAO,MAAM,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;MACrC;KACD,iCAAe,GAAf,UAAgB,MAAe;SAC7B,OAAO,CAAC,IAAI,CAAC,8FAA8F,CAAC,CAAC;SAC7G,OAAO,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;MAClC;KACD,sCAAoB,GAApB,UAAqB,CAA0B;SAC7C,OAAO,CAAC,IAAI,CAAC,yGAAyG,CAAC,CAAC;SACxH,OAAO,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC;MACpC;KACD,4BAAU,GAAV,UAAW,CAAU;SACnB,OAAO,CAAC,IAAI,CAAC,gGAAgG,CAAC,CAAC;SAC/G,CAAC,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC;MAC5B;KACD,6BAAW,GAAX,UAAY,MAAe;SACzB,OAAO,CAAC,IAAI,CAAC,0FAA0F,CAAC,CAAC;SACzG,OAAO,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;MAClC;KACD,2BAAS,GAAT,UAAU,CAAU;SAClB,OAAO,CAAC,KAAK,CAAC,+CAA+C,CAAC,CAAC;MAChE;KACD,yBAAO,GAAP,UAAQ,KAAa;SACnB,OAAO,CAAC,KAAK,CAAC,6CAA6C,CAAC,CAAC;MAC9D;KACD,yBAAO,GAAP,UAAQ,KAAa;SACnB,OAAO,CAAC,KAAK,CAAC,6CAA6C,CAAC,CAAC;MAC9D;KACD,yBAAO,GAAP,UAAQ,KAAa;SACnB,OAAO,CAAC,KAAK,CAAC,6CAA6C,CAAC,CAAC;MAC9D;KACD,8BAAY,GAAZ,UAAa,IAAa,EAAE,KAAa;SACvC,OAAO,CAAC,KAAK,CAAC,kDAAkD,CAAC,CAAC;MACnE;KApkBc,2BAAmB,GAAG,IAAI,OAAO,EAAE,CAAC;KAqIpC,iBAAS,GAAG,IAAI,OAAO,EAAE,CAAC;KAC1B,iBAAS,GAAG,IAAI,OAAO,EAAE,CAAC;KAC1B,iBAAS,GAAG,IAAI,OAAO,EAAE,CAAC;KA8E1B,+BAAuB,GAAG,IAAI,OAAO,EAAE,CAAC;KAUxC,yBAAiB,GAAG,IAAI,OAAO,EAAE,CAAC;KAuElC,uBAAe,GAAG,IAAI,OAAO,EAAE,CAAC;KA2IhC,yBAAiB,GAAG,IAAI,OAAO,EAAE,CAAC;KAClC,yBAAiB,GAAG,IAAI,OAAO,EAAE,CAAC;KAmJnD,cAAC;EAloBD;;CCfA;;;AAGA;KAAiCA,+BAAO;KAEtC,qBAAY,MAAkB,EAAE,OAAuD,EAAE,KAAuB,EAAE,KAAuB,EAAE,SAAyB,EAAE,SAAyB,EAAE,MAAsB,EAAE,IAAkB,EAAE,UAAmB,EAAE,QAA0B;SAAhR,uBAAA,EAAA,WAAkB;SAAE,wBAAA,EAAA,UAA0BX,sBAAc,CAAC,cAAc;SAAvF,YACE,kBAAM,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,SAAS,EAAE,SAAS,EAAE,MAAM,EAAE,IAAI,EAAE,UAAU,EAAE,QAAQ,CAAC,SAE/F;SAJQ,mBAAa,GAAY,IAAI,CAAC;SAGrC,KAAI,CAAC,KAAK,GAAG,KAAK,CAAC;;MACpB;KACD,sBAAI,+BAAM;cAAV,cAAsB,OAAO,IAAI,CAAC,KAAK,CAAC,EAAE;cAC1C,UAAW,KAAY,IAAI,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,EAAE;;;QADN;KAE5C,kBAAC;CAAD,CARA,CAAiC,OAAO;;CC6CxC,IAAM,YAAY,GAAG,IAAI,OAAO,EAAE,CAAC;CACnC,IAAM,gBAAgB,GAAG,IAAI,WAAW,EAAE,CAAC;CAC3C;CACA;KAAA;SACE,QAAG,GAAU,EAAE,CAAC;SAChB,QAAG,GAAU,EAAE,CAAC;MACjB;KAAD,uBAAC;CAAD,CAAC,IAAA;CACD;CACA;CACA,IAAM,aAAa,GAAU,EAAE,CAAC;CAChC,IAAM,aAAa,GAAU,EAAE,CAAC;CAChC;CACA,SAAS,OAAO,CAAC,KAAU,EAAE,OAAe,EAAE,SAAiB;KAC7D,IAAM,SAAS,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;KAC3B,IAAI,SAAS,IAAI,CAAC,IAAI,SAAS,GAAG,CAAC;SAAE,OAAO,KAAK,CAAC;;;KAGlD,IAAM,CAAC,GAAG,OAAO,GAAG,SAAS,CAAC;KAC9B,IAAI,CAAC,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC;KACzB,IAAI,CAAC,KAAK,SAAS,EAAE;SACnB,CAAC,GAAG,IAAI,YAAY,CAAC,CAAC,CAAC,CAAC;SACxB,aAAa,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;MACtB;KACD,IAAI,OAAO,KAAK,CAAC,EAAE;SACjB,SAAS,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;SACxB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,MAAM,GAAG,CAAC,EAAE,CAAC,KAAK,OAAO,EAAE,EAAG,CAAC,EAAE;aAC/C,MAAM,IAAI,SAAS,CAAC;aACpB,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;UAC7B;MACF;KACD,OAAO,CAAC,CAAC;CACX,CAAC;CACD;CACA,SAAS,aAAa,CAAC,QAAa,EAAE,CAAS;KAC7C,IAAI,CAAC,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC;KACzB,IAAI,CAAC,KAAK,SAAS,EAAE;SACnB,CAAC,GAAG,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC;SACtB,aAAa,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;MACtB;KACD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,EAAG,CAAC;SAC3B,CAAC,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,gBAAgB,EAAE,CAAC;KACrC,OAAO,CAAC,CAAC;CACX,CAAC;CACD;CACA;KAIE,uBAAY,EAAO,EAAE,UAAe,EAAE,IAAS;SAC7C,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;SACb,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;SACjB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;;MAEzD;;;;KAIO,kCAAU,GAAlB,UAAmB,EAAyB,EAAE,CAAM,IAAU,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE;KACnF,kCAAU,GAAlB,UAAmB,EAAyB,EAAE,CAAM,IAAU,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE;;KAEnF,mCAAW,GAAnB,UAAoB,EAAyB,EAAE,CAAM;SACnD,IAAI,CAAC,CAAC,CAAC,KAAK,SAAS;aAAE,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;;aAC9C,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;MACxC;KACO,mCAAW,GAAnB,UAAoB,EAAyB,EAAE,CAAM;SACnD,IAAI,CAAC,CAAC,CAAC,KAAK,SAAS;aACnB,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;cACpC,IAAI,CAAC,CAAC,CAAC,KAAK,SAAS;aACxB,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;;aAEvC,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;MAC/B;KACO,mCAAW,GAAnB,UAAoB,EAAyB,EAAE,CAAM;SACnD,IAAI,CAAC,CAAC,CAAC,KAAK,SAAS;aAAE,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;;aAC9C,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;MAClD;;KAEO,mCAAW,GAAnB,UAAoB,EAAyB,EAAE,CAAM;SACnD,EAAE,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,CAAC,CAAC,QAAQ,IAAI,CAAC,CAAC,CAAC;MACxD;KACO,mCAAW,GAAnB,UAAoB,EAAyB,EAAE,CAAM;SACnD,EAAE,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,CAAC,CAAC,QAAQ,IAAI,CAAC,CAAC,CAAC;MACxD;KACO,mCAAW,GAAnB,UAAoB,EAAyB,EAAE,CAAM;SACnD,EAAE,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,CAAC,CAAC,QAAQ,IAAI,CAAC,CAAC,CAAC;MACxD;;KAEO,kCAAU,GAAlB,UAAmB,EAAyB,EAAE,CAAM,EAAE,QAAa;SACjE,IAAM,IAAI,GAAG,QAAQ,CAAC,gBAAgB,EAAE,CAAC;SACzC,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;SAC9B,QAAQ,CAAC,YAAY,CAAC,CAAC,IAAI,YAAY,EAAE,IAAI,CAAC,CAAC;MAChD;KACO,kCAAU,GAAlB,UAAmB,EAAyB,EAAE,CAAM,EAAE,QAAa;SACjE,IAAM,IAAI,GAAG,QAAQ,CAAC,gBAAgB,EAAE,CAAC;SACzC,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;SAC9B,QAAQ,CAAC,cAAc,CAAC,CAAC,IAAI,gBAAgB,EAAE,IAAI,CAAC,CAAC;MACtD;;KAEO,mCAAW,GAAnB,UAAoB,EAAyB,EAAE,CAAM,IAAU,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE;KACrF,mCAAW,GAAnB,UAAoB,EAAyB,EAAE,CAAM,IAAU,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE;KACrF,mCAAW,GAAnB,UAAoB,EAAyB,EAAE,CAAM,IAAU,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE;;KAErF,yCAAiB,GAAzB,UAA0B,IAAY;SACpC,QAAQ,IAAI;aACV,KAAK,MAAM,EAAE,OAAO,IAAI,CAAC,UAAU,CAAC;aACpC,KAAK,MAAM,EAAE,OAAO,IAAI,CAAC,WAAW,CAAC;aACrC,KAAK,MAAM,EAAE,OAAO,IAAI,CAAC,WAAW,CAAC;aACrC,KAAK,MAAM,EAAE,OAAO,IAAI,CAAC,WAAW,CAAC;aACrC,KAAK,MAAM,EAAE,OAAO,IAAI,CAAC,WAAW,CAAC;aACrC,KAAK,MAAM,EAAE,OAAO,IAAI,CAAC,WAAW,CAAC;aACrC,KAAK,MAAM,EAAE,OAAO,IAAI,CAAC,WAAW,CAAC;aACrC,KAAK,MAAM,EAAE,OAAO,IAAI,CAAC,UAAU,CAAC;aACpC,KAAK,MAAM,EAAE,OAAO,IAAI,CAAC,UAAU,CAAC;aACpC,KAAK,MAAM,CAAC;aAAC,KAAK,MAAM,EAAE,OAAO,IAAI,CAAC,UAAU,CAAC;aACjD,KAAK,MAAM,CAAC;aAAC,KAAK,MAAM,EAAE,OAAO,IAAI,CAAC,WAAW,CAAC;aAClD,KAAK,MAAM,CAAC;aAAC,KAAK,MAAM,EAAE,OAAO,IAAI,CAAC,WAAW,CAAC;aAClD,KAAK,MAAM,CAAC;aAAC,KAAK,MAAM,EAAE,OAAO,IAAI,CAAC,WAAW,CAAC;UACnD;MACF;KACH,oBAAC;CAAD,CAAC,IAAA;CACD;KAKE,0BAAY,EAAO,EAAE,UAAe,EAAE,IAAS;SAC7C,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;SACb,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;SACjB,IAAI,CAAC,IAAI,GAAG,UAAU,CAAC,IAAI,CAAC;SAC5B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;;MAE1D;;KAEO,sCAAW,GAAnB,UAAoB,EAAyB,EAAE,CAAM,IAAU,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE;KACrF,sCAAW,GAAnB,UAAoB,EAAyB,EAAE,CAAM,IAAU,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE;;KAErF,sCAAW,GAAnB,UAAoB,EAAyB,EAAE,CAAM;SACnD,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;MACpD;KACO,sCAAW,GAAnB,UAAoB,EAAyB,EAAE,CAAM;SACnD,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;MACpD;KACO,sCAAW,GAAnB,UAAoB,EAAyB,EAAE,CAAM;SACnD,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;MACpD;;KAEO,sCAAW,GAAnB,UAAoB,EAAyB,EAAE,CAAM;SACnD,EAAE,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;MACjE;KACO,sCAAW,GAAnB,UAAoB,EAAyB,EAAE,CAAM;SACnD,EAAE,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;MACjE;KACO,sCAAW,GAAnB,UAAoB,EAAyB,EAAE,CAAM;SACnD,EAAE,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;MAClE;;KAEO,sCAAW,GAAnB,UAAoB,EAAyB,EAAE,CAAM,EAAE,QAAa;SAClE,IAAM,CAAC,GAAG,CAAC,CAAC,MAAM,EAChB,KAAK,GAAG,aAAa,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;SACrC,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;SAChC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,EAAG,CAAC,EAAE;aAC7B,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,YAAY,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;UACvD;MACF;KACO,sCAAW,GAAnB,UAAoB,EAAyB,EAAE,CAAM,EAAE,QAAa;SAClE,IAAM,CAAC,GAAG,CAAC,CAAC,MAAM,EAChB,KAAK,GAAG,aAAa,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;SACrC,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;SAChC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,EAAG,CAAC,EAAE;aAC7B,QAAQ,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,gBAAgB,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;UAC7D;MACF;;KAEO,sCAAW,GAAnB,UAAoB,EAAyB,EAAE,CAAM,IAAU,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE;KACrF,sCAAW,GAAnB,UAAoB,EAAyB,EAAE,CAAM,IAAU,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE;KACrF,sCAAW,GAAnB,UAAoB,EAAyB,EAAE,CAAM,IAAU,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE;;KAErF,6CAAkB,GAA1B,UAA2B,IAAY;SACrC,QAAQ,IAAI;aACV,KAAK,MAAM,EAAE,OAAO,IAAI,CAAC,WAAW,CAAC;aACrC,KAAK,MAAM,EAAE,OAAO,IAAI,CAAC,WAAW,CAAC;aACrC,KAAK,MAAM,EAAE,OAAO,IAAI,CAAC,WAAW,CAAC;aACrC,KAAK,MAAM,EAAE,OAAO,IAAI,CAAC,WAAW,CAAC;aACrC,KAAK,MAAM,EAAE,OAAO,IAAI,CAAC,WAAW,CAAC;aACrC,KAAK,MAAM,EAAE,OAAO,IAAI,CAAC,WAAW,CAAC;aACrC,KAAK,MAAM,EAAE,OAAO,IAAI,CAAC,WAAW,CAAC;aACrC,KAAK,MAAM,EAAE,OAAO,IAAI,CAAC,WAAW,CAAC;aACrC,KAAK,MAAM,EAAE,OAAO,IAAI,CAAC,WAAW,CAAC;aACrC,KAAK,MAAM,CAAC;aAAC,KAAK,MAAM,EAAE,OAAO,IAAI,CAAC,WAAW,CAAC;aAClD,KAAK,MAAM,CAAC;aAAC,KAAK,MAAM,EAAE,OAAO,IAAI,CAAC,WAAW,CAAC;aAClD,KAAK,MAAM,CAAC;aAAC,KAAK,MAAM,EAAE,OAAO,IAAI,CAAC,WAAW,CAAC;aAClD,KAAK,MAAM,CAAC;aAAC,KAAK,MAAM,EAAE,OAAO,IAAI,CAAC,WAAW,CAAC;UACnD;MACF;KACH,uBAAC;CAAD,CAAC,IAAA;CACD;KAAgCW,qCAAgB;KAE9C,2BAAY,EAAO;SAAnB,YACE,iBAAO,SAER;SADC,KAAI,CAAC,EAAE,GAAG,EAAE,CAAC;;MACd;KACD,oCAAQ,GAAR,UAAS,EAAyB,EAAE,KAAU;;;SAG5C,IAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;SACrB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,KAAK,CAAC,EAAE,EAAG,CAAC,EAAE;aAC7C,IAAM,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;aACjB,CAAC,CAAC,QAAQ,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;UAC7B;MACF;KACH,wBAAC;CAAD,CAfA,CAAgC,gBAAgB,GAe/C;CACD;CACA;CACA,IAAM,UAAU,GAAW,0BAA0B,CAAC;CACtD;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA,SAAS,UAAU,CAAC,SAAc,EAAE,aAAkB;KACpD,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;KAClC,SAAS,CAAC,GAAG,CAAC,aAAa,CAAC,EAAE,CAAC,GAAG,aAAa,CAAC;CAClD,CAAC;CACD,SAAS,YAAY,CAAC,UAAe,EAAE,IAAS,EAAE,SAAc;KAC9D,IAAM,IAAI,GAAG,UAAU,CAAC,IAAI,CAAC;KAC7B,IAAM,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC;;KAE/B,UAAU,CAAC,SAAS,GAAG,CAAC,CAAC;KACzB,SAAW;SACT,IAAM,KAAK,GAAG,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACpC,IAAM,QAAQ,GAAG,UAAU,CAAC,SAAS,CAAC;SACtC,IAAI,EAAE,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;SAClB,IAAM,SAAS,GAAG,KAAK,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC;SACnC,IAAM,SAAS,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;;SAE3B,IAAI,SAAS;aAAE,EAAE,GAAG,QAAQ,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,QAAQ,EAAE,CAAC;SAChD,IAAI,SAAS,KAAK,SAAS;aACvB,SAAS,KAAK,GAAG,IAAI,QAAQ,GAAG,CAAC,KAAK,UAAU,EAAE;;aAEpD,UAAU,CAAC,SAAS,EAAE,SAAS,KAAK,SAAS;iBACzC,IAAI,aAAa,CAAC,EAAE,EAAE,UAAU,EAAE,IAAI,CAAC;iBACvC,IAAI,gBAAgB,CAAC,EAAE,EAAE,UAAU,EAAE,IAAI,CAAC,CAAC,CAAC;aAChD,MAAM;UACP;cAAM;;aAEL,IAAM,GAAG,GAAG,SAAS,CAAC,GAAG,CAAC;aAC1B,IAAI,IAAI,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC;aACnB,IAAI,IAAI,KAAK,SAAS,EAAE;iBACtB,IAAI,GAAG,IAAI,iBAAiB,CAAC,EAAE,CAAC,CAAC;iBACjC,UAAU,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;cAC7B;aACD,SAAS,GAAG,IAAI,CAAC;UAClB;MACF;CACH,CAAC;CACD;CACA;KAAmCA,iCAAgB;KAEjD,uBAAY,EAAyB,EAAE,OAAY,EAAE,QAAa;SAAlE,YACE,iBAAO,SASR;SARC,KAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;SACzB,IAAM,CAAC,GAAG,EAAE,CAAC,mBAAmB,CAAC,OAAO,EAAE,EAAE,CAAC,eAAe,CAAC,CAAC;SAC9D,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,EAAG,CAAC,EAAE;aAC7B,IAAM,IAAI,GAAG,EAAE,CAAC,gBAAgB,CAAC,OAAO,EAAE,CAAC,CAAC,EAC1C,IAAI,GAAG,IAAI,CAAC,IAAI,EAChB,IAAI,GAAG,EAAE,CAAC,kBAAkB,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;aAC9C,YAAY,CAAC,IAAI,EAAE,IAAI,EAAE,KAAI,CAAC,CAAC;UAChC;;MACF;KACD,gCAAQ,GAAR,UAAS,EAAyB,EAAE,IAAS,EAAE,KAAU;SACvD,IAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;SACzB,IAAI,CAAC,KAAK,SAAS;aAAE,CAAC,CAAC,QAAQ,CAAC,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;MAC3D;KACD,2BAAG,GAAH,UAAI,EAAyB,EAAE,MAAW,EAAE,IAAS;SACnD,IAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;SACzB,IAAI,CAAC,KAAK,SAAS;aAAE,CAAC,CAAC,QAAQ,CAAC,EAAE,EAAE,MAAM,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;MAClE;KACD,mCAAW,GAAX,UAAY,EAAyB,EAAE,MAAW,EAAE,IAAS;SAC3D,IAAM,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;SACvB,IAAI,CAAC,KAAK,SAAS;aAAE,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;MACjD;;KAEM,oBAAM,GAAb,UAAc,EAAyB,EAAE,GAAQ,EAAE,MAAW,EAAE,QAAa;SAC3E,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,KAAK,CAAC,EAAE,EAAG,CAAC,EAAE;aAC7C,IAAM,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,EACd,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;aACnB,IAAI,CAAC,CAAC,WAAW,KAAK,KAAK,EAAE;;iBAE3B,CAAC,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;cACnC;UACF;MACF;KACM,0BAAY,GAAnB,UAAoB,GAAQ,EAAE,MAAW;SACvC,IAAM,CAAC,GAAG,EAAE,CAAC;SACb,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,KAAK,CAAC,EAAE,EAAG,CAAC,EAAE;aAC7C,IAAM,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;aACjB,IAAI,CAAC,CAAC,EAAE,IAAI,MAAM;iBAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;UAC/B;SACD,OAAO,CAAC,CAAC;MACV;KACH,oBAAC;CAAD,CA5CA,CAAmC,gBAAgB,GA4ClD;;CChWD;;;AAGA;KAKE,eAAY,CAA2B,EAAE,CAAU,EAAE,CAAU;SAJ/D,MAAC,GAAW,CAAC,CAAC;SACd,MAAC,GAAW,CAAC,CAAC;SACd,MAAC,GAAW,CAAC,CAAC;SACL,YAAO,GAAY,IAAI,CAAC;;;;;;SAO/B,IAAI,CAAC,YAAY,KAAK,EAAE;aACtB,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;UACd;cAAM,IAAI,QAAO,CAAC,CAAC,KAAK,QAAQ,EAAE;aACjC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;UAClB;cAAM,IAAI,QAAO,CAAC,CAAC,KAAK,QAAQ,EAAE;aACjC,IAAI,QAAO,CAAC,CAAC,KAAK,QAAQ,IAAI,QAAO,CAAC,CAAC,KAAK,QAAQ,EAAE;iBACpD,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;cACtB;kBAAM;iBACL,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;cAChB;UACF;MACF;KACD,mBAAG,GAAH,UAAI,KAA8B;SAChC,IAAI,KAAK,IAAI,KAAK,YAAY,KAAK,EAAE;aACnC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;UAClB;cAAM,IAAI,QAAO,KAAK,CAAC,KAAK,QAAQ,EAAE;aACrC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;UACpB;cAAM,IAAI,QAAO,KAAK,CAAC,KAAK,QAAQ,EAAE;aACrC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;UACtB;SACD,OAAO,IAAI,CAAC;MACb;KACD,yBAAS,GAAT,UAAU,MAAc;SACtB,IAAI,CAAC,CAAC,GAAG,MAAM,CAAC;SAChB,IAAI,CAAC,CAAC,GAAG,MAAM,CAAC;SAChB,IAAI,CAAC,CAAC,GAAG,MAAM,CAAC;SAChB,OAAO,IAAI,CAAC;MACb;KACD,sBAAM,GAAN,UAAO,GAAW;SAChB,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;SACtB,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,EAAE,GAAG,GAAG,IAAI,GAAG,CAAC;SACjC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,GAAG,IAAI,GAAG,CAAC;SAChC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;SAC3B,OAAO,IAAI,CAAC;MACb;KACD,sBAAM,GAAN,UAAO,CAAS,EAAE,CAAS,EAAE,CAAS;SACpC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;SACX,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;SACX,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;SACX,OAAO,IAAI,CAAC;MACb;KACD,sBAAM,GAAN,UAAO,CAAS,EAAE,CAAS,EAAE,CAAS;SACpC,SAAS,OAAO,CAAC,CAAS,EAAE,CAAS,EAAE,CAAS;aAC9C,IAAI,CAAC,GAAG,CAAC;iBAAE,CAAC,IAAI,CAAC,CAAC;aAClB,IAAI,CAAC,GAAG,CAAC;iBAAE,CAAC,IAAI,CAAC,CAAC;aAClB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC;iBAAE,OAAO,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;aAC1C,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC;iBAAE,OAAO,CAAC,CAAC;aACxB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC;iBAAE,OAAO,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;aACpD,OAAO,CAAC,CAAC;UACV;;SAED,CAAC,GAAG,KAAK,CAAC,eAAe,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;SAChC,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;SACzB,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;SACzB,IAAI,CAAC,KAAK,CAAC,EAAE;aACX,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;UAC9B;cAAM;aACL,IAAM,CAAC,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;aACnD,IAAM,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;aACtB,IAAI,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;aAClC,IAAI,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;aAC1B,IAAI,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;UACnC;SACD,OAAO,IAAI,CAAC;MACb;KACD,wBAAQ,GAAR,UAAS,KAAa;SACpB,SAAS,WAAW,CAAC,KAAa;aAChC,IAAI,KAAK,KAAK,SAAS;iBAAE,OAAO;aAChC,IAAI,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE;iBACzB,OAAO,CAAC,IAAI,CAAC,kCAAkC,GAAG,KAAK,GAAG,mBAAmB,CAAC,CAAC;cAChF;UACF;SACD,IAAI,CAAC,CAAC;SACN,IAAI,CAAC,GAAG,iCAAiC,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;;aAErD,IAAI,KAAK,SAAA,CAAC;aACV,IAAM,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;aAClB,IAAM,UAAU,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;aACxB,QAAQ,IAAI;iBACV,KAAK,KAAK,CAAC;iBACX,KAAK,MAAM;qBACT,IAAI,KAAK,GAAG,+DAA+D,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE;;yBAE5F,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,GAAG,CAAC;yBACrD,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,GAAG,CAAC;yBACrD,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,GAAG,CAAC;yBACrD,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;yBACtB,OAAO,IAAI,CAAC;sBACb;qBACD,IAAI,KAAK,GAAG,qEAAqE,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE;;yBAElG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,GAAG,CAAC;yBACrD,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,GAAG,CAAC;yBACrD,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,GAAG,CAAC;yBACrD,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;yBACtB,OAAO,IAAI,CAAC;sBACb;qBACD,MAAM;iBACR,KAAK,KAAK,CAAC;iBACX,KAAK,MAAM;qBACT,IAAI,KAAK,GAAG,+EAA+E,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE;;yBAE5G,IAAM,CAAC,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;yBACrC,IAAM,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,GAAG,CAAC;yBACvC,IAAM,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,GAAG,CAAC;yBACvC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;yBACtB,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;sBAC7B;qBACD,MAAM;cACT;UACF;cAAM,IAAI,CAAC,GAAG,oBAAoB,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;;aAE/C,IAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;aACjB,IAAM,IAAI,GAAG,GAAG,CAAC,MAAM,CAAC;aACxB,IAAI,IAAI,KAAK,CAAC,EAAE;;iBAEd,IAAI,CAAC,CAAC,GAAG,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,GAAG,CAAC;iBAC3D,IAAI,CAAC,CAAC,GAAG,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,GAAG,CAAC;iBAC3D,IAAI,CAAC,CAAC,GAAG,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,GAAG,CAAC;iBAC3D,OAAO,IAAI,CAAC;cACb;kBAAM,IAAI,IAAI,KAAK,CAAC,EAAE;;iBAErB,IAAI,CAAC,CAAC,GAAG,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,GAAG,CAAC;iBAC3D,IAAI,CAAC,CAAC,GAAG,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,GAAG,CAAC;iBAC3D,IAAI,CAAC,CAAC,GAAG,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,GAAG,CAAC;iBAC3D,OAAO,IAAI,CAAC;cACb;UACF;SACD,IAAI,KAAK,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;;aAE7B,IAAM,GAAG,GAAG,aAAa,CAAC,KAAK,CAAC,CAAC;aACjC,IAAI,GAAG,KAAK,SAAS,EAAE;;iBAErB,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;cAClB;kBAAM;;iBAEL,OAAO,CAAC,IAAI,CAAC,6BAA6B,GAAG,KAAK,CAAC,CAAC;cACrD;UACF;SACD,OAAO,IAAI,CAAC;MACb;KACD,qBAAK,GAAL;SACE,OAAO,IAAK,IAAI,CAAC,WAAmB,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;MACnD;KACD,oBAAI,GAAJ,UAAK,KAAY;SACf,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;SACjB,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;SACjB,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;SACjB,OAAO,IAAI,CAAC;MACb;KACD,iCAAiB,GAAjB,UAAkB,KAAY,EAAE,WAAyB;SAAzB,4BAAA,EAAA,iBAAyB;SACvD,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC;SACxC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC;SACxC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC;SACxC,OAAO,IAAI,CAAC;MACb;KACD,iCAAiB,GAAjB,UAAkB,KAAY,EAAE,WAAiB;SAAjB,4BAAA,EAAA,iBAAiB;SAC/C,IAAM,WAAW,GAAG,CAAC,WAAW,GAAG,CAAC,KAAK,GAAG,GAAG,WAAW,IAAI,GAAG,CAAC;SAClE,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC;SACxC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC;SACxC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC;SACxC,OAAO,IAAI,CAAC;MACb;KACD,oCAAoB,GAApB;SACE,IAAM,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;SACzC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;SACf,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;SACf,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;SACf,OAAO,IAAI,CAAC;MACb;KACD,oCAAoB,GAApB;SACE,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SAC3B,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SAC3B,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SAC3B,OAAO,IAAI,CAAC;MACb;KACD,sBAAM,GAAN;SACE,OAAO,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,KAAK,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,KAAK,CAAC,CAAC;MACzE;KACD,4BAAY,GAAZ;SACE,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,CAAE,CAAC,CAAC,CAAC;MAC3D;KACD,sBAAM,GAAN,UAAO,GAA+B;SAA/B,oBAAA,EAAA,QAAa,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;;SAEpC,IAAM,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;SACzC,IAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;SAC9B,IAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;SAC9B,IAAI,GAAG,EAAE,UAAU,CAAC;SACpB,IAAM,SAAS,GAAG,CAAC,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;SACpC,IAAI,GAAG,KAAK,GAAG,EAAE;aACf,GAAG,GAAG,CAAC,CAAC;aACR,UAAU,GAAG,CAAC,CAAC;UAChB;cAAM;aACL,IAAM,KAAK,GAAG,GAAG,GAAG,GAAG,CAAC;aACxB,UAAU,GAAG,SAAS,IAAI,GAAG,GAAG,KAAK,IAAI,GAAG,GAAG,GAAG,CAAC,GAAG,KAAK,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;aAC9E,QAAQ,GAAG;iBACT,KAAK,CAAC;qBAAE,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;qBAAC,MAAM;iBACvD,KAAK,CAAC;qBAAE,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,KAAK,GAAG,CAAC,CAAC;qBAAC,MAAM;iBACzC,KAAK,CAAC;qBAAE,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,KAAK,GAAG,CAAC,CAAC;qBAAC,MAAM;cAC1C;aACD,GAAG,IAAI,CAAC,CAAC;UACV;SACD,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC;SACZ,GAAG,CAAC,CAAC,GAAG,UAAU,CAAC;SACnB,GAAG,CAAC,CAAC,GAAG,SAAS,CAAC;SAClB,OAAO,GAAG,CAAC;MACZ;KACD,wBAAQ,GAAR;SACE,OAAO,MAAM,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC;MACtG;KACD,yBAAS,GAAT,UAAU,CAAS,EAAE,CAAS,EAAE,CAAS;SACvC,IAAM,GAAG,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC;SAC1B,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC;SAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC;SAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC;SACnC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;SACjC,OAAO,IAAI,CAAC;MACb;KACD,mBAAG,GAAH,UAAI,KAAY;SACd,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC;SAClB,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC;SAClB,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC;SAClB,OAAO,IAAI,CAAC;MACb;KACD,yBAAS,GAAT,UAAU,MAAa,EAAE,MAAa;SACpC,IAAI,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;SAC7B,IAAI,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;SAC7B,IAAI,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;SAC7B,OAAO,IAAI,CAAC;MACb;KACD,yBAAS,GAAT,UAAU,CAAS;SACjB,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC;SACZ,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC;SACZ,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC;SACZ,OAAO,IAAI,CAAC;MACb;KACD,mBAAG,GAAH,UAAI,KAAY;SACd,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;SACvC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;SACvC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;SACvC,OAAO,IAAI,CAAC;MACb;KACD,wBAAQ,GAAR,UAAS,KAAY;SACnB,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC;SAClB,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC;SAClB,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC;SAClB,OAAO,IAAI,CAAC;MACb;KACD,8BAAc,GAAd,UAAe,CAAS;SACtB,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC;SACZ,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC;SACZ,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC;SACZ,OAAO,IAAI,CAAC;MACb;KACD,oBAAI,GAAJ,UAAK,KAAY,EAAE,KAAa;SAC9B,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC;SACrC,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC;SACrC,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC;SACrC,OAAO,IAAI,CAAC;MACb;KACD,sBAAM,GAAN,UAAO,CAAQ;SACb,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC;MACjE;KACD,yBAAS,GAAT,UAAU,KAA8B,EAAE,MAAkB;SAAlB,uBAAA,EAAA,UAAkB;SAC1D,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC;SACvB,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;SAC3B,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;SAC3B,OAAO,IAAI,CAAC;MACb;KACD,uBAAO,GAAP,UAAQ,KAAmC,EAAE,MAAkB;SAAvD,sBAAA,EAAA,UAAmC;SAAE,uBAAA,EAAA,UAAkB;SAC7D,KAAK,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;SACvB,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;SAC3B,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;SAC3B,OAAO,KAAK,CAAC;MACd;KACD,sBAAM,GAAN,UAAO,IAAS;SACd,OAAO,IAAI,CAAC,MAAM,EAAE,CAAC;MACtB;KACH,YAAC;CAAD,CAAC,IAAA;KACY,aAAa,GAAG,EAAE,WAAW,EAAE,QAAQ,EAAE,cAAc,EAAE,QAAQ,EAAE,MAAM,EAAE,QAAQ,EAAE,YAAY,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ;KAC3I,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,gBAAgB,EAAE,QAAQ,EAAE,MAAM,EAAE,QAAQ,EAAE,YAAY,EAAE,QAAQ;KAC9H,OAAO,EAAE,QAAQ,EAAE,WAAW,EAAE,QAAQ,EAAE,WAAW,EAAE,QAAQ,EAAE,YAAY,EAAE,QAAQ,EAAE,WAAW,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ;KACjI,gBAAgB,EAAE,QAAQ,EAAE,UAAU,EAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ,EAAE,MAAM,EAAE,QAAQ,EAAE,UAAU,EAAE,QAAQ,EAAE,UAAU,EAAE,QAAQ;KACnI,eAAe,EAAE,QAAQ,EAAE,UAAU,EAAE,QAAQ,EAAE,WAAW,EAAE,QAAQ,EAAE,UAAU,EAAE,QAAQ,EAAE,WAAW,EAAE,QAAQ,EAAE,aAAa,EAAE,QAAQ;KAC5I,gBAAgB,EAAE,QAAQ,EAAE,YAAY,EAAE,QAAQ,EAAE,YAAY,EAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ,EAAE,YAAY,EAAE,QAAQ,EAAE,cAAc,EAAE,QAAQ;KACjJ,eAAe,EAAE,QAAQ,EAAE,eAAe,EAAE,QAAQ,EAAE,eAAe,EAAE,QAAQ,EAAE,eAAe,EAAE,QAAQ,EAAE,YAAY,EAAE,QAAQ;KAClI,UAAU,EAAE,QAAQ,EAAE,aAAa,EAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ,EAAE,YAAY,EAAE,QAAQ,EAAE,WAAW,EAAE,QAAQ;KACtI,aAAa,EAAE,QAAQ,EAAE,aAAa,EAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ,EAAE,WAAW,EAAE,QAAQ,EAAE,YAAY,EAAE,QAAQ,EAAE,MAAM,EAAE,QAAQ;KACtI,WAAW,EAAE,QAAQ,EAAE,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,aAAa,EAAE,QAAQ,EAAE,MAAM,EAAE,QAAQ,EAAE,UAAU,EAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ;KAChJ,WAAW,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,UAAU,EAAE,QAAQ,EAAE,eAAe,EAAE,QAAQ,EAAE,WAAW,EAAE,QAAQ;KACvJ,cAAc,EAAE,QAAQ,EAAE,WAAW,EAAE,QAAQ,EAAE,YAAY,EAAE,QAAQ,EAAE,WAAW,EAAE,QAAQ,EAAE,sBAAsB,EAAE,QAAQ,EAAE,WAAW,EAAE,QAAQ;KACvJ,YAAY,EAAE,QAAQ,EAAE,WAAW,EAAE,QAAQ,EAAE,WAAW,EAAE,QAAQ,EAAE,aAAa,EAAE,QAAQ,EAAE,eAAe,EAAE,QAAQ,EAAE,cAAc,EAAE,QAAQ;KAClJ,gBAAgB,EAAE,QAAQ,EAAE,gBAAgB,EAAE,QAAQ,EAAE,gBAAgB,EAAE,QAAQ,EAAE,aAAa,EAAE,QAAQ,EAAE,MAAM,EAAE,QAAQ,EAAE,WAAW,EAAE,QAAQ;KACpJ,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,kBAAkB,EAAE,QAAQ,EAAE,YAAY,EAAE,QAAQ,EAAE,cAAc,EAAE,QAAQ;KAC1I,cAAc,EAAE,QAAQ,EAAE,gBAAgB,EAAE,QAAQ,EAAE,iBAAiB,EAAE,QAAQ,EAAE,mBAAmB,EAAE,QAAQ,EAAE,iBAAiB,EAAE,QAAQ;KAC7I,iBAAiB,EAAE,QAAQ,EAAE,cAAc,EAAE,QAAQ,EAAE,WAAW,EAAE,QAAQ,EAAE,WAAW,EAAE,QAAQ,EAAE,UAAU,EAAE,QAAQ,EAAE,aAAa,EAAE,QAAQ;KAClJ,MAAM,EAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,WAAW,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,WAAW,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ;KAC9I,eAAe,EAAE,QAAQ,EAAE,WAAW,EAAE,QAAQ,EAAE,eAAe,EAAE,QAAQ,EAAE,eAAe,EAAE,QAAQ,EAAE,YAAY,EAAE,QAAQ,EAAE,WAAW,EAAE,QAAQ;KACrJ,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,QAAQ,EAAE,YAAY,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE,WAAW,EAAE,QAAQ;KACxI,WAAW,EAAE,QAAQ,EAAE,aAAa,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,YAAY,EAAE,QAAQ,EAAE,UAAU,EAAE,QAAQ,EAAE,UAAU,EAAE,QAAQ;KACtI,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ,EAAE,WAAW,EAAE,QAAQ,EAAE,WAAW,EAAE,QAAQ,EAAE,WAAW,EAAE,QAAQ,EAAE,MAAM,EAAE,QAAQ;KAClJ,aAAa,EAAE,QAAQ,EAAE,WAAW,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,WAAW,EAAE,QAAQ;KACjJ,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,YAAY,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,aAAa,EAAE,QAAQ,EAAE;;CCzT/H;;;;;;AAMA;KAOE;SANA,aAAQ,GAAiB,IAAI,YAAY,CAAC;aACxC,CAAC,EAAE,CAAC,EAAE,CAAC;aACP,CAAC,EAAE,CAAC,EAAE,CAAC;aACP,CAAC,EAAE,CAAC,EAAE,CAAC;UACR,CAAC,CAAC;SACM,cAAS,GAAY,IAAI,CAAC;SAEjC,IAAI,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;aACxB,OAAO,CAAC,KAAK,CAAC,+EAA+E,CAAC,CAAC;UAChG;MACF;KACD,qBAAG,GAAH,UAAI,GAAW,EAAE,GAAW,EAAE,GAAW,EAAE,GAAW,EAAE,GAAW,EAAE,GAAW,EAAE,GAAW,EAAE,GAAW,EAAE,GAAW;SACrH,IAAM,EAAE,GAAiB,IAAI,CAAC,QAAQ,CAAC;SACvC,EAAE,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;SAAC,EAAE,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;SAAC,EAAE,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;SACtC,EAAE,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;SAAC,EAAE,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;SAAC,EAAE,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;SACtC,EAAE,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;SAAC,EAAE,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;SAAC,EAAE,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;SACtC,OAAO,IAAI,CAAC;MACb;KACD,0BAAQ,GAAR;SACE,IAAI,CAAC,GAAG,CACN,CAAC,EAAE,CAAC,EAAE,CAAC,EACP,CAAC,EAAE,CAAC,EAAE,CAAC,EACP,CAAC,EAAE,CAAC,EAAE,CAAC,CACR,CAAC;SACF,OAAO,IAAI,CAAC;MACb;KACD,uBAAK,GAAL;SACE,OAAO,IAAK,IAAI,CAAC,WAAmB,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;MACjE;KACD,sBAAI,GAAJ,UAAK,CAAU;SACb,IAAM,EAAE,GAAiB,CAAC,CAAC,QAAQ,CAAC;SACpC,IAAI,CAAC,GAAG,CACN,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EACnB,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EACnB,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CACpB,CAAC;SACF,OAAO,IAAI,CAAC;MACb;KACD,gCAAc,GAAd,UAAe,CAAU;SACvB,IAAM,EAAE,GAAiB,CAAC,CAAC,QAAQ,CAAC;SACpC,IAAI,CAAC,GAAG,CACN,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EACnB,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EACnB,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CACrB,CAAC;SACF,OAAO,IAAI,CAAC;MACb;KAED,qCAAmB,GAAnB,UAAoB,KAA8B,EAAE,MAAkB,EAAE,MAA6B;SAAjD,uBAAA,EAAA,UAAkB;SAAE,uBAAA,EAAA,SAAiB,KAAK,CAAC,MAAM;SACnG,IAAM,EAAE,GAAG,OAAO,CAAC,sBAAsB,CAAC;SAC1C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE;aACtD,EAAE,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;aACvB,EAAE,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;aACtB,EAAE,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;UACtB;SACD,OAAO,KAAK,CAAC;MACd;KAED,+BAAa,GAAb,UAAc,MAAW,EAAE,MAAkB,EAAE,MAAgD;SAApE,uBAAA,EAAA,UAAkB;SAAE,uBAAA,EAAA,SAAiB,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC,QAAQ;SAC7F,IAAM,EAAE,GAAG,OAAO,CAAC,gBAAgB,CAAC;SACpC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAG,EAAE,CAAC,EAAG,EAAE;aAClD,EAAE,CAAC,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aACtB,EAAE,CAAC,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aACtB,EAAE,CAAC,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aACtB,EAAE,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;aACtB,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;UACpC;SACD,OAAO,MAAM,CAAC;MACf;KACD,gCAAc,GAAd,UAAe,CAAS;SACtB,IAAM,EAAE,GAAiB,IAAI,CAAC,QAAQ,CAAC;SACvC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;SAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;SAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;SACnC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;SAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;SAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;SACnC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;SAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;SAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;SACnC,OAAO,IAAI,CAAC;MACb;KACD,6BAAW,GAAX;SACE,IAAM,EAAE,GAAiB,IAAI,CAAC,QAAQ,CAAC;SACvC,IAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,EACnC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,EAC/B,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;SAClC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;MAC9E;KACD,4BAAU,GAAV,UAAW,MAA+B,EAAE,iBAAkC;SAAnE,uBAAA,EAAA,aAAsB,OAAO,EAAE;SAAE,kCAAA,EAAA,yBAAkC;SAC5E,IAAM,EAAE,GAAiB,MAAM,CAAC,QAAQ,EACtC,EAAE,GAAiB,IAAI,CAAC,QAAQ,EAChC,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,EACrC,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,EACrC,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,EACrC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAC3B,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAC3B,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAC3B,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;SAC1C,IAAI,GAAG,KAAK,CAAC,EAAE;aACb,IAAM,GAAG,GAAG,mEAAmE,CAAC;aAChF,IAAI,iBAAiB,KAAK,IAAI,EAAE;iBAC9B,MAAM,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC;cACtB;kBAAM;iBACL,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;cACnB;aACD,OAAO,IAAI,CAAC,QAAQ,EAAE,CAAC;UACxB;SACD,IAAM,MAAM,GAAG,CAAC,GAAG,GAAG,CAAC;SACvB,EAAE,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,MAAM,CAAC;SACrB,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,MAAM,CAAC;SACzC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,MAAM,CAAC;SACzC,EAAE,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,MAAM,CAAC;SACrB,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,MAAM,CAAC;SACzC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,MAAM,CAAC;SACzC,EAAE,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,MAAM,CAAC;SACrB,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,MAAM,CAAC;SACzC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,MAAM,CAAC;SACzC,OAAO,IAAI,CAAC;MACb;KACD,2BAAS,GAAT;SACE,IAAI,GAAG,CAAC;SACR,IAAM,CAAC,GAAiB,IAAI,CAAC,QAAQ,CAAC;SACtC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;SAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;SAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;SACpC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;SAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;SAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;SACpC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;SAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;SAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;SACpC,OAAO,IAAI,CAAC;MACb;KACD,sCAAoB,GAApB,UAAqB,KAAmC,EAAE,MAAc;SAAnD,sBAAA,EAAA,UAAmC;SACtD,OAAO,CAAC,IAAI,CAAC,qDAAqD;aAC9D,8BAA8B,CAAC,CAAC;SACpC,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;MACpC;KACD,iCAAe,GAAf,UAAgB,OAAgB;SAC9B,OAAO,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,SAAS,EAAE,CAAC;MAClE;KACD,oCAAkB,GAAlB,UAAmB,CAA0B;SAC3C,IAAM,CAAC,GAAiB,IAAI,CAAC,QAAQ,CAAC;SACtb;KACD,2BAAS,GAAT,UAAU,KAA8B,EAAE,MAAkB;SAAlB,uBAAA,EAAA,UAAkB;SAC1D,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAG,EAAE;aAC3B,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC;UACtC;SACD,OAAO,IAAI,CAAC;MACb;KACD,yBAAO,GAAP,UAAQ,KAAmC,EAAE,MAAkB;SAAvD,sBAAA,EAAA,UAAmC;SAAE,uBAAA,EAAA,UAAkB;SAC7D,IAAM,EAAE,GAAiB,IAAI,CAAC,QAAQ,CAAC;SACvC,KAAK,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;SACtB,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;SAC1B,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;SAC1B,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;SAC1B,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;SAC1B,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;SAC1B,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;SAC1B,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;SAC1B,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,GAAI,EAAE,CAAC,CAAC,CAAC,CAAC;SAC3B,OAAO,KAAK,CAAC;MACd;KACD,iCAAe,GAAf,UAAgB,MAAe;SAC7B,OAAO,CAAC,IAAI,CAAC,8FAA8F,CAAC,CAAC;SAC7G,OAAO,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;MAClC;KACD,sCAAoB,GAApB,UAAqB,CAA0B;SAC7C,OAAO,CAAC,IAAI,CAAC,yGAAyG,CAAC,CAAC;SACxH,OAAO,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC;MACpC;KA1Hc,8BAAsB,GAAG,IAAI,OAAO,EAAE,CAAC;KAUvC,wBAAgB,GAAG,IAAI,OAAO,EAAE,CAAC;KAiHlD,cAAC;EA3KD;;CCRA;;;AAGA;KAOA;MA+BC;KA9BQ,mBAAK,GAAZ,UAAa,QAAa;SACxB,IAAM,MAAM,GAAG,EAAE,CAAC;SAClB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAG,EAAE;aACzC,IAAM,GAAG,GAAG,aAAa,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;aAC7C,KAAK,IAAI,CAAC,IAAI,GAAG,EAAE;iBACjB,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;cACpB;UACF;SACD,OAAO,MAAM,CAAC;MACf;KACM,mBAAK,GAAZ,UAAa,YAAiB;SAC5B,IAAM,YAAY,GAAG,EAAE,CAAC;SACxB,KAAK,IAAI,CAAC,IAAI,YAAY,EAAE;aAC1B,YAAY,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;aACrB,KAAK,IAAI,CAAC,IAAI,YAAY,CAAC,CAAC,CAAC,EAAE;iBAC7B,IAAM,aAAa,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;iBACzC,IAAI,aAAa,KAAK,aAAa,YAAY,KAAK;qBAClD,aAAa,YAAY,OAAO,IAAI,aAAa,YAAY,OAAO;qBACpE,aAAa,YAAY,OAAO,IAAI,aAAa,YAAY,OAAO,IAAI,aAAa,YAAY,OAAO;qBACxG,aAAa,YAAY,OAAO,CAAC,EAAE;qBACnC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,aAAa,CAAC,KAAK,EAAE,CAAC;kBAC5C;sBAAM,IAAI,KAAK,CAAC,OAAO,CAAC,aAAa,CAAC,EAAE;qBACvC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,aAAa,CAAC,KAAK,EAAE,CAAC;kBAC5C;sBAAM;qBACL,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,aAAa,CAAC;kBACpC;cACF;UACF;SACD,OAAO,YAAY,CAAC;MACrB;KACH,oBAAC;CAAD,CAAC;;ACzCD,yBAAe;KACf,qBAAqB;KACrB,EAAE;KACF,kDAAkD;KAClD,EAAE;KACF,QAAQ;KACR,EAAE;EACD,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;ACPb,8BAAe;KACf,qBAAqB;KACrB,EAAE;KACF,8BAA8B;KAC9B,EAAE;KACF,QAAQ;KACR,EAAE;EACD,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;ACPb,0BAAe;KACf,kBAAkB;KAClB,EAAE;KACF,6CAA6C;KAC7C,EAAE;KACF,QAAQ;KACR,EAAE;EACD,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;ACPb,sBAAe;KACf,kBAAkB;KAClB,EAAE;KACF,wFAAwF;KACxF,EAAE;KACF,sDAAsD;KACtD,EAAE;KACF,mDAAmD;KACnD,EAAE;KACF,uEAAuE;KACvE,EAAE;KACF,uHAAuH;KACvH,EAAE;KACF,SAAS;KACT,EAAE;KACF,QAAQ;KACR,EAAE;EACD,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;ACjBb,2BAAe;KACf,kBAAkB;KAClB,EAAE;KACF,2BAA2B;KAC3B,gCAAgC;KAChC,EAAE;KACF,QAAQ;EACP,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;ACPb,oBAAe;KACf,EAAE;KACF,sCAAsC;KACtC,EAAE;EACD,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;ACJb,0BAAe;KACf,EAAE;KACF,qCAAqC;KACrC,EAAE;EACD,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;ACJb,aAAe;KACf,wFAAwF;KACxF,EAAE;KACF,gFAAgF;KAChF,EAAE;KACF,GAAG;KACH,EAAE;KACF,+IAA+I;KAC/I,EAAE;KACF,+BAA+B;KAC/B,EAAE;KACF,2CAA2C;KAC3C,EAAE;KACF,mEAAmE;KACnE,wCAAwC;KACxC,uGAAuG;KACvG,sGAAsG;KACtG,yFAAyF;KACzF,oFAAoF;KACpF,sGAAsG;KACtG,sDAAsD;KACtD,EAAE;KACF,OAAO;KACP,EAAE;KACF,oFAAoF;KACpF,EAAE;KACF,QAAQ;KACR,EAAE;KACF,KAAK;KACL,EAAE;KACF,eAAe;KACf,GAAG;KACH,EAAE;KACF,2DAA2D;KAC3D,EAAE;KACF,uCAAuC;KACvC,EAAE;KACF,gBAAgB;KAChB,EAAE;KACF,EAAE;KACF,uEAAuE;KACvE,EAAE;KACF,sDAAsD;KACtD,8CAA8C;KAC9C,EAAE;KACF,2DAA2D;KAC3D,kEAAkE;KAClE,EAAE;KACF,4DAA4D;KAC5D,EAAE;KACF,gBAAgB;KAChB,EAAE;KACF,EAAE;KACF,4EAA4E;KAC5E,0EAA0E;KAC1E,kEAAkE;KAClE,yFAAyF;KACzF,EAAE;KACF,6CAA6C;KAC7C,EAAE;KACF,4BAA4B;KAC5B,EAAE;KACF,gEAAgE;KAChE,gEAAgE;KAChE,EAAE;KACF,4BAA4B;KAC5B,EAAE;KACF,gBAAgB;KAChB,EAAE;KACF,+HAA+H;KAC/H,mGAAmG;KACnG,EAAE;KACF,4BAA4B;KAC5B,EAAE;KACF,oEAAoE;KACpE,gEAAgE;KAChE,gEAAgE;KAChE,EAAE;KACF,wCAAwC;KACxC,GAAG;KACH,EAAE;KACF,EAAE;KACF,EAAE;KACF,4EAA4E;KAC5E,0EAA0E;KAC1E,kEAAkE;KAClE,6DAA6D;KAC7D,EAAE;KACF,4BAA4B;KAC5B,EAAE;KACF,sFAAsF;KACtF,EAAE;KACF,6CAA6C;KAC7C,EAAE;KACF,GAAG;KACH,EAAE;KACF,EAAE;KACF,4DAA4D;KAC5D,6JAA6J;KAC7J,EAAE;KACF,sDAAsD;KACtD,EAAE;KACF,0EAA0E;KAC1E,EAAE;KACF,6EAA6E;KAC7E,sEAAsE;KACtE,6DAA6D;KAC7D,qEAAqE;KACrE,EAAE;KACF,8CAA8C;KAC9C,EAAE;KACF,0DAA0D;KAC1D,EAAE;KACF,mCAAmC;KACnC,EAAE;KACF,wBAAwB;KACxB,EAAE;KACF,gBAAgB;KAChB,EAAE;KACF,EAAE;KACF,kHAAkH;KAClH,mIAAmI;KACnI,EAAE;KACF,sEAAsE;KACtE,EAAE;KACF,yDAAyD;KACzD,EAAE;KACF,mDAAmD;KACnD,EAAE;KACF,gCAAgC;KAChC,EAAE;KACF,qEAAqE;KACrE,EAAE;KACF,+CAA+C;KAC/C,EAAE;KACF,sCAAsC;KACtC,EAAE;KACF,gBAAgB;KAChB,EAAE;KACF,EAAE;KACF,mFAAmF;KACnF,EAAE;KACF,+DAA+D;KAC/D,eAAe;KACf,EAAE;KACF,GAAG;KACH,EAAE;KACF,wEAAwE;KACxE,EAAE;KACF,8EAA8E;KAC9E,EAAE;KACF,GAAG;KACH,EAAE;KACF,oKAAoK;KACpK,EAAE;KACF,0EAA0E;KAC1E,EAAE;KACF,+EAA+E;KAC/E,wEAAwE;KACxE,6DAA6D;KAC7D,qEAAqE;KACrE,EAAE;KACF,8CAA8C;KAC9C,EAAE;KACF,yDAAyD;KACzD,EAAE;KACF,8CAA8C;KAC9C,EAAE;KACF,wBAAwB;KACxB,EAAE;KACF,gBAAgB;KAChB,EAAE;KACF,2EAA2E;KAC3E,oEAAoE;KACpE,wDAAwD;KACxD,GAAG;KACH,EAAE;KACF,qEAAqE;KACrE,gDAAgD;KAChD,GAAG;KACH,EAAE;EACD,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;ACrLb,6BAAe;KACf,oBAAoB;KACpB,EAAE;KACF,6BAA6B;KAC7B,2BAA2B;KAC3B,EAAE;KACF,gFAAgF;KAChF,kEAAkE;KAClE,EAAE;KACF,sGAAsG;KACtG,EAAE;KACF,qBAAqB;KACrB,EAAE;KACF,6BAA6B;KAC7B,6BAA6B;KAC7B,EAAE;KACF,wDAAwD;KACxD,sEAAsE;KACtE,sEAAsE;KACtE,EAAE;KACF,4BAA4B;KAC5B,EAAE;KACF,IAAI;KACJ,EAAE;KACF,uEAAuE;KACvE,EAAE;KACF,oCAAoC;KACpC,oCAAoC;KACpC,uCAAuC;KACvC,EAAE;KACF,mCAAmC;KACnC,mCAAmC;KACnC,EAAE;KACF,oCAAoC;KACpC,EAAE;KACF,gEAAgE;KAChE,wDAAwD;KACxD,EAAE;KACF,IAAI;KACJ,EAAE;KACF,QAAQ;KACR,EAAE;EACD,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;AC1Cb,gCAAe;KACf,6BAA6B;KAC7B,EAAE;KACF,qDAAqD;KACrD,EAAE;KACF,qCAAqC;KACrC,6DAA6D;KAC7D,EAAE;KACF,IAAI;KACJ,EAAE;KACF,QAAQ;KACR,EAAE;EACD,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;ACZb,qCAAe;KACf,6BAA6B;KAC7B,EAAE;KACF,kDAAkD;KAClD,+BAA+B;KAC/B,SAAS;KACT,EAAE;KACF,sDAAsD;KACtD,EAAE;KACF,QAAQ;KACR,EAAE;EACD,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;ACXb,mCAAe;KACf,4EAA4E;KAC5E,8BAA8B;KAC9B,QAAQ;KACR,EAAE;EACD,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;ACLb,8BAAe;KACf,4EAA4E;KAC5E,oCAAoC;KACpC,QAAQ;KACR,EAAE;KACF,EAAE;EACD,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;ACNb,sBAAe;KACf,kBAAkB;KAClB,EAAE;KACF,8BAA8B;KAC9B,EAAE;KACF,QAAQ;EACP,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;ACNb,2BAAe;KACf,kBAAkB;KAClB,EAAE;KACF,uBAAuB;KACvB,EAAE;KACF,QAAQ;KACR,EAAE;EACD,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;ACPb,yBAAe;KACf,kBAAkB;KAClB,EAAE;KACF,uBAAuB;KACvB,EAAE;KACF,QAAQ;EACP,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;ACNb,oBAAe;KACf,kBAAkB;KAClB,EAAE;KACF,0BAA0B;KAC1B,EAAE;KACF,QAAQ;EACP,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;ACNb,cAAe;KACf,0BAA0B;KAC1B,2BAA2B;KAC3B,qCAAqC;KACrC,mCAAmC;KACnC,uBAAuB;KACvB,sBAAsB;KACtB,EAAE;KACF,0CAA0C;KAC1C,oDAAoD;KACpD,EAAE;KACF,gDAAgD;KAChD,kDAAkD;KAClD,kEAAkE;KAClE,+EAA+E;KAC/E,mFAAmF;KACnF,+IAA+I;KAC/I,wCAAwC;KACxC,6DAA6D;KAC7D,kEAAkE;KAClE,6BAA6B;KAC7B,GAAG;KACH,EAAE;KACF,wBAAwB;KACxB,cAAc;KACd,kBAAkB;KAClB,gBAAgB;KAChB,IAAI;KACJ,EAAE;KACF,yBAAyB;KACzB,sBAAsB;KACtB,uBAAuB;KACvB,wBAAwB;KACxB,yBAAyB;KACzB,IAAI;KACJ,EAAE;KACF,2BAA2B;KAC3B,iBAAiB;KACjB,eAAe;KACf,gBAAgB;KAChB,IAAI;KACJ,EAAE;KACF,EAAE;KACF,0DAA0D;KAC1D,EAAE;KACF,yDAAyD;KACzD,EAAE;KACF,GAAG;KACH,EAAE;KACF,kFAAkF;KAClF,iEAAiE;KACjE,EAAE;KACF,yDAAyD;KACzD,EAAE;KACF,GAAG;KACH,EAAE;KACF,kFAAkF;KAClF,EAAE;KACF,6DAA6D;KAC7D,EAAE;KACF,2CAA2C;KAC3C,EAAE;KACF,GAAG;KACH,EAAE;KACF,iFAAiF;KACjF,EAAE;KACF,2DAA2D;KAC3D,EAAE;KACF,GAAG;KACH,EAAE;KACF,oHAAoH;KACpH,EAAE;KACF,+HAA+H;KAC/H,EAAE;KACF,GAAG;KACH,EAAE;EACD,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;AC5Eb,mCAAe;KACf,4BAA4B;KAC5B,EAAE;KACF,qCAAqC;KACrC,EAAE;KACF,4CAA4C;KAC5C,sCAAsC;KACtC,iBAAiB;KACjB,0CAA0C;KAC1C,wCAAwC;KACxC,sCAAsC;KACtC,QAAQ;KACR,sCAAsC;KACtC,IAAI;KACJ,SAAS;KACT,wCAAwC;KACxC,sCAAsC;KACtC,QAAQ;KACR,sCAAsC;KACtC,IAAI;KACJ,eAAe;KACf,GAAG;KACH,gEAAgE;KAChE,qDAAqD;KACrD,EAAE;KACF,wEAAwE;KACxE,wDAAwD;KACxD,uCAAuC;KACvC,uCAAuC;KACvC,+CAA+C;KAC/C,+CAA+C;KAC/C,iDAAiD;KACjD,uEAAuE;KACvE,wCAAwC;KACxC,kCAAkC;KAClC,iDAAiD;KACjD,GAAG;KACH,EAAE;KACF,+DAA+D;KAC/D,0DAA0D;KAC1D,EAAE;KACF,wEAAwE;KACxE,sEAAsE;KACtE,0CAA0C;KAC1C,EAAE;KACF,+DAA+D;KAC/D,oDAAoD;KACpD,uDAAuD;KACvD,kDAAkD;KAClD,iEAAiE;KACjE,8DAA8D;KAC9D,6EAA6E;KAC7E,wEAAwE;KACxE,EAAE;KACF,+BAA+B;KAC/B,4CAA4C;KAC5C,EAAE;KACF,UAAU;KACV,eAAe;KACf,8CAA8C;KAC9C,EAAE;KACF,sCAAsC;KACtC,EAAE;KACF,mBAAmB;KACnB,qDAAqD;KACrD,oDAAoD;KACpD,0DAA0D;KAC1D,IAAI;KACJ,wBAAwB;KACxB,oDAAoD;KACpD,uDAAuD;KACvD,0DAA0D;KAC1D,IAAI;KACJ,wBAAwB;KACxB,oDAAoD;KACpD,2DAA2D;KAC3D,0DAA0D;KAC1D,IAAI;KACJ,wBAAwB;KACxB,oDAAoD;KACpD,mDAAmD;KACnD,4DAA4D;KAC5D,IAAI;KACJ,wBAAwB;KACxB,qDAAqD;KACrD,sDAAsD;KACtD,4DAA4D;KAC5D,IAAI;KACJ,SAAS;KACT,qDAAqD;KACrD,0DAA0D;KAC1D,4DAA4D;KAC5D,IAAI;KACJ,oBAAoB;KACpB,mDAAmD;KACnD,sDAAsD;KACtD,4CAA4C;KAC5C,mDAAmD;KACnD,GAAG;KACH,EAAE;KACF,+DAA+D;KAC/D,EAAE;KACF,iEAAiE;KACjE,mDAAmD;KACnD,kCAAkC;KAClC,uBAAuB;KACvB,iCAAiC;KACjC,kEAAkE;KAClE,uBAAuB;KACvB,4BAA4B;KAC5B,+BAA+B;KAC/B,wCAAwC;KACxC,EAAE;KACF,0DAA0D;KAC1D,0CAA0C;KAC1C,EAAE;KACF,+BAA+B;KAC/B,0DAA0D;KAC1D,gEAAgE;KAChE,EAAE;KACF,0DAA0D;KAC1D,gEAAgE;KAChE,EAAE;KACF,0CAA0C;KAC1C,EAAE;KACF,gCAAgC;KAChC,GAAG;KACH,EAAE;KACF,QAAQ;KACR,EAAE;EACD,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;AClIb,4BAAe;KACf,mBAAmB;KACnB,EAAE;KACF,gCAAgC;KAChC,EAAE;KACF,QAAQ;KACR,EAAE;KACF,uDAAuD;KACvD,EAAE;EACD,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;ACTb,mCAAe;KACf,4BAA4B;KAC5B,EAAE;KACF,qCAAqC;KACrC,mCAAmC;KACnC,kCAAkC;KAClC,EAAE;KACF,QAAQ;KACR,EAAE;EACD,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;ACTb,8BAAe;KACf,4BAA4B;KAC5B,EAAE;KACF,yGAAyG;KACzG,EAAE;KACF,QAAQ;KACR,EAAE;EACD,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;ACPb,4BAAe;KACf,wBAAwB;KACxB,EAAE;KACF,sDAAsD;KACtD,EAAE;KACF,qEAAqE;KACrE,EAAE;KACF,8CAA8C;KAC9C,EAAE;KACF,QAAQ;KACR,EAAE;EACD,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;ACXb,iCAAe;KACf,wBAAwB;KACxB,EAAE;KACF,iCAAiC;KACjC,EAAE;KACF,QAAQ;KACR,EAAE;EACD,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;ACPb,0BAAe;KACf,uDAAuD;KACvD,EAAE;EACD,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;ACHb,+BAAe;KACf,yJAAyJ;KACzJ,EAAE;KACF,wCAAwC;KACxC,iBAAiB;KACjB,GAAG;KACH,EAAE;KACF,6DAA6D;KAC7D,kEAAkE;KAClE,GAAG;KACH,6DAA6D;KAC7D,wEAAwE;KACxE,GAAG;KACH,EAAE;KACF,sCAAsC;KACtC,sLAAsL;KACtL,GAAG;KACH,sCAAsC;KACtC,uKAAuK;KACvK,GAAG;KACH,EAAE;KACF,sCAAsC;KACtC,oEAAoE;KACpE,GAAG;KACH,sCAAsC;KACtC,iEAAiE;KACjE,sEAAsE;KACtE,sEAAsE;KACtE,wDAAwD;KACxD,GAAG;KACH,EAAE;KACF,+FAA+F;KAC/F,yDAAyD;KACzD,uDAAuD;KACvD,GAAG;KACH,yDAAyD;KACzD,2DAA2D;KAC3D,wDAAwD;KACxD,6CAA6C;KAC7C,mDAAmD;KACnD,GAAG;KACH,EAAE;KACF,+FAA+F;KAC/F,yDAAyD;KACzD,yEAAyE;KACzE,GAAG;KACH,yDAAyD;KACzD,6DAA6D;KAC7D,mDAAmD;KACnD,oDAAoD;KACpD,iEAAiE;KACjE,GAAG;KACH,EAAE;KACF,uFAAuF;KACvF,EAAE;KACF,2BAA2B;KAC3B,uGAAuG;KACvG,yCAAyC;KACzC,0CAA0C;KAC1C,uDAAuD;KACvD,iBAAiB;KACjB,4CAA4C;KAC5C,+CAA+C;KAC/C,0BAA0B;KAC1B,4DAA4D;KAC5D,mBAAmB;KACnB,GAAG;KACH,EAAE;KACF,mCAAmC;KACnC,mHAAmH;KACnH,wCAAwC;KACxC,yCAAyC;KACzC,mBAAmB;KACnB,2CAA2C;KAC3C,wCAAwC;KACxC,wCAAwC;KACxC,gDAAgD;KAChD,uCAAuC;KACvC,GAAG;KACH,EAAE;EACD,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;AChFb,uBAAe;KACf,mBAAmB;KACnB,EAAE;KACF,6EAA6E;KAC7E,EAAE;KACF,uEAAuE;KACvE,EAAE;KACF,kEAAkE;KAClE,uEAAuE;KACvE,EAAE;KACF,iCAAiC;KACjC,EAAE;KACF,8DAA8D;KAC9D,EAAE;KACF,SAAS;KACT,EAAE;KACF,+EAA+E;KAC/E,EAAE;KACF,UAAU;KACV,EAAE;KACF,QAAQ;KACR,EAAE;KACF,+BAA+B;KAC/B,EAAE;KACF,SAAS;KACT,EAAE;KACF,0BAA0B;KAC1B,EAAE;KACF,yGAAyG;KACzG,EAAE;KACF,uCAAuC;KACvC,EAAE;KACF,kBAAkB;KAClB,mEAAmE;KACnE,qGAAqG;KACrG,kDAAkD;KAClD,EAAE;KACF,sCAAsC;KACtC,EAAE;KACF,sHAAsH;KACtH,oEAAoE;KACpE,EAAE;KACF,QAAQ;KACR,EAAE;KACF,gCAAgC;KAChC,EAAE;KACF,SAAS;KACT,EAAE;KACF,8CAA8C;KAC9C,EAAE;KACF,kCAAkC;KAClC,EAAE;KACF,wGAAwG;KACxG,EAAE;KACF,uCAAuC;KACvC,EAAE;KACF,wFAAwF;KACxF,EAAE;KACF,uCAAuC;KACvC,EAAE;KACF,oEAAoE;KACpE,EAAE;KACF,SAAS;KACT,EAAE;KACF,QAAQ;KACR,EAAE;EACD,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;AClEb,4BAAe;KACf,kDAAkD;KAClD,8BAA8B;KAC9B,iCAAiC;KACjC,QAAQ;KACR,EAAE;KACF,mBAAmB;KACnB,EAAE;KACF,0GAA0G;KAC1G,gCAAgC;KAChC,SAAS;KACT,EAAE;KACF,0BAA0B;KAC1B,+BAA+B;KAC/B,QAAQ;KACR,6BAA6B;KAC7B,SAAS;KACT,4BAA4B;KAC5B,EAAE;KACF,oGAAoG;KACpG,kCAAkC;KAClC,QAAQ;KACR,0BAA0B;KAC1B,SAAS;KACT,EAAE;KACF,QAAQ;KACR,EAAE;EACD,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;AC3Bb,0BAAe;KACf,mBAAmB;KACnB,EAAE;KACF,6EAA6E;KAC7E,gCAAgC;KAChC,EAAE;KACF,QAAQ;KACR,EAAE;KACF,0BAA0B;KAC1B,kCAAkC;KAClC,EAAE;KACF,SAAS;KACT,EAAE;KACF,QAAQ;KACR,EAAE;EACD,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;ACfb,qBAAe;KACf,mBAAmB;KACnB,EAAE;KACF,6EAA6E;KAC7E,EAAE;KACF,uCAAuC;KACvC,EAAE;KACF,QAAQ;KACR,EAAE;KACF,0EAA0E;KAC1E,EAAE;KACF,kFAAkF;KAClF,EAAE;KACF,iCAAiC;KACjC,EAAE;KACF,uDAAuD;KACvD,EAAE;KACF,SAAS;KACT,EAAE;KACF,wEAAwE;KACxE,EAAE;KACF,UAAU;KACV,EAAE;KACF,SAAS;KACT,EAAE;KACF,QAAQ;KACR,EAAE;EACD,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;AC3Bb,oBAAe;KACf,gBAAgB;KAChB,EAAE;KACF,6BAA6B;KAC7B,EAAE;KACF,mDAAmD;KACnD,EAAE;KACF,QAAQ;KACR,EAAE;KACF,kDAAkD;KAClD,EAAE;KACF,SAAS;KACT,EAAE;KACF,kBAAkB;KAClB,EAAE;KACF,kGAAkG;KAClG,EAAE;KACF,QAAQ;KACR,EAAE;KACF,2DAA2D;KAC3D,EAAE;KACF,SAAS;KACT,EAAE;KACF,mEAAmE;KACnE,EAAE;KACF,QAAQ;KACR,EAAE;EACD,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;AC3Bb,yBAAe;KACf,gBAAgB;KAChB,EAAE;KACF,yBAAyB;KACzB,EAAE;KACF,kBAAkB;KAClB,EAAE;KACF,6BAA6B;KAC7B,EAAE;KACF,QAAQ;KACR,EAAE;KACF,0BAA0B;KAC1B,yBAAyB;KACzB,SAAS;KACT,EAAE;KACF,QAAQ;EACP,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;AChBb,yBAAe;KACf,qBAAqB;KACrB,EAAE;KACF,uKAAuK;KACvK,EAAE;KACF,QAAQ;KACR,EAAE;EACD,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;ACPb,8BAAe;KACf,qBAAqB;KACrB,EAAE;KACF,8BAA8B;KAC9B,mCAAmC;KACnC,EAAE;KACF,QAAQ;EACP,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;ACPb,6BAAe;KACf,6BAA6B;KAC7B,EAAE;KACF,4BAA4B;KAC5B,qCAAqC;KACrC,mDAAmD;KACnD,kDAAkD;KAClD,EAAE;KACF,gCAAgC;KAChC,4CAA4C;KAC5C,yCAAyC;KACzC,0CAA0C;KAC1C,EAAE;KACF,4BAA4B;KAC5B,EAAE;KACF,qBAAqB;KACrB,4BAA4B;KAC5B,QAAQ;KACR,EAAE;KACF,4BAA4B;KAC5B,cAAc;KACd,gCAAgC;KAChC,EAAE;KACF,0BAA0B;KAC1B,EAAE;KACF,kDAAkD;KAClD,EAAE;KACF,6EAA6E;KAC7E,EAAE;KACF,0DAA0D;KAC1D,sDAAsD;KACtD,EAAE;KACF,gEAAgE;KAChE,EAAE;KACF,uBAAuB;KACvB,EAAE;KACF,iEAAiE;KACjE,EAAE;KACF,UAAU;KACV,EAAE;KACF,IAAI;KACJ,EAAE;KACF,QAAQ;KACR,EAAE;KACF,yBAAyB;KACzB,EAAE;KACF,iDAAiD;KACjD,EAAE;KACF,2EAA2E;KAC3E,EAAE;KACF,0DAA0D;KAC1D,sDAAsD;KACtD,EAAE;KACF,gEAAgE;KAChE,EAAE;KACF,uBAAuB;KACvB,EAAE;KACF,iEAAiE;KACjE,EAAE;KACF,UAAU;KACV,IAAI;KACJ,EAAE;KACF,QAAQ;KACR,EAAE;KACF,wBAAwB;KACxB,EAAE;KACF,gDAAgD;KAChD,EAAE;KACF,yFAAyF;KACzF,EAAE;KACF,0DAA0D;KAC1D,sDAAsD;KACtD,EAAE;KACF,gEAAgE;KAChE,EAAE;KACF,uBAAuB;KACvB,EAAE;KACF,iEAAiE;KACjE,EAAE;KACF,UAAU;KACV,EAAE;KACF,IAAI;KACJ,EAAE;KACF,QAAQ;KACR,EAAE;KACF,yBAAyB;KACzB,EAAE;KACF,iDAAiD;KACjD,EAAE;KACF,mFAAmF;KACnF,EAAE;KACF,uBAAuB;KACvB,EAAE;KACF,uFAAuF;KACvF,EAAE;KACF,UAAU;KACV,EAAE;KACF,IAAI;KACJ,EAAE;KACF,QAAQ;KACR,EAAE;EACD,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;ACrGb,mBAAe;KACf,iCAAiC;KACjC,EAAE;KACF,qEAAqE;KACrE,EAAE;KACF,uCAAuC;KACvC,EAAE;KACF,oCAAoC;KACpC,EAAE;KACF,qBAAqB;KACrB,EAAE;KACF,SAAS;KACT,EAAE;KACF,qBAAqB;KACrB,EAAE;KACF,GAAG;KACH,EAAE;KACF,wBAAwB;KACxB,EAAE;KACF,4BAA4B;KAC5B,mBAAmB;KACnB,eAAe;KACf,EAAE;KACF,eAAe;KACf,qBAAqB;KACrB,uBAAuB;KACvB,uBAAuB;KACvB,KAAK;KACL,EAAE;KACF,gEAAgE;KAChE,EAAE;KACF,8JAA8J;KAC9J,EAAE;KACF,+CAA+C;KAC/C,uDAAuD;KACvD,+BAA+B;KAC/B,EAAE;KACF,IAAI;KACJ,EAAE;KACF,QAAQ;KACR,EAAE;KACF,EAAE;KACF,0BAA0B;KAC1B,EAAE;KACF,sBAAsB;KACtB,kBAAkB;KAClB,eAAe;KACf,mBAAmB;KACnB,gBAAgB;KAChB,EAAE;KACF,eAAe;KACf,qBAAqB;KACrB,uBAAuB;KACvB,uBAAuB;KACvB,KAAK;KACL,EAAE;KACF,sDAAsD;KACtD,EAAE;KACF,2GAA2G;KAC3G,4IAA4I;KAC5I,EAAE;KACF,2DAA2D;KAC3D,iDAAiD;KACjD,EAAE;KACF,4CAA4C;KAC5C,EAAE;KACF,mEAAmE;KACnE,EAAE;KACF,0CAA0C;KAC1C,2HAA2H;KAC3H,EAAE;KACF,gCAAgC;KAChC,EAAE;KACF,YAAY;KACZ,EAAE;KACF,qCAAqC;KACrC,iCAAiC;KACjC,EAAE;KACF,KAAK;KACL,EAAE;KACF,IAAI;KACJ,EAAE;KACF,QAAQ;KACR,EAAE;KACF,EAAE;KACF,yBAAyB;KACzB,EAAE;KACF,qBAAqB;KACrB,kBAAkB;KAClB,mBAAmB;KACnB,eAAe;KACf,mBAAmB;KACnB,gBAAgB;KAChB,kBAAkB;KAClB,sBAAsB;KACtB,EAAE;KACF,eAAe;KACf,qBAAqB;KACrB,uBAAuB;KACvB,uBAAuB;KACvB,KAAK;KACL,EAAE;KACF,mDAAmD;KACnD,EAAE;KACF,2GAA2G;KAC3G,0IAA0I;KAC1I,EAAE;KACF,0DAA0D;KAC1D,iDAAiD;KACjD,EAAE;KACF,4CAA4C;KAC5C,uEAAuE;KACvE,EAAE;KACF,gHAAgH;KAChH,EAAE;KACF,yFAAyF;KACzF,EAAE;KACF,yCAAyC;KACzC,sIAAsI;KACtI,EAAE;KACF,gCAAgC;KAChC,EAAE;KACF,YAAY;KACZ,EAAE;KACF,qCAAqC;KACrC,iCAAiC;KACjC,EAAE;KACF,KAAK;KACL,EAAE;KACF,IAAI;KACJ,EAAE;KACF,QAAQ;KACR,EAAE;KACF,EAAE;KACF,yBAAyB;KACzB,EAAE;KACF,2BAA2B;KAC3B,mBAAmB;KACnB,kBAAkB;KAClB,qBAAqB;KACrB,KAAK;KACL,EAAE;KACF,+DAA+D;KAC/D,EAAE;KACF,gHAAgH;KAChH,EAAE;KACF,8DAA8D;KAC9D,gDAAgD;KAChD,EAAE;KACF,0FAA0F;KAC1F,EAAE;KACF,qCAAqC;KACrC,EAAE;KACF,sBAAsB;KACtB,EAAE;KACF,UAAU;KACV,EAAE;KACF,sBAAsB;KACtB,EAAE;KACF,IAAI;KACJ,EAAE;KACF,QAAQ;KACR,EAAE;KACF,EAAE;KACF,kDAAkD;KAClD,EAAE;KACF,6JAA6J;KAC7J,EAAE;KACF,0BAA0B;KAC1B,EAAE;KACF,gFAAgF;KAChF,EAAE;KACF,2BAA2B;KAC3B,EAAE;KACF,qFAAqF;KACrF,EAAE;KACF,mHAAmH;KACnH,mGAAmG;KACnG,EAAE;KACF,2BAA2B;KAC3B,EAAE;KACF,qFAAqF;KACrF,EAAE;KACF,UAAU;KACV,EAAE;KACF,iFAAiF;KACjF,+EAA+E;KAC/E,EAAE;KACF,WAAW;KACX,EAAE;KACF,8DAA8D;KAC9D,EAAE;KACF,wCAAwC;KACxC,EAAE;KACF,qFAAqF;KACrF,uDAAuD;KACvD,EAAE;KACF,SAAS;KACT,EAAE;KACF,oCAAoC;KACpC,EAAE;KACF,UAAU;KACV,EAAE;KACF,kDAAkD;KAClD,EAAE;KACF,IAAI;KACJ,EAAE;KACF,2GAA2G;KAC3G,iGAAiG;KACjG,EAAE;KACF,wDAAwD;KACxD,qHAAqH;KACrH,EAAE;KACF,mDAAmD;KACnD,6GAA6G;KAC7G,EAAE;KACF,qCAAqC;KACrC,4DAA4D;KAC5D,EAAE;KACF,IAAI;KACJ,EAAE;KACF,kMAAkM;KAClM,EAAE;KACF,iCAAiC;KACjC,EAAE;KACF,qEAAqE;KACrE,EAAE;KACF,SAAS;KACT,EAAE;KACF,sFAAsF;KACtF,EAAE;KACF,UAAU;KACV,EAAE;KACF,0BAA0B;KAC1B,EAAE;KACF,qEAAqE;KACrE,EAAE;KACF,wFAAwF;KACxF,EAAE;KACF,2BAA2B;KAC3B,EAAE;KACF,0FAA0F;KAC1F,EAAE;KACF,2BAA2B;KAC3B,EAAE;KACF,wFAAwF;KACxF,EAAE;KACF,UAAU;KACV,EAAE;KACF,kFAAkF;KAClF,EAAE;KACF,WAAW;KACX,EAAE;KACF,8DAA8D;KAC9D,EAAE;KACF,wCAAwC;KACxC,EAAE;KACF,0FAA0F;KAC1F,4GAA4G;KAC5G,EAAE;KACF,wCAAwC;KACxC,EAAE;KACF,mBAAmB;KACnB,oEAAoE;KACpE,sGAAsG;KACtG,EAAE;KACF,2BAA2B;KAC3B,EAAE;KACF,+EAA+E;KAC/E,EAAE;KACF,UAAU;KACV,EAAE;KACF,yEAAyE;KACzE,EAAE;KACF,WAAW;KACX,EAAE;KACF,8DAA8D;KAC9D,EAAE;KACF,uCAAuC;KACvC,EAAE;KACF,qHAAqH;KACrH,EAAE;KACF,2BAA2B;KAC3B,EAAE;KACF,iGAAiG;KACjG,EAAE;KACF,UAAU;KACV,EAAE;KACF,2FAA2F;KAC3F,EAAE;KACF,WAAW;KACX,EAAE;KACF,8DAA8D;KAC9D,EAAE;KACF,UAAU;KACV,EAAE;KACF,6CAA6C;KAC7C,EAAE;KACF,IAAI;KACJ,EAAE;KACF,QAAQ;KACR,EAAE;EACD,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;AC9Sb,6BAAe;KACf,8BAA8B;KAC9B,2CAA2C;KAC3C,oCAAoC;KACpC,yCAAyC;KACzC,+CAA+C;KAC/C,EAAE;EACD,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;ACPb,kCAAe;KACf,6BAA6B;KAC7B,EAAE;KACF,qBAAqB;KACrB,EAAE;KACF,wBAAwB;KACxB,EAAE;KACF,QAAQ;KACR,EAAE;KACF,EAAE;KACF,6BAA6B;KAC7B,EAAE;KACF,qBAAqB;KACrB,sBAAsB;KACtB,2BAA2B;KAC3B,0BAA0B;KAC1B,EAAE;KACF,IAAI;KACJ,EAAE;KACF,kLAAkL;KAClL,EAAE;KACF,2EAA2E;KAC3E,EAAE;KACF,+CAA+C;KAC/C,EAAE;KACF,oCAAoC;KACpC,EAAE;KACF,uCAAuC;KACvC,EAAE;KACF,SAAS;KACT,EAAE;KACF,8FAA8F;KAC9F,mLAAmL;KACnL,EAAE;KACF,GAAG;KACH,EAAE;KACF,iLAAiL;KACjL,EAAE;KACF,gGAAgG;KAChG,EAAE;KACF,GAAG;KACH,EAAE;KACF,2CAA2C;KAC3C,2DAA2D;KAC3D,EAAE;KACF,gDAAgD;KAChD,EAAE;EACD,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;AC/Cb,gCAAe;KACf,4BAA4B;KAC5B,uEAAuE;KACvE,mEAAmE;KACnE,iBAAiB;KACjB,2GAA2G;KAC3G,OAAO;KACP,kIAAkI;KAClI,wEAAwE;KACxE,wEAAwE;KACxE,QAAQ;KACR,EAAE;EACD,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;ACZb,qCAAe;KACf,2BAA2B;KAC3B,EAAE;KACF,qBAAqB;KACrB,2BAA2B;KAC3B,sBAAsB;KACtB,EAAE;KACF,mBAAmB;KACnB,oBAAoB;KACpB,6BAA6B;KAC7B,SAAS;KACT,EAAE;KACF,IAAI;KACJ,EAAE;KACF,2CAA2C;KAC3C,2CAA2C;KAC3C,EAAE;KACF,6FAA6F;KAC7F,8EAA8E;KAC9E,EAAE;KACF,4IAA4I;KAC5I,EAAE;KACF,GAAG;KACH,EAAE;KACF,8KAA8K;KAC9K,EAAE;KACF,2EAA2E;KAC3E,EAAE;KACF,+CAA+C;KAC/C,EAAE;KACF,oCAAoC;KACpC,EAAE;KACF,uCAAuC;KACvC,EAAE;KACF,SAAS;KACT,EAAE;KACF,mBAAmB;KACnB,uGAAuG;KACvG,QAAQ;KACR,6BAA6B;KAC7B,SAAS;KACT,EAAE;KACF,yKAAyK;KACzK,uHAAuH;KACvH,EAAE;KACF,mBAAmB;KACnB,EAAE;KACF,qLAAqL;KACrL,EAAE;KACF,SAAS;KACT,EAAE;KACF,GAAG;KACH,EAAE;KACF,6KAA6K;KAC7K,EAAE;KACF,gGAAgG;KAChG,EAAE;KACF,GAAG;KACH,EAAE;KACF,6MAA6M;KAC7M,EAAE;KACF,mBAAmB;KACnB,uEAAuE;KACvE,wBAAwB;KACxB,uGAAuG;KACvG,QAAQ;KACR,6BAA6B;KAC7B,SAAS;KACT,EAAE;KACF,wKAAwK;KACxK,EAAE;KACF,mBAAmB;KACnB,EAAE;KACF,6LAA6L;KAC7L,EAAE;KACF,SAAS;KACT,EAAE;KACF,GAAG;KACH,EAAE;KACF,yCAAyC;KACzC,yDAAyD;KACzD,2DAA2D;KAC3D,EAAE;KACF,iHAAiH;KACjH,4HAA4H;KAC5H,EAAE;KACF,yGAAyG;KACzG,qHAAqH;KACrH,EAAE;KACF,iHAAiH;KACjH,EAAE;KACF,GAAG;KACH,EAAE;EACD,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;AC7Fb,uBAAe;KACf,IAAI;KACJ,oGAAoG;KACpG,uCAAuC;KACvC,IAAI;KACJ,0BAA0B;KAC1B,0FAA0F;KAC1F,gHAAgH;KAChH,2GAA2G;KAC3G,IAAI;KACJ,UAAU;KACV,+BAA+B;KAC/B,iCAAiC;KACjC,6DAA6D;KAC7D,IAAI;KACJ,EAAE;KACF,4BAA4B;KAC5B,EAAE;KACF,sCAAsC;KACtC,2BAA2B;KAC3B,gDAAgD;KAChD,EAAE;KACF,4BAA4B;KAC5B,EAAE;KACF,sDAAsD;KACtD,EAAE;KACF,yBAAyB;KACzB,EAAE;KACF,kDAAkD;KAClD,EAAE;KACF,kCAAkC;KAClC,EAAE;KACF,uEAAuE;KACvE,EAAE;KACF,wBAAwB;KACxB,gOAAgO;KAChO,UAAU;KACV,EAAE;KACF,iEAAiE;KACjE,EAAE;KACF,IAAI;KACJ,EAAE;KACF,QAAQ;KACR,EAAE;KACF,qDAAqD;KACrD,EAAE;KACF,uBAAuB;KACvB,EAAE;KACF,iDAAiD;KACjD,EAAE;KACF,gCAAgC;KAChC,EAAE;KACF,qEAAqE;KACrE,EAAE;KACF,wBAAwB;KACxB,qNAAqN;KACrN,UAAU;KACV,EAAE;KACF,iEAAiE;KACjE,EAAE;KACF,IAAI;KACJ,EAAE;KACF,QAAQ;KACR,EAAE;KACF,oDAAoD;KACpD,EAAE;KACF,qCAAqC;KACrC,EAAE;KACF,gDAAgD;KAChD,EAAE;KACF,8CAA8C;KAC9C,EAAE;KACF,mFAAmF;KACnF,EAAE;KACF,wBAAwB;KACxB,+PAA+P;KAC/P,UAAU;KACV,EAAE;KACF,iEAAiE;KACjE,EAAE;KACF,IAAI;KACJ,EAAE;KACF,QAAQ;KACR,EAAE;KACF,mCAAmC;KACnC,EAAE;KACF,oEAAoE;KACpE,EAAE;KACF,sBAAsB;KACtB,EAAE;KACF,kFAAkF;KAClF,EAAE;KACF,qCAAqC;KACrC,EAAE;KACF,uGAAuG;KACvG,EAAE;KACF,UAAU;KACV,EAAE;KACF,qCAAqC;KACrC,EAAE;KACF,SAAS;KACT,EAAE;KACF,8BAA8B;KAC9B,EAAE;KACF,kDAAkD;KAClD,EAAE;KACF,mFAAmF;KACnF,EAAE;KACF,KAAK;KACL,EAAE;KACF,SAAS;KACT,EAAE;KACF,qFAAqF;KACrF,EAAE;KACF,gDAAgD;KAChD,kFAAkF;KAClF,EAAE;KACF,SAAS;KACT,EAAE;KACF,wEAAwE;KACxE,EAAE;KACF,QAAQ;KACR,EAAE;KACF,6DAA6D;KAC7D,EAAE;KACF,+CAA+C;KAC/C,qIAAqI;KACrI,EAAE;KACF,mBAAmB;KACnB,yJAAyJ;KACzJ,QAAQ;KACR,yCAAyC;KACzC,SAAS;KACT,IAAI;KACJ,0FAA0F;KAC1F,EAAE;KACF,QAAQ;KACR,EAAE;EACD,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;AC1Ib,4BAAe;KACf,8DAA8D;KAC9D,EAAE;KACF,4DAA4D;KAC5D,EAAE;KACF,QAAQ;EACP,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;ACNb,iCAAe;KACf,wBAAwB;KACxB,EAAE;KACF,+BAA+B;KAC/B,EAAE;KACF,6BAA6B;KAC7B,EAAE;KACF,6BAA6B;KAC7B,EAAE;KACF,SAAS;KACT,EAAE;KACF,QAAQ;KACR,EAAE;EACD,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;ACbb,+BAAe;KACf,wBAAwB;KACxB,EAAE;KACF,6BAA6B;KAC7B,EAAE;KACF,6BAA6B;KAC7B,EAAE;KACF,SAAS;KACT,EAAE;KACF,+BAA+B;KAC/B,EAAE;KACF,QAAQ;EACP,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;ACZb,0BAAe;KACf,wBAAwB;KACxB,EAAE;KACF,6EAA6E;KAC7E,EAAE;KACF,6BAA6B;KAC7B,EAAE;KACF,qCAAqC;KACrC,EAAE;KACF,QAAQ;KACR,EAAE;KACF,0DAA0D;KAC1D,EAAE;KACF,SAAS;KACT,EAAE;KACF,QAAQ;KACR,EAAE;EACD,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;ACjBb,oBAAe;KACf,gBAAgB;KAChB,EAAE;KACF,2CAA2C;KAC3C,EAAE;KACF,+CAA+C;KAC/C,8BAA8B;KAC9B,EAAE;KACF,QAAQ;KACR,EAAE;EACD,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;ACVb,yBAAe;KACf,gBAAgB;KAChB,EAAE;KACF,yBAAyB;KACzB,EAAE;KACF,QAAQ;KACR,EAAE;EACD,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;ACPb,6BAAe;KACf,gBAAgB;KAChB,EAAE;KACF,wHAAwH;KACxH,gDAAgD;KAChD,EAAE;KACF,QAAQ;KACR,EAAE;EACD,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;ACRb,kCAAe;KACf,gBAAgB;KAChB,EAAE;KACF,6BAA6B;KAC7B,yBAAyB;KACzB,EAAE;KACF,QAAQ;KACR,EAAE;EACD,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;ACRb,6BAAe;KACf,oCAAoC;KACpC,EAAE;KACF,yBAAyB;KACzB,EAAE;KACF,wDAAwD;KACxD,uCAAuC;KACvC,EAAE;KACF,QAAQ;KACR,EAAE;EACD,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;ACVb,kCAAe;KACf,yBAAyB;KACzB,EAAE;KACF,kCAAkC;KAClC,EAAE;KACF,QAAQ;EACP,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;ACNb,0BAAe;KACf,yBAAyB;KACzB,EAAE;KACF,0EAA0E;KAC1E,0EAA0E;KAC1E,0EAA0E;KAC1E,0EAA0E;KAC1E,EAAE;KACF,QAAQ;KACR,EAAE;EACD,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;ACVb,+BAAe;KACf,yBAAyB;KACzB,EAAE;KACF,2BAA2B;KAC3B,EAAE;KACF,4CAA4C;KAC5C,EAAE;KACF,QAAQ;KACR,EAAE;KACF,4CAA4C;KAC5C,EAAE;KACF,SAAS;KACT,EAAE;KACF,QAAQ;EACP,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;ACdb,0BAAe;KACf,yBAAyB;KACzB,EAAE;KACF,2EAA2E;KAC3E,2EAA2E;KAC3E,2EAA2E;KAC3E,2EAA2E;KAC3E,EAAE;KACF,2BAA2B;KAC3B,EAAE;KACF,2EAA2E;KAC3E,2EAA2E;KAC3E,2EAA2E;KAC3E,2EAA2E;KAC3E,EAAE;KACF,SAAS;KACT,EAAE;KACF,QAAQ;KACR,EAAE;EACD,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;ACnBb,mBAAe;KACf,qBAAqB;KACrB,8DAA8D;KAC9D,OAAO;KACP,0BAA0B;KAC1B,QAAQ;KACR,EAAE;EACD,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;ACPb,uBAAe;KACf,oBAAoB;KACpB,EAAE;KACF,gFAAgF;KAChF,EAAE;KACF,gGAAgG;KAChG,gGAAgG;KAChG,gDAAgD;KAChD,EAAE;KACF,OAAO;KACP,EAAE;KACF,mDAAmD;KACnD,EAAE;KACF,QAAQ;KACR,EAAE;KACF,sBAAsB;KACtB,EAAE;KACF,wDAAwD;KACxD,EAAE;KACF,8BAA8B;KAC9B,EAAE;KACF,oEAAoE;KACpE,EAAE;KACF,QAAQ;KACR,EAAE;EACD,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;ACzBb,+BAAe;KACf,sBAAsB;KACtB,EAAE;KACF,+BAA+B;KAC/B,4BAA4B;KAC5B,EAAE;KACF,4CAA4C;KAC5C,wFAAwF;KACxF,EAAE;KACF,2DAA2D;KAC3D,EAAE;KACF,kCAAkC;KAClC,kCAAkC;KAClC,8BAA8B;KAC9B,8BAA8B;KAC9B,EAAE;KACF,kDAAkD;KAClD,mDAAmD;KACnD,oCAAoC;KACpC,EAAE;KACF,4DAA4D;KAC5D,oCAAoC;KACpC,+BAA+B;KAC/B,mCAAmC;KACnC,EAAE;KACF,IAAI;KACJ,EAAE;KACF,QAAQ;KACR,EAAE;EACD,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;AC7Bb,eAAe;KACf,gDAAgD;KAChD,2CAA2C;KAC3C,GAAG;KACH,EAAE;KACF,+CAA+C;KAC/C,+BAA+B;KAC/B,GAAG;KACH,EAAE;KACF,0EAA0E;KAC1E,8EAA8E;KAC9E,EAAE;KACF,0EAA0E;KAC1E,uEAAuE;KACvE,EAAE;KACF,sCAAsC;KACtC,EAAE;KACF,4CAA4C;KAC5C,EAAE;KACF,gDAAgD;KAChD,iDAAiD;KACjD,0BAA0B;KAC1B,EAAE;KACF,GAAG;KACH,EAAE;KACF,8CAA8C;KAC9C,EAAE;KACF,kCAAkC;KAClC,EAAE;KACF,GAAG;KACH,EAAE;KACF,+EAA+E;KAC/E,EAAE;KACF,mGAAmG;KACnG,6CAA6C;KAC7C,GAAG;KACH,yGAAyG;KACzG,+CAA+C;KAC/C,GAAG;KACH,EAAE;KACF,kGAAkG;KAClG,iEAAiE;KACjE,GAAG;KACH,qGAAqG;KACrG,gEAAgE;KAChE,GAAG;KACH,EAAE;EACD,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;AC/Cb,oCAAe;KACf,4BAA4B;KAC5B,EAAE;KACF,yHAAyH;KACzH,sCAAsC;KACtC,EAAE;KACF,QAAQ;KACR,EAAE;EACD,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;ACRb,sBAAe;KACf,qBAAqB;KACrB,EAAE;KACF,+CAA+C;KAC/C,EAAE;KACF,OAAO;KACP,EAAE;KACF,gEAAgE;KAChE,EAAE;KACF,QAAQ;KACR,EAAE;KACF,8CAA8C;KAC9C,EAAE;EACD,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;ACbb,6BAAe;KACf,oCAAoC;KACpC,EAAE;KACF,yBAAyB;KACzB,EAAE;KACF,wDAAwD;KACxD,uCAAuC;KACvC,EAAE;KACF,QAAQ;KACR,EAAE;EACD,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;ACVb,kCAAe;KACf,yBAAyB;KACzB,EAAE;KACF,kCAAkC;KAClC,EAAE;KACF,QAAQ;EACP,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;ACNb,+BAAe;KACf,sBAAsB;KACtB,EAAE;KACF,yBAAyB;KACzB,EAAE;KACF,6DAA6D;KAC7D,2DAA2D;KAC3D,EAAE;KACF,SAAS;KACT,EAAE;KACF,0BAA0B;KAC1B,EAAE;KACF,uDAAuD;KACvD,qDAAqD;KACrD,EAAE;KACF,SAAS;KACT,EAAE;KACF,2BAA2B;KAC3B,EAAE;KACF,yDAAyD;KACzD,uDAAuD;KACvD,EAAE;KACF,SAAS;KACT,EAAE;KACF,uEAAuE;KACvE,EAAE;KACF,yEAAyE;KACzE,EAAE;KACF,IAAI;KACJ,EAAE;KACF,qFAAqF;KACrF,EAAE;KACF,yCAAyC;KACzC,EAAE;KACF,wCAAwC;KACxC,sDAAsD;KACtD,EAAE;KACF,uFAAuF;KACvF,uFAAuF;KACvF,uFAAuF;KACvF,uFAAuF;KACvF,EAAE;KACF,sCAAsC;KACtC,EAAE;KACF,iCAAiC;KACjC,iCAAiC;KACjC,+BAA+B;KAC/B,EAAE;KACF,aAAa;KACb,EAAE;KACF,IAAI;KACJ,EAAE;KACF,uHAAuH;KACvH,EAAE;KACF,qCAAqC;KACrC,gCAAgC;KAChC,EAAE;KACF,sEAAsE;KACtE,4DAA4D;KAC5D,EAAE;KACF,0HAA0H;KAC1H,yCAAyC;KACzC,EAAE;KACF,oEAAoE;KACpE,EAAE;KACF,6CAA6C;KAC7C,EAAE;KACF,wBAAwB;KACxB,EAAE;KACF,qCAAqC;KACrC,EAAE;KACF,kDAAkD;KAClD,EAAE;KACF,8CAA8C;KAC9C,8CAA8C;KAC9C,8CAA8C;KAC9C,8CAA8C;KAC9C,EAAE;KACF,aAAa;KACb,uFAAuF;KACvF,uFAAuF;KACvF,uFAAuF;KACvF,uFAAuF;KACvF,oEAAoE;KACpE,uFAAuF;KACvF,uFAAuF;KACvF,uFAAuF;KACvF,qFAAqF;KACrF,uBAAuB;KACvB,EAAE;KACF,4CAA4C;KAC5C,EAAE;KACF,kDAAkD;KAClD,EAAE;KACF,8CAA8C;KAC9C,8CAA8C;KAC9C,8CAA8C;KAC9C,8CAA8C;KAC9C,EAAE;KACF,aAAa;KACb,yGAAyG;KACzG,yGAAyG;KACzG,yGAAyG;KACzG,yGAAyG;KACzG,sFAAsF;KACtF,yGAAyG;KACzG,yGAAyG;KACzG,yGAAyG;KACzG,uGAAuG;KACvG,uBAAuB;KACvB,EAAE;KACF,4CAA4C;KAC5C,EAAE;KACF,yEAAyE;KACzE,EAAE;KACF,UAAU;KACV,EAAE;KACF,KAAK;KACL,EAAE;KACF,eAAe;KACf,EAAE;KACF,IAAI;KACJ,EAAE;KACF,qFAAqF;KACrF,yFAAyF;KACzF,iBAAiB;KACjB,KAAK;KACL,UAAU;KACV,UAAU;KACV,KAAK;KACL,8BAA8B;KAC9B,8BAA8B;KAC9B,8BAA8B;KAC9B,8BAA8B;KAC9B,8BAA8B;KAC9B,8BAA8B;KAC9B,KAAK;KACL,0BAA0B;KAC1B,wDAAwD;KACxD,EAAE;KACF,8CAA8C;KAC9C,EAAE;KACF,2DAA2D;KAC3D,EAAE;KACF,yBAAyB;KACzB,EAAE;KACF,0BAA0B;KAC1B,EAAE;KACF,mEAAmE;KACnE,wBAAwB;KACxB,EAAE;KACF,iCAAiC;KACjC,EAAE;KACF,iEAAiE;KACjE,kDAAkD;KAClD,EAAE;KACF,aAAa;KACb,EAAE;KACF,4CAA4C;KAC5C,MAAM;KACN,gCAAgC;KAChC,gCAAgC;KAChC,EAAE;KACF,uBAAuB;KACvB,EAAE;KACF,0CAA0C;KAC1C,yCAAyC;KACzC,EAAE;KACF,gCAAgC;KAChC,EAAE;KACF,qBAAqB;KACrB,2BAA2B;KAC3B,EAAE;KACF,uCAAuC;KACvC,EAAE;KACF,+BAA+B;KAC/B,0CAA0C;KAC1C,EAAE;KACF,uCAAuC;KACvC,EAAE;KACF,+BAA+B;KAC/B,wCAAwC;KACxC,kCAAkC;KAClC,EAAE;KACF,KAAK;KACL,EAAE;KACF,4BAA4B;KAC5B,EAAE;KACF,yBAAyB;KACzB,0CAA0C;KAC1C,8DAA8D;KAC9D,EAAE;KACF,IAAI;KACJ,EAAE;KACF,4HAA4H;KAC5H,EAAE;KACF,wEAAwE;KACxE,EAAE;KACF,yEAAyE;KACzE,+EAA+E;KAC/E,2CAA2C;KAC3C,EAAE;KACF,+BAA+B;KAC/B,6CAA6C;KAC7C,oDAAoD;KACpD,mEAAmE;KACnE,EAAE;KACF,2EAA2E;KAC3E,EAAE;KACF,+DAA+D;KAC/D,EAAE;KACF,aAAa;KACb,qFAAqF;KACrF,qFAAqF;KACrF,qFAAqF;KACrF,qFAAqF;KACrF,wEAAwE;KACxE,qFAAqF;KACrF,qFAAqF;KACrF,qFAAqF;KACrF,mFAAmF;KACnF,uBAAuB;KACvB,EAAE;KACF,2CAA2C;KAC3C,EAAE;KACF,6EAA6E;KAC7E,EAAE;KACF,UAAU;KACV,EAAE;KACF,IAAI;KACJ,EAAE;KACF,QAAQ;KACR,EAAE;EACD,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;ACzOb,6BAAe;KACf,sBAAsB;KACtB,EAAE;KACF,yBAAyB;KACzB,EAAE;KACF,2DAA2D;KAC3D,2DAA2D;KAC3D,EAAE;KACF,SAAS;KACT,EAAE;KACF,0BAA0B;KAC1B,EAAE;KACF,qDAAqD;KACrD,qDAAqD;KACrD,EAAE;KACF,SAAS;KACT,EAAE;KACF,2BAA2B;KAC3B,EAAE;KACF,uDAAuD;KACvD,uDAAuD;KACvD,EAAE;KACF,SAAS;KACT,EAAE;KACF,QAAQ;KACR,EAAE;EACD,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;AC1Bb,wBAAe;KACf,sBAAsB;KACtB,EAAE;KACF,yBAAyB;KACzB,EAAE;KACF,gDAAgD;KAChD,EAAE;KACF,gFAAgF;KAChF,EAAE;KACF,IAAI;KACJ,EAAE;KACF,SAAS;KACT,EAAE;KACF,0BAA0B;KAC1B,EAAE;KACF,iDAAiD;KACjD,EAAE;KACF,kEAAkE;KAClE,EAAE;KACF,IAAI;KACJ,EAAE;KACF,SAAS;KACT,EAAE;KACF,2BAA2B;KAC3B,EAAE;KACF,kDAAkD;KAClD,EAAE;KACF,oEAAoE;KACpE,EAAE;KACF,IAAI;KACJ,EAAE;KACF,SAAS;KACT,EAAE;KACF,QAAQ;KACR,EAAE;EACD,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;ACnCb,gCAAe;KACf,yBAAyB;KACzB,EAAE;KACF,sBAAsB;KACtB,EAAE;KACF,uBAAuB;KACvB,EAAE;KACF,yBAAyB;KACzB,EAAE;KACF,qCAAqC;KACrC,EAAE;KACF,gDAAgD;KAChD,EAAE;KACF,8CAA8C;KAC9C,uNAAuN;KACvN,EAAE;KACF,IAAI;KACJ,EAAE;KACF,SAAS;KACT,EAAE;KACF,0BAA0B;KAC1B,EAAE;KACF,uBAAuB;KACvB,EAAE;KACF,iDAAiD;KACjD,EAAE;KACF,gCAAgC;KAChC,6KAA6K;KAC7K,EAAE;KACF,IAAI;KACJ,EAAE;KACF,SAAS;KACT,EAAE;KACF,2BAA2B;KAC3B,EAAE;KACF,yBAAyB;KACzB,EAAE;KACF,kDAAkD;KAClD,EAAE;KACF,kCAAkC;KAClC,wLAAwL;KACxL,EAAE;KACF,IAAI;KACJ,EAAE;KACF,SAAS;KACT,EAAE;KACF,SAAS;KACT,EAAE;KACF,iBAAiB;KACjB,EAAE;KACF,GAAG;KACH,EAAE;EACD,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;ACpDb,uBAAe;KACf,qBAAqB;KACrB,EAAE;KACF,gDAAgD;KAChD,gDAAgD;KAChD,gDAAgD;KAChD,gDAAgD;KAChD,EAAE;KACF,QAAQ;EACP,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;ACTb,4BAAe;KACf,qBAAqB;KACrB,EAAE;KACF,2BAA2B;KAC3B,kCAAkC;KAClC,EAAE;KACF,sBAAsB;KACtB,EAAE;KACF,kCAAkC;KAClC,iCAAiC;KACjC,kCAAkC;KAClC,EAAE;KACF,4CAA4C;KAC5C,EAAE;KACF,uBAAuB;KACvB,mDAAmD;KACnD,sDAAsD;KACtD,EAAE;KACF,gDAAgD;KAChD,iDAAiD;KACjD,EAAE;KACF,0BAA0B;KAC1B,EAAE;KACF,qEAAqE;KACrE,qEAAqE;KACrE,qEAAqE;KACrE,qEAAqE;KACrE,EAAE;KACF,wCAAwC;KACxC,EAAE;KACF,iBAAiB;KACjB,EAAE;KACF,KAAK;KACL,EAAE;KACF,QAAQ;KACR,EAAE;KACF,2CAA2C;KAC3C,EAAE;KACF,4CAA4C;KAC5C,EAAE;KACF,wCAAwC;KACxC,iBAAiB;KACjB,EAAE;KACF,KAAK;KACL,EAAE;KACF,SAAS;KACT,EAAE;KACF,QAAQ;KACR,EAAE;EACD,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;ACjDb,uBAAe;KACf,qBAAqB;KACrB,EAAE;KACF,2DAA2D;KAC3D,EAAE;KACF,8BAA8B;KAC9B,mDAAmD;KACnD,mDAAmD;KACnD,mDAAmD;KACnD,mDAAmD;KACnD,0CAA0C;KAC1C,EAAE;KACF,QAAQ;KACR,EAAE;EACD,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;ACdb,yBAAe;KACf,qBAAqB;KACrB,EAAE;KACF,iCAAiC;KACjC,yCAAyC;KACzC,yCAAyC;KACzC,yCAAyC;KACzC,yCAAyC;KACzC,6DAA6D;KAC7D,EAAE;KACF,qEAAqE;KACrE,EAAE;KACF,QAAQ;KACR,EAAE;EACD,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;ACdb,4BAAe;KACf,yBAAyB;KACzB,EAAE;KACF,wBAAwB;KACxB,EAAE;KACF,sDAAsD;KACtD,sCAAsC;KACtC,EAAE;KACF,OAAO;KACP,EAAE;KACF,0BAA0B;KAC1B,EAAE;KACF,QAAQ;EACP,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;ACbb,iCAAe;KACf,wBAAwB;KACxB,EAAE;KACF,iCAAiC;KACjC,EAAE;KACF,QAAQ;EACP,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;ACNb,4BAAe;KACf,6BAA6B;KAC7B,EAAE;KACF,uDAAuD;KACvD,EAAE;KACF,QAAQ;KACR,EAAE;EACD,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;ACPb,iCAAe;KACf,0CAA0C;KAC1C,EAAE;KACF,oCAAoC;KACpC,sCAAsC;KACtC,EAAE;KACF,kBAAkB;KAClB,wCAAwC;KACxC,EAAE;KACF,uCAAuC;KACvC,EAAE;KACF,GAAG;KACH,EAAE;KACF,qDAAqD;KACrD,0CAA0C;KAC1C,EAAE;KACF,iCAAiC;KACjC,uDAAuD;KACvD,EAAE;KACF,GAAG;KACH,EAAE;KACF,+CAA+C;KAC/C,kKAAkK;KAClK,4CAA4C;KAC5C,EAAE;KACF,+DAA+D;KAC/D,iCAAiC;KACjC,qGAAqG;KACrG,EAAE;KACF,GAAG;KACH,EAAE;KACF,+CAA+C;KAC/C,iDAAiD;KACjD,EAAE;KACF,uEAAuE;KACvE,iCAAiC;KACjC,8CAA8C;KAC9C,4GAA4G;KAC5G,EAAE;KACF,GAAG;KACH,EAAE;EACD,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;ACzCb,wBAAe;KACf,mOAAmO;KACnO,EAAE;KACF,oBAAoB;KACpB,EAAE;KACF,QAAQ;EACP,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;ACNb,sBAAe;KACf,mOAAmO;KACnO,EAAE;KACF,oBAAoB;KACpB,6BAA6B;KAC7B,EAAE;KACF,QAAQ;KACR,EAAE;EACD,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;ACRb,iBAAe;KACf,mOAAmO;KACnO,EAAE;KACF,gDAAgD;KAChD,EAAE;KACF,QAAQ;EACP,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;ACNb,yBAAe;KACf,qDAAqD;KACrD,EAAE;KACF,qBAAqB;KACrB,EAAE;KACF,QAAQ;EACP,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;ACNb,uBAAe;KACf,qDAAqD;KACrD,EAAE;KACF,sBAAsB;KACtB,qBAAqB;KACrB,EAAE;KACF,QAAQ;EACP,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;ACPb,kBAAe;KACf,qDAAqD;KACrD,EAAE;KACF,cAAc;KACd,EAAE;KACF,QAAQ;EACP,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;ACNb,uBAAe;KACf,yHAAyH;KACzH,EAAE;KACF,sBAAsB;KACtB,EAAE;KACF,+CAA+C;KAC/C,EAAE;KACF,QAAQ;KACR,EAAE;KACF,gEAAgE;KAChE,EAAE;KACF,SAAS;KACT,EAAE;KACF,QAAQ;KACR,EAAE;EACD,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;ACfb,iBAAe;KACf,4BAA4B;KAC5B,sBAAsB;KACtB,wBAAwB;KACxB,EAAE;KACF,8BAA8B;KAC9B,EAAE;KACF,mBAAmB;KACnB,EAAE;KACF,eAAe;KACf,EAAE;KACF,4FAA4F;KAC5F,6BAA6B;KAC7B,EAAE;KACF,GAAG;KACH,EAAE;EACD,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;AChBb,iBAAe;KACf,8BAA8B;KAC9B,EAAE;KACF,mBAAmB;KACnB,EAAE;KACF,eAAe;KACf,EAAE;KACF,gEAAgE;KAChE,EAAE;KACF,0BAA0B;KAC1B,4BAA4B;KAC5B,EAAE;KACF,GAAG;KACH,EAAE;EACD,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;ACdb,kBAAe;KACf,2BAA2B;KAC3B,EAAE;KACF,yBAAyB;KACzB,EAAE;KACF,QAAQ;KACR,EAAE;KACF,mBAAmB;KACnB,oBAAoB;KACpB,6BAA6B;KAC7B,8BAA8B;KAC9B,mCAAmC;KACnC,sCAAsC;KACtC,0CAA0C;KAC1C,EAAE;KACF,eAAe;KACf,EAAE;KACF,sCAAsC;KACtC,EAAE;KACF,mCAAmC;KACnC,EAAE;KACF,4BAA4B;KAC5B,EAAE;KACF,6BAA6B;KAC7B,EAAE;KACF,SAAS;KACT,EAAE;KACF,0BAA0B;KAC1B,+BAA+B;KAC/B,gCAAgC;KAChC,EAAE;KACF,kCAAkC;KAClC,EAAE;KACF,4BAA4B;KAC5B,EAAE;KACF,2DAA2D;KAC3D,EAAE;KACF,8BAA8B;KAC9B,EAAE;KACF,qDAAqD;KACrD,EAAE;KACF,SAAS;KACT,EAAE;KACF,GAAG;KACH,EAAE;EACD,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;AC7Cb,kBAAe;KACf,mBAAmB;KACnB,2BAA2B;KAC3B,wCAAwC;KACxC,oCAAoC;KACpC,iCAAiC;KACjC,oCAAoC;KACpC,wCAAwC;KACxC,EAAE;KACF,eAAe;KACf,EAAE;KACF,uBAAuB;KACvB,EAAE;KACF,6BAA6B;KAC7B,EAAE;KACF,0BAA0B;KAC1B,oCAAoC;KACpC,gCAAgC;KAChC,6BAA6B;KAC7B,4BAA4B;KAC5B,gCAAgC;KAChC,oCAAoC;KACpC,EAAE;KACF,GAAG;KACH,EAAE;EACD,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;ACzBb,yBAAe;KACf,wBAAwB;KACxB,8BAA8B;KAC9B,EAAE;KACF,mBAAmB;KACnB,oBAAoB;KACpB,0CAA0C;KAC1C,EAAE;KACF,gBAAgB;KAChB,EAAE;KACF,sCAAsC;KACtC,EAAE;KACF,0FAA0F;KAC1F,EAAE;KACF,GAAG;KACH,EAAE;EACD,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;AChBb,yBAAe;KACf,8BAA8B;KAC9B,EAAE;KACF,mBAAmB;KACnB,oCAAoC;KACpC,iCAAiC;KACjC,wCAAwC;KACxC,EAAE;KACF,eAAe;KACf,EAAE;KACF,6BAA6B;KAC7B,0BAA0B;KAC1B,gCAAgC;KAChC,6BAA6B;KAC7B,4BAA4B;KAC5B,6BAA6B;KAC7B,oCAAoC;KACpC,EAAE;KACF,kCAAkC;KAClC,EAAE;KACF,GAAG;KACH,EAAE;EACD,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;ACtBb,qBAAe;KACf,8BAA8B;KAC9B,sBAAsB;KACtB,EAAE;KACF,8BAA8B;KAC9B,EAAE;KACF,mBAAmB;KACnB,EAAE;KACF,eAAe;KACf,EAAE;KACF,gGAAgG;KAChG,gDAAgD;KAChD,iBAAiB;KACjB,6DAA6D;KAC7D,wEAAwE;KACxE,mDAAmD;KACnD,EAAE;KACF,GAAG;KACH,EAAE;EACD,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;ACnBb,qBAAe;KACf,8BAA8B;KAC9B,EAAE;KACF,mBAAmB;KACnB,EAAE;KACF,eAAe;KACf,EAAE;KACF,gEAAgE;KAChE,EAAE;KACF,0BAA0B;KAC1B,4BAA4B;KAC5B,EAAE;KACF,GAAG;KACH,EAAE;EACD,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;ACdb,uBAAe;KACf,uBAAuB;KACvB,wBAAwB;KACxB,EAAE;KACF,yBAAyB;KACzB,0BAA0B;KAC1B,EAAE;KACF,8BAA8B;KAC9B,EAAE;KACF,mBAAmB;KACnB,gCAAgC;KAChC,8BAA8B;KAC9B,sCAAsC;KACtC,0CAA0C;KAC1C,EAAE;KACF,eAAe;KACf,EAAE;KACF,sCAAsC;KACtC,EAAE;KACF,sDAAsD;KACtD,EAAE;KACF,YAAY;KACZ,EAAE;KACF,IAAI;KACJ,EAAE;KACF,oCAAoC;KACpC,gDAAgD;KAChD,EAAE;KACF,kCAAkC;KAClC,4BAA4B;KAC5B,EAAE;KACF,qDAAqD;KACrD,EAAE;KACF,wDAAwD;KACxD,EAAE;KACF,0CAA0C;KAC1C,kCAAkC;KAClC,gCAAgC;KAChC,0BAA0B;KAC1B,EAAE;KACF,GAAG;KACH,EAAE;EACD,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;AC1Cb,uBAAe;KACf,sBAAsB;KACtB,+BAA+B;KAC/B,EAAE;KACF,8BAA8B;KAC9B,EAAE;KACF,mBAAmB;KACnB,8BAA8B;KAC9B,oCAAoC;KACpC,wCAAwC;KACxC,EAAE;KACF,eAAe;KACf,EAAE;KACF,0BAA0B;KAC1B,EAAE;KACF,wCAAwC;KACxC,EAAE;KACF,6DAA6D;KAC7D,+CAA+C;KAC/C,EAAE;KACF,gCAAgC;KAChC,oCAAoC;KACpC,EAAE;KACF,GAAG;KACH,EAAE;EACD,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;ACzBb,sBAAe;KACf,uBAAuB;KACvB,wBAAwB;KACxB,EAAE;KACF,qBAAqB;KACrB,EAAE;KACF,wBAAwB;KACxB,EAAE;KACF,QAAQ;KACR,EAAE;KACF,mBAAmB;KACnB,gCAAgC;KAChC,6BAA6B;KAC7B,8BAA8B;KAC9B,8BAA8B;KAC9B,mCAAmC;KACnC,gCAAgC;KAChC,iCAAiC;KACjC,8BAA8B;KAC9B,sCAAsC;KACtC,sCAAsC;KACtC,0CAA0C;KAC1C,EAAE;KACF,eAAe;KACf,EAAE;KACF,sCAAsC;KACtC,EAAE;KACF,gDAAgD;KAChD,EAAE;KACF,kCAAkC;KAClC,0BAA0B;KAC1B,4BAA4B;KAC5B,+BAA+B;KAC/B,gCAAgC;KAChC,kCAAkC;KAClC,EAAE;KACF,iCAAiC;KACjC,8CAA8C;KAC9C,+CAA+C;KAC/C,qDAAqD;KACrD,iDAAiD;KACjD,EAAE;KACF,4BAA4B;KAC5B,EAAE;KACF,uDAAuD;KACvD,EAAE;KACF,yBAAyB;KACzB,6BAA6B;KAC7B,EAAE;KACF,wDAAwD;KACxD,EAAE;KACF,0CAA0C;KAC1C,kCAAkC;KAClC,gCAAgC;KAChC,0BAA0B;KAC1B,EAAE;KACF,GAAG;KACH,EAAE;EACD,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;AC1Db,sBAAe;KACf,mBAAmB;KACnB,2BAA2B;KAC3B,4BAA4B;KAC5B,+BAA+B;KAC/B,8BAA8B;KAC9B,oCAAoC;KACpC,iCAAiC;KACjC,oCAAoC;KACpC,wCAAwC;KACxC,EAAE;KACF,eAAe;KACf,EAAE;KACF,uBAAuB;KACvB,wBAAwB;KACxB,0BAA0B;KAC1B,6BAA6B;KAC7B,EAAE;KACF,oBAAoB;KACpB,EAAE;KACF,gCAAgC;KAChC,gCAAgC;KAChC,+BAA+B;KAC/B,kCAAkC;KAClC,EAAE;KACF,SAAS;KACT,EAAE;KACF,0BAA0B;KAC1B,gCAAgC;KAChC,6BAA6B;KAC7B,4BAA4B;KAC5B,gCAAgC;KAChC,EAAE;KACF,6BAA6B;KAC7B,oCAAoC;KACpC,2BAA2B;KAC3B,EAAE;KACF,GAAG;KACH,EAAE;EACD,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;ACvCb,wBAAe;KACf,uBAAuB;KACvB,wBAAwB;KACxB,wBAAwB;KACxB,EAAE;KACF,2BAA2B;KAC3B,EAAE;KACF,qBAAqB;KACrB,EAAE;KACF,2BAA2B;KAC3B,EAAE;KACF,QAAQ;KACR,EAAE;KACF,mBAAmB;KACnB,oBAAoB;KACpB,gCAAgC;KAChC,6BAA6B;KAC7B,8BAA8B;KAC9B,8BAA8B;KAC9B,mCAAmC;KACnC,gCAAgC;KAChC,mCAAmC;KACnC,sCAAsC;KACtC,iCAAiC;KACjC,kBAAkB;KAClB,wBAAwB;KACxB,8BAA8B;KAC9B,oCAAoC;KACpC,qCAAqC;KACrC,sCAAsC;KACtC,sCAAsC;KACtC,0CAA0C;KAC1C,EAAE;KACF,eAAe;KACf,EAAE;KACF,sCAAsC;KACtC,EAAE;KACF,gDAAgD;KAChD,wGAAwG;KACxG,yCAAyC;KACzC,EAAE;KACF,kCAAkC;KAClC,0BAA0B;KAC1B,4BAA4B;KAC5B,+BAA+B;KAC/B,gCAAgC;KAChC,kCAAkC;KAClC,kCAAkC;KAClC,EAAE;KACF,kBAAkB;KAClB,mFAAmF;KACnF,EAAE;KACF,+BAA+B;KAC/B,EAAE;KACF,8EAA8E;KAC9E,EAAE;KACF,sBAAsB;KACtB,EAAE;KACF,iFAAiF;KACjF,EAAE;KACF,QAAQ;KACR,EAAE;KACF,+CAA+C;KAC/C,EAAE;KACF,SAAS;KACT,EAAE;KACF,8FAA8F;KAC9F,EAAE;KACF,gBAAgB;KAChB,4BAA4B;KAC5B,EAAE;KACF,8GAA8G;KAC9G,EAAE;KACF,yBAAyB;KACzB,6BAA6B;KAC7B,EAAE;KACF,wDAAwD;KACxD,EAAE;KACF,0CAA0C;KAC1C,kCAAkC;KAClC,gCAAgC;KAChC,0BAA0B;KAC1B,EAAE;KACF,GAAG;KACH,EAAE;EACD,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;ACrFb,wBAAe;KACf,iBAAiB;KACjB,EAAE;KACF,2BAA2B;KAC3B,EAAE;KACF,qBAAqB;KACrB,EAAE;KACF,2BAA2B;KAC3B,EAAE;KACF,QAAQ;KACR,EAAE;KACF,mBAAmB;KACnB,2BAA2B;KAC3B,4BAA4B;KAC5B,+BAA+B;KAC/B,kBAAkB;KAClB,wBAAwB;KACxB,8BAA8B;KAC9B,oCAAoC;KACpC,iCAAiC;KACjC,kCAAkC;KAClC,oCAAoC;KACpC,wCAAwC;KACxC,EAAE;KACF,eAAe;KACf,EAAE;KACF,uBAAuB;KACvB,wBAAwB;KACxB,0BAA0B;KAC1B,EAAE;KACF,gCAAgC;KAChC,gCAAgC;KAChC,6BAA6B;KAC7B,+BAA+B;KAC/B,kCAAkC;KAClC,EAAE;KACF,0BAA0B;KAC1B,gCAAgC;KAChC,6BAA6B;KAC7B,4BAA4B;KAC5B,gCAAgC;KAChC,oCAAoC;KACpC,EAAE;KACF,6BAA6B;KAC7B,2BAA2B;KAC3B,mCAAmC;KACnC,8BAA8B;KAC9B,EAAE;KACF,GAAG;KACH,EAAE;EACD,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;AClDb,sBAAe;KACf,eAAe;KACf,EAAE;KACF,uBAAuB;KACvB,wBAAwB;KACxB,wBAAwB;KACxB,0BAA0B;KAC1B,wBAAwB;KACxB,EAAE;KACF,mBAAmB;KACnB,oBAAoB;KACpB,gCAAgC;KAChC,6BAA6B;KAC7B,8BAA8B;KAC9B,8BAA8B;KAC9B,mCAAmC;KACnC,gCAAgC;KAChC,mCAAmC;KACnC,sCAAsC;KACtC,iCAAiC;KACjC,8BAA8B;KAC9B,kBAAkB;KAClB,wBAAwB;KACxB,uCAAuC;KACvC,oCAAoC;KACpC,kCAAkC;KAClC,oCAAoC;KACpC,sCAAsC;KACtC,sCAAsC;KACtC,0CAA0C;KAC1C,EAAE;KACF,eAAe;KACf,EAAE;KACF,sCAAsC;KACtC,EAAE;KACF,gDAAgD;KAChD,wGAAwG;KACxG,yCAAyC;KACzC,EAAE;KACF,kCAAkC;KAClC,0BAA0B;KAC1B,4BAA4B;KAC5B,+BAA+B;KAC/B,gCAAgC;KAChC,kCAAkC;KAClC,yBAAyB;KACzB,6BAA6B;KAC7B,kCAAkC;KAClC,EAAE;KACF,kBAAkB;KAClB,mCAAmC;KACnC,6BAA6B;KAC7B,EAAE;KACF,gBAAgB;KAChB,4BAA4B;KAC5B,EAAE;KACF,gLAAgL;KAChL,EAAE;KACF,6BAA6B;KAC7B,EAAE;KACF,wDAAwD;KACxD,EAAE;KACF,0CAA0C;KAC1C,kCAAkC;KAClC,gCAAgC;KAChC,0BAA0B;KAC1B,EAAE;KACF,GAAG;KACH,EAAE;EACD,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;ACrEb,sBAAe;KACf,eAAe;KACf,EAAE;KACF,6BAA6B;KAC7B,EAAE;KACF,qBAAqB;KACrB,EAAE;KACF,wBAAwB;KACxB,EAAE;KACF,QAAQ;KACR,EAAE;KACF,mBAAmB;KACnB,2BAA2B;KAC3B,4BAA4B;KAC5B,wCAAwC;KACxC,+BAA+B;KAC/B,8BAA8B;KAC9B,oCAAoC;KACpC,iCAAiC;KACjC,kCAAkC;KAClC,oCAAoC;KACpC,wCAAwC;KACxC,EAAE;KACF,eAAe;KACf,EAAE;KACF,uBAAuB;KACvB,wBAAwB;KACxB,0BAA0B;KAC1B,EAAE;KACF,gCAAgC;KAChC,gCAAgC;KAChC,6BAA6B;KAC7B,+BAA+B;KAC/B,kCAAkC;KAClC,EAAE;KACF,0EAA0E;KAC1E,EAAE;KACF,4CAA4C;KAC5C,EAAE;KACF,QAAQ;KACR,EAAE;KACF,0BAA0B;KAC1B,oCAAoC;KACpC,gCAAgC;KAChC,6BAA6B;KAC7B,4BAA4B;KAC5B,gCAAgC;KAChC,oCAAoC;KACpC,EAAE;KACF,oCAAoC;KACpC,EAAE;KACF,6BAA6B;KAC7B,2BAA2B;KAC3B,8BAA8B;KAC9B,EAAE;KACF,GAAG;KACH,EAAE;EACD,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;ACzDb,yBAAe;KACf,kBAAkB;KAClB,EAAE;KACF,uBAAuB;KACvB,wBAAwB;KACxB,0BAA0B;KAC1B,0BAA0B;KAC1B,wBAAwB;KACxB,EAAE;KACF,kBAAkB;KAClB,2BAA2B;KAC3B,oCAAoC;KACpC,QAAQ;KACR,EAAE;KACF,6CAA6C;KAC7C,EAAE;KACF,6BAA6B;KAC7B,EAAE;KACF,qBAAqB;KACrB,EAAE;KACF,wBAAwB;KACxB,EAAE;KACF,QAAQ;KACR,EAAE;KACF,mBAAmB;KACnB,oBAAoB;KACpB,gCAAgC;KAChC,6BAA6B;KAC7B,8BAA8B;KAC9B,8BAA8B;KAC9B,mCAAmC;KACnC,gCAAgC;KAChC,mCAAmC;KACnC,sCAAsC;KACtC,iCAAiC;KACjC,8BAA8B;KAC9B,kBAAkB;KAClB,wCAAwC;KACxC,wBAAwB;KACxB,0CAA0C;KAC1C,oCAAoC;KACpC,kCAAkC;KAClC,oCAAoC;KACpC,uCAAuC;KACvC,uCAAuC;KACvC,sCAAsC;KACtC,0CAA0C;KAC1C,EAAE;KACF,eAAe;KACf,EAAE;KACF,sCAAsC;KACtC,EAAE;KACF,gDAAgD;KAChD,wGAAwG;KACxG,yCAAyC;KACzC,EAAE;KACF,kCAAkC;KAClC,0BAA0B;KAC1B,4BAA4B;KAC5B,+BAA+B;KAC/B,gCAAgC;KAChC,kCAAkC;KAClC,mCAAmC;KACnC,mCAAmC;KACnC,yBAAyB;KACzB,6BAA6B;KAC7B,kCAAkC;KAClC,EAAE;KACF,kBAAkB;KAClB,sCAAsC;KACtC,6BAA6B;KAC7B,EAAE;KACF,gBAAgB;KAChB,4BAA4B;KAC5B,EAAE;KACF,gLAAgL;KAChL,EAAE;KACF,wDAAwD;KACxD,EAAE;KACF,0CAA0C;KAC1C,kCAAkC;KAClC,gCAAgC;KAChC,0BAA0B;KAC1B,EAAE;KACF,GAAG;KACH,EAAE;EACD,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;ACtFb,yBAAe;KACf,kBAAkB;KAClB,EAAE;KACF,6BAA6B;KAC7B,EAAE;KACF,qBAAqB;KACrB,EAAE;KACF,wBAAwB;KACxB,EAAE;KACF,QAAQ;KACR,EAAE;KACF,mBAAmB;KACnB,2BAA2B;KAC3B,4BAA4B;KAC5B,wCAAwC;KACxC,8BAA8B;KAC9B,oCAAoC;KACpC,iCAAiC;KACjC,kCAAkC;KAClC,sCAAsC;KACtC,oCAAoC;KACpC,wCAAwC;KACxC,EAAE;KACF,eAAe;KACf,EAAE;KACF,uBAAuB;KACvB,wBAAwB;KACxB,0BAA0B;KAC1B,EAAE;KACF,gCAAgC;KAChC,gCAAgC;KAChC,6BAA6B;KAC7B,+BAA+B;KAC/B,kCAAkC;KAClC,EAAE;KACF,0EAA0E;KAC1E,EAAE;KACF,4CAA4C;KAC5C,EAAE;KACF,QAAQ;KACR,EAAE;KACF,0BAA0B;KAC1B,oCAAoC;KACpC,gCAAgC;KAChC,6BAA6B;KAC7B,4BAA4B;KAC5B,gCAAgC;KAChC,oCAAoC;KACpC,EAAE;KACF,oCAAoC;KACpC,EAAE;KACF,6BAA6B;KAC7B,8BAA8B;KAC9B,EAAE;KACF,GAAG;KACH,EAAE;EACD,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;ACxDb,mBAAe;KACf,wBAAwB;KACxB,uBAAuB;KACvB,EAAE;KACF,mBAAmB;KACnB,oBAAoB;KACpB,sCAAsC;KACtC,0CAA0C;KAC1C,EAAE;KACF,eAAe;KACf,EAAE;KACF,sCAAsC;KACtC,8DAA8D;KAC9D,EAAE;KACF,kCAAkC;KAClC,EAAE;KACF,GAAG;KACH,EAAE;EACD,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;AClBb,mBAAe;KACf,uBAAuB;KACvB,EAAE;KACF,mBAAmB;KACnB,oCAAoC;KACpC,oCAAoC;KACpC,wCAAwC;KACxC,EAAE;KACF,eAAe;KACf,EAAE;KACF,gDAAgD;KAChD,EAAE;KACF,0BAA0B;KAC1B,gCAAgC;KAChC,4BAA4B;KAC5B,gCAAgC;KAChC,oCAAoC;KACpC,EAAE;KACF,GAAG;KACH,EAAE;EACD,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;ACpBb,mBAAe;KACf,uBAAuB;KACvB,wBAAwB;KACxB,EAAE;KACF,mBAAmB;KACnB,oBAAoB;KACpB,gCAAgC;KAChC,uCAAuC;KACvC,8BAA8B;KAC9B,oCAAoC;KACpC,sCAAsC;KACtC,0CAA0C;KAC1C,EAAE;KACF,eAAe;KACf,EAAE;KACF,sCAAsC;KACtC,EAAE;KACF,oCAAoC;KACpC,gDAAgD;KAChD,EAAE;KACF,kCAAkC;KAClC,mCAAmC;KACnC,4BAA4B;KAC5B,gCAAgC;KAChC,EAAE;KACF,oCAAoC;KACpC,EAAE;KACF,wDAAwD;KACxD,EAAE;KACF,0CAA0C;KAC1C,kCAAkC;KAClC,gCAAgC;KAChC,0BAA0B;KAC1B,EAAE;KACF,GAAG;KACH,EAAE;EACD,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;ACpCb,mBAAe;KACf,qBAAqB;KACrB,sBAAsB;KACtB,EAAE;KACF,mBAAmB;KACnB,8BAA8B;KAC9B,kCAAkC;KAClC,oCAAoC;KACpC,wCAAwC;KACxC,EAAE;KACF,eAAe;KACf,EAAE;KACF,0BAA0B;KAC1B,0BAA0B;KAC1B,4BAA4B;KAC5B,EAAE;KACF,6BAA6B;KAC7B,qDAAqD;KACrD,QAAQ;KACR,wBAAwB;KACxB,SAAS;KACT,EAAE;KACF,gCAAgC;KAChC,oCAAoC;KACpC,6BAA6B;KAC7B,8BAA8B;KAC9B,EAAE;KACF,GAAG;KACH,EAAE;EACD,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;AC7Bb,mBAAe;KACf,wBAAwB;KACxB,EAAE;KACF,mBAAmB;KACnB,oBAAoB;KACpB,kBAAkB;KAClB,wBAAwB;KACxB,oCAAoC;KACpC,qCAAqC;KACrC,EAAE;KACF,eAAe;KACf,EAAE;KACF,8EAA8E;KAC9E,EAAE;KACF,GAAG;KACH,EAAE;EACD,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;AChBb,mBAAe;KACf,kCAAkC;KAClC,EAAE;KACF,eAAe;KACf,EAAE;KACF,0BAA0B;KAC1B,4BAA4B;KAC5B,6BAA6B;KAC7B,8BAA8B;KAC9B,EAAE;KACF,GAAG;KACH,EAAE;EACD,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;KC6FA,WAAW,GAAQ;KAC9B,iBAAiB,EAAE,iBAAiB;KACpC,sBAAsB,EAAE,sBAAsB;KAC9C,kBAAkB,EAAE,kBAAkB;KACtC,cAAc,EAAE,cAAc;KAC9B,mBAAmB,EAAE,mBAAmB;KACxC,YAAY,EAAE,YAAY;KAC1B,kBAAkB,EAAE,kBAAkB;KACtC,KAAK,EAAE,KAAK;KACZ,qBAAqB,EAAE,qBAAqB;KAC5C,wBAAwB,EAAE,wBAAwB;KAClD,6BAA6B,EAAE,6BAA6B;KAC5D,2BAA2B,EAAE,2BAA2B;KACxD,sBAAsB,EAAE,sBAAsB;KAC9C,cAAc,EAAE,cAAc;KAC9B,mBAAmB,EAAE,mBAAmB;KACxC,iBAAiB,EAAE,iBAAiB;KACpC,YAAY,EAAE,YAAY;KAC1B,MAAM,EAAE,MAAM;KACd,2BAA2B,EAAE,2BAA2B;KACxD,oBAAoB,EAAE,oBAAoB;KAC1C,2BAA2B,EAAE,2BAA2B;KACxD,sBAAsB,EAAE,sBAAsB;KAC9C,oBAAoB,EAAE,oBAAoB;KAC1C,yBAAyB,EAAE,yBAAyB;KACpD,kBAAkB,EAAE,kBAAkB;KACtC,uBAAuB,EAAE,uBAAuB;KAChD,eAAe,EAAE,eAAe;KAChC,oBAAoB,EAAE,oBAAoB;KAC1C,kBAAkB,EAAE,kBAAkB;KACtC,aAAa,EAAE,aAAa;KAC5B,YAAY,EAAE,YAAY;KAC1B,iBAAiB,EAAE,iBAAiB;KACpC,iBAAiB,EAAE,iBAAiB;KACpC,sBAAsB,EAAE,sBAAsB;KAC9C,qBAAqB,EAAE,qBAAqB;KAC5C,WAAW,EAAE,WAAW;KACxB,qBAAqB,EAAE,qBAAqB;KAC5C,0BAA0B,EAAE,0BAA0B;KACtD,wBAAwB,EAAE,wBAAwB;KAClD,6BAA6B,EAAE,6BAA6B;KAC5D,eAAe,EAAE,eAAe;KAChC,oBAAoB,EAAE,oBAAoB;KAC1C,yBAAyB,EAAE,yBAAyB;KACpD,uBAAuB,EAAE,uBAAuB;KAChD,kBAAkB,EAAE,kBAAkB;KACtC,YAAY,EAAE,YAAY;KAC1B,iBAAiB,EAAE,iBAAiB;KACpC,qBAAqB,EAAE,qBAAqB;KAC5C,0BAA0B,EAAE,0BAA0B;KACtD,qBAAqB,EAAE,qBAAqB;KAC5C,0BAA0B,EAAE,0BAA0B;KACtD,kBAAkB,EAAE,kBAAkB;KACtC,uBAAuB,EAAE,uBAAuB;KAChD,kBAAkB,EAAE,kBAAkB;KACtC,WAAW,EAAE,WAAW;KACxB,eAAe,EAAE,eAAe;KAChC,uBAAuB,EAAE,uBAAuB;KAChD,OAAO,EAAE,OAAO;KAChB,4BAA4B,EAAE,4BAA4B;KAC1D,cAAc,EAAE,cAAc;KAC9B,qBAAqB,EAAE,qBAAqB;KAC5C,0BAA0B,EAAE,0BAA0B;KACtD,uBAAuB,EAAE,uBAAuB;KAChD,qBAAqB,EAAE,qBAAqB;KAC5C,gBAAgB,EAAE,gBAAgB;KAClC,wBAAwB,EAAE,wBAAwB;KAClD,eAAe,EAAE,eAAe;KAChC,oBAAoB,EAAE,oBAAoB;KAC1C,eAAe,EAAE,eAAe;KAChC,iBAAiB,EAAE,iBAAiB;KACpC,oBAAoB,EAAE,oBAAoB;KAC1C,yBAAyB,EAAE,yBAAyB;KACpD,oBAAoB,EAAE,oBAAoB;KAC1C,yBAAyB,EAAE,yBAAyB;KACpD,gBAAgB,EAAE,gBAAgB;KAClC,cAAc,EAAE,cAAc;KAC9B,SAAS,EAAE,SAAS;KACpB,iBAAiB,EAAE,iBAAiB;KACpC,eAAe,EAAE,eAAe;KAChC,UAAU,EAAE,UAAU;KACtB,eAAe,EAAE,eAAe;KAChC,SAAS,EAAE,SAAS;KACpB,SAAS,EAAE,SAAS;KACpB,UAAU,EAAE,UAAU;KACtB,UAAU,EAAE,UAAU;KACtB,iBAAiB,EAAE,iBAAiB;KACpC,iBAAiB,EAAE,iBAAiB;KACpC,aAAa,EAAE,aAAa;KAC5B,aAAa,EAAE,aAAa;KAC5B,eAAe,EAAE,eAAe;KAChC,eAAe,EAAE,eAAe;KAChC,cAAc,EAAE,cAAc;KAC9B,cAAc,EAAE,cAAc;KAC9B,gBAAgB,EAAE,gBAAgB;KAClC,gBAAgB,EAAE,gBAAgB;KAClC,cAAc,EAAE,cAAc;KAC9B,cAAc,EAAE,cAAc;KAC9B,iBAAiB,EAAE,iBAAiB;KACpC,iBAAiB,EAAE,iBAAiB;KACpC,WAAW,EAAE,WAAW;KACxB,WAAW,EAAE,WAAW;KACxB,WAAW,EAAE,WAAW;KACxB,WAAW,EAAE,WAAW;KACxB,WAAW,EAAE,WAAW;KACxB,WAAW,EAAE,WAAW;EACzB;;CCnND;;;AAGA,KAGa,WAAW,GAAQ;KAC9B,MAAM,EAAE;SACN,OAAO,EAAE,EAAE,KAAK,EAAE,IAAI,KAAK,CAAC,QAAQ,CAAC,EAAE;SACvC,OAAO,EAAE,EAAE,KAAK,EAAE,GAAG,EAAE;SACvB,GAAG,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE;SACpB,YAAY,EAAE,EAAE,KAAK,EAAE,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE;SAChD,WAAW,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE;SAC5B,QAAQ,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE;SACzB,MAAM,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE;SACvB,UAAU,EAAE,EAAE,KAAK,EAAE,CAAE,CAAC,EAAE;SAC1B,YAAY,EAAE,EAAE,KAAK,EAAE,GAAG,EAAE;SAC5B,eAAe,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE;MACjC;KACD,KAAK,EAAE;SACL,KAAK,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE;SACtB,cAAc,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE;MAC7B;KACD,QAAQ,EAAE;SACR,QAAQ,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE;SACzB,iBAAiB,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE;MAChC;KACD,WAAW,EAAE;SACX,WAAW,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE;MAC7B;KACD,OAAO,EAAE;SACP,OAAO,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE;SACxB,SAAS,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE;MACxB;KACD,SAAS,EAAE;SACT,SAAS,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE;SAC1B,WAAW,EAAE,EAAE,KAAK,EAAE,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE;MAC1C;KACD,eAAe,EAAE;SACf,eAAe,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE;SAChC,iBAAiB,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE;SAC/B,gBAAgB,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE;MAC/B;KACD,YAAY,EAAE;SACZ,YAAY,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE;MAC9B;KACD,YAAY,EAAE;SACZ,YAAY,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE;MAC9B;KACD,GAAG,EAAE;SACH,UAAU,EAAE,EAAE,KAAK,EAAE,OAAO,EAAE;SAC9B,OAAO,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE;SACrB,MAAM,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE;SACvB,QAAQ,EAAE,EAAE,KAAK,EAAE,IAAI,KAAK,CAAC,QAAQ,CAAC,EAAE;MACzC;KACD,MAAM,EAAE;SACN,iBAAiB,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE;SAChC,iBAAiB,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,UAAU,EAAE;iBAC1C,SAAS,EAAE,EAAE;iBACb,KAAK,EAAE,EAAE;iBACT,MAAM,EAAE,EAAE;iBACV,UAAU,EAAE,EAAE;iBACd,YAAY,EAAE,EAAE;iBAChB,aAAa,EAAE,EAAE;cAClB,EAAE;SACH,oBAAoB,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE;SACnC,uBAAuB,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE;SACtC,UAAU,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,UAAU,EAAE;iBACnC,KAAK,EAAE,EAAE;iBACT,QAAQ,EAAE,EAAE;iBACZ,SAAS,EAAE,EAAE;iBACb,QAAQ,EAAE,EAAE;iBACZ,OAAO,EAAE,EAAE;iBACX,WAAW,EAAE,EAAE;iBACf,KAAK,EAAE,EAAE;iBACT,MAAM,EAAE,EAAE;iBACV,UAAU,EAAE,EAAE;iBACd,YAAY,EAAE,EAAE;iBAChB,aAAa,EAAE,EAAE;cAClB,EAAE;SACH,aAAa,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE;SAC5B,gBAAgB,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE;SAC/B,WAAW,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,UAAU,EAAE;iBACpC,KAAK,EAAE,EAAE;iBACT,QAAQ,EAAE,EAAE;iBACZ,KAAK,EAAE,EAAE;iBACT,QAAQ,EAAE,EAAE;iBACZ,MAAM,EAAE,EAAE;iBACV,UAAU,EAAE,EAAE;iBACd,YAAY,EAAE,EAAE;iBAChB,aAAa,EAAE,EAAE;cAClB,EAAE;SACH,cAAc,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE;SAC7B,iBAAiB,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE;SAChC,gBAAgB,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,UAAU,EAAE;iBACzC,SAAS,EAAE,EAAE;iBACb,QAAQ,EAAE,EAAE;iBACZ,WAAW,EAAE,EAAE;cAChB,EAAE;MACJ;KACD,MAAM,EAAE;SACN,OAAO,EAAE,EAAE,KAAK,EAAE,IAAI,KAAK,CAAC,QAAQ,CAAC,EAAE;SACvC,OAAO,EAAE,EAAE,KAAK,EAAE,GAAG,EAAE;SACvB,IAAI,EAAE,EAAE,KAAK,EAAE,GAAG,EAAE;SACpB,KAAK,EAAE,EAAE,KAAK,EAAE,GAAG,EAAE;SACrB,GAAG,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE;SACpB,YAAY,EAAE,EAAE,KAAK,EAAE,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE;MACjD;EACF;;CC5GD;;;;;AAKA,KAKa,SAAS,GAAQ;KAC5B,KAAK,EAAE;SACL,QAAQ,EAAE,aAAa,CAAC,KAAK,CAAC;aAC5B,WAAW,CAAC,MAAM;aAClB,WAAW,CAAC,KAAK;aACjB,WAAW,CAAC,GAAG;UAChB,CAAC;SACF,YAAY,EAAE,WAAW,CAAC,cAAc;SACxC,cAAc,EAAE,WAAW,CAAC,cAAc;MAC3C;KACD,OAAO,EAAE;SACP,QAAQ,EAAE,aAAa,CAAC,KAAK,CAAC;aAC5B,WAAW,CAAC,MAAM;aAClB,WAAW,CAAC,KAAK;aACjB,WAAW,CAAC,QAAQ;aACpB,WAAW,CAAC,WAAW;aACvB,WAAW,CAAC,GAAG;aACf,WAAW,CAAC,MAAM;aAClB;iBACE,QAAQ,EAAG,EAAE,KAAK,EAAE,IAAI,KAAK,CAAC,QAAQ,CAAC,EAAE;cAC1C;UACF,CAAC;SACF,YAAY,EAAE,WAAW,CAAC,gBAAgB;SAC1C,cAAc,EAAE,WAAW,CAAC,gBAAgB;MAC7C;KACD,KAAK,EAAE;SACL,QAAQ,EAAE,aAAa,CAAC,KAAK,CAAC;aAC5B,WAAW,CAAC,MAAM;aAClB,WAAW,CAAC,KAAK;aACjB,WAAW,CAAC,QAAQ;aACpB,WAAW,CAAC,WAAW;aACvB,WAAW,CAAC,OAAO;aACnB,WAAW,CAAC,SAAS;aACrB,WAAW,CAAC,eAAe;aAC3B,WAAW,CAAC,GAAG;aACf,WAAW,CAAC,MAAM;aAClB;iBACE,QAAQ,EAAG,EAAE,KAAK,EAAE,IAAI,KAAK,CAAC,QAAQ,CAAC,EAAE;iBACzC,QAAQ,EAAG,EAAE,KAAK,EAAE,IAAI,KAAK,CAAC,QAAQ,CAAC,EAAE;iBACzC,SAAS,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE;cACzB;UACF,CAAC;SACF,YAAY,EAAE,WAAW,CAAC,cAAc;SACxC,cAAc,EAAE,WAAW,CAAC,cAAc;MAC3C;KACD,QAAQ,EAAE;SACR,QAAQ,EAAE,aAAa,CAAC,KAAK,CAAC;aAC5B,WAAW,CAAC,MAAM;aAClB,WAAW,CAAC,KAAK;aACjB,WAAW,CAAC,QAAQ;aACpB,WAAW,CAAC,WAAW;aACvB,WAAW,CAAC,OAAO;aACnB,WAAW,CAAC,SAAS;aACrB,WAAW,CAAC,eAAe;aAC3B,WAAW,CAAC,YAAY;aACxB,WAAW,CAAC,YAAY;aACxB,WAAW,CAAC,GAAG;aACf,WAAW,CAAC,MAAM;aAClB;iBACE,QAAQ,EAAG,EAAE,KAAK,EAAE,IAAI,KAAK,CAAC,QAAQ,CAAC,EAAE;iBACzC,SAAS,EAAE,EAAE,KAAK,EAAE,GAAG,EAAE;iBACzB,SAAS,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE;iBACvB,eAAe,EAAG,EAAE,KAAK,EAAE,CAAC,EAAE;cAC/B;UACF,CAAC;SACF,YAAY,EAAE,WAAW,CAAC,iBAAiB;SAC3C,cAAc,EAAE,WAAW,CAAC,iBAAiB;MAC9C;KACD,MAAM,EAAE;SACN,QAAQ,EAAE,aAAa,CAAC,KAAK,CAAC;aAC5B,WAAW,CAAC,MAAM;aAClB,WAAW,CAAC,GAAG;UAChB,CAAC;SACF,YAAY,EAAE,WAAW,CAAC,WAAW;SACrC,cAAc,EAAE,WAAW,CAAC,WAAW;MACxC;KACD,MAAM,EAAE;SACN,QAAQ,EAAE,aAAa,CAAC,KAAK,CAAC;aAC5B,WAAW,CAAC,MAAM;aAClB,WAAW,CAAC,GAAG;aACf;iBACE,KAAK,EAAM,EAAE,KAAK,EAAE,CAAC,EAAE;iBACvB,QAAQ,EAAG,EAAE,KAAK,EAAE,CAAC,EAAE;iBACvB,SAAS,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE;cACxB;UACF,CAAC;SACF,YAAY,EAAE,WAAW,CAAC,eAAe;SACzC,cAAc,EAAE,WAAW,CAAC,eAAe;MAC5C;KACD,KAAK,EAAE;SACL,QAAQ,EAAE,aAAa,CAAC,KAAK,CAAC;aAC5B,WAAW,CAAC,MAAM;aAClB,WAAW,CAAC,eAAe;UAC5B,CAAC;SACF,YAAY,EAAE,WAAW,CAAC,UAAU;SACpC,cAAc,EAAE,WAAW,CAAC,UAAU;MACvC;KACD,MAAM,EAAE;SACN,QAAQ,EAAE;aACR,OAAO,EAAG,EAAE,KAAK,EAAE,GAAG,EAAE;UACzB;SACD,YAAY,EAAE,WAAW,CAAC,WAAW;SACrC,cAAc,EAAE,WAAW,CAAC,WAAW;MACxC;;;;KAID,IAAI,EAAE;SACJ,QAAQ,EAAE;aACR,KAAK,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE;aACtB,KAAK,EAAE,EAAE,KAAK,EAAE,CAAE,CAAC,EAAE;aACrB,OAAO,EAAE,EAAE,KAAK,EAAE,GAAG,EAAE;UACxB;SACD,YAAY,EAAE,WAAW,CAAC,SAAS;SACnC,cAAc,EAAE,WAAW,CAAC,SAAS;MACtC;;;;KAID,QAAQ,EAAE;SACR,QAAQ,EAAE;aACR,SAAS,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE;aAC1B,KAAK,EAAE,EAAE,KAAK,EAAE,CAAE,CAAC,EAAE;UACtB;SACD,YAAY,EAAE,WAAW,CAAC,aAAa;SACvC,cAAc,EAAE,WAAW,CAAC,aAAa;MAC1C;KACD,YAAY,EAAE;SACZ,QAAQ,EAAE;aACR,QAAQ,EAAE,EAAE,KAAK,EAAE,IAAI,OAAO,EAAE,EAAE;UACnC;SACD,YAAY,EAAE,WAAW,CAAC,iBAAiB;SAC3C,cAAc,EAAE,WAAW,CAAC,iBAAiB;MAC9C;EACF,CAAC;CACF,SAAS,CAAC,QAAQ,GAAG;KACnB,QAAQ,EAAE,aAAa,CAAC,KAAK,CAAC;SAC5B,SAAS,CAAC,QAAQ,CAAC,QAAQ;SAC3B;aACE,SAAS,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE;aACvB,kBAAkB,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE;UACjC;MACF,CAAC;KACF,YAAY,EAAE,WAAW,CAAC,iBAAiB;KAC3C,cAAc,EAAE,WAAW,CAAC,iBAAiB;EAC9C,CAAC;;CC1JF;;;AAGA;KAGE,cAAY,GAAyC,EAAE,GAAyC;SAApF,oBAAA,EAAA,UAAU,OAAO,CAAC,CAAE,QAAQ,EAAE,CAAE,QAAQ,CAAC;SAAE,oBAAA,EAAA,UAAU,OAAO,CAAC,CAAE,QAAQ,EAAE,CAAE,QAAQ,CAAC;SAC9F,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;SACf,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;MAChB;KACD,kBAAG,GAAH,UAAI,GAAY,EAAE,GAAY;SAC5B,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SACnB,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SACnB,OAAO,IAAI,CAAC;MACb;KACD,4BAAa,GAAb,UAAc,MAAiB;SAC7B,IAAI,CAAC,SAAS,EAAE,CAAC;SACjB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAG,EAAE;aAChD,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;UAC/B;SACD,OAAO,IAAI,CAAC;MACb;KAED,mCAAoB,GAApB,UAAqB,MAAe,EAAE,IAAa;SACjD,IAAM,EAAE,GAAG,IAAI,CAAC,wBAAwB,CAAC;SACzC,IAAM,QAAQ,GAAG,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC;SACnD,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;SACpC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;SACpC,OAAO,IAAI,CAAC;MACb;KACD,oBAAK,GAAL;SACE,OAAO,IAAK,IAAI,CAAC,WAAmB,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;MACnD;KACD,mBAAI,GAAJ,UAAK,GAAS;SACZ,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;SACvB,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;SACvB,OAAO,IAAI,CAAC;MACb;KACD,wBAAS,GAAT;SACE,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAE,QAAQ,CAAC;SACrC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAE,QAAQ,CAAC;SACrC,OAAO,IAAI,CAAC;MACb;KACD,sBAAO,GAAP;;SAEE,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MAC/D;KACD,wBAAS,GAAT,UAAU,MAA+B;SAA/B,uBAAA,EAAA,aAAsB,OAAO,EAAE;SACvC,OAAO,IAAI,CAAC,OAAO,EAAE,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC;MACtG;KACD,sBAAO,GAAP,UAAQ,MAA+B;SAA/B,uBAAA,EAAA,aAAsB,OAAO,EAAE;SACrC,OAAO,IAAI,CAAC,OAAO,EAAE,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;MAClF;KACD,4BAAa,GAAb,UAAc,KAAc;SAC1B,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;SACpB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;SACpB,OAAO,IAAI,CAAC;MACb;KACD,6BAAc,GAAd,UAAe,MAAe;SAC5B,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;SACrB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;SACrB,OAAO,IAAI,CAAC;MACb;KACD,6BAAc,GAAd,UAAe,MAAc;SAC3B,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAE,MAAM,CAAC,CAAC;SAC7B,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;SAC3B,OAAO,IAAI,CAAC;MACb;KACD,4BAAa,GAAb,UAAc,KAAc;SAC1B,IAAI,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;aAC3C,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE;aACjD,OAAO,KAAK,CAAC;UACd;SACD,OAAO,IAAI,CAAC;MACb;KACD,0BAAW,GAAX,UAAY,GAAS;SACnB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;cACvD,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE;aACxD,OAAO,IAAI,CAAC;UACb;SACD,OAAO,KAAK,CAAC;MACd;KACD,2BAAY,GAAZ,UAAa,KAAc,EAAE,MAA+B;SAA/B,uBAAA,EAAA,aAAsB,OAAO,EAAE;;;SAG1D,OAAO,MAAM,CAAC,GAAG,CACf,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAClD,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CACnD,CAAC;MACH;KACD,4BAAa,GAAb,UAAc,GAAS;;SAErB,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;aAClD,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE;aAClD,OAAO,KAAK,CAAC;UACd;SACD,OAAO,IAAI,CAAC;MACb;KACD,yBAAU,GAAV,UAAW,KAAc,EAAE,MAA+B;SAA/B,uBAAA,EAAA,aAAsB,OAAO,EAAE;SACxD,OAAO,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;MACrD;KAED,8BAAe,GAAf,UAAgB,KAAc;SAC5B,IAAM,EAAE,GAAG,IAAI,CAAC,mBAAmB,CAAC;SACpC,IAAM,YAAY,GAAG,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;SAC9D,OAAO,YAAY,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,MAAM,EAAE,CAAC;MACzC;KACD,wBAAS,GAAT,UAAU,GAAS;SACjB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;SACtB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;SACtB,OAAO,IAAI,CAAC;MACb;KACD,oBAAK,GAAL,UAAM,GAAS;SACb,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;SACtB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;SACtB,OAAO,IAAI,CAAC;MACb;KACD,wBAAS,GAAT,UAAU,MAAe;SACvB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;SACrB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;SACrB,OAAO,IAAI,CAAC;MACb;KACD,qBAAM,GAAN,UAAO,GAAS;SACd,OAAO,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;MAC7D;KACD,oBAAK,GAAL;SACE,OAAO,CAAC,IAAI,CAAC,sDAAsD,CAAC,CAAC;SACrE,OAAO,IAAI,CAAC,OAAO,EAAE,CAAC;MACvB;KACD,qBAAM,GAAN,UAAO,cAAuC;SAAvC,+BAAA,EAAA,qBAA8B,OAAO,EAAE;SAC5C,OAAO,CAAC,IAAI,CAAC,yDAAyD,CAAC,CAAC;SACxE,OAAO,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC;MACvC;KACD,mBAAI,GAAJ,UAAK,cAAuC;SAAvC,+BAAA,EAAA,qBAA8B,OAAO,EAAE;SAC1C,OAAO,CAAC,IAAI,CAAC,qDAAqD,CAAC,CAAC;SACpE,OAAO,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;MACrC;KACD,gCAAiB,GAAjB,UAAkB,GAAS;SACzB,OAAO,CAAC,IAAI,CAAC,wEAAwE,CAAC,CAAC;SACvF,OAAO,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;MAChC;KAtHc,6BAAwB,GAAG,IAAI,OAAO,EAAE,CAAC;KA+EzC,wBAAmB,GAAG,IAAI,OAAO,EAAE,CAAC;KAwCrD,WAAC;EA1ID;;CCDA;;;;CAIA;KAWE,yBAAY,QAAa,EAAE,MAAW;SACpC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;SACzB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;MACtB;KACD,8BAAI,GAAJ;SACE,IAAM,EAAE,GAA0B,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC;SACxD,IAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;SAClC,IAAM,QAAQ,GAAG,IAAI,YAAY,CAAC;aAChC,CAAE,CAAC,EAAE,CAAE,CAAC,EAAG,CAAC,EAAE,CAAC;aACd,CAAC,EAAE,CAAE,CAAC,EAAG,CAAC,EAAE,CAAC;aACb,CAAC,EAAG,CAAC,EAAG,CAAC,EAAE,CAAC;aACb,CAAE,CAAC,EAAG,CAAC,EAAG,CAAC,EAAE,CAAC;UACf,CAAC,CAAC;SACH,IAAM,KAAK,GAAG,IAAI,WAAW,CAAC;aAC5B,CAAC,EAAE,CAAC,EAAE,CAAC;aACP,CAAC,EAAE,CAAC,EAAE,CAAC;UACR,CAAC,CAAC;;SAEH,IAAM,YAAY,GAAG,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC,YAAY,EAAE,CAAC;SAC3D,IAAM,aAAa,GAAG,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC,YAAY,EAAE,CAAC;SAC7D,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,YAAY,EAAE,YAAY,CAAC,CAAC;SAC7C,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,YAAY,EAAE,QAAQ,EAAE,EAAE,CAAC,WAAW,CAAC,CAAC;SACzD,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,oBAAoB,EAAE,aAAa,CAAC,CAAC;SACtD,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,oBAAoB,EAAE,KAAK,EAAE,EAAE,CAAC,WAAW,CAAC,CAAC;;SAE9D,IAAM,WAAW,GAAG,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC,aAAa,EAAE,CAAC;SAC1D,IAAM,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC,aAAa,EAAE,CAAC;SACpE,KAAK,CAAC,WAAW,CAAC,EAAE,CAAC,UAAU,EAAE,WAAW,CAAC,CAAC;SAC9C,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,UAAU,EAAE,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC;SACnF,EAAE,CAAC,aAAa,CAAC,EAAE,CAAC,UAAU,EAAE,EAAE,CAAC,cAAc,EAAE,EAAE,CAAC,aAAa,CAAC,CAAC;SACrE,EAAE,CAAC,aAAa,CAAC,EAAE,CAAC,UAAU,EAAE,EAAE,CAAC,cAAc,EAAE,EAAE,CAAC,aAAa,CAAC,CAAC;SACrE,EAAE,CAAC,aAAa,CAAC,EAAE,CAAC,UAAU,EAAE,EAAE,CAAC,kBAAkB,EAAE,EAAE,CAAC,OAAO,CAAC,CAAC;SACnE,EAAE,CAAC,aAAa,CAAC,EAAE,CAAC,UAAU,EAAE,EAAE,CAAC,kBAAkB,EAAE,EAAE,CAAC,OAAO,CAAC,CAAC;SACnE,KAAK,CAAC,WAAW,CAAC,EAAE,CAAC,UAAU,EAAE,gBAAgB,CAAC,CAAC;SACnD,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,UAAU,EAAE,CAAC,EAAE,EAAE,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC;SACrF,EAAE,CAAC,aAAa,CAAC,EAAE,CAAC,UAAU,EAAE,EAAE,CAAC,cAAc,EAAE,EAAE,CAAC,aAAa,CAAC,CAAC;SACrE,EAAE,CAAC,aAAa,CAAC,EAAE,CAAC,UAAU,EAAE,EAAE,CAAC,cAAc,EAAE,EAAE,CAAC,aAAa,CAAC,CAAC;SACrE,EAAE,CAAC,aAAa,CAAC,EAAE,CAAC,UAAU,EAAE,EAAE,CAAC,kBAAkB,EAAE,EAAE,CAAC,OAAO,CAAC,CAAC;SACnE,EAAE,CAAC,aAAa,CAAC,EAAE,CAAC,UAAU,EAAE,EAAE,CAAC,kBAAkB,EAAE,EAAE,CAAC,OAAO,CAAC,CAAC;SACnE,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,GAAG;aAC3B,YAAY,EAAE;iBACZ,8BAA8B;iBAC9B,8BAA8B;iBAC9B,qBAAqB;iBACrB,yBAAyB;iBACzB,iCAAiC;iBACjC,0BAA0B;iBAC1B,oBAAoB;iBACpB,mBAAmB;iBACnB,4BAA4B;iBAC5B,eAAe;iBACb,WAAW;iBACX,sBAAsB;iBACtB,wBAAwB;iBACtB,4DAA4D;iBAC5D,wDAAwD;iBACxD,wDAAwD;iBACxD,wDAAwD;iBACxD,wDAAwD;iBACxD,wDAAwD;iBACxD,wDAAwD;iBACxD,wDAAwD;iBACxD,wDAAwD;iBACxD,0CAA0C;iBAC1C,0CAA0C;iBAC1C,0CAA0C;iBAC1C,0CAA0C;iBAC1C,kEAAkE;iBAClE,kEAAkE;iBACpE,GAAG;iBACH,kFAAkF;iBACpF,GAAG;cACJ,CAAC,IAAI,CAAC,IAAI,CAAC;aACZ,cAAc,EAAE;iBACd,8BAA8B;iBAC9B,wBAAwB;iBACxB,wBAAwB;iBACxB,qBAAqB;iBACrB,mBAAmB;iBACnB,4BAA4B;iBAC5B,eAAe;;iBAEb,wBAAwB;iBACtB,0CAA0C;;iBAE5C,+BAA+B;iBAC7B,qCAAqC;;iBAEvC,UAAU;iBACR,qCAAqC;iBACrC,qCAAqC;iBACrC,yBAAyB;iBACzB,4BAA4B;iBAC9B,GAAG;iBACL,GAAG;cACJ,CAAC,IAAI,CAAC,IAAI,CAAC;UACb,CAAC;SACF,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;SAC1D,IAAI,CAAC,UAAU,GAAG;aAChB,MAAM,EAAE,EAAE,CAAC,iBAAiB,CAAE,OAAO,EAAE,UAAU,CAAC;aAClD,EAAE,EAAM,EAAE,CAAC,iBAAiB,CAAE,OAAO,EAAE,IAAI,CAAC;UAC7C,CAAC;SACF,IAAI,CAAC,QAAQ,GAAG;aACd,UAAU,EAAM,EAAE,CAAC,kBAAkB,CAAC,OAAO,EAAE,YAAY,CAAC;aAC5D,GAAG,EAAa,EAAE,CAAC,kBAAkB,CAAC,OAAO,EAAE,KAAK,CAAC;aACrD,YAAY,EAAI,EAAE,CAAC,kBAAkB,CAAC,OAAO,EAAE,cAAc,CAAC;aAC9D,OAAO,EAAS,EAAE,CAAC,kBAAkB,CAAC,OAAO,EAAE,SAAS,CAAC;aACzD,KAAK,EAAW,EAAE,CAAC,kBAAkB,CAAC,OAAO,EAAE,OAAO,CAAC;aACvD,KAAK,EAAW,EAAE,CAAC,kBAAkB,CAAC,OAAO,EAAE,OAAO,CAAC;aACvD,QAAQ,EAAQ,EAAE,CAAC,kBAAkB,CAAC,OAAO,EAAE,UAAU,CAAC;aAC1D,cAAc,EAAE,EAAE,CAAC,kBAAkB,CAAC,OAAO,EAAE,gBAAgB,CAAC;UACjE,CAAC;MACH;;;;;;KAMD,gCAAM,GAAN,UAAO,KAAU,EAAE,MAAW,EAAE,QAAa;SAC3C,IAAM,EAAE,GAA0B,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC;SACxD,IAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;SAClC,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;SAC3B,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC;aAAE,OAAO;SAChC,IAAM,YAAY,GAAG,IAAI,OAAO,EAAE,CAAC;SACnC,IAAM,SAAS,GAAG,QAAQ,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC;SAC1C,IAAM,iBAAiB,GAAG,QAAQ,CAAC,CAAC,GAAG,GAAG,CAAC;SAC3C,IAAM,kBAAkB,GAAG,QAAQ,CAAC,CAAC,GAAG,GAAG,CAAC;SAC5C,IAAI,IAAI,GAAG,EAAE,GAAG,QAAQ,CAAC,CAAC,CAAC;SAC3B,IAAM,KAAK,GAAG,IAAI,OAAO,CAAC,IAAI,GAAG,SAAS,EAAE,IAAI,CAAC,CAAC;SAClD,IAAM,cAAc,GAAG,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;SAC5C,IAAM,oBAAoB,GAAG,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;SAC/C,IAAM,SAAS,GAAG,IAAI,IAAI,EAAE,CAAC;SAC7B,SAAS,CAAC,GAAG,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC;SAC1C,SAAS,CAAC,GAAG,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,IAAI,QAAQ,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,QAAQ,CAAC,CAAC,IAAI,QAAQ,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;SAClF,IAAI,IAAI,CAAC,OAAO,KAAK,SAAS,EAAE;aAC9B,IAAI,CAAC,IAAI,EAAE,CAAC;UACb;SACD,IAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;SAC/B,IAAM,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;SACnC,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SAC5B,KAAK,CAAC,cAAc,EAAE,CAAC;SACvB,KAAK,CAAC,eAAe,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;SACzC,KAAK,CAAC,eAAe,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;SACrC,KAAK,CAAC,uBAAuB,EAAE,CAAC;;;SAGhC,EAAE,CAAC,SAAS,CAAC,QAAQ,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC;SACvC,EAAE,CAAC,SAAS,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;SAC9B,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,YAAY,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;SAClD,EAAE,CAAC,mBAAmB,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;SACxE,EAAE,CAAC,mBAAmB,CAAC,UAAU,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;SACpE,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,oBAAoB,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;SAC3D,KAAK,CAAC,OAAO,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC;SAC5B,KAAK,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;SAC3B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAG,EAAE;aAC9C,IAAI,GAAG,EAAE,GAAG,QAAQ,CAAC,CAAC,CAAC;aACvB,KAAK,CAAC,GAAG,CAAC,IAAI,GAAG,SAAS,EAAE,IAAI,CAAC,CAAC;;aAElC,IAAM,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;aACxB,YAAY,CAAC,GAAG,CAAC,KAAK,CAAC,WAAW,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,WAAW,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,WAAW,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;aACjH,YAAY,CAAC,YAAY,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC;aACrD,YAAY,CAAC,eAAe,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC;;aAEtD,cAAc,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;;aAElC,oBAAoB,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,IAAI,cAAc,CAAC,CAAC,GAAG,iBAAiB,CAAC,GAAG,iBAAiB,GAAG,CAAC,CAAC;aACrG,oBAAoB,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,IAAI,cAAc,CAAC,CAAC,GAAG,kBAAkB,CAAC,GAAG,kBAAkB,GAAG,CAAC,CAAC;;aAEvG,IAAI,SAAS,CAAC,aAAa,CAAC,oBAAoB,CAAC,KAAK,IAAI,EAAE;;iBAE1D,KAAK,CAAC,aAAa,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC;iBACjC,KAAK,CAAC,WAAW,CAAC,EAAE,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;iBACvC,KAAK,CAAC,aAAa,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC;iBACjC,KAAK,CAAC,WAAW,CAAC,EAAE,CAAC,UAAU,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;iBACnD,EAAE,CAAC,cAAc,CAAC,EAAE,CAAC,UAAU,EAAE,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,oBAAoB,CAAC,CAAC,EAAE,oBAAoB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;;iBAEvG,EAAE,CAAC,SAAS,CAAC,QAAQ,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;iBACrC,EAAE,CAAC,SAAS,CAAC,QAAQ,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;iBAC/C,EAAE,CAAC,SAAS,CAAC,QAAQ,CAAC,cAAc,EAAE,cAAc,CAAC,CAAC,EAAE,cAAc,CAAC,CAAC,EAAE,cAAc,CAAC,CAAC,CAAC,CAAC;iBAC5F,KAAK,CAAC,OAAO,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;iBACxB,KAAK,CAAC,MAAM,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC;iBAC5B,EAAE,CAAC,YAAY,CAAC,EAAE,CAAC,SAAS,EAAE,CAAC,EAAE,EAAE,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC;;iBAEvD,KAAK,CAAC,aAAa,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC;iBACjC,KAAK,CAAC,WAAW,CAAC,EAAE,CAAC,UAAU,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;iBACxD,EAAE,CAAC,cAAc,CAAC,EAAE,CAAC,UAAU,EAAE,CAAC,EAAE,EAAE,CAAC,IAAI,EAAE,oBAAoB,CAAC,CAAC,EAAE,oBAAoB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;;iBAExG,EAAE,CAAC,SAAS,CAAC,QAAQ,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;iBACrC,KAAK,CAAC,OAAO,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC;iBAC7B,KAAK,CAAC,aAAa,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC;iBACjC,KAAK,CAAC,WAAW,CAAC,EAAE,CAAC,UAAU,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;iBACnD,EAAE,CAAC,YAAY,CAAC,EAAE,CAAC,SAAS,EAAE,CAAC,EAAE,EAAE,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC;;iBAEvD,KAAK,CAAC,cAAc,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;iBAC1C,IAAI,KAAK,CAAC,oBAAoB,EAAE;qBAC9B,KAAK,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC;kBACnC;sBAAM;qBACL,KAAK,CAAC,gBAAgB,EAAE,CAAC;kBAC1B;;iBAED,EAAE,CAAC,SAAS,CAAC,QAAQ,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;iBACrC,KAAK,CAAC,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;iBACvB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,KAAK,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAG,EAAE;qBAC1D,IAAM,MAAM,GAAG,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;qBACnC,IAAI,MAAM,CAAC,OAAO,GAAG,KAAK,IAAI,MAAM,CAAC,KAAK,GAAG,KAAK,EAAE;yBAClD,cAAc,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;yBAC5B,cAAc,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;yBAC5B,cAAc,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;yBAC5B,IAAI,GAAG,MAAM,CAAC,IAAI,GAAG,MAAM,CAAC,KAAK,GAAG,QAAQ,CAAC,CAAC,CAAC;yBAC/C,KAAK,CAAC,CAAC,GAAG,IAAI,GAAG,SAAS,CAAC;yBAC3B,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC;yBACf,EAAE,CAAC,SAAS,CAAC,QAAQ,CAAC,cAAc,EAAE,cAAc,CAAC,CAAC,EAAE,cAAc,CAAC,CAAC,EAAE,cAAc,CAAC,CAAC,CAAC,CAAC;yBAC5F,EAAE,CAAC,SAAS,CAAC,QAAQ,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;yBAC/C,EAAE,CAAC,SAAS,CAAC,QAAQ,CAAC,QAAQ,EAAE,MAAM,CAAC,QAAQ,CAAC,CAAC;yBACjD,EAAE,CAAC,SAAS,CAAC,QAAQ,CAAC,OAAO,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC;yBAC/C,EAAE,CAAC,SAAS,CAAC,QAAQ,CAAC,KAAK,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;yBAC7E,KAAK,CAAC,WAAW,CAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,aAAa,EAAE,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,QAAQ,CAAC,CAAC;yBAC3F,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;yBAC9C,EAAE,CAAC,YAAY,CAAC,EAAE,CAAC,SAAS,EAAE,CAAC,EAAE,EAAE,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC;sBACxD;kBACF;cACF;UACF;;SAED,KAAK,CAAC,MAAM,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC;SAC3B,KAAK,CAAC,MAAM,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC;SAC5B,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;SAC1B,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,CAAC;MAC9B;KACD,uCAAa,GAAb,UAAc,MAAW;SACvB,IAAM,EAAE,GAA0B,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC;SACxD,IAAM,OAAO,GAAG,EAAE,CAAC,aAAa,EAAE,CAAC;SACnC,IAAM,cAAc,GAAG,EAAE,CAAC,YAAY,CAAC,EAAE,CAAC,eAAe,CAAC,CAAC;SAC3D,IAAM,YAAY,GAAG,EAAE,CAAC,YAAY,CAAC,EAAE,CAAC,aAAa,CAAC,CAAC;SACvD,IAAM,MAAM,GAAG,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,GAAG,WAAW,CAAC;SACzE,EAAE,CAAC,YAAY,CAAC,cAAc,EAAE,MAAM,GAAG,MAAM,CAAC,cAAc,CAAC,CAAC;SAChE,EAAE,CAAC,YAAY,CAAC,YAAY,EAAE,MAAM,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC;SAC5D,EAAE,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC;SACjC,EAAE,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC;SAC/B,EAAE,CAAC,YAAY,CAAC,OAAO,EAAE,cAAc,CAAC,CAAC;SACzC,EAAE,CAAC,YAAY,CAAC,OAAO,EAAE,YAAY,CAAC,CAAC;SACvC,EAAE,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;SACxB,OAAO,OAAO,CAAC;MAChB;KACH,sBAAC;CAAD,CAAC,IAAA;;CCrQD;;;;AAIA;KAME,aAAY,KAAa,EAAE,IAAgB,EAAE,GAAkB;SAApC,qBAAA,EAAA,QAAgB;SAAE,oBAAA,EAAA,UAAkB;SAL/D,SAAI,GAAW,EAAE,CAAC;SAIT,UAAK,GAAY,IAAI,CAAC;SAE7B,IAAI,CAAC,KAAK,GAAG,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC;SAC9B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;SACjB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;MAChB;KACD,mBAAK,GAAL;SACE,OAAO,IAAK,IAAI,CAAC,WAAmB,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;MAChF;KACD,oBAAM,GAAN,UAAO,IAAS;SACd,OAAO;aACL,IAAI,EAAE,KAAK;aACX,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;aAC1B,IAAI,EAAE,IAAI,CAAC,IAAI;aACf,GAAG,EAAE,IAAI,CAAC,GAAG;UACd,CAAC;MACH;KACH,UAAC;CAAD,CAAC;;CC1BD;;;;AAIA;KAKE,iBAAY,KAAa,EAAE,OAAyB;SAAzB,wBAAA,EAAA,iBAAyB;SAJpD,SAAI,GAAW,EAAE,CAAC;SAGT,cAAS,GAAY,IAAI,CAAC;SAEjC,IAAI,CAAC,KAAK,GAAG,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC;SAC9B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;MACxB;KACD,uBAAK,GAAL;SACE,OAAO,IAAK,IAAI,CAAC,WAAmB,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;MACzE;KACD,wBAAM,GAAN,UAAO,IAAS;SACd,OAAO;aACL,IAAI,EAAE,SAAS;aACf,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;aAC1B,OAAO,EAAE,IAAI,CAAC,OAAO;UACtB,CAAC;MACH;KACH,cAAC;CAAD,CAAC;;CCnBD;;;;CAIA;KASE,sBAAY,QAAa,EAAE,OAAY;SACrC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;SACzB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;MACxB;KACD,2BAAI,GAAJ;SACE,IAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;SAC/B,IAAM,EAAE,GAA0B,QAAQ,CAAC,OAAO,CAAC;SACnD,IAAM,QAAQ,GAAG,IAAI,YAAY,CAAC;aAChC,CAAE,GAAG,EAAE,CAAE,GAAG,EAAG,CAAC,EAAE,CAAC;aACjB,GAAG,EAAE,CAAE,GAAG,EAAG,CAAC,EAAE,CAAC;aACjB,GAAG,EAAI,GAAG,EAAG,CAAC,EAAE,CAAC;aACnB,CAAE,GAAG,EAAI,GAAG,EAAG,CAAC,EAAE,CAAC;UACpB,CAAC,CAAC;SACH,IAAM,KAAK,GAAG,IAAI,WAAW,CAAC;aAC5B,CAAC,EAAE,CAAC,EAAE,CAAC;aACP,CAAC,EAAE,CAAC,EAAE,CAAC;UACR,CAAC,CAAC;SACH,IAAM,YAAY,GAAG,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC,YAAY,EAAE,CAAC;SAC3D,IAAM,aAAa,GAAG,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC,YAAY,EAAE,CAAC;SAC7D,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,YAAY,EAAE,YAAY,CAAC,CAAC;SAC7C,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,YAAY,EAAE,QAAQ,EAAE,EAAE,CAAC,WAAW,CAAC,CAAC;SACzD,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,oBAAoB,EAAE,aAAa,CAAC,CAAC;SACtD,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,oBAAoB,EAAE,KAAK,EAAE,EAAE,CAAC,WAAW,CAAC,CAAC;SAC9D,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;SACpD,IAAI,CAAC,UAAU,GAAG;aAChB,QAAQ,EAAO,EAAE,CAAC,iBAAiB,CAAE,OAAO,EAAE,UAAU,CAAC;aACzD,EAAE,EAAW,EAAE,CAAC,iBAAiB,CAAE,OAAO,EAAE,IAAI,CAAC;UAClD,CAAC;SACF,IAAI,CAAC,QAAQ,GAAG;aACd,QAAQ,EAAO,EAAE,CAAC,kBAAkB,CAAC,OAAO,EAAE,UAAU,CAAC;aACzD,OAAO,EAAO,EAAE,CAAC,kBAAkB,CAAC,OAAO,EAAE,SAAS,CAAC;aACvD,QAAQ,EAAO,EAAE,CAAC,kBAAkB,CAAC,OAAO,EAAE,UAAU,CAAC;aACzD,KAAK,EAAS,EAAE,CAAC,kBAAkB,CAAC,OAAO,EAAE,OAAO,CAAC;aACrD,KAAK,EAAS,EAAE,CAAC,kBAAkB,CAAC,OAAO,EAAE,OAAO,CAAC;aACrD,GAAG,EAAS,EAAE,CAAC,kBAAkB,CAAC,OAAO,EAAE,KAAK,CAAC;aACjD,OAAO,EAAO,EAAE,CAAC,kBAAkB,CAAC,OAAO,EAAE,SAAS,CAAC;aACvD,eAAe,EAAI,EAAE,CAAC,kBAAkB,CAAC,OAAO,EAAE,iBAAiB,CAAC;aACpE,gBAAgB,EAAG,EAAE,CAAC,kBAAkB,CAAC,OAAO,EAAE,kBAAkB,CAAC;aACrE,OAAO,EAAO,EAAE,CAAC,kBAAkB,CAAC,OAAO,EAAE,SAAS,CAAC;aACvD,UAAU,EAAO,EAAE,CAAC,kBAAkB,CAAC,OAAO,EAAE,YAAY,CAAC;aAC7D,OAAO,EAAO,EAAE,CAAC,kBAAkB,CAAC,OAAO,EAAE,SAAS,CAAC;aACvD,MAAM,EAAS,EAAE,CAAC,kBAAkB,CAAC,OAAO,EAAE,QAAQ,CAAC;aACvD,QAAQ,EAAO,EAAE,CAAC,kBAAkB,CAAC,OAAO,EAAE,UAAU,CAAC;aACzD,SAAS,EAAO,EAAE,CAAC,kBAAkB,CAAC,OAAO,EAAE,WAAW,CAAC;UAC5D,CAAC;SACF,IAAM,MAAM,GAAuB,QAAQ,CAAC,eAAe,CAAC,8BAA8B,EAAE,QAAQ,CAAC,CAAC;SACtG,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC;SACjB,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;SAClB,IAAM,OAAO,GAAG,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;SACxC,OAAO,CAAC,SAAS,GAAG,OAAO,CAAC;SAC5B,OAAO,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;SAC7B,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,GAAG,IAAI,OAAO,CAAC,MAAM,CAAC,CAAC;SACnD,OAAO,CAAC,WAAW,GAAG,IAAI,CAAC;MAC5B;KACD,6BAAM,GAAN,UAAO,KAAU,EAAE,MAAW;;SAE5B,IAAM,cAAc,GAAG,IAAI,OAAO,EAAE,CAAC;SACrC,IAAM,cAAc,GAAG,IAAI,UAAU,EAAE,CAAC;SACxC,IAAM,WAAW,GAAG,IAAI,OAAO,EAAE,CAAC;SAClC,IAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;SAC/B,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;SAC7B,IAAM,EAAE,GAA0B,QAAQ,CAAC,OAAO,CAAC;SACnD,IAAM,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC;SAC7B,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC;aAAE,OAAO;;SAEjC,IAAI,IAAI,CAAC,OAAO,KAAK,SAAS,EAAE;aAC9B,IAAI,CAAC,IAAI,EAAE,CAAC;UACb;SACD,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;SAC7B,IAAM,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;SACnC,IAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;SAC/B,EAAE,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;SACvB,KAAK,CAAC,cAAc,EAAE,CAAC;SACvB,KAAK,CAAC,eAAe,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;SAC3C,KAAK,CAAC,eAAe,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;SACrC,KAAK,CAAC,uBAAuB,EAAE,CAAC;SAChC,KAAK,CAAC,OAAO,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC;SAC5B,KAAK,CAAC,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;SACvB,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,YAAY,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;SAClD,EAAE,CAAC,mBAAmB,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;SAC1E,EAAE,CAAC,mBAAmB,CAAC,UAAU,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;SACpE,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,oBAAoB,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;SAC3D,EAAE,CAAC,gBAAgB,CAAC,QAAQ,CAAC,gBAAgB,EAAE,KAAK,EAAE,MAAM,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;SACxF,KAAK,CAAC,aAAa,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC;SACjC,EAAE,CAAC,SAAS,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;SAC9B,IAAI,UAAU,GAAG,CAAC,CAAC;SACnB,IAAI,YAAY,GAAG,CAAC,CAAC;SACrB,IAAM,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC;SACtB,IAAI,GAAG,EAAE;aACP,EAAE,CAAC,SAAS,CAAC,QAAQ,CAAC,QAAQ,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;aACvE,KAAK,GAAG,IAAI,GAAG,YAAY,GAAG,GAAG;iBAC/B,EAAE,CAAC,SAAS,CAAC,QAAQ,CAAC,OAAO,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;iBACzC,EAAE,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC;iBACvC,EAAE,CAAC,SAAS,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;iBAClC,UAAU,GAAG,CAAC,CAAC;iBACf,YAAY,GAAG,CAAC,CAAC;cAClB;kBAAM,KAAK,GAAG,IAAI,GAAG,YAAY,OAAO,GAAG;iBAC1C,EAAE,CAAC,SAAS,CAAC,QAAQ,CAAC,UAAU,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC;iBAC/C,EAAE,CAAC,SAAS,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;iBAClC,UAAU,GAAG,CAAC,CAAC;iBACf,YAAY,GAAG,CAAC,CAAC;cAClB;UACF;cAAM;aACL,EAAE,CAAC,SAAS,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;aAClC,UAAU,GAAG,CAAC,CAAC;aACf,YAAY,GAAG,CAAC,CAAC;UAClB;;SAED,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAG,EAAE;aAC/C,IAAM,MAAM,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;aAC1B,MAAM,CAAC,eAAe,CAAC,gBAAgB,CAAC,MAAM,CAAC,kBAAkB,EAAE,MAAM,CAAC,WAAW,CAAC,CAAC;aACvF,MAAM,CAAC,CAAC,GAAG,CAAE,MAAM,CAAC,eAAe,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;UAClD;SACD,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,iBAAiB,CAAC,CAAC;;SAE7C,IAAM,KAAK,GAAa,EAAE,CAAC;SAC3B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAG,EAAE;aAC/C,IAAM,MAAM,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;aAC1B,IAAM,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;aACjC,IAAI,QAAQ,CAAC,OAAO,KAAK,KAAK;iBAAE,SAAS;aACzC,EAAE,CAAC,SAAS,CAAC,QAAQ,CAAC,SAAS,EAAE,QAAQ,CAAC,SAAS,CAAC,CAAC;aACrD,EAAE,CAAC,gBAAgB,CAAC,QAAQ,CAAC,eAAe,EAAE,KAAK,EAAE,MAAM,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;aACtF,MAAM,CAAC,WAAW,CAAC,SAAS,CAAC,cAAc,EAAE,cAAc,EAAE,WAAW,CAAC,CAAC;aAC1E,KAAK,CAAC,CAAC,CAAC,GAAG,WAAW,CAAC,CAAC,CAAC;aACzB,KAAK,CAAC,CAAC,CAAC,GAAG,WAAW,CAAC,CAAC,CAAC;aACzB,IAAI,OAAO,GAAG,CAAC,CAAC;aAChB,IAAI,KAAK,CAAC,GAAG,IAAI,QAAQ,CAAC,GAAG,EAAE;iBAC7B,OAAO,GAAG,YAAY,CAAC;cACxB;aACD,IAAI,UAAU,KAAK,OAAO,EAAE;iBAC1B,EAAE,CAAC,SAAS,CAAC,QAAQ,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;iBACxC,UAAU,GAAG,OAAO,CAAC;cACtB;aACD,IAAI,QAAQ,CAAC,GAAG,KAAK,IAAI,EAAE;iBACzB,EAAE,CAAC,SAAS,CAAC,QAAQ,CAAC,QAAQ,EAAE,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;iBAC9E,EAAE,CAAC,SAAS,CAAC,QAAQ,CAAC,OAAO,EAAE,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;cAC9E;kBAAM;iBACL,EAAE,CAAC,SAAS,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;iBACtC,EAAE,CAAC,SAAS,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;cACtC;aACD,EAAE,CAAC,SAAS,CAAC,QAAQ,CAAC,OAAO,EAAE,QAAQ,CAAC,OAAO,CAAC,CAAC;aACjD,EAAE,CAAC,SAAS,CAAC,QAAQ,CAAC,KAAK,EAAE,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;aACnF,EAAE,CAAC,SAAS,CAAC,QAAQ,CAAC,QAAQ,EAAE,QAAQ,CAAC,QAAQ,CAAC,CAAC;aACnD,EAAE,CAAC,UAAU,CAAC,QAAQ,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;aACrC,KAAK,CAAC,WAAW,CAAC,QAAQ,CAAC,QAAQ,EAAE,QAAQ,CAAC,aAAa,EAAE,QAAQ,CAAC,QAAQ,EAAE,QAAQ,CAAC,QAAQ,CAAC,CAAC;aACnG,KAAK,CAAC,YAAY,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;aACvC,KAAK,CAAC,aAAa,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;aACzC,IAAI,QAAQ,CAAC,GAAG,EAAE;iBAChB,QAAQ,CAAC,YAAY,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;cACxC;kBAAM;iBACL,QAAQ,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;cACxC;aACD,EAAE,CAAC,YAAY,CAAC,EAAE,CAAC,SAAS,EAAE,CAAC,EAAE,EAAE,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC;UACxD;;SAED,KAAK,CAAC,MAAM,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC;SAC3B,QAAQ,CAAC,YAAY,EAAE,CAAC;MACzB;KACD,oCAAa,GAAb;SACE,IAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;SAC/B,IAAM,EAAE,GAA0B,QAAQ,CAAC,OAAO,CAAC;SACnD,IAAM,OAAO,GAAG,EAAE,CAAC,aAAa,EAAE,CAAC;SACnC,IAAM,YAAY,GAAG,EAAE,CAAC,YAAY,CAAC,EAAE,CAAC,aAAa,CAAC,CAAC;SACvD,IAAM,cAAc,GAAG,EAAE,CAAC,YAAY,CAAC,EAAE,CAAC,eAAe,CAAC,CAAC;SAC3D,EAAE,CAAC,YAAY,CAAC,YAAY,EAAE;aAC5B,YAAY,GAAG,QAAQ,CAAC,YAAY,EAAE,GAAG,SAAS;aAClD,+BAA+B;aAC/B,gCAAgC;aAChC,yBAAyB;aACzB,qBAAqB;aACrB,wBAAwB;aACxB,uBAAuB;aACvB,0BAA0B;aAC1B,oBAAoB;aACpB,mBAAmB;aACnB,eAAe;aACb,gCAAgC;aAChC,0CAA0C;aAC1C,uBAAuB;aACvB,4FAA4F;aAC5F,4FAA4F;aAC5F,qBAAqB;aACrB,6DAA6D;aAC7D,sCAAsC;aACtC,mDAAmD;aACnD,8BAA8B;aAChC,GAAG;UACJ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;SACd,EAAE,CAAC,YAAY,CAAC,cAAc,EAAE;aAC9B,YAAY,GAAG,QAAQ,CAAC,YAAY,EAAE,GAAG,SAAS;aAClD,qBAAqB;aACrB,wBAAwB;aACxB,wBAAwB;aACxB,sBAAsB;aACtB,wBAAwB;aACxB,2BAA2B;aAC3B,wBAAwB;aACxB,uBAAuB;aACvB,0BAA0B;aAC1B,mBAAmB;aACnB,eAAe;aACb,qCAAqC;aACrC,qCAAqC;aACrC,gEAAgE;aAChE,oBAAoB;aAClB,gDAAgD;aAChD,wBAAwB;aACxB,qBAAqB;aACnB,iDAAiD;aACnD,UAAU;aACR,8BAA8B;aAC9B,qEAAqE;aACrE,+CAA+C;aACjD,GAAG;aACH,8EAA8E;aAChF,GAAG;aACL,GAAG;UACJ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;SACd,EAAE,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC;SAC/B,EAAE,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC;SACjC,EAAE,CAAC,YAAY,CAAC,OAAO,EAAE,YAAY,CAAC,CAAC;SACvC,EAAE,CAAC,YAAY,CAAC,OAAO,EAAE,cAAc,CAAC,CAAC;SACzC,EAAE,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;SACxB,OAAO,OAAO,CAAC;MAChB;KACM,8BAAiB,GAAxB,UAAyB,CAAM,EAAE,CAAM;SACrC,IAAI,CAAC,CAAC,WAAW,KAAK,CAAC,CAAC,WAAW,EAAE;aACnC,OAAO,CAAC,CAAC,WAAW,GAAG,CAAC,CAAC,WAAW,CAAC;UACtC;cAAM,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE;aACtB,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;UAClB;cAAM;aACL,OAAO,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC;UACpB;MACF;KACH,mBAAC;CAAD,CAAC,IAAA;;;KChN6BA,4BAAe;KA8E3C;SAAA,YACE,iBAAO,SACR;SA/ED,QAAE,GAAW,eAAe,EAAE,CAAC;SAC/B,UAAI,GAAW,KAAK,CAAC,YAAY,EAAE,CAAC;SACpC,UAAI,GAAW,EAAE,CAAC;SAClB,UAAI,GAAW,UAAU,CAAC;SAC1B,SAAG,GAAY,IAAI,CAAC;SACpB,YAAM,GAAY,IAAI,CAAC;SACvB,cAAQ,GAAiBjB,oBAAY,CAAC,MAAM,CAAC;SAC7C,UAAI,GAAaH,gBAAQ,CAAC,KAAK,CAAC;SAChC,aAAO,GAAgBC,mBAAW,CAAC,MAAM,CAAC;SAC1C,kBAAY,GAAeC,kBAAU,CAAC,IAAI,CAAC;SAC3C,cAAQ,GAAW,CAAC,CAAC;SACrB,iBAAW,GAAY,KAAK,CAAC;SAC7B,cAAQ,GAAmBG,sBAAc,CAAC,QAAQ,CAAC;SACnD,cAAQ,GAAmBA,sBAAc,CAAC,gBAAgB,CAAC;SAC3D,mBAAa,GAAqBD,wBAAgB,CAAC,GAAG,CAAC;SACvD,mBAAa,GAAmB,IAAI,CAAC;SACrC,mBAAa,GAAmB,IAAI,CAAC;SACrC,wBAAkB,GAAqB,IAAI,CAAC;SAC5C,eAAS,GAAkBE,qBAAa,CAAC,SAAS,CAAC;SACnD,eAAS,GAAY,IAAI,CAAC;SAC1B,gBAAU,GAAY,IAAI,CAAC;SAC3B,cAAQ,GAAY,KAAK,CAAC;SAC1B,oBAAc,GAAY,IAAI,CAAC;SAC/B,sBAAgB,GAAY,KAAK,CAAC;SAClC,iBAAW,GAAY,KAAK,CAAC;SAC7B,gBAAU,GAAY,IAAI,CAAC;SAC3B,eAAS,GAAW,IAAI,CAAC;SACzB,mBAAa,GAAY,KAAK,CAAC;SAC/B,yBAAmB,GAAW,CAAC,CAAC;SAChC,wBAAkB,GAAW,CAAC,CAAC;SAC/B,eAAS,GAAW,CAAC,CAAC;SACtB,wBAAkB,GAAY,KAAK,CAAC;SACpC,cAAQ,GAAW,CAAC,CAAC;SACrB,aAAO,GAAY,IAAI,CAAC;SACxB,kBAAY,GAAY,IAAI,CAAC;;SAyCpB,gBAAU,GAAY,IAAI,CAAC;SAC3B,qBAAe,GAAY,KAAK,CAAC;;MAGzC;KACD,sBAAI,6BAAO;cAAX;aACE,OAAO,IAAI,CAAC,QAAQ,CAAC;UACtB;cACD,UAAY,KAAa;aACvB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;UACvB;;;QAHA;KAID,sBAAI,iCAAW;cAAf;aACE,OAAO,IAAI,CAAC,YAAY,CAAC;UAC1B;cACD,UAAgB,KAAc;aAC5B,IAAI,KAAK,KAAK,IAAI;iBAAE,IAAI,CAAC,MAAM,EAAE,CAAC;aAClC,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;UAC3B;;;QAJA;KAKD,4BAAS,GAAT,UAAU,MAA0B;SAClC,IAAI,MAAM,KAAK,SAAS;aAAE,OAAO;SACjC,KAAK,IAAI,GAAG,IAAI,MAAM,EAAE;aACtB,IAAI,QAAQ,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;aAC3B,IAAI,QAAQ,KAAK,SAAS,EAAE;iBAC1B,OAAO,CAAC,IAAI,CAAC,mBAAmB,GAAG,GAAG,GAAG,2BAA2B,CAAC,CAAC;iBACtE,SAAS;cACV;aACD,IAAI,YAAY,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;aAC7B,IAAI,YAAY,KAAK,SAAS,EAAE;iBAC9B,OAAO,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,GAAG,KAAK,GAAG,GAAG,GAAG,uCAAuC,CAAC,CAAC;iBAC3F,SAAS;cACV;aACD,KAAK,YAAY,IAAI,YAAY,YAAY,KAAK,GAAG;iBACnD,YAAY,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;cAC5B;kBAAM,IAAI,CAAC,YAAY,IAAI,YAAY,YAAY,OAAO,MAAM,QAAQ,IAAI,QAAQ,YAAY,OAAO,CAAC,EAAE;iBACzG,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;cAC7B;kBAAM,IAAI,GAAG,KAAK,UAAU,EAAE;;iBAE7B,IAAI,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC;cAC9B;kBAAM;iBACL,IAAI,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC;cACtB;UACF;MACF;KACD,yBAAM,GAAN,UAAO,IAAS;SACd,IAAI,MAAM,GAAG,IAAI,KAAK,SAAS,CAAC;SAChC,IAAI,MAAM,EAAE;aACV,IAAI,GAAG;iBACL,QAAQ,EAAE,EAAE;iBACZ,MAAM,EAAE,EAAE;cACX,CAAC;UACH;SACD,IAAI,IAAI,GAAQ;aACd,QAAQ,EAAE;iBACR,OAAO,EAAE,GAAG;iBACZ,IAAI,EAAE,UAAU;iBAChB,SAAS,EAAE,iBAAiB;cAC7B;UACF,CAAC;;SAEF,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;SACtB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;SACtB,IAAI,IAAI,CAAC,IAAI,KAAK,EAAE;aAAE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;SAC5C,KAAK,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,YAAY,KAAK;aAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC;SAClF,IAAI,IAAI,CAAC,SAAS,KAAK,SAAS;aAAE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;SAClE,IAAI,IAAI,CAAC,SAAS,KAAK,SAAS;aAAE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;SAClE,KAAK,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,YAAY,KAAK;aAAG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;SAC9F,KAAK,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,YAAY,KAAK;aAAG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;SAC9F,IAAI,IAAI,CAAC,SAAS,KAAK,SAAS;aAAE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;SAClE,KAAK,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,GAAG,YAAY,OAAO;aAAG,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC;SACrF,KAAK,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,YAAY,OAAO;aAAG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC;SACzG,KAAK,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,YAAY,OAAO;aAAG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC;SACzG,KAAK,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,YAAY,OAAO,GAAG;aACrD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC;aAC9C,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;UACjC;SACD,KAAK,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS,YAAY,OAAO,GAAG;aACzD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC;aAClD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;UAC/C;SACD,KAAK,IAAI,CAAC,eAAe,IAAI,IAAI,CAAC,eAAe,YAAY,OAAO,GAAG;aACrE,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC;aAC9D,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,CAAC;aAChD,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC;UAC/C;SACD,KAAK,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,YAAY,YAAY,OAAO;aAAG,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC;SACzH,KAAK,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,YAAY,YAAY,OAAO;aAAG,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC;SACzH,KAAK,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,WAAW,YAAY,OAAO;aAAG,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC;SACrH,KAAK,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,WAAW,YAAY,OAAO;aAAG,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC;SACrH,KAAK,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,YAAY,OAAO,GAAG;aACnD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC;aAC5C,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;UACvC;SACD,IAAI,IAAI,CAAC,IAAI,KAAK,SAAS;aAAE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;SACnD,IAAI,IAAI,CAAC,eAAe,KAAK,SAAS;aAAE,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC;SACpF,IAAI,IAAI,CAAC,QAAQ,KAAKH,oBAAY,CAAC,MAAM;aAAE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;SACzE,IAAI,IAAI,CAAC,OAAO,KAAKF,mBAAW,CAAC,MAAM;aAAE,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;SACrE,IAAI,IAAI,CAAC,IAAI,KAAKD,gBAAQ,CAAC,KAAK;aAAE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;SACxD,IAAI,IAAI,CAAC,YAAY,KAAKE,kBAAU,CAAC,IAAI;aAAE,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;SACjF,IAAI,IAAI,CAAC,OAAO,GAAG,CAAC;aAAE,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;SAClD,IAAI,IAAI,CAAC,WAAW,KAAK,IAAI;aAAE,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;SACnE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;SAChC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;SAChC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;SAClC,IAAI,IAAI,CAAC,SAAS,GAAG,CAAC;aAAE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;SACxD,IAAI,IAAI,CAAC,kBAAkB,KAAK,IAAI;aAAE,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,kBAAkB,CAAC;SACxF,IAAI,IAAI,CAAC,SAAS,KAAK,IAAI;aAAE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;SAC7D,IAAI,IAAI,CAAC,kBAAkB,GAAG,CAAC;aAAE,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,kBAAkB,CAAC;SACnF,IAAI,IAAI,CAAC,gBAAgB,KAAK,OAAO;aAAE,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC;SACrF,IAAI,IAAI,CAAC,iBAAiB,KAAK,OAAO;aAAE,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,CAAC;SACxF,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;SAC9B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;;SAEtC,SAAS,gBAAgB,CAAC,KAAU;aAClC,IAAI,MAAM,GAAG,EAAE,CAAC;aAChB,KAAK,IAAI,GAAG,IAAI,KAAK,EAAE;iBACrB,IAAI,MAAI,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC;iBACtB,OAAO,MAAI,CAAC,QAAQ,CAAC;iBACrB,MAAM,CAAC,IAAI,CAAC,MAAI,CAAC,CAAC;cACnB;aACD,OAAO,MAAM,CAAC;UACf;SACD,IAAI,MAAM,EAAE;aACV,IAAI,QAAQ,GAAG,gBAAgB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aAC/C,IAAI,MAAM,GAAG,gBAAgB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;aAC3C,IAAI,QAAQ,CAAC,MAAM,GAAG,CAAC;iBAAE,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;aAClD,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC;iBAAE,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;UAC7C;SACD,OAAO,IAAI,CAAC;MACb;KACD,wBAAK,GAAL;SACE,OAAO,IAAK,IAAI,CAAC,WAAmB,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;MACnD;KACD,uBAAI,GAAJ,UAAK,MAAY;SACf,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;SACxB,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC;SACtB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;SAC5B,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;SAChC,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;SACxB,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;SAC9B,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,YAAY,CAAC;SACxC,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;SAC9B,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC;SACtC,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;SAChC,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;SAChC,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,aAAa,CAAC;SAC1C,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,aAAa,CAAC;SAC1C,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,aAAa,CAAC;SAC1C,IAAI,CAAC,kBAAkB,GAAG,MAAM,CAAC,kBAAkB,CAAC;SACpD,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;SAClC,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;SAClC,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC;SACpC,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC;SACpC,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;SAClC,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,aAAa,CAAC;SAC1C,IAAI,CAAC,mBAAmB,GAAG,MAAM,CAAC,mBAAmB,CAAC;SACtD,IAAI,CAAC,kBAAkB,GAAG,MAAM,CAAC,kBAAkB,CAAC;SACpD,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;SAClC,IAAI,CAAC,kBAAkB,GAAG,MAAM,CAAC,kBAAkB,CAAC;SACpD,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;SAChC,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;SAC9B,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC;SACtC,IAAI,CAAC,gBAAgB,GAAG,MAAM,CAAC,gBAAgB,CAAC;SAChD,IAAI,SAAS,GAAG,MAAM,CAAC,cAAc,EACnC,SAAS,GAAG,IAAI,CAAC;SACnB,IAAI,SAAS,KAAK,IAAI,EAAE;aACtB,IAAI,CAAC,GAAG,SAAS,CAAC,MAAM,CAAC;aACzB,SAAS,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;aACzB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,EAAG,CAAC;iBAC3B,SAAS,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;UACvC;SACD,IAAI,CAAC,cAAc,GAAG,SAAS,CAAC;SAChC,OAAO,IAAI,CAAC;MACb;KACD,yBAAM,GAAN;SACE,IAAI,CAAC,aAAa,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC,CAAC;MACxC;KACD,0BAAO,GAAP;SACE,IAAI,CAAC,aAAa,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,CAAC,CAAC;MACzC;KACD,sBAAI,gCAAU;cAAd;aACE,OAAO,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,GAAG,iCAAiC,CAAC,CAAC;aACvE,OAAO,KAAK,CAAC;UACd;cACD,UAAe,KAAc;aAC3B,OAAO,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,GAAG,iCAAiC,CAAC,CAAC;UACxE;;;QAHA;KAID,sBAAI,6BAAO;cAAX;aACE,OAAO,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,GAAG,8BAA8B,CAAC,CAAC;aACpE,OAAO,IAAI,KAAK,EAAE,CAAC;UACpB;;;QAAA;KACH,eAAC;CAAD,CA1QA,CAA8B,eAAe,GA0Q5C;CACD,IAAImB,OAAK,GAAW,CAAC,CAAC;AACtB,UAAgB,eAAe,KAAa,OAAOA,OAAK,EAAE,CAAC,EAAE;;;KClRzBD,kCAAQ;KAmB1C,wBAAY,UAAqC;SAAjD,YACE,iBAAO,SAgCR;;SAlCQ,sBAAgB,GAAY,IAAI,CAAC;SAGxC,KAAI,CAAC,IAAI,GAAG,gBAAgB,CAAC;SAC7B,KAAI,CAAC,OAAO,GAAG,EAAE,CAAC;SAClB,KAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;SACnB,KAAI,CAAC,YAAY,GAAG,6FAA6F,CAAC;SAClH,KAAI,CAAC,cAAc,GAAG,8DAA8D,CAAC;SACrF,KAAI,CAAC,SAAS,GAAG,CAAC,CAAC;SACnB,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;SACvB,KAAI,CAAC,kBAAkB,GAAG,CAAC,CAAC;SAC5B,KAAI,CAAC,GAAG,GAAG,KAAK,CAAC;SACjB,KAAI,CAAC,MAAM,GAAG,KAAK,CAAC;SACpB,KAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;SACtB,KAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;SACtB,KAAI,CAAC,YAAY,GAAG,KAAK,CAAC;SAC1B,KAAI,CAAC,YAAY,GAAG,KAAK,CAAC;SAC1B,KAAI,CAAC,UAAU,GAAG;aAChB,WAAW,EAAE,KAAK;aAClB,SAAS,EAAE,KAAK;aAChB,WAAW,EAAE,KAAK;aAClB,gBAAgB,EAAE,KAAK;UACxB,CAAC;;;SAGF,KAAI,CAAC,sBAAsB,GAAG;aAC5B,OAAO,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;aAClB,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;aACZ,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;UACd,CAAC;SACF,KAAI,CAAC,mBAAmB,GAAG,SAAS,CAAC;SACrC,IAAI,UAAU,KAAK,SAAS,EAAE;aAC5B,KAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;UAC5B;;MACF;KACD,6BAAI,GAAJ,UAAK,MAAY;SACf,iBAAM,IAAI,YAAC,MAAM,CAAC,CAAC;SACnB,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC,cAAc,CAAC;SAC5C,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,YAAY,CAAC;SACxC,IAAI,CAAC,QAAQ,GAAG,aAAa,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;SACrD,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;SAC9B,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;SAClC,IAAI,CAAC,kBAAkB,GAAG,MAAM,CAAC,kBAAkB,CAAC;SACpD,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;SAC5B,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;SAChC,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;SAChC,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,YAAY,CAAC;SACxC,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,YAAY,CAAC;SACxC,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC;SACpC,OAAO,IAAI,CAAC;MACb;KACD,+BAAM,GAAN,UAAO,IAAS;SACd,IAAI,IAAI,GAAG,iBAAM,MAAM,YAAC,IAAI,CAAC,CAAC;SAC9B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;SAC9B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;SACtC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC;SAC1C,OAAO,IAAI,CAAC;MACb;KACD,sBAAI,uCAAW;cAAf;aACE,OAAO,CAAC,IAAI,CAAC,+EAA+E,CAAC,CAAC;aAC9F,OAAO,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC;UACpC;cACD,UAAgB,KAAc;aAC5B,OAAO,CAAC,IAAI,CAAC,gFAAgF,CAAC,CAAC;aAC/F,IAAI,CAAC,UAAU,CAAC,WAAW,GAAG,KAAK,CAAC;UACrC;;;QAJA;KAKH,qBAAC;CAAD,CApFA,CAAoC,QAAQ;;;KCCLA,qCAAQ;KAI7C,2BAAY,UAAwC;SAApD,YACE,iBAAO,SAeR;SAjBQ,yBAAmB,GAAY,IAAI,CAAC;SAG3C,KAAI,CAAC,IAAI,GAAG,mBAAmB,CAAC;SAChC,KAAI,CAAC,YAAY,GAAGD,oBAAY,CAAC,KAAK,CAAC;SACvC,KAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;SACtB,KAAI,CAAC,YAAY,GAAG,KAAK,CAAC;SAC1B,KAAI,CAAC,GAAG,GAAG,IAAI,CAAC;SAChB,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;SACrB,KAAI,CAAC,eAAe,GAAG,IAAI,CAAC;SAC5B,KAAI,CAAC,iBAAiB,GAAG,CAAC,CAAC;SAC3B,KAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC;SAC1B,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;SACvB,KAAI,CAAC,kBAAkB,GAAG,CAAC,CAAC;SAC5B,KAAI,CAAC,GAAG,GAAG,KAAK,CAAC;SACjB,KAAI,CAAC,MAAM,GAAG,KAAK,CAAC;SACpB,KAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;;MAC5B;KACD,gCAAI,GAAJ,UAAK,MAAY;SACf,iBAAM,IAAI,YAAC,MAAM,CAAC,CAAC;SACnB,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,YAAY,CAAC;SACxC,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;SAChC,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,YAAY,CAAC;SACxC,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC;SACtB,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;SAChC,IAAI,CAAC,eAAe,GAAG,MAAM,CAAC,eAAe,CAAC;SAC9C,IAAI,CAAC,iBAAiB,GAAG,MAAM,CAAC,iBAAiB,CAAC;SAClD,IAAI,CAAC,gBAAgB,GAAG,MAAM,CAAC,gBAAgB,CAAC;SAChD,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;SAClC,IAAI,CAAC,kBAAkB,GAAG,MAAM,CAAC,kBAAkB,CAAC;SACpD,OAAO,IAAI,CAAC;MACb;KACH,wBAAC;CAAD,CAnCA,CAAuC,QAAQ;;CCrC/C;;;;AAIA;KAYE,eAAY,CAAU,EAAE,CAAU,EAAE,CAAU,EAAE,MAA4B,EAAE,KAAuB,EAAE,aAAsB;SAC3H,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;SACX,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;SACX,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;SACX,IAAI,CAAC,MAAM,GAAG,CAAC,MAAM,IAAI,MAAM,YAAY,OAAO,IAAI,MAAM,GAAG,IAAI,OAAO,EAAE,CAAC;SAC7E,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,MAAM,GAAG,EAAE,CAAC;SACzD,IAAI,CAAC,KAAK,GAAG,CAAC,KAAK,IAAI,KAAK,YAAY,KAAK,IAAI,KAAK,GAAG,IAAI,KAAK,EAAE,CAAC;SACrE,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,KAAK,GAAG,EAAE,CAAC;SACtD,IAAI,CAAC,aAAa,GAAG,aAAa,KAAK,SAAS,GAAG,aAAa,GAAG,CAAC,CAAC;MACtE;KACD,qBAAK,GAAL;SACE,OAAO,IAAK,IAAI,CAAC,WAAmB,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;MACnD;KACD,oBAAI,GAAJ,UAAK,MAAY;SACf,IAAI,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;SAClB,IAAI,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;SAClB,IAAI,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;SAClB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;SAChC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;SAC9B,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,aAAa,CAAC;SAC1C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,MAAM,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAG,EAAE;aAC9D,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;UACzD;SACD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,MAAM,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAG,EAAE;aAC7D,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;UACvD;SACD,OAAO,IAAI,CAAC;MACb;KACH,YAAC;CAAD,CAAC;;CC9CD;;;AAGA;KAAA;SACE,SAAI,GAAW,CAAC,CAAC;MAgBlB;KAfC,oBAAG,GAAH,UAAI,OAAe;SACjB,IAAI,CAAC,IAAI,GAAG,CAAC,IAAI,OAAO,CAAC;MAC1B;KACD,uBAAM,GAAN,UAAO,OAAe;SACpB,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,OAAO,CAAC;MAC3B;KACD,uBAAM,GAAN,UAAO,OAAe;SACpB,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,OAAO,CAAC;MAC3B;KACD,wBAAO,GAAP,UAAQ,OAAe;SACrB,IAAI,CAAC,IAAI,IAAI,EAAG,CAAC,IAAI,OAAO,CAAC,CAAC;MAC/B;KACD,qBAAI,GAAJ,UAAK,MAAc;SACjB,OAAO,CAAC,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,MAAM,CAAC,CAAC;MACxC;KACH,aAAC;CAAD,CAAC;;CCND;;;;;;;AAOA;KAA8BC,4BAAe;KA2C3C;SAAA,YACE,iBAAO,SAWR;SAtDD,QAAE,GAAW,eAAe,EAAE,CAAC;SAC/B,UAAI,GAAW,KAAK,CAAC,YAAY,EAAE,CAAC;SACpC,UAAI,GAAW,EAAE,CAAC;SAClB,UAAI,GAAW,UAAU,CAAC;SAC1B,YAAM,GAAa,IAAI,CAAC;SACxB,cAAQ,GAAe,EAAE,CAAC;SAC1B,QAAE,GAAY,QAAQ,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;SACzC,cAAQ,GAAY,IAAI,OAAO,EAAE,CAAC;SAClC,cAAQ,GAAU,IAAI,KAAK,EAAE,CAAC;SAC9B,gBAAU,GAAe,IAAI,UAAU,EAAE,CAAC;SAC1C,WAAK,GAAY,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;SACtC,qBAAe,GAAY,IAAI,OAAO,EAAE,CAAC;SACzC,kBAAY,GAAY,IAAI,OAAO,EAAE,CAAC;SACtC,YAAM,GAAY,IAAI,OAAO,EAAE,CAAC;SAChC,iBAAW,GAAY,IAAI,OAAO,EAAE,CAAC;SACrC,sBAAgB,GAAY,QAAQ,CAAC,uBAAuB,CAAC;SAC7D,4BAAsB,GAAY,KAAK,CAAC;SACxC,YAAM,GAAW,IAAI,MAAM,EAAE,CAAC;SAC9B,aAAO,GAAY,IAAI,CAAC;SACxB,gBAAU,GAAY,KAAK,CAAC;SAC5B,mBAAa,GAAY,KAAK,CAAC;SAC/B,mBAAa,GAAY,IAAI,CAAC;SAC9B,iBAAW,GAAW,CAAC,CAAC;SACxB,cAAQ,GAAQ,EAAE,CAAC;SACnB,oBAAc,GAAiE,eAAa,CAAC;SAC7F,mBAAa,GAAiE,eAAa,CAAC;SAC5F,cAAQ,GAA8B,SAAS,CAAC;SAChD,cAAQ,GAA6B,SAAS,CAAC;;SAYtC,gBAAU,GAAY,IAAI,CAAC;SAKlC,IAAM,QAAQ,GAAG,KAAI,CAAC,QAAQ,CAAC;SAC/B,IAAM,UAAU,GAAG,KAAI,CAAC,UAAU,CAAC;SACnC,SAAS,gBAAgB;aACvB,UAAU,CAAC,YAAY,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;UAC1C;SACD,SAAS,kBAAkB;aACzB,QAAQ,CAAC,iBAAiB,CAAC,UAAU,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;UAC1D;SACD,QAAQ,CAAC,QAAQ,CAAC,gBAAgB,CAAC,CAAC;SACpC,UAAU,CAAC,QAAQ,CAAC,kBAAkB,CAAC,CAAC;;MACzC;KACD,8BAAW,GAAX,UAAY,MAAe;SACzB,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;SAClD,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;MACnE;KACD,2CAAwB,GAAxB,UAAyB,IAAa,EAAE,KAAa;;SAEnD,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;MAC/C;KACD,uCAAoB,GAApB,UAAqB,KAAY;SAC/B,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;MAC3C;KACD,wCAAqB,GAArB,UAAsB,CAAU;;SAE9B,IAAI,CAAC,UAAU,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC;MAC1C;KACD,4CAAyB,GAAzB,UAA0B,CAAa;;SAErC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;MACzB;KAED,+BAAY,GAAZ,UAAa,IAAa,EAAE,KAAa;;;SAGvC,IAAM,EAAE,GAAG,QAAQ,CAAC,gBAAgB,CAAC;SACrC,EAAE,CAAC,gBAAgB,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;SACjC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;SAC7B,OAAO,IAAI,CAAC;MACb;KAED,0BAAO,GAAP,UAAQ,KAAa;SACnB,IAAM,EAAE,GAAG,QAAQ,CAAC,WAAW,CAAC;SAChC,OAAO,IAAI,CAAC,YAAY,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;MACrC;KAED,0BAAO,GAAP,UAAQ,KAAa;SACnB,IAAM,EAAE,GAAG,QAAQ,CAAC,WAAW,CAAC;SAChC,OAAO,IAAI,CAAC,YAAY,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;MACrC;KAED,0BAAO,GAAP,UAAQ,KAAa;SACnB,IAAM,EAAE,GAAG,QAAQ,CAAC,WAAW,CAAC;SAChC,OAAO,IAAI,CAAC,YAAY,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;MACrC;KAED,kCAAe,GAAf,UAAgB,IAAa,EAAE,QAAgB;;;SAG7C,IAAM,EAAE,GAAG,QAAQ,CAAC,mBAAmB,CAAC;SACxC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,eAAe,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;SAC/C,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC,CAAC;SAC/C,OAAO,IAAI,CAAC;MACb;KAED,6BAAU,GAAV,UAAW,QAAgB;SACzB,IAAM,EAAE,GAAG,QAAQ,CAAC,cAAc,CAAC;SACnC,OAAO,IAAI,CAAC,eAAe,CAAC,EAAE,EAAE,QAAQ,CAAC,CAAC;MAC3C;KAED,6BAAU,GAAV,UAAW,QAAgB;SACzB,IAAM,EAAE,GAAG,QAAQ,CAAC,cAAc,CAAC;SACnC,OAAO,IAAI,CAAC,eAAe,CAAC,EAAE,EAAE,QAAQ,CAAC,CAAC;MAC3C;KAED,6BAAU,GAAV,UAAW,QAAgB;SACzB,IAAM,EAAE,GAAG,QAAQ,CAAC,cAAc,CAAC;SACnC,OAAO,IAAI,CAAC,eAAe,CAAC,EAAE,EAAE,QAAQ,CAAC,CAAC;MAC3C;KACD,+BAAY,GAAZ,UAAa,MAAe;SAC1B,OAAO,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;MAC9C;KAED,+BAAY,GAAZ,UAAa,MAAe;SAC1B,IAAM,EAAE,GAAG,QAAQ,CAAC,gBAAgB,CAAC;SACrC,OAAO,MAAM,CAAC,YAAY,CAAC,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;MAC7D;KAED,yBAAM,GAAN,UAAO,MAAe;;SAEpB,IAAM,EAAE,GAAG,QAAQ,CAAC,UAAU,CAAC;SAC/B,EAAE,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC;SAC1C,IAAI,CAAC,UAAU,CAAC,qBAAqB,CAAC,EAAE,CAAC,CAAC;MAC3C;KACD,sBAAG,GAAH,UAAI,MAAgB;SAClB,IAAI,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;aACxB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAG,EAAE;iBAC1C,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;cACxB;aACD,OAAO,IAAI,CAAC;UACb;SACD,IAAI,MAAM,KAAK,IAAI,EAAE;aACnB,OAAO,CAAC,KAAK,CAAC,iEAAiE,EAAE,MAAM,CAAC,CAAC;aACzF,OAAO,IAAI,CAAC;UACb;SACD,KAAK,MAAM,IAAI,MAAM,YAAY,QAAQ,GAAG;aAC1C,IAAI,MAAM,CAAC,MAAM,KAAK,IAAI,EAAE;iBAC1B,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;cAC9B;aACD,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC;aACrB,MAAM,CAAC,aAAa,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC,CAAC;aACxC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;UAC5B;cAAM;aACL,OAAO,CAAC,KAAK,CAAC,+DAA+D,EAAE,MAAM,CAAC,CAAC;UACxF;SACD,OAAO,IAAI,CAAC;MACb;KACD,yBAAM,GAAN,UAAO,MAAgB;SACrB,IAAI,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;aACxB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAG,EAAE;iBAC1C,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;cAC3B;UACF;SACD,IAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;SAC5C,IAAI,KAAK,KAAK,CAAE,CAAC,EAAE;aACjB,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC;aACrB,MAAM,CAAC,aAAa,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,CAAC,CAAC;aAC1C,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;UAChC;MACF;KACD,gCAAa,GAAb,UAAc,EAAU;SACtB,OAAO,IAAI,CAAC,mBAAmB,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;MAC3C;KACD,kCAAe,GAAf,UAAgB,IAAY;SAC1B,OAAO,IAAI,CAAC,mBAAmB,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;MAC/C;KACD,sCAAmB,GAAnB,UAAoB,IAAY,EAAE,KAAsB;SACtD,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,KAAK;aAAE,OAAO,IAAI,CAAC;SACtC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAG,EAAE;aACrD,IAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;aAC/B,IAAM,MAAM,GAAG,KAAK,CAAC,mBAAmB,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;aACtD,IAAI,MAAM,KAAK,SAAS,EAAE;iBACxB,OAAO,MAAM,CAAC;cACf;UACF;SACD,OAAO,SAAS,CAAC;MAClB;KACD,mCAAgB,GAAhB,UAAiB,MAA+B;SAA/B,uBAAA,EAAA,aAAsB,OAAO,EAAE;SAC9C,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;SAC7B,OAAO,MAAM,CAAC,qBAAqB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;MACvD;KAGD,qCAAkB,GAAlB,UAAmB,MAAqC;SAArC,uBAAA,EAAA,aAAyB,UAAU,EAAE;SACtD,IAAM,QAAQ,GAAG,QAAQ,CAAC,4BAA4B,CAAC;SACvD,IAAM,KAAK,GAAG,QAAQ,CAAC,yBAAyB,CAAC;SACjD,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;SAC7B,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,QAAQ,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;SACpD,OAAO,MAAM,CAAC;MACf;KAED,mCAAgB,GAAhB,UAAiB,MAA2B;SAA3B,uBAAA,EAAA,aAAoB,KAAK,EAAE;SAC1C,IAAM,UAAU,GAAG,QAAQ,CAAC,4BAA4B,CAAC;SACzD,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,CAAC;SACpC,OAAO,MAAM,CAAC,iBAAiB,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;MACzE;KAGD,gCAAa,GAAb,UAAc,MAA+B;SAA/B,uBAAA,EAAA,aAAsB,OAAO,EAAE;SAC3C,IAAM,QAAQ,GAAG,QAAQ,CAAC,uBAAuB,CAAC;SAClD,IAAM,UAAU,GAAG,QAAQ,CAAC,yBAAyB,CAAC;SACtD,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;SAC7B,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,QAAQ,EAAE,UAAU,EAAE,MAAM,CAAC,CAAC;SACzD,OAAO,MAAM,CAAC;MACf;KAED,oCAAiB,GAAjB,UAAkB,MAA+B;SAA/B,uBAAA,EAAA,aAAsB,OAAO,EAAE;SAC/C,IAAM,UAAU,GAAG,QAAQ,CAAC,6BAA6B,CAAC;SAC1D,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,CAAC;SACpC,OAAO,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;MACxD;KACD,0BAAO,GAAP,UAAQ,SAAoB,EAAE,UAAuB;SACnD,OAAO,UAAU,CAAC;MACnB;KACD,2BAAQ,GAAR,UAAS,QAAoC;SAC3C,QAAQ,CAAC,IAAI,CAAC,CAAC;SACf,IAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;SAC/B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAG,EAAE;aAChD,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;UAChC;MACF;KACD,kCAAe,GAAf,UAAgB,QAAoC;SAClD,IAAI,IAAI,CAAC,OAAO,KAAK,KAAK;aAAE,OAAO;SACnC,QAAQ,CAAC,IAAI,CAAC,CAAC;SACf,IAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;SAC/B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAG,EAAE;aAChD,QAAQ,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;UACvC;MACF;KACD,oCAAiB,GAAjB,UAAkB,QAAoC;SACpD,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;SAC3B,IAAI,MAAM,KAAK,IAAI,EAAE;aACnB,QAAQ,CAAC,MAAM,CAAC,CAAC;aACjB,MAAM,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC;UACpC;MACF;KACD,+BAAY,GAAZ;SACE,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;SAChE,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC;MACpC;KACD,oCAAiB,GAAjB,UAAkB,KAAsB;SAAtB,sBAAA,EAAA,aAAsB;SACtC,IAAI,IAAI,CAAC,gBAAgB,KAAK,IAAI;aAAE,IAAI,CAAC,YAAY,EAAE,CAAC;SACxD,IAAI,IAAI,CAAC,sBAAsB,KAAK,IAAI,IAAI,KAAK,KAAK,IAAI,EAAE;aAC1D,IAAI,IAAI,CAAC,MAAM,KAAK,IAAI,EAAE;iBACxB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;cACpC;kBAAM;iBACL,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;cACzE;aACD,IAAI,CAAC,sBAAsB,GAAG,KAAK,CAAC;aACpC,KAAK,GAAG,IAAI,CAAC;UACd;;SAED,IAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;SAC/B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAG,EAAE;aAChD,QAAQ,CAAC,CAAC,CAAC,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;UACtC;MACF;KACD,yBAAM,GAAN,UAAO,IAAU;;SAEf,IAAM,YAAY,IAAI,IAAI,KAAK,SAAS,IAAI,IAAI,KAAK,EAAE,CAAC,CAAC;SACzD,IAAM,MAAM,GAAQ,EAAE,CAAC;;;;SAIvB,IAAI,YAAY,EAAE;;aAEhB,IAAI,GAAG;iBACL,UAAU,EAAE,EAAE;iBACd,SAAS,EAAE,EAAE;iBACb,QAAQ,EAAE,EAAE;iBACZ,MAAM,EAAE,EAAE;cACX,CAAC;aACF,MAAM,CAAC,QAAQ,GAAG;iBAChB,OAAO,EAAE,GAAG;iBACZ,IAAI,EAAE,QAAQ;iBACd,SAAS,EAAE,iBAAiB;cAC7B,CAAC;UACH;;SAED,IAAM,MAAM,GAAQ,EAAE,CAAC;SACvB,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;SACxB,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;SACxB,IAAI,IAAI,CAAC,IAAI,KAAK,EAAE;aAAE,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;SAC9C,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,IAAI;aAAE,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;SAC5E,IAAI,IAAI,CAAC,UAAU,KAAK,IAAI;aAAE,MAAM,CAAC,UAAU,GAAG,IAAI,CAAC;SACvD,IAAI,IAAI,CAAC,aAAa,KAAK,IAAI;aAAE,MAAM,CAAC,aAAa,GAAG,IAAI,CAAC;SAC7D,IAAI,IAAI,CAAC,OAAO,KAAK,KAAK;aAAE,MAAM,CAAC,OAAO,GAAG,KAAK,CAAC;SACnD,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;;SAEtC,IAAI,IAAI,CAAC,QAAQ,KAAK,SAAS,EAAE;aAC/B,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,SAAS,EAAE;iBACrD,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;cAClE;aACD,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;UACtC;SACD,IAAI,IAAI,CAAC,QAAQ,KAAK,SAAS,EAAE;aAC/B,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,SAAS,EAAE;iBACpD,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;cACjE;aACD,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;UACtC;;SAED,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;aAC5B,MAAM,CAAC,QAAQ,GAAG,EAAE,CAAC;aACrB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAG,EAAE;iBAC9C,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC;cAC5D;UACF;SACD,IAAI,YAAY,EAAE;aAChB,IAAM,UAAU,GAAG,gBAAgB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;aACrD,IAAM,SAAS,GAAG,gBAAgB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;aACnD,IAAM,QAAQ,GAAG,gBAAgB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aACjD,IAAM,MAAM,GAAG,gBAAgB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;aAC7C,IAAI,UAAU,CAAC,MAAM,GAAG,CAAC;iBAAE,MAAM,CAAC,UAAU,GAAG,UAAU,CAAC;aAC1D,IAAI,SAAS,CAAC,MAAM,GAAG,CAAC;iBAAE,MAAM,CAAC,SAAS,GAAG,SAAS,CAAC;aACvD,IAAI,QAAQ,CAAC,MAAM,GAAG,CAAC;iBAAE,MAAM,CAAC,QAAQ,GAAG,QAAQ,CAAC;aACpD,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC;iBAAE,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC;UAC/C;SACD,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC;SACvB,OAAO,MAAM,CAAC;;;;SAId,SAAS,gBAAgB,CAAC,KAAU;aAClC,IAAM,MAAM,GAAG,EAAE,CAAC;aAClB,KAAK,IAAI,GAAG,IAAI,KAAK,EAAE;iBACrB,IAAM,IAAI,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC;iBACxB,OAAO,IAAI,CAAC,QAAQ,CAAC;iBACrB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;cACnB;aACD,OAAO,MAAM,CAAC;UACf;MACF;KACD,wBAAK,GAAL,UAAM,SAAyB;SAAzB,0BAAA,EAAA,gBAAyB;SAC7B,OAAO,IAAK,IAAI,CAAC,WAAmB,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;MAC9D;KACD,uBAAI,GAAJ,UAAK,MAAY,EAAE,SAAyB;SAAzB,0BAAA,EAAA,gBAAyB;SAC1C,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;SACxB,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;SACxB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;SACpC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;SACxC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;SAC9B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;SAChC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;SAC1C,IAAI,CAAC,gBAAgB,GAAG,MAAM,CAAC,gBAAgB,CAAC;SAChD,IAAI,CAAC,sBAAsB,GAAG,MAAM,CAAC,sBAAsB,CAAC;SAC5D,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;SAC9B,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC;SACpC,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,aAAa,CAAC;SAC1C,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,aAAa,CAAC;SAC1C,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC;SACtC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC;SAC5D,IAAI,SAAS,KAAK,IAAI,EAAE;aACtB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAG,EAAE;iBAChD,IAAM,KAAK,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;iBACjC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC;cACzB;UACF;SACD,OAAO,IAAI,CAAC;MACb;KACD,iCAAc,GAAd,UAAe,IAAY;SACzB,OAAO,CAAC,IAAI,CAAC,2EAA2E,CAAC,CAAC;SAC1F,OAAO,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;MACnC;KACD,8BAAW,GAAX,UAAY,KAAa;SACvB,OAAO,CAAC,IAAI,CAAC,2EAA2E,CAAC,CAAC;MAC3F;KACD,4BAAS,GAAT,UAAU,QAAgB,EAAE,IAAa;SACvC,OAAO,CAAC,IAAI,CAAC,8FAA8F,CAAC,CAAC;SAC7G,OAAO,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;MAC7C;KACD,sBAAI,gCAAU;cAAd;aACE,OAAO,CAAC,IAAI,CAAC,qDAAqD,CAAC,CAAC;aACpE,OAAO,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;UAC5B;cACD,UAAe,KAAa;aAC1B,OAAO,CAAC,IAAI,CAAC,qDAAqD,CAAC,CAAC;aACpE,IAAI,CAAC,QAAQ,CAAC,KAAK,GAAG,KAAK,CAAC;UAC7B;;;QAJA;KAKD,sBAAI,mCAAa;cAAjB;aACE,OAAO,CAAC,IAAI,CAAC,+FAA+F,CAAC,CAAC;aAC9G,OAAO,IAAI,CAAC;UACb;cACD,UAAkB,KAAc;aAC9B,OAAO,CAAC,IAAI,CAAC,+FAA+F,CAAC,CAAC;UAC/G;;;QAHA;KAnWe,kBAAS,GAAY,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;KAC1C,gCAAuB,GAAY,IAAI,CAAC;KAiCzC,yBAAgB,GAAG,IAAI,UAAU,EAAE,CAAC;KASpC,oBAAW,GAAG,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;KAKnC,oBAAW,GAAG,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;KAKnC,oBAAW,GAAG,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;KAKnC,4BAAmB,GAAG,IAAI,OAAO,EAAE,CAAC;KASpC,uBAAc,GAAG,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;KAKtC,uBAAc,GAAG,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;KAKtC,uBAAc,GAAG,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;KAQtC,yBAAgB,GAAG,IAAI,OAAO,EAAE,CAAC;KAKjC,mBAAU,GAAG,IAAI,OAAO,EAAE,CAAC;KAgE3B,qCAA4B,GAAG,IAAI,OAAO,EAAE,CAAC;KAC7C,kCAAyB,GAAG,IAAI,OAAO,EAAE,CAAC;KAQ1C,qCAA4B,GAAG,IAAI,UAAU,EAAE,CAAC;KAMhD,gCAAuB,GAAG,IAAI,OAAO,EAAE,CAAC;KACxC,kCAAyB,GAAG,IAAI,UAAU,EAAE,CAAC;KAQ7C,sCAA6B,GAAG,IAAI,UAAU,EAAE,CAAC;KAqLlE,eAAC;EAAA,CAhZ6B,eAAe,GAgZ5C;CACD,IAAIC,OAAK,GAAG,CAAC,CAAC;AACd,UAAgB,eAAe,KAAK,OAAOA,OAAK,EAAE,CAAC,EAAE;;CClarD;;;AAGA;KAGE,aAAY,MAA+B,EAAE,SAAkC;SAAnE,uBAAA,EAAA,aAAsB,OAAO,EAAE;SAAE,0BAAA,EAAA,gBAAyB,OAAO,EAAE;SAC7E,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;SACrB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;MAC5B;KACD,iBAAG,GAAH,UAAI,MAAe,EAAE,SAAkB;SACrC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SACzB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;SAC/B,OAAO,IAAI,CAAC;MACb;KACD,mBAAK,GAAL;SACE,OAAO,IAAK,IAAI,CAAC,WAAmB,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;MACnD;KACD,kBAAI,GAAJ,UAAK,GAAQ;SACX,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;SAC7B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;SACnC,OAAO,IAAI,CAAC;MACb;KACD,gBAAE,GAAF,UAAG,CAAS,EAAE,MAA+B;SAA/B,uBAAA,EAAA,aAAsB,OAAO,EAAE;SAC3C,OAAO,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;MACvE;KACD,oBAAM,GAAN,UAAO,CAAU;SACf,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,EAAE,CAAC;SACpD,OAAO,IAAI,CAAC;MACb;KAED,oBAAM,GAAN,UAAO,CAAS;SACd,IAAM,EAAE,GAAG,GAAG,CAAC,SAAS,CAAC;SACzB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;SACjC,OAAO,IAAI,CAAC;MACb;KACD,iCAAmB,GAAnB,UAAoB,KAAc,EAAE,MAA+B;SAA/B,uBAAA,EAAA,aAAsB,OAAO,EAAE;SACjE,MAAM,CAAC,UAAU,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;SACtC,IAAM,iBAAiB,GAAG,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;SACrD,IAAI,iBAAiB,GAAG,CAAC,EAAE;aACzB,OAAO,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;UACjC;SACD,OAAO,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,cAAc,CAAC,iBAAiB,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;MACvF;KACD,6BAAe,GAAf,UAAgB,KAAc;SAC5B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC,CAAC;MACjD;KAED,+BAAiB,GAAjB,UAAkB,KAAc;SAC9B,IAAM,EAAE,GAAG,GAAG,CAAC,oBAAoB,CAAC;SACpC,IAAM,iBAAiB,GAAG,EAAE,CAAC,UAAU,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;;SAEhF,IAAI,iBAAiB,GAAG,CAAC,EAAE;aACzB,OAAO,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;UAC7C;SACD,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,cAAc,CAAC,iBAAiB,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SAC3E,OAAO,EAAE,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;MACpC;KAID,iCAAmB,GAAnB,UAAoB,EAAW,EAAE,EAAW,EAAE,kBAA2B,EAAE,sBAA+B;SACxG,IAAM,SAAS,GAAG,GAAG,CAAC,6BAA6B,CAAC;SACpD,IAAM,MAAM,GAAG,GAAG,CAAC,0BAA0B,CAAC;SAC9C,IAAM,IAAI,GAAG,GAAG,CAAC,wBAAwB,CAAC;;;;;;;SAO1C,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC;SAC/C,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC;SACpC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;SACtC,IAAM,SAAS,GAAG,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;SAC1C,IAAM,GAAG,GAAG,CAAE,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;SACzC,IAAM,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;SACpC,IAAM,EAAE,GAAG,CAAE,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;SAC9B,IAAM,CAAC,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;SAC1B,IAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;SACpC,IAAI,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,MAAM,CAAC;SAC5B,IAAI,GAAG,GAAG,CAAC,EAAE;;aAEX,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,EAAE,CAAC;aACnB,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,EAAE,CAAC;aACnB,MAAM,GAAG,SAAS,GAAG,GAAG,CAAC;aACzB,IAAI,EAAE,IAAI,CAAC,EAAE;iBACX,IAAI,EAAE,IAAI,CAAE,MAAM,EAAE;qBAClB,IAAI,EAAE,IAAI,MAAM,EAAE;;;yBAGhB,IAAM,MAAM,GAAG,CAAC,GAAG,GAAG,CAAC;yBACvB,EAAE,IAAI,MAAM,CAAC;yBACb,EAAE,IAAI,MAAM,CAAC;yBACb,OAAO,GAAG,EAAE,IAAI,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,IAAI,GAAG,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC;sBAC7E;0BAAM;;yBAEL,EAAE,GAAG,SAAS,CAAC;yBACf,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,EAAG,GAAG,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;yBACpC,OAAO,GAAG,CAAE,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC;sBAC9C;kBACF;sBAAM;;qBAEL,EAAE,GAAG,CAAE,SAAS,CAAC;qBACjB,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,EAAG,GAAG,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;qBACpC,OAAO,GAAG,CAAE,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC;kBAC9C;cACF;kBAAM;iBACL,IAAI,EAAE,IAAI,CAAE,MAAM,EAAE;;qBAElB,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,EAAG,CAAE,GAAG,GAAG,SAAS,GAAG,EAAE,CAAC,CAAC,CAAC;qBAC7C,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,IAAI,CAAE,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAE,SAAS,EAAE,CAAE,EAAE,CAAC,EAAE,SAAS,CAAC,CAAC;qBAC/E,OAAO,GAAG,CAAE,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC;kBAC9C;sBAAM,IAAI,EAAE,IAAI,MAAM,EAAE;;qBAEvB,EAAE,GAAG,CAAC,CAAC;qBACP,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAE,SAAS,EAAE,CAAE,EAAE,CAAC,EAAE,SAAS,CAAC,CAAC;qBACtD,OAAO,GAAG,EAAE,IAAI,EAAE,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC;kBAClC;sBAAM;;qBAEL,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,EAAG,GAAG,GAAG,SAAS,GAAG,EAAE,CAAC,CAAC,CAAC;qBAC3C,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,IAAI,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAE,SAAS,EAAE,CAAE,EAAE,CAAC,EAAE,SAAS,CAAC,CAAC;qBAC7E,OAAO,GAAG,CAAE,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC;kBAC9C;cACF;UACF;cAAM;;aAEL,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,IAAI,CAAE,SAAS,GAAG,SAAS,CAAC;aACzC,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,EAAG,GAAG,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;aACpC,OAAO,GAAG,CAAE,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC;UAC9C;SACD,IAAI,kBAAkB,EAAE;aACtB,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;UAC7E;SACD,IAAI,sBAAsB,EAAE;aAC1B,sBAAsB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;UACvE;SACD,OAAO,OAAO,CAAC;MAChB;KAED,6BAAe,GAAf,UAAgB,MAAc,EAAE,cAAuC;SAAvC,+BAAA,EAAA,qBAA8B,OAAO,EAAE;SACrE,IAAM,EAAE,GAAG,GAAG,CAAC,kBAAkB,CAAC;SAClC,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;SAC1C,IAAM,GAAG,GAAG,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;SACnC,IAAM,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC;SAClC,IAAM,OAAO,GAAG,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;SAC9C,IAAI,EAAE,GAAG,OAAO;aAAE,OAAO,IAAI,CAAC;SAC9B,IAAM,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC,CAAC;;SAEpC,IAAM,EAAE,GAAG,GAAG,GAAG,GAAG,CAAC;;SAErB,IAAM,EAAE,GAAG,GAAG,GAAG,GAAG,CAAC;;SAErB,IAAI,EAAE,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC;aAAE,OAAO,IAAI,CAAC;;;;SAIlC,IAAI,EAAE,GAAG,CAAC;aAAE,OAAO,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,cAAc,CAAC,CAAC;;SAE/C,OAAO,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,cAAc,CAAC,CAAC;MACpC;KACD,8BAAgB,GAAhB,UAAiB,MAAc;SAC7B,OAAO,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,MAAM,CAAC,MAAM,CAAC;MAC7D;KACD,6BAAe,GAAf,UAAgB,KAAY;SAC1B,IAAM,WAAW,GAAG,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;SACrD,IAAI,WAAW,KAAK,CAAC,EAAE;;aAErB,IAAI,KAAK,CAAC,eAAe,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE;iBAC5C,OAAO,CAAC,CAAC;cACV;;aAED,OAAO,IAAI,CAAC;UACb;SACD,IAAM,CAAC,GAAG,EAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,KAAK,CAAC,QAAQ,CAAC,GAAG,WAAW,CAAC;;SAE3E,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,GAAI,IAAI,CAAC;MAC3B;KACD,4BAAc,GAAd,UAAe,KAAY,EAAE,cAAuC;SAAvC,+BAAA,EAAA,qBAA8B,OAAO,EAAE;SAClE,IAAM,CAAC,GAAG,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;SACtC,IAAI,CAAC,KAAK,IAAI,EAAE;aACd,OAAO,IAAI,CAAC;UACb;SACD,OAAO,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,cAAc,CAAC,CAAC;MACnC;KACD,6BAAe,GAAf,UAAgB,KAAY;;SAE1B,IAAM,WAAW,GAAG,KAAK,CAAC,eAAe,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SACvD,IAAI,WAAW,KAAK,CAAC,EAAE;aACrB,OAAO,IAAI,CAAC;UACb;SACD,IAAM,WAAW,GAAG,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;SACrD,IAAI,WAAW,GAAG,WAAW,GAAG,CAAC,EAAE;aACjC,OAAO,IAAI,CAAC;UACb;;SAED,OAAO,KAAK,CAAC;MACd;KACD,0BAAY,GAAZ,UAAa,GAAS,EAAE,cAAuC;SAAvC,+BAAA,EAAA,qBAA8B,OAAO,EAAE;SAC7D,IAAI,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;SAC3C,IAAM,OAAO,GAAG,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,EAClC,OAAO,GAAG,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,EAC9B,OAAO,GAAG,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;SACjC,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;SAC3B,IAAI,OAAO,IAAI,CAAC,EAAE;aAChB,IAAI,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,IAAI,OAAO,CAAC;aACxC,IAAI,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,IAAI,OAAO,CAAC;UACzC;cAAM;aACL,IAAI,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,IAAI,OAAO,CAAC;aACxC,IAAI,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,IAAI,OAAO,CAAC;UACzC;SACD,IAAI,OAAO,IAAI,CAAC,EAAE;aAChB,KAAK,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,IAAI,OAAO,CAAC;aACzC,KAAK,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,IAAI,OAAO,CAAC;UAC1C;cAAM;aACL,KAAK,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,IAAI,OAAO,CAAC;aACzC,KAAK,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,IAAI,OAAO,CAAC;UAC1C;SACD,IAAI,CAAC,IAAI,GAAG,KAAK,MAAM,KAAK,GAAG,IAAI,CAAC;aAAE,OAAO,IAAI,CAAC;;;SAGlD,IAAI,KAAK,GAAG,IAAI,IAAI,IAAI,KAAK,IAAI;aAAE,IAAI,GAAG,KAAK,CAAC;SAChD,IAAI,KAAK,GAAG,IAAI,IAAI,IAAI,KAAK,IAAI;aAAE,IAAI,GAAG,KAAK,CAAC;SAChD,IAAI,OAAO,IAAI,CAAC,EAAE;aAChB,KAAK,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,IAAI,OAAO,CAAC;aACzC,KAAK,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,IAAI,OAAO,CAAC;UAC1C;cAAM;aACL,KAAK,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,IAAI,OAAO,CAAC;aACzC,KAAK,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,IAAI,OAAO,CAAC;UAC1C;SACD,IAAI,CAAC,IAAI,GAAG,KAAK,MAAM,KAAK,GAAG,IAAI,CAAC;aAAE,OAAO,IAAI,CAAC;SAClD,IAAI,KAAK,GAAG,IAAI,IAAI,IAAI,KAAK,IAAI;aAAE,IAAI,GAAG,KAAK,CAAC;SAChD,IAAI,KAAK,GAAG,IAAI,IAAI,IAAI,KAAK,IAAI;aAAE,IAAI,GAAG,KAAK,CAAC;;SAEhD,IAAI,IAAI,GAAG,CAAC;aAAE,OAAO,IAAI,CAAC;SAC1B,OAAO,IAAI,CAAC,EAAE,CAAC,IAAI,IAAI,CAAC,GAAG,IAAI,GAAG,IAAI,EAAE,cAAc,CAAC,CAAC;MACzD;KAED,2BAAa,GAAb,UAAc,GAAS;SACrB,IAAM,CAAC,GAAG,GAAG,CAAC,eAAe,CAAC;SAC9B,OAAO,IAAI,CAAC,YAAY,CAAC,GAAG,EAAE,CAAC,CAAC,KAAK,IAAI,CAAC;MAC3C;KAKD,+BAAiB,GAAjB,UAAkB,CAAU,EAAE,CAAU,EAAE,CAAU,EAAE,eAAwB,EAAE,cAAuC;SAAvC,+BAAA,EAAA,qBAA8B,OAAO,EAAE;;SAErH,IAAM,IAAI,GAAG,GAAG,CAAC,sBAAsB,CAAC;SACxC,IAAM,KAAK,GAAG,GAAG,CAAC,uBAAuB,CAAC;SAC1C,IAAM,KAAK,GAAG,GAAG,CAAC,uBAAuB,CAAC;SAC1C,IAAM,MAAM,GAAG,GAAG,CAAC,wBAAwB,CAAC;;SAE5C,KAAK,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;SACvB,KAAK,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;SACvB,MAAM,CAAC,YAAY,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;;;;;;SAMlC,IAAI,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;SACrC,IAAI,IAAI,CAAC;SACT,IAAI,GAAG,GAAG,CAAC,EAAE;aACX,IAAI,eAAe;iBAAE,OAAO,IAAI,CAAC;aACjC,IAAI,GAAG,CAAC,CAAC;UACV;cAAM,IAAI,GAAG,GAAG,CAAC,EAAE;aAClB,IAAI,GAAG,CAAE,CAAC,CAAC;aACX,GAAG,GAAG,CAAE,GAAG,CAAC;UACb;cAAM;aACL,OAAO,IAAI,CAAC;UACb;SACD,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;SAChC,IAAM,MAAM,GAAG,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC,YAAY,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC;;SAE1E,IAAI,MAAM,GAAG,CAAC,EAAE;aACd,OAAO,IAAI,CAAC;UACb;SACD,IAAM,MAAM,GAAG,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;;SAE5D,IAAI,MAAM,GAAG,CAAC,EAAE;aACd,OAAO,IAAI,CAAC;UACb;;SAED,IAAI,MAAM,GAAG,MAAM,GAAG,GAAG,EAAE;aACzB,OAAO,IAAI,CAAC;UACb;;SAED,IAAM,GAAG,GAAG,CAAE,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;;SAEtC,IAAI,GAAG,GAAG,CAAC,EAAE;aACX,OAAO,IAAI,CAAC;UACb;;SAED,OAAO,IAAI,CAAC,EAAE,CAAC,GAAG,GAAG,GAAG,EAAE,cAAc,CAAC,CAAC;MAC3C;KACD,0BAAY,GAAZ,UAAa,OAAgB;SAC3B,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;SACtD,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;SAClC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SAChC,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC;SAC3B,OAAO,IAAI,CAAC;MACb;KACD,oBAAM,GAAN,UAAO,GAAQ;SACb,OAAO,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;MAC/E;KACD,+BAAiB,GAAjB,UAAkB,GAAS;SACzB,OAAO,CAAC,IAAI,CAAC,uEAAuE,CAAC,CAAC;SACtF,OAAO,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;MAChC;KACD,iCAAmB,GAAnB,UAAoB,KAAY;SAC9B,OAAO,CAAC,IAAI,CAAC,2EAA2E,CAAC,CAAC;SAC1F,OAAO,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;MACpC;KACD,kCAAoB,GAApB,UAAqB,MAAc;SACjC,OAAO,CAAC,IAAI,CAAC,6EAA6E,CAAC,CAAC;SAC5F,OAAO,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC;MACtC;KA/Rc,aAAS,GAAG,IAAI,OAAO,EAAE,CAAC;KAiB1B,wBAAoB,GAAG,IAAI,OAAO,EAAE,CAAC;KAWrC,iCAA6B,GAAG,IAAI,OAAO,EAAE,CAAC;KAC9C,8BAA0B,GAAG,IAAI,OAAO,EAAE,CAAC;KAC3C,4BAAwB,GAAG,IAAI,OAAO,EAAE,CAAC;KA+EzC,sBAAkB,GAAG,IAAI,OAAO,EAAE,CAAC;KAkGnC,mBAAe,GAAG,IAAI,OAAO,EAAE,CAAC;KAKhC,0BAAsB,GAAG,IAAI,OAAO,EAAE,CAAC;KACvC,2BAAuB,GAAG,IAAI,OAAO,EAAE,CAAC;KACxC,2BAAuB,GAAG,IAAI,OAAO,EAAE,CAAC;KACxC,4BAAwB,GAAG,IAAI,OAAO,EAAE,CAAC;KAyE1D,UAAC;EA3TD;;CCLA;;;AAGA;KAGE,eAAY,KAAqB,EAAE,GAAmB;SAA1C,sBAAA,EAAA,YAAY,OAAO,EAAE;SAAE,oBAAA,EAAA,UAAU,OAAO,EAAE;SACpD,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;SACnB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;MAChB;KACD,mBAAG,GAAH,UAAI,KAAc,EAAE,GAAY;SAC9B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SACvB,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SACnB,OAAO,IAAI,CAAC;MACb;KACD,qBAAK,GAAL;SACE,OAAO,IAAK,IAAI,CAAC,WAAmB,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;MACnD;KACD,oBAAI,GAAJ,UAAK,IAAW;SACd,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SAC5B,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SACxB,OAAO,IAAI,CAAC;MACb;KACD,yBAAS,GAAT,UAAU,MAA+B;SAA/B,uBAAA,EAAA,aAAsB,OAAO,EAAE;SACvC,OAAO,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC;MACpE;KACD,qBAAK,GAAL,UAAM,MAA+B;SAA/B,uBAAA,EAAA,aAAsB,OAAO,EAAE;SACnC,OAAO,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;MAChD;KACD,0BAAU,GAAV;SACE,OAAO,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;MAC/C;KACD,wBAAQ,GAAR;SACE,OAAO,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;MACxC;KACD,kBAAE,GAAF,UAAG,CAAS,EAAE,MAA+B;SAA/B,uBAAA,EAAA,aAAsB,OAAO,EAAE;SAC3C,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;MAC7D;KAGD,4CAA4B,GAA5B,UAA6B,KAAc,EAAE,WAAoB;SAC/D,IAAM,MAAM,GAAG,KAAK,CAAC,mCAAmC,CAAC;SACzD,IAAM,QAAQ,GAAG,KAAK,CAAC,qCAAqC,CAAC;SAC7D,MAAM,CAAC,UAAU,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;SACrC,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;SAC1C,IAAM,SAAS,GAAG,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;SACzC,IAAM,eAAe,GAAG,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;SAC7C,IAAI,CAAC,GAAG,eAAe,GAAG,SAAS,CAAC;SACpC,IAAI,WAAW,EAAE;aACf,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;UAC1B;SACD,OAAO,CAAC,CAAC;MACV;KACD,mCAAmB,GAAnB,UAAoB,KAAc,EAAE,WAAoB,EAAE,MAA+B;SAA/B,uBAAA,EAAA,aAAsB,OAAO,EAAE;SACvF,IAAM,CAAC,GAAG,IAAI,CAAC,4BAA4B,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC;SAChE,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;MAC7D;KACD,4BAAY,GAAZ,UAAa,MAAe;SAC1B,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;SAChC,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;SAC9B,OAAO,IAAI,CAAC;MACb;KACD,sBAAM,GAAN,UAAO,IAAW;SAChB,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;MACnE;KACD,sBAAM,GAAN,UAAO,MAAe;SACpB,OAAO,CAAC,IAAI,CAAC,0DAA0D,CAAC,CAAC;SACzE,OAAO,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;MAC/B;KA9Bc,yCAAmC,GAAG,IAAI,OAAO,EAAE,CAAC;KACpD,2CAAqC,GAAG,IAAI,OAAO,EAAE,CAAC;KA8BvE,YAAC;EAlED;;CCAA;;;AAGA;KAGE,eAAY,MAAsC,EAAE,QAAoB;SAA5D,uBAAA,EAAA,aAAsB,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;SAAE,yBAAA,EAAA,YAAoB;SACtE,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;SACrB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;MAC1B;KACD,mBAAG,GAAH,UAAI,MAAe,EAAE,QAAgB;SACnC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SACzB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;SACzB,OAAO,IAAI,CAAC;MACb;KACD,6BAAa,GAAb,UAAc,CAAS,EAAE,CAAS,EAAE,CAAS,EAAE,CAAS;SACtD,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;SACzB,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;SAClB,OAAO,IAAI,CAAC;MACb;KACD,6CAA6B,GAA7B,UAA8B,MAAe,EAAE,KAAc;SAC3D,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SACzB,IAAI,CAAC,QAAQ,GAAG,CAAE,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SACzC,OAAO,IAAI,CAAC;MACb;KAGD,qCAAqB,GAArB,UAAsB,CAAU,EAAE,CAAU,EAAE,CAAU;SACtD,IAAM,EAAE,GAAG,KAAK,CAAC,wBAAwB,CAAC;SAC1C,IAAM,EAAE,GAAG,KAAK,CAAC,wBAAwB,CAAC;SAC1C,IAAM,MAAM,GAAG,EAAE,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC;;SAE1E,IAAI,CAAC,6BAA6B,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;SAC9C,OAAO,IAAI,CAAC;MACb;KACD,qBAAK,GAAL;SACE,OAAO,IAAK,IAAI,CAAC,WAAmB,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;MACnD;KACD,oBAAI,GAAJ,UAAK,KAAY;SACf,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;SAC/B,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;SAC/B,OAAO,IAAI,CAAC;MACb;KACD,yBAAS,GAAT;;SAEE,IAAM,mBAAmB,GAAG,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC;SACvD,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,mBAAmB,CAAC,CAAC;SAChD,IAAI,CAAC,QAAQ,IAAI,mBAAmB,CAAC;SACrC,OAAO,IAAI,CAAC;MACb;KACD,sBAAM,GAAN;SACE,IAAI,CAAC,QAAQ,IAAI,CAAE,CAAC,CAAC;SACrB,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC;SACrB,OAAO,IAAI,CAAC;MACb;KACD,+BAAe,GAAf,UAAgB,KAAc;SAC5B,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC;MAC/C;KACD,gCAAgB,GAAhB,UAAiB,MAAc;SAC7B,OAAO,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC;MAC5D;KACD,4BAAY,GAAZ,UAAa,KAAc,EAAE,MAA+B;SAA/B,uBAAA,EAAA,aAAsB,OAAO,EAAE;SAC1D,OAAO,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,MAAM,EAAE,CAAC;MAC3D;KACD,0BAAU,GAAV,UAAW,KAAc,EAAE,MAA+B;SAA/B,uBAAA,EAAA,aAAsB,OAAO,EAAE;SACxD,IAAM,sBAAsB,GAAG,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;SAC3D,OAAO,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,cAAc,CAAC,sBAAsB,CAAC,CAAC;MACxE;KAED,6BAAa,GAAb,UAAc,IAAW,EAAE,MAA+B;SAA/B,uBAAA,EAAA,aAAsB,OAAO,EAAE;SACxD,IAAM,EAAE,GAAG,KAAK,CAAC,gBAAgB,CAAC;SAClC,IAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;SACjC,IAAM,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;SAC/C,IAAI,WAAW,KAAK,CAAC,EAAE;;aAErB,IAAI,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE;iBAC1C,OAAO,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;cAChC;;aAED,OAAO,SAAS,CAAC;UAClB;SACD,IAAM,CAAC,GAAG,EAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,WAAW,CAAC;SACxE,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;aAClB,OAAO,SAAS,CAAC;UAClB;SACD,OAAO,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;MACjE;KACD,8BAAc,GAAd,UAAe,IAAW;;SAExB,IAAM,SAAS,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SACnD,IAAM,OAAO,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SAC/C,OAAO,CAAC,SAAS,GAAG,CAAC,IAAI,OAAO,GAAG,CAAC,MAAM,OAAO,GAAG,CAAC,IAAI,SAAS,GAAG,CAAC,CAAC,CAAC;MACzE;KACD,6BAAa,GAAb,UAAc,GAAS;SACrB,OAAO,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;MAClC;KACD,gCAAgB,GAAhB,UAAiB,MAAc;SAC7B,OAAO,MAAM,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;MACrC;KACD,6BAAa,GAAb,UAAc,MAA+B;SAA/B,uBAAA,EAAA,aAAsB,OAAO,EAAE;SAC3C,OAAO,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,cAAc,CAAC,CAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;MACjE;KAGD,4BAAY,GAAZ,UAAa,MAAe,EAAE,oBAA8B;SAC1D,IAAM,EAAE,GAAG,KAAK,CAAC,eAAe,CAAC;SACjC,IAAM,EAAE,GAAG,KAAK,CAAC,eAAe,CAAC;SACjC,IAAM,cAAc,GAAG,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;;;SAGnE,IAAM,YAAY,GAAG,oBAAoB,IAAI,EAAE,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;SACxE,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC,SAAS,EAAE,CAAC;;SAElE,IAAI,CAAC,QAAQ,GAAG,CAAE,cAAc,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;SAC7C,OAAO,IAAI,CAAC;MACb;KACD,yBAAS,GAAT,UAAU,MAAe;SACvB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SACxD,OAAO,IAAI,CAAC;MACb;KACD,sBAAM,GAAN,UAAO,KAAY;SACjB,OAAO,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,KAAK,CAAC,QAAQ,KAAK,IAAI,CAAC,QAAQ,CAAC,CAAC;MAC/E;KACD,kCAAkB,GAAlB,UAAmB,IAAW;SAC5B,OAAO,CAAC,IAAI,CAAC,2EAA2E,CAAC,CAAC;SAC1F,OAAO,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;MAClC;KArGc,8BAAwB,GAAG,IAAI,OAAO,EAAE,CAAC;KACzC,8BAAwB,GAAG,IAAI,OAAO,EAAE,CAAC;KA0CzC,sBAAgB,GAAG,IAAI,OAAO,EAAE,CAAC;KAkCjC,qBAAe,GAAG,IAAI,OAAO,EAAE,CAAC;KAChC,qBAAe,GAAG,IAAI,OAAO,EAAE,CAAC;KAwBjD,YAAC;EA5HD;;CCNA;;;;AAIA;KAIE,kBAAY,CAA0B,EAAE,CAA0B,EAAE,CAA0B;SAAlF,kBAAA,EAAA,QAAiB,OAAO,EAAE;SAAE,kBAAA,EAAA,QAAiB,OAAO,EAAE;SAAE,kBAAA,EAAA,QAAiB,OAAO,EAAE;SAC5F,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;SACX,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;SACX,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;MACZ;KAEM,eAAM,GAAb,UAAc,CAAU,EAAE,CAAU,EAAE,CAAU,EAAE,MAAsB;SAAtB,uBAAA,EAAA,aAAa,OAAO,EAAE;SACtE,IAAM,EAAE,GAAG,QAAQ,CAAC,SAAS,CAAC;SAC9B,MAAM,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;SACxB,EAAE,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;SACpB,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;SACjB,IAAM,cAAc,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;SACzC,IAAI,cAAc,GAAG,CAAC,EAAE;aACtB,OAAO,MAAM,CAAC,cAAc,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;UAC7D;SACD,OAAO,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;MAC5B;;;KAGM,2BAAkB,GAAzB,UAA0B,KAAc,EAAE,CAAU,EAAE,CAAU,EAAE,CAAU,EAAE,MAA+B;SAA/B,uBAAA,EAAA,aAAsB,OAAO,EAAE;SAC3G,IAAM,EAAE,GAAG,IAAI,OAAO,EAAE,CAAC;SACzB,IAAM,EAAE,GAAG,IAAI,OAAO,EAAE,CAAC;SACzB,IAAM,EAAE,GAAG,IAAI,OAAO,EAAE,CAAC;SACzB,EAAE,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;SACpB,EAAE,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;SACpB,EAAE,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;SACxB,IAAM,KAAK,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;SACzB,IAAM,KAAK,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;SACzB,IAAM,KAAK,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;SACzB,IAAM,KAAK,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;SACzB,IAAM,KAAK,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;SACzB,IAAM,KAAK,IAAI,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,CAAC,CAAC;;SAE9C,IAAI,KAAK,KAAK,CAAC,EAAE;;;aAGf,OAAO,MAAM,CAAC,GAAG,CAAC,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAE,CAAC,CAAC,CAAC;UAClC;SACD,IAAM,QAAQ,GAAG,CAAC,GAAG,KAAK,CAAC;SAC3B,IAAM,CAAC,GAAG,CAAC,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,IAAI,QAAQ,CAAC;SACrD,IAAM,CAAC,GAAG,CAAC,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,IAAI,QAAQ,CAAC;;SAErD,OAAO,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;MACpC;KACM,sBAAa,GAApB,UAAqB,KAAc,EAAE,CAAU,EAAE,CAAU,EAAE,CAAU;SACrE,IAAM,EAAE,GAAG,IAAI,OAAO,EAAE,CAAC;SACzB,IAAM,MAAM,GAAG,QAAQ,CAAC,kBAAkB,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;SAC/D,OAAO,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,MAAM,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;MAC3E;KACD,sBAAG,GAAH,UAAI,CAAU,EAAE,CAAU,EAAE,CAAU;SACpC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SACf,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SACf,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SACf,OAAO,IAAI,CAAC;MACb;KACD,0CAAuB,GAAvB,UAAwB,MAAiB,EAAE,EAAU,EAAE,EAAU,EAAE,EAAU;SAC3E,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC;SACxB,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC;SACxB,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC;SACxB,OAAO,IAAI,CAAC;MACb;KACD,wBAAK,GAAL;SACE,OAAO,IAAK,IAAI,CAAC,WAAmB,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;MACnD;KACD,uBAAI,GAAJ,UAAK,QAAkB;SACrB,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;SACxB,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;SACxB,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;SACxB,OAAO,IAAI,CAAC;MACb;KACD,uBAAI,GAAJ;SACE,IAAM,EAAE,GAAG,IAAI,OAAO,EAAE,CAAC;SACzB,IAAM,EAAE,GAAG,IAAI,OAAO,EAAE,CAAC;SACzB,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;SAC9B,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;SAC9B,OAAO,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC;MACpC;KACD,2BAAQ,GAAR,UAAS,MAA+B;SAA/B,uBAAA,EAAA,aAAsB,OAAO,EAAE;SACtC,OAAO,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;MAC5E;KACD,yBAAM,GAAN,UAAO,MAA+B;SAA/B,uBAAA,EAAA,aAAsB,OAAO,EAAE;SACpC,OAAO,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;MACxD;KACD,wBAAK,GAAL,UAAM,MAA2B;SAA3B,uBAAA,EAAA,aAAoB,KAAK,EAAE;SAC/B,OAAO,MAAM,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;MAC7D;KACD,qCAAkB,GAAlB,UAAmB,KAAc,EAAE,MAA+B;SAA/B,uBAAA,EAAA,aAAsB,OAAO,EAAE;SAChE,OAAO,QAAQ,CAAC,kBAAkB,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;MAC3E;KACD,gCAAa,GAAb,UAAc,KAAc;SAC1B,OAAO,QAAQ,CAAC,aAAa,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;MAC9D;KACD,sCAAmB,GAAnB,UAAoB,KAAc,EAAE,MAA+B;SAA/B,uBAAA,EAAA,aAAsB,OAAO,EAAE;SACjE,IAAM,KAAK,GAAG,IAAI,KAAK,EAAE,CAAC;SAC1B,IAAM,QAAQ,GAAG,CAAE,IAAI,KAAK,EAAE,EAAE,IAAI,KAAK,EAAE,EAAE,IAAI,KAAK,EAAE,CAAE,CAAC;SAC3D,IAAM,cAAc,GAAG,IAAI,OAAO,EAAE,CAAC;SACrC,IAAM,YAAY,GAAG,IAAI,OAAO,EAAE,CAAC;SACnC,IAAI,WAAW,GAAG,QAAQ,CAAC;;SAE3B,KAAK,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;SACpD,KAAK,CAAC,YAAY,CAAC,KAAK,EAAE,cAAc,CAAC,CAAC;;SAE1C,IAAI,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,KAAK,IAAI,EAAE;;aAE/C,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;UAC7B;cAAM;;aAEL,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;aAChC,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;aAChC,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;aAChC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAG,EAAE;iBACzC,QAAQ,CAAC,CAAC,CAAC,CAAC,mBAAmB,CAAC,cAAc,EAAE,IAAI,EAAE,YAAY,CAAC,CAAC;iBACpE,IAAM,QAAQ,GAAG,cAAc,CAAC,iBAAiB,CAAC,YAAY,CAAC,CAAC;iBAChE,IAAI,QAAQ,GAAG,WAAW,EAAE;qBAC1B,WAAW,GAAG,QAAQ,CAAC;qBACvB,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;kBAC3B;cACF;UACF;SACD,OAAO,MAAM,CAAC;MACf;KACD,yBAAM,GAAN,UAAO,QAAkB;SACvB,OAAO,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;MAC5F;KAtHc,kBAAS,GAAG,IAAI,OAAO,EAAE,CAAC;KAuH3C,eAAC;EAhID;;CCLA;;;AAGA;KAgBE,uBAAY,SAA0B;SAA1B,0BAAA,EAAA,cAA0B;SAftC,SAAI,GAAW,KAAK,CAAC,YAAY,EAAE,CAAC;SACpC,SAAI,GAAW,eAAe,CAAC;SAE/B,YAAO,GAAY,IAAI,CAAC;SAWf,oBAAe,GAAY,IAAI,CAAC;SAEvC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;MAC5B;;KAJD,+BAAO,GAAP,eAAkB;KAKlB,8BAAM,GAAN,UAAO,IAAS;SACd,IAAM,MAAM,GAAQ;aAClB,QAAQ,EAAE;iBACR,OAAO,EAAE,GAAG;iBACZ,IAAI,EAAE,UAAU;iBAChB,SAAS,EAAE,kBAAkB;cAC9B;aACD,IAAI,EAAE,IAAI,CAAC,IAAI;aACf,IAAI,EAAE,IAAI,CAAC,IAAI;aACf,SAAS,EAAE,EAAE;UACd,CAAC;SACF,IAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;SACjC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAG,EAAE;aACjD,IAAM,QAAQ,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;aAC3C,OAAO,QAAQ,CAAC,QAAQ,CAAC;aACzB,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;UACjC;SACD,MAAM,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;SAC9B,OAAO,MAAM,CAAC;MACf;KACD,6BAAK,GAAL;SACE,IAAM,QAAQ,GAAG,IAAK,IAAI,CAAC,WAAmB,EAAE,CAAC;SACjD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,EAAG,EAAE;aAC/C,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC;UACpD;SACD,QAAQ,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;SAChC,OAAO,QAAQ,CAAC;MACjB;KACH,oBAAC;CAAD,CAAC;;;KCYsCD,qCAAQ;KAM7C,2BAAY,UAA6D;SAAzE,YACE,iBAAO,SAoBR;SAtBQ,yBAAmB,GAAY,IAAI,CAAC;SAG3C,KAAI,CAAC,IAAI,GAAG,mBAAmB,CAAC;SAChC,KAAI,CAAC,KAAK,GAAG,IAAI,KAAK,CAAC,QAAQ,CAAC,CAAC;SACjC,KAAI,CAAC,GAAG,GAAG,IAAI,CAAC;SAChB,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC;SAClB,KAAI,CAAC,cAAc,GAAG,GAAG,CAAC;SAC1B,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC;SACxB,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;SACrB,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC;SACnB,KAAI,CAAC,OAAO,GAAGb,yBAAiB,CAAC,QAAQ,CAAC;SAC1C,KAAI,CAAC,YAAY,GAAG,CAAC,CAAC;SACtB,KAAI,CAAC,eAAe,GAAG,IAAI,CAAC;SAC5B,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;SACvB,KAAI,CAAC,kBAAkB,GAAG,CAAC,CAAC;SAC5B,KAAI,CAAC,gBAAgB,GAAG,OAAO,CAAC;SAChC,KAAI,CAAC,iBAAiB,GAAG,OAAO,CAAC;SACjC,KAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;SACtB,KAAI,CAAC,YAAY,GAAG,KAAK,CAAC;SAC1B,KAAI,CAAC,MAAM,GAAG,KAAK,CAAC;SACpB,KAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;;MAC5B;KACD,gCAAI,GAAJ,UAAK,MAAY;SACf,iBAAM,IAAI,YAAC,MAAM,CAAC,CAAC;SACnB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;SAC9B,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC;SACtB,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;SAC1B,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC,cAAc,CAAC;SAC5C,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC;SACtC,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;SAChC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;SAC5B,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;SAC9B,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,YAAY,CAAC;SACxC,IAAI,CAAC,eAAe,GAAG,MAAM,CAAC,eAAe,CAAC;SAC9C,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;SAClC,IAAI,CAAC,kBAAkB,GAAG,MAAM,CAAC,kBAAkB,CAAC;SACpD,IAAI,CAAC,gBAAgB,GAAG,MAAM,CAAC,gBAAgB,CAAC;SAChD,IAAI,CAAC,iBAAiB,GAAG,MAAM,CAAC,iBAAiB,CAAC;SAClD,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;SAChC,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,YAAY,CAAC;SACxC,OAAO,IAAI,CAAC;MACb;KACH,wBAAC;CAAD,CAhDA,CAAuC,QAAQ;;;KC3C7C,yBAAY,KAAkB,EAAE,QAAiB,EAAE,UAA2B;SAA3B,2BAAA,EAAA,kBAA2B;SAV9E,SAAI,GAAW,KAAK,CAAC,YAAY,EAAE,CAAC;SAKpC,YAAO,GAAY,KAAK,CAAC;SACzB,gBAAW,GAAQ,EAAE,MAAM,EAAE,CAAC,EAAE,KAAK,EAAE,CAAE,CAAC,EAAE,CAAC;SAC7C,YAAO,GAAW,CAAC,CAAC;SACX,sBAAiB,GAAY,IAAI,CAAC;SAClC,iCAA4B,GAAY,KAAK,CAAC;SAErD,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;aACxB,MAAM,IAAI,SAAS,CAAC,uDAAuD,CAAC,CAAC;UAC9E;SACD,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;SACnB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;SACzB,IAAI,CAAC,KAAK,GAAG,KAAK,KAAK,SAAS,GAAG,KAAK,CAAC,MAAM,GAAG,QAAQ,GAAG,CAAC,CAAC;SAC/D,IAAI,CAAC,UAAU,GAAG,UAAU,KAAK,IAAI,CAAC;MACvC;KACD,sBAAI,wCAAW;cAAf,UAAgB,KAAc;aAC5B,IAAI,KAAK,KAAK,IAAI;iBAAE,IAAI,CAAC,OAAO,EAAG,CAAC;UACrC;;;QAAA;KACD,kCAAQ,GAAR,UAAS,KAAiB;SACxB,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;aACxB,MAAM,IAAI,SAAS,CAAC,uDAAuD,CAAC,CAAC;UAC9E;SACD,IAAI,CAAC,KAAK,GAAG,KAAK,KAAK,SAAS,GAAG,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;SACpE,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;MACpB;KACD,oCAAU,GAAV,UAAW,KAAc;SACvB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;SACrB,OAAO,IAAI,CAAC;MACb;KACD,8BAAI,GAAJ,UAAK,MAAY;SACf,IAAI,CAAC,KAAK,GAAG,IAAK,MAAM,CAAC,KAAK,CAAC,WAAmB,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;SACjE,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;SAChC,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;SAC1B,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC;SACpC,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;SAC9B,OAAO,IAAI,CAAC;MACb;KACD,gCAAM,GAAN,UAAO,MAAc,EAAE,SAA0B,EAAE,MAAc;SAC/D,MAAM,IAAI,IAAI,CAAC,QAAQ,CAAC;SACxB,MAAM,IAAI,SAAS,CAAC,QAAQ,CAAC;SAC7B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAG,EAAE;aAC9C,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,SAAS,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;UACtD;SACD,OAAO,IAAI,CAAC;MACb;KACD,mCAAS,GAAT,UAAU,KAA4B;SACpC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,KAAY,EAAE,CAAC,CAAC,CAAC;SAChC,OAAO,IAAI,CAAC;MACb;KACD,yCAAe,GAAf,UAAgB,MAAe;SAC7B,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;SACzB,IAAI,MAAM,GAAG,CAAC,CAAC;SACf,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAG,EAAE;aAC9C,IAAI,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;aACtB,IAAI,KAAK,KAAK,SAAS,EAAE;iBACvB,OAAO,CAAC,IAAI,CAAC,6DAA6D,EAAE,CAAC,CAAC,CAAC;iBAC/E,KAAK,GAAG,IAAI,KAAK,EAAE,CAAC;cACrB;aACD,KAAK,CAAC,MAAM,EAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;aAC3B,KAAK,CAAC,MAAM,EAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;aAC3B,KAAK,CAAC,MAAM,EAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;UAC5B;SACD,OAAO,IAAI,CAAC;MACb;KACD,0CAAgB,GAAhB,UAAiB,OAAc;SAC7B,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;SACzB,IAAI,MAAM,GAAG,CAAC,CAAC;SACf,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAG,EAAE;aAC/C,IAAM,KAAK,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;aACzB,KAAK,CAAC,MAAM,EAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;aAC3B,KAAK,CAAC,MAAM,EAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;aAC3B,KAAK,CAAC,MAAM,EAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;UAC5B;SACD,OAAO,IAAI,CAAC;MACb;KACD,2CAAiB,GAAjB,UAAkB,OAAkB;SAClC,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;SACzB,IAAI,MAAM,GAAG,CAAC,CAAC;SACf,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAG,EAAE;aAC/C,IAAI,MAAM,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;aACxB,IAAI,MAAM,KAAK,SAAS,EAAE;iBACxB,OAAO,CAAC,IAAI,CAAC,gEAAgE,EAAE,CAAC,CAAC,CAAC;iBAClF,MAAM,GAAG,IAAI,OAAO,EAAE,CAAC;cACxB;aACD,KAAK,CAAC,MAAM,EAAG,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;aAC5B,KAAK,CAAC,MAAM,EAAG,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;UAC7B;SACD,OAAO,IAAI,CAAC;MACb;KACD,2CAAiB,GAAjB,UAAkB,OAAkB;SAClC,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;SACzB,IAAI,MAAM,GAAG,CAAC,CAAC;SACf,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAG,EAAE;aAC/C,IAAI,MAAM,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;aACxB,IAAI,MAAM,KAAK,SAAS,EAAE;iBACxB,OAAO,CAAC,IAAI,CAAC,gEAAgE,EAAE,CAAC,CAAC,CAAC;iBAClF,MAAM,GAAG,IAAI,OAAO,EAAE,CAAC;cACxB;aACD,KAAK,CAAC,MAAM,EAAG,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;aAC5B,KAAK,CAAC,MAAM,EAAG,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;aAC5B,KAAK,CAAC,MAAM,EAAG,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;UAC7B;SACD,OAAO,IAAI,CAAC;MACb;KACD,2CAAiB,GAAjB,UAAkB,OAAkB;SAClC,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;SACzB,IAAI,MAAM,GAAG,CAAC,CAAC;SACf,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAG,EAAE;aAC/C,IAAI,MAAM,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;aACxB,IAAI,MAAM,KAAK,SAAS,EAAE;iBACxB,OAAO,CAAC,IAAI,CAAC,gEAAgE,EAAE,CAAC,CAAC,CAAC;iBAClF,MAAM,GAAG,IAAI,OAAO,EAAE,CAAC;cACxB;aACD,KAAK,CAAC,MAAM,EAAG,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;aAC5B,KAAK,CAAC,MAAM,EAAG,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;aAC5B,KAAK,CAAC,MAAM,EAAG,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;aAC5B,KAAK,CAAC,MAAM,EAAG,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;UAC7B;SACD,OAAO,IAAI,CAAC;MACb;KACD,6BAAG,GAAH,UAAI,KAAwB,EAAE,MAAkB;SAAlB,uBAAA,EAAA,UAAkB;SAC9C,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;SAC9B,OAAO,IAAI,CAAC;MACb;KACD,8BAAI,GAAJ,UAAK,KAAa;SAChB,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC;MAC1C;KACD,8BAAI,GAAJ,UAAK,KAAa,EAAE,CAAS;SAC3B,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;SACtC,OAAO,IAAI,CAAC;MACb;KACD,8BAAI,GAAJ,UAAK,KAAa;SAChB,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC;MAC9C;KACD,8BAAI,GAAJ,UAAK,KAAa,EAAE,CAAS;SAC3B,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;SAC1C,OAAO,IAAI,CAAC;MACb;KACD,8BAAI,GAAJ,UAAK,KAAa;SAChB,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC;MAC9C;KACD,8BAAI,GAAJ,UAAK,KAAa,EAAE,CAAS;SAC3B,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;SAC1C,OAAO,IAAI,CAAC;MACb;KACD,8BAAI,GAAJ,UAAK,KAAa;SAChB,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC;MAC9C;KACD,8BAAI,GAAJ,UAAK,KAAa,EAAE,CAAS;SAC3B,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;SAC1C,OAAO,IAAI,CAAC;MACb;KACD,+BAAK,GAAL,UAAM,KAAa,EAAE,CAAS,EAAE,CAAS;SACvC,KAAK,IAAI,IAAI,CAAC,QAAQ,CAAC;SACvB,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;SAC1B,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;SAC1B,OAAO,IAAI,CAAC;MACb;KACD,gCAAM,GAAN,UAAO,KAAa,EAAE,CAAS,EAAE,CAAS,EAAE,CAAS;SACnD,KAAK,IAAI,IAAI,CAAC,QAAQ,CAAC;SACvB,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;SAC1B,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;SAC1B,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;SAC1B,OAAO,IAAI,CAAC;MACb;KACD,iCAAO,GAAP,UAAQ,KAAa,EAAE,CAAS,EAAE,CAAS,EAAE,CAAS,EAAE,CAAS;SAC/D,KAAK,IAAI,IAAI,CAAC,QAAQ,CAAC;SACvB,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;SAC1B,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;SAC1B,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;SAC1B,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;SAC1B,OAAO,IAAI,CAAC;MACb;KACD,+BAAK,GAAL;SACE,OAAO,IAAK,IAAI,CAAC,WAAmB,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;MACnD;KACD,sBAAI,mCAAM;cAAV;aACE,OAAO,CAAC,IAAI,CAAC,wEAAwE,CAAC,CAAC;aACvF,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;UAC1B;;;QAAA;KACH,sBAAC;CAAD,CAAC,IAAA;CACD;AACA,UAAgB,aAAa,CAAC,KAAiC,EAAE,QAAgB;KAC/E,OAAO,IAAI,eAAe,CAAC,IAAI,SAAS,CAAC,KAAY,CAAC,EAAE,QAAQ,CAAC,CAAC;CACpE,CAAC;AACD,UAAgB,cAAc,CAAC,KAAiC,EAAE,QAAgB;KAChF,OAAO,IAAI,eAAe,CAAC,IAAI,UAAU,CAAC,KAAY,CAAC,EAAE,QAAQ,CAAC,CAAC;CACrE,CAAC;AACD,UAAgB,qBAAqB,CAAC,KAAiC,EAAE,QAAgB;KACvF,OAAO,IAAI,eAAe,CAAC,IAAI,iBAAiB,CAAC,KAAY,CAAC,EAAE,QAAQ,CAAC,CAAC;CAC5E,CAAC;AACD,UAAgB,cAAc,CAAC,KAAiC,EAAE,QAAgB;KAChF,OAAO,IAAI,eAAe,CAAC,IAAI,UAAU,CAAC,KAAY,CAAC,EAAE,QAAQ,CAAC,CAAC;CACrE,CAAC;AACD,UAAgB,eAAe,CAAC,KAAiC,EAAE,QAAgB;KACjF,OAAO,IAAI,eAAe,CAAC,IAAI,WAAW,CAAC,KAAY,CAAC,EAAE,QAAQ,CAAC,CAAC;CACtE,CAAC;AACD,UAAgB,cAAc,CAAC,KAAiC,EAAE,QAAgB;KAChF,OAAO,IAAI,eAAe,CAAC,IAAI,UAAU,CAAC,KAAY,CAAC,EAAE,QAAQ,CAAC,CAAC;CACrE,CAAC;AACD,UAAgB,eAAe,CAAC,KAAiC,EAAE,QAAgB;KACjF,OAAO,IAAI,eAAe,CAAC,IAAI,WAAW,CAAC,KAAY,CAAC,EAAE,QAAQ,CAAC,CAAC;CACtE,CAAC;AACD,UAAgB,gBAAgB,CAAC,KAAiC,EAAE,QAAgB;KAClF,OAAO,IAAI,eAAe,CAAC,IAAI,YAAY,CAAC,KAAY,CAAC,EAAE,QAAQ,CAAC,CAAC;CACvE,CAAC;AACD,UAAgB,gBAAgB,CAAC,KAAiC,EAAE,QAAgB;KAClF,OAAO,IAAI,eAAe,CAAC,IAAI,YAAY,CAAC,KAAY,CAAC,EAAE,QAAQ,CAAC,CAAC;CACvE,CAAC;CACD;AACA,UAAgB,sBAAsB,CAAC,KAAiB,EAAE,QAAgB;KACxE,OAAO,CAAC,IAAI,CAAC,0GAA0G,CAAC,CAAC;KACzH,OAAO,IAAI,eAAe,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;CAC/D,CAAC;;CCnOD;;;AAGA;KAOE,oCAAY,iBAAsB,EAAE,QAAgB,EAAE,MAAc,EAAE,UAAmB;SANzF,SAAI,GAAW,KAAK,CAAC,YAAY,EAAE,CAAC;SAK3B,iCAA4B,GAAY,IAAI,CAAC;SAEpD,IAAI,CAAC,IAAI,GAAG,iBAAiB,CAAC;SAC9B,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;SACzB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;SACrB,IAAI,CAAC,UAAU,GAAG,UAAU,KAAK,IAAI,CAAC;MACvC;KACD,sBAAI,6CAAK;cAAT;aACE,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;UACxB;;;QAAA;KACD,sBAAI,6CAAK;cAAT;aACE,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;UACxB;;;QAAA;KACD,yCAAI,GAAJ,UAAK,KAAa,EAAE,CAAS;SAC3B,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;SAC5D,OAAO,IAAI,CAAC;MACb;KACD,yCAAI,GAAJ,UAAK,KAAa,EAAE,CAAS;SAC3B,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;SAChE,OAAO,IAAI,CAAC;MACb;KACD,yCAAI,GAAJ,UAAK,KAAa,EAAE,CAAS;SAC3B,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;SAChE,OAAO,IAAI,CAAC;MACb;KACD,yCAAI,GAAJ,UAAK,KAAa,EAAE,CAAS;SAC3B,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;SAChE,OAAO,IAAI,CAAC;MACb;KACD,yCAAI,GAAJ,UAAK,KAAa;SAChB,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;MAChE;KACD,yCAAI,GAAJ,UAAK,KAAa;SAChB,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;MACpE;KACD,yCAAI,GAAJ,UAAK,KAAa;SAChB,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;MACpE;KACD,yCAAI,GAAJ,UAAK,KAAa;SAChB,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;MACpE;KACD,0CAAK,GAAL,UAAM,KAAa,EAAE,CAAS,EAAE,CAAS;SACvC,KAAK,GAAG,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;SAC/C,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;SAC/B,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;SAC/B,OAAO,IAAI,CAAC;MACb;KACD,2CAAM,GAAN,UAAO,KAAa,EAAE,CAAS,EAAE,CAAS,EAAE,CAAS;SACnD,KAAK,GAAG,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;SAC/C,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;SAC/B,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;SAC/B,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;SAC/B,OAAO,IAAI,CAAC;MACb;KACD,4CAAO,GAAP,UAAQ,KAAa,EAAE,CAAS,EAAE,CAAS,EAAE,CAAS,EAAE,CAAS;SAC/D,KAAK,GAAG,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;SAC/C,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;SAC/B,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;SAC/B,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;SAC/B,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;SAC/B,OAAO,IAAI,CAAC;MACb;KACH,iCAAC;CAAD,CAAC;;CC9DD;;;CAGA;KAAoCa,kCAAe;KAwBjD;SAAA,YACE,iBAAO,SACR;SAzBD,QAAE,GAAW,eAAe,EAAE,CAAC;SAC/B,UAAI,GAAW,KAAK,CAAC,YAAY,EAAE,CAAC;SACpC,UAAI,GAAW,EAAE,CAAC;SAClB,UAAI,GAAW,gBAAgB,CAAC;SAChC,aAAO,GAAa,EAAE,CAAC;SACvB,cAAQ,GAAc,EAAE,CAAC;SACzB,aAAO,GAAc,EAAE,CAAC;SACxB,YAAM,GAAY,EAAE,CAAC;SACrB,SAAG,GAAc,EAAE,CAAC;SACpB,UAAI,GAAc,EAAE,CAAC;SACrB,YAAM,GAAU,EAAE,CAAC;SACnB,kBAAY,GAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,MAAM,EAAE,SAAS,EAAE,CAAC;SAC/D,iBAAW,GAAc,EAAE,CAAC;SAC5B,iBAAW,GAAc,EAAE,CAAC;;SAE5B,iBAAW,GAAS,IAAI,CAAC;SACzB,oBAAc,GAAW,IAAI,CAAC;;SAE9B,wBAAkB,GAAY,KAAK,CAAC;SACpC,uBAAiB,GAAY,KAAK,CAAC;SACnC,sBAAgB,GAAY,KAAK,CAAC;SAClC,mBAAa,GAAY,KAAK,CAAC;SAC/B,sBAAgB,GAAY,KAAK,CAAC;;MAGjC;KACD,2CAAkB,GAAlB;SACE,IAAI,IAAI,CAAC,WAAW,KAAK,IAAI,EAAE;aAC7B,IAAI,CAAC,WAAW,GAAG,IAAI,IAAI,EAAE,CAAC;UAC/B;SACD,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;MAC/C;KACD,8CAAqB,GAArB;SACE,IAAI,IAAI,CAAC,cAAc,KAAK,IAAI,EAAE;aAChC,IAAI,CAAC,cAAc,GAAG,IAAI,MAAM,EAAE,CAAC;UACpC;SACD,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;MAClD;KACD,2CAAkB,GAAlB;SACE,OAAO,CAAC,IAAI,CAAC,sFAAsF,CAAC,CAAC;MACtG;KACD,6CAAoB,GAApB;SACE,OAAO,CAAC,IAAI,CAAC,wFAAwF,CAAC,CAAC;MACxG;KACD,sCAAa,GAAb,UAAc,QAAkB;SAC9B,IAAI,KAAU,CAAC;SACf,IAAM,MAAM,GAAG,EAAE,CAAC;SAClB,IAAI,aAAa,CAAC;SAClB,IAAM,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC;SAC7B,IAAI,CAAC,CAAC;SACN,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAG,EAAE;aAClC,IAAM,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;;aAEtB,IAAI,IAAI,CAAC,aAAa,KAAK,aAAa,EAAE;iBACxC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC;iBACnC,IAAI,KAAK,KAAK,SAAS,EAAE;qBACvB,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,KAAK,CAAC,KAAK,CAAC;qBACpC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;kBACpB;iBACD,KAAK,GAAG;qBACN,KAAK,EAAE,CAAC,GAAG,CAAC;qBACZ,aAAa,EAAE,aAAa;kBAC7B,CAAC;cACH;UACF;SACD,IAAI,KAAK,KAAK,SAAS,EAAE;aACvB,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,KAAK,CAAC,KAAK,CAAC;aACpC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;UACpB;SACD,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;MACtB;KACD,qCAAY,GAAZ,UAAa,QAAkB;SAC7B,IAAM,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC;SAC7B,IAAM,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC;SACnC,IAAM,aAAa,GAAG,QAAQ,CAAC,aAAa,CAAC;SAC7C,IAAM,eAAe,GAAG,aAAa,CAAC,CAAC,CAAC,IAAI,aAAa,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;SACxE,IAAM,gBAAgB,GAAG,aAAa,CAAC,CAAC,CAAC,IAAI,aAAa,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;;SAEzE,IAAM,YAAY,GAAG,QAAQ,CAAC,YAAY,CAAC;SAC3C,IAAM,kBAAkB,GAAG,YAAY,CAAC,MAAM,CAAC;SAC/C,IAAI,oBAAoB,CAAC;SACzB,IAAI,kBAAkB,GAAG,CAAC,EAAE;aAC1B,oBAAoB,GAAG,EAAE,CAAC;aAC1B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,kBAAkB,EAAE,CAAC,EAAG,EAAE;iBAC5C,oBAAoB,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;cAC9B;aACD,IAAI,CAAC,YAAY,CAAC,QAAQ,GAAG,oBAAoB,CAAC;UACnD;SACD,IAAM,YAAY,GAAG,QAAQ,CAAC,YAAY,CAAC;SAC3C,IAAM,kBAAkB,GAAG,YAAY,CAAC,MAAM,CAAC;SAC/C,IAAI,kBAAkB,CAAC;SACvB,IAAI,kBAAkB,GAAG,CAAC,EAAE;aAC1B,kBAAkB,GAAG,EAAE,CAAC;aACxB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,kBAAkB,EAAE,CAAC,EAAG,EAAE;iBAC5C,kBAAkB,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;cAC5B;aACD,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,kBAAkB,CAAC;UAC/C;;SAED,IAAM,WAAW,GAAG,QAAQ,CAAC,WAAW,CAAC;SACzC,IAAM,WAAW,GAAG,QAAQ,CAAC,WAAW,CAAC;SACzC,IAAM,cAAc,GAAG,WAAW,CAAC,MAAM,KAAK,QAAQ,CAAC,MAAM,CAAC;SAC9D,IAAM,cAAc,GAAG,WAAW,CAAC,MAAM,KAAK,QAAQ,CAAC,MAAM,CAAC;;SAE9D,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAG,EAAE;aACtC,IAAM,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;aACtB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;aACzE,IAAM,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC;aACzC,IAAI,aAAa,CAAC,MAAM,KAAK,CAAC,EAAE;iBAC9B,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,EAAE,aAAa,CAAC,CAAC,CAAC,EAAE,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;cACzE;kBAAM;iBACL,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;iBAC3B,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;cAC3C;aACD,IAAM,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;aACvC,IAAI,YAAY,CAAC,MAAM,KAAK,CAAC,EAAE;iBAC7B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,EAAE,YAAY,CAAC,CAAC,CAAC,EAAE,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;cACrE;kBAAM;iBACL,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;iBACzB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;cACvC;aACD,IAAI,eAAe,KAAK,IAAI,EAAE;iBAC5B,IAAM,SAAS,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;iBACtC,IAAI,SAAS,KAAK,SAAS,EAAE;qBAC3B,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;kBACzD;sBAAM;qBACL,OAAO,CAAC,IAAI,CAAC,0DAA0D,EAAE,CAAC,CAAC,CAAC;qBAC5E,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,OAAO,EAAE,EAAE,IAAI,OAAO,EAAE,EAAE,IAAI,OAAO,EAAE,CAAC,CAAC;kBAC5D;cACF;aACD,IAAI,gBAAgB,KAAK,IAAI,EAAE;iBAC7B,IAAM,SAAS,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;iBACtC,IAAI,SAAS,KAAK,SAAS,EAAE;qBAC3B,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;kBAC1D;sBAAM;qBACL,OAAO,CAAC,IAAI,CAAC,2DAA2D,EAAE,CAAC,CAAC,CAAC;qBAC7E,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,OAAO,EAAE,EAAE,IAAI,OAAO,EAAE,EAAE,IAAI,OAAO,EAAE,CAAC,CAAC;kBAC7D;cACF;;aAED,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,kBAAkB,EAAE,CAAC,EAAG,EAAE;iBAC5C,IAAM,WAAW,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;iBAC7C,oBAAoB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;cAC7F;aACD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,kBAAkB,EAAE,CAAC,EAAG,EAAE;iBAC5C,IAAM,WAAW,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;iBACrD,kBAAkB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,CAAC,CAAC;cACzE;;aAED,IAAI,cAAc,EAAE;iBAClB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;cACtF;aACD,IAAI,cAAc,EAAE;iBAClB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;cACtF;UACF;SACD,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;SAC7B,IAAI,CAAC,kBAAkB,GAAG,QAAQ,CAAC,kBAAkB,CAAC;SACtD,IAAI,CAAC,iBAAiB,GAAG,QAAQ,CAAC,iBAAiB,CAAC;SACpD,IAAI,CAAC,gBAAgB,GAAG,QAAQ,CAAC,gBAAgB,CAAC;SAClD,IAAI,CAAC,aAAa,GAAG,QAAQ,CAAC,aAAa,CAAC;SAC5C,IAAI,CAAC,gBAAgB,GAAG,QAAQ,CAAC,gBAAgB,CAAC;SAClD,OAAO,IAAI,CAAC;MACb;KACD,gCAAO,GAAP;SACE,IAAI,CAAC,aAAa,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,CAAC,CAAC;MACzC;KACH,qBAAC;CAAD,CAxKA,CAAoC,eAAe,GAwKlD;;;KC7JmCA,kCAAQ;KAE1C,wBAAY,UAAqC;SAAjD,YACE,iBAAO,SAQR;SAVQ,sBAAgB,GAAY,IAAI,CAAC;SAGxC,KAAI,CAAC,IAAI,GAAG,gBAAgB,CAAC;SAC7B,KAAI,CAAC,KAAK,GAAG,IAAI,KAAK,CAAC,QAAQ,CAAC,CAAC;SACjC,KAAI,CAAC,GAAG,GAAG,IAAI,CAAC;SAChB,KAAI,CAAC,IAAI,GAAG,CAAC,CAAC;SACd,KAAI,CAAC,eAAe,GAAG,IAAI,CAAC;SAC5B,KAAI,CAAC,MAAM,GAAG,KAAK,CAAC;SACpB,KAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;;MAC5B;KACD,6BAAI,GAAJ,UAAK,MAAY;SACf,iBAAM,IAAI,YAAC,MAAM,CAAC,CAAC;SACnB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;SAC9B,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC;SACtB,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;SACxB,IAAI,CAAC,eAAe,GAAG,MAAM,CAAC,eAAe,CAAC;SAC9C,OAAO,IAAI,CAAC;MACb;KACH,qBAAC;CAAD,CApBA,CAAoC,QAAQ;;CCd5C;;;AAGA;KAA4BA,0BAAQ;KAElC,gBAAY,QAA0D,EAAE,QAA4E;SAAxI,yBAAA,EAAA,eAA0C,cAAc,EAAE;SAAE,yBAAA,EAAA,eAAyB,cAAc,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,MAAM,EAAE,GAAG,QAAQ,EAAE,CAAC;SAApJ,YACE,iBAAO,SAIR;SANQ,cAAQ,GAAY,IAAI,CAAC;SAGhC,KAAI,CAAC,IAAI,GAAG,QAAQ,CAAC;SACrB,KAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;SACzB,KAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;;MAC1B;KACD,wBAAO,GAAP,UAAQ,SAAoB,EAAE,UAAuB;SACnD,IAAM,aAAa,GAAG,IAAI,OAAO,EAAE,CAAC;SACpC,IAAM,GAAG,GAAG,IAAI,GAAG,EAAE,CAAC;SACtB,IAAM,MAAM,GAAG,IAAI,MAAM,EAAE,CAAC;;SAE1B,IAAM,MAAM,GAAG,IAAI,CAAC;SACpB,IAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;SAC/B,IAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;SACrC,IAAM,SAAS,GAAG,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC;;SAEpD,IAAI,QAAQ,CAAC,cAAc,KAAK,IAAI;aAAE,QAAQ,CAAC,qBAAqB,EAAE,CAAC;SACvE,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC;SACrC,MAAM,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC;SACjC,IAAI,SAAS,CAAC,GAAG,CAAC,gBAAgB,CAAC,MAAM,CAAC,KAAK,KAAK;aAAE,OAAO,UAAU,CAAC;;SAExE,aAAa,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;SACtC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,YAAY,CAAC,aAAa,CAAC,CAAC;SACpD,IAAM,cAAc,GAAG,SAAS,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;SACtF,IAAM,gBAAgB,GAAG,cAAc,GAAG,cAAc,CAAC;SACzD,IAAM,QAAQ,GAAG,IAAI,OAAO,EAAE,CAAC;SAC/B,SAAS,SAAS,CAAC,KAAc,EAAE,KAAa;aAC9C,IAAM,kBAAkB,GAAG,GAAG,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;aACxD,IAAI,kBAAkB,GAAG,gBAAgB,EAAE;iBACzC,IAAM,cAAc,GAAG,GAAG,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC;iBACtD,cAAc,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC;iBACzC,IAAM,QAAQ,GAAG,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC;iBACjE,IAAI,QAAQ,GAAG,SAAS,CAAC,IAAI,IAAI,QAAQ,GAAG,SAAS,CAAC,GAAG;qBAAE,OAAO;iBAClE,UAAU,CAAC,IAAI,CAAC;qBACd,QAAQ,EAAE,QAAQ;qBAClB,aAAa,EAAE,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC;qBAC5C,KAAK,EAAE,cAAc,CAAC,KAAK,EAAE;qBAC7B,KAAK,EAAE,KAAK;qBACZ,IAAI,EAAE,IAAI;qBACV,MAAM,EAAE,MAAM;kBACf,CAAC,CAAC;cACJ;UACF;SACD,KAAK,QAAQ,IAAI,QAAQ,YAAY,cAAc,GAAG;aACpD,IAAM,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC;aAC7B,IAAM,UAAU,GAAG,QAAQ,CAAC,UAAU,CAAC;aACvC,IAAM,SAAS,GAAG,UAAU,CAAC,QAAQ,CAAC,KAAK,CAAC;aAC5C,IAAI,KAAK,KAAK,IAAI,EAAE;iBAClB,IAAM,OAAO,GAAG,KAAK,CAAC,KAAK,CAAC;iBAC5B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAG,EAAE;qBACjD,IAAM,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;qBACrB,QAAQ,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;qBACrC,SAAS,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;kBACxB;cACF;kBAAM;iBACL,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAG,EAAE;qBACrD,QAAQ,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;qBACrC,SAAS,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;kBACxB;cACF;UACF;cAAM,IAAI,QAAQ,IAAI,QAAQ,YAAY,QAAQ,EAAE;aACnD,IAAM,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC;aACnC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAG,EAAE;iBAChD,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;cAC3B;UACF;SACD,OAAO,UAAU,CAAC;;MAErB;KACD,sBAAK,GAAL;SACE,OAAO,IAAK,IAAI,CAAC,WAAmB,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;MAC/E;KACH,aAAC;CAAD,CA1EA,CAA4B,QAAQ;;;KCYGA,qCAAQ;KAK7C,2BAAY,UAAwC;SAApD,YACE,iBAAO,SAQR;SAVQ,yBAAmB,GAAY,IAAI,CAAC;SAG3C,KAAI,CAAC,IAAI,GAAG,mBAAmB,CAAC;SAChC,KAAI,CAAC,KAAK,GAAG,IAAI,KAAK,CAAC,QAAQ,CAAC,CAAC;SACjC,KAAI,CAAC,SAAS,GAAG,CAAC,CAAC;SACnB,KAAI,CAAC,OAAO,GAAG,OAAO,CAAC;SACvB,KAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;SACxB,KAAI,CAAC,MAAM,GAAG,KAAK,CAAC;SACpB,KAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;;MAC5B;KACD,gCAAI,GAAJ,UAAK,MAAY;SACf,iBAAM,IAAI,YAAC,MAAM,CAAC,CAAC;SACnB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;SAC9B,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;SAClC,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;SAC9B,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;SAChC,OAAO,IAAI,CAAC;MACb;KACH,wBAAC;CAAD,CAvBA,CAAuC,QAAQ;;CCf/C;;;AAGA;KAA0BA,wBAAQ;KAIhC,cAAY,QAA0D,EAAE,QAA+E,EAAE,IAAa;SAA1J,yBAAA,EAAA,eAA0C,cAAc,EAAE;SAAE,yBAAA,EAAA,eAAyB,iBAAiB,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,MAAM,EAAE,GAAG,QAAQ,EAAE,CAAC;SAAvJ,YACE,iBAAO,SAQR;SAZS,WAAK,GAAW,CAAC,CAAC;SACnB,YAAM,GAAY,IAAI,CAAC;SACvB,oBAAc,GAAY,KAAK,CAAC;SAGvC,IAAI,IAAI,KAAK,CAAC,EAAE;aACd,OAAO,CAAC,IAAI,CAAC,iGAAiG,CAAC,CAAC;;UAEjH;SACD,KAAI,CAAC,IAAI,GAAG,MAAM,CAAC;SACnB,KAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;SACzB,KAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;;MAC1B;KACD,sBAAO,GAAP,UAAQ,SAAoB,EAAE,UAAuB;SACnD,IAAI,aAAa,GAAG,IAAI,OAAO,EAAE,CAAC;SAClC,IAAI,GAAG,GAAG,IAAI,GAAG,EAAE,CAAC;SACpB,IAAI,MAAM,GAAG,IAAI,MAAM,EAAE,CAAC;;SAExB,IAAI,SAAS,GAAG,SAAS,CAAC,aAAa,CAAC;SACxC,IAAI,WAAW,GAAG,SAAS,GAAG,SAAS,CAAC;SACxC,IAAI,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;SAC7B,IAAI,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;;SAEnC,IAAI,QAAQ,CAAC,cAAc,KAAK,IAAI;aAAE,QAAQ,CAAC,qBAAqB,EAAE,CAAC;SACvE,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC;SACrC,MAAM,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC;SACjC,IAAI,SAAS,CAAC,GAAG,CAAC,gBAAgB,CAAC,MAAM,CAAC,KAAK,KAAK;aAAE,OAAO,UAAU,CAAC;;SAExE,aAAa,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;SACtC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,YAAY,CAAC,aAAa,CAAC,CAAC;SACpD,IAAI,MAAM,GAAG,IAAI,OAAO,EAAE,CAAC;SAC3B,IAAI,IAAI,GAAG,IAAI,OAAO,EAAE,CAAC;SACzB,IAAI,YAAY,GAAG,IAAI,OAAO,EAAE,CAAC;SACjC,IAAI,QAAQ,GAAG,IAAI,OAAO,EAAE,CAAC;SAC7B,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC;SACtB,KAAK,QAAQ,IAAI,QAAQ,YAAY,cAAc,GAAG;aACpD,IAAI,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC;aAC3B,IAAI,UAAU,GAAG,QAAQ,CAAC,UAAU,CAAC;aACrC,IAAI,SAAS,GAAG,UAAU,CAAC,QAAQ,CAAC,KAAK,CAAC;aAC1C,IAAI,KAAK,KAAK,IAAI,EAAE;iBAClB,IAAI,OAAO,GAAG,KAAK,CAAC,KAAK,CAAC;iBAC1B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,IAAI,EAAE;qBACxD,IAAI,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;qBACnB,IAAI,CAAC,GAAG,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;qBACvB,MAAM,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;qBACnC,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;qBACjC,IAAI,MAAM,GAAG,GAAG,CAAC,mBAAmB,CAAC,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,YAAY,CAAC,CAAC;qBAC3E,IAAI,MAAM,GAAG,WAAW;yBAAE,SAAS;qBACnC,QAAQ,CAAC,YAAY,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;qBACxC,IAAI,QAAQ,GAAG,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;qBACzD,IAAI,QAAQ,GAAG,SAAS,CAAC,IAAI,IAAI,QAAQ,GAAG,SAAS,CAAC,GAAG;yBAAE,SAAS;qBACpE,UAAU,CAAC,IAAI,CAAC;yBACd,QAAQ,EAAE,QAAQ;;;yBAGlB,KAAK,EAAE,YAAY,CAAC,KAAK,EAAE,CAAC,YAAY,CAAC,IAAI,CAAC,WAAW,CAAC;yBAC1D,KAAK,EAAE,CAAC;yBACR,IAAI,EAAE,IAAI;yBACV,SAAS,EAAE,IAAI;yBACf,MAAM,EAAE,IAAI;sBACb,CAAC,CAAC;kBACJ;cACF;kBAAM;iBACL,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,IAAI,EAAE;qBAC9D,MAAM,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;qBACnC,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;qBACrC,IAAI,MAAM,GAAG,GAAG,CAAC,mBAAmB,CAAC,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,YAAY,CAAC,CAAC;qBAC3E,IAAI,MAAM,GAAG,WAAW;yBAAE,SAAS;qBACnC,QAAQ,CAAC,YAAY,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;qBACxC,IAAI,QAAQ,GAAG,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;qBACzD,IAAI,QAAQ,GAAG,SAAS,CAAC,IAAI,IAAI,QAAQ,GAAG,SAAS,CAAC,GAAG;yBAAE,SAAS;qBACpE,UAAU,CAAC,IAAI,CAAC;yBACd,QAAQ,EAAE,QAAQ;;;yBAGlB,KAAK,EAAE,YAAY,CAAC,KAAK,EAAE,CAAC,YAAY,CAAC,IAAI,CAAC,WAAW,CAAC;yBAC1D,KAAK,EAAE,CAAC;yBACR,IAAI,EAAE,IAAI;yBACV,SAAS,EAAE,IAAI;yBACf,MAAM,EAAE,IAAI;sBACb,CAAC,CAAC;kBACJ;cACF;UACF;cAAM,KAAK,QAAQ,IAAI,QAAQ,YAAY,QAAQ,GAAG;aACrD,IAAI,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC;aACjC,IAAI,UAAU,GAAG,QAAQ,CAAC,MAAM,CAAC;aACjC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,GAAG,CAAC,EAAE,CAAC,IAAI,IAAI,EAAE;iBAC7C,IAAI,MAAM,GAAG,GAAG,CAAC,mBAAmB,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,QAAQ,EAAE,YAAY,CAAC,CAAC;iBAC3F,IAAI,MAAM,GAAG,WAAW;qBAAE,SAAS;iBACnC,QAAQ,CAAC,YAAY,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;iBACxC,IAAI,QAAQ,GAAG,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;iBACzD,IAAI,QAAQ,GAAG,SAAS,CAAC,IAAI,IAAI,QAAQ,GAAG,SAAS,CAAC,GAAG;qBAAE,SAAS;iBACpE,UAAU,CAAC,IAAI,CAAC;qBACd,QAAQ,EAAE,QAAQ;;;qBAGlB,KAAK,EAAE,YAAY,CAAC,KAAK,EAAE,CAAC,YAAY,CAAC,IAAI,CAAC,WAAW,CAAC;qBAC1D,KAAK,EAAE,CAAC;qBACR,IAAI,EAAE,IAAI;qBACV,SAAS,EAAE,IAAI;qBACf,MAAM,EAAE,IAAI;kBACb,CAAC,CAAC;cACJ;UACF;SACD,OAAO,UAAU,CAAC;;MAErB;KACD,oBAAK,GAAL;SACE,OAAO,IAAK,IAAI,CAAC,WAAmB,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;MAC/E;KACH,WAAC;CAAD,CA/GA,CAA0B,QAAQ;;;KCgBEA,kCAAe;KAiCjD;SAAA,YACE,iBAAO,SACR;SAlCD,QAAE,GAAW,eAAe,EAAE,CAAC;SAC/B,UAAI,GAAW,KAAK,CAAC,YAAY,EAAE,CAAC;SACpC,UAAI,GAAW,EAAE,CAAC;SAClB,UAAI,GAAW,gBAAgB,CAAC;SAChC,WAAK,GAAoB,IAAI,CAAC;SAC9B,gBAAU,GAAQ;;;;;;;UAOjB,CAAC;SACF,gBAAU,GAAQ,SAAS,CAAC;SAG5B,qBAAe,GAAQ,EAAE,CAAC;SAC1B,YAAM,GAA0B,EAAE,CAAC;SACnC,iBAAW,GAAS,IAAI,CAAC;SACzB,oBAAc,GAAW,IAAI,CAAC;SAC9B,eAAS,GAAwB,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE,CAAC;;SAStD,gBAAU,GAAY,KAAK,CAAC;SAC5B,sBAAgB,GAAY,IAAI,CAAC;;MAIzC;KACD,iCAAQ,GAAR;SACE,OAAO,IAAI,CAAC,KAAK,CAAC;MACnB;KACD,iCAAQ,GAAR,UAAS,KAAsB;SAC7B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;MACpB;KACD,qCAAY,GAAZ,UAAa,IAAY,EAAE,SAA0B;SACnD,IAAI,CAAC,SAAS,IAAI,SAAS,YAAY,eAAe,MAAM,KAAK,IAAI,CAAC,SAAS,IAAI,SAAS,YAAY,0BAA0B,MAAM,KAAK,EAAE;aAC7I,OAAO,CAAC,IAAI,CAAC,sEAAsE,CAAC,CAAC;aACrF,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,IAAI,eAAe,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;aACzE,OAAO,IAAI,CAAC;UACb;SACD,IAAI,IAAI,KAAK,OAAO,EAAE;aACpB,OAAO,CAAC,IAAI,CAAC,yEAAyE,CAAC,CAAC;aACxF,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;aACzB,OAAO,IAAI,CAAC;UACb;SACD,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,SAAS,CAAC;SAClC,OAAO,IAAI,CAAC;MACb;KACD,qCAAY,GAAZ,UAAa,IAAY;SACvB,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;MAC9B;KACD,wCAAe,GAAf,UAAgB,IAAY;SAC1B,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;SAC7B,OAAO,IAAI,CAAC;MACb;KACD,iCAAQ,GAAR,UAAS,KAAa,EAAE,KAAa,EAAE,aAAyB;SAAzB,8BAAA,EAAA,iBAAyB;SAC9D,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;aACf,KAAK,EAAE,KAAK;aACZ,KAAK,EAAE,KAAK;aACZ,aAAa,EAAE,aAAa;UAC7B,CAAC,CAAC;MACJ;KACD,oCAAW,GAAX;SACE,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;MAClB;KACD,qCAAY,GAAZ,UAAa,KAAa,EAAE,KAAa;SACvC,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,KAAK,CAAC;SAC7B,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,KAAK,CAAC;MAC9B;KACD,oCAAW,GAAX,UAAY,MAAe;SACzB,IAAM,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC;SAC1C,IAAI,QAAQ,KAAK,SAAS,EAAE;aAC1B,MAAM,CAAC,mBAAmB,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;aAC3C,QAAQ,CAAC,WAAW,GAAG,IAAI,CAAC;UAC7B;SACD,IAAM,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC;SACtC,IAAI,MAAM,KAAK,SAAS,EAAE;aACxB,IAAM,YAAY,GAAG,IAAI,OAAO,EAAE,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;aAC3D,YAAY,CAAC,mBAAmB,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;aAC/C,MAAM,CAAC,WAAW,GAAG,IAAI,CAAC;UAC3B;SACD,IAAI,IAAI,CAAC,WAAW,KAAK,IAAI,EAAE;aAC7B,IAAI,CAAC,kBAAkB,EAAE,CAAC;UAC3B;SACD,IAAI,IAAI,CAAC,cAAc,KAAK,IAAI,EAAE;aAChC,IAAI,CAAC,qBAAqB,EAAE,CAAC;UAC9B;SACD,OAAO,IAAI,CAAC;MACb;KACD,gCAAO,GAAP,UAAQ,KAAa;;SAEnB,IAAM,EAAE,GAAG,IAAI,OAAO,EAAE,CAAC;;SAEvB,EAAE,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;SACxB,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;SACrB,OAAO,IAAI,CAAC;;MAEf;KACD,gCAAO,GAAP,UAAQ,KAAa;;SAEnB,IAAM,EAAE,GAAG,IAAI,OAAO,EAAE,CAAC;;SAEvB,EAAE,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;SACxB,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;SACrB,OAAO,IAAI,CAAC;;MAEf;KACD,gCAAO,GAAP,UAAQ,KAAa;;SAEnB,IAAM,EAAE,GAAG,IAAI,OAAO,EAAE,CAAC;;SAEvB,EAAE,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;SACxB,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;SACrB,OAAO,IAAI,CAAC;;MAEf;KACD,kCAAS,GAAT,UAAU,CAAS,EAAE,CAAS,EAAE,CAAS;;SAEvC,IAAM,EAAE,GAAG,IAAI,OAAO,EAAE,CAAC;;SAEvB,EAAE,CAAC,eAAe,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;SAC5B,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;SACrB,OAAO,IAAI,CAAC;;MAEf;KACD,8BAAK,GAAL,UAAM,CAAS,EAAE,CAAS,EAAE,CAAS;;SAEnC,IAAM,EAAE,GAAG,IAAI,OAAO,EAAE,CAAC;;SAEvB,EAAE,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;SACtB,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;SACrB,OAAO,IAAI,CAAC;;MAEf;KACD,+BAAM,GAAN,UAAO,MAAe;SACpB,IAAM,GAAG,GAAG,IAAI,QAAQ,EAAE,CAAC;;SAEzB,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;SACnB,GAAG,CAAC,YAAY,EAAE,CAAC;SACnB,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;;MAEhC;KACD,+BAAM,GAAN;SACE,IAAI,CAAC,kBAAkB,EAAE,CAAC;SAC1B,IAAM,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC,MAAM,EAAE,CAAC;SACrD,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC;SAC7C,OAAO,MAAM,CAAC;MACf;KACD,sCAAa,GAAb,UAAc,MAAW;;SAEvB,IAAM,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;SACjC,IAAI,CAAC,MAAM,IAAI,MAAM,YAAY,MAAM,MAAM,MAAM,IAAI,MAAM,YAAY,IAAI,CAAC,EAAE;aAC9E,IAAM,SAAS,GAAG,gBAAgB,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;aACpE,IAAM,MAAM,GAAG,gBAAgB,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;aAC/D,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,SAAS,CAAC,iBAAiB,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;aAC9E,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,MAAM,CAAC,eAAe,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;aACpE,IAAI,QAAQ,CAAC,aAAa,IAAI,QAAQ,CAAC,aAAa,CAAC,MAAM,KAAK,QAAQ,CAAC,QAAQ,CAAC,MAAM,EAAE;iBACxF,IAAM,aAAa,GAAG,gBAAgB,CAAC,QAAQ,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;iBACzE,IAAI,CAAC,YAAY,CAAC,cAAc,EAAE,aAAa,CAAC,SAAS,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,CAAC;cACpF;aACD,IAAI,QAAQ,CAAC,cAAc,KAAK,IAAI,EAAE;iBACpC,IAAI,CAAC,cAAc,GAAG,QAAQ,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;cACvD;aACD,IAAI,QAAQ,CAAC,WAAW,KAAK,IAAI,EAAE;iBACjC,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;cACjD;UACF;cAAM,KAAK,MAAM,IAAI,MAAM,YAAY,IAAI,GAAG;aAC7C,KAAK,QAAQ,IAAI,QAAQ,YAAY,QAAQ,GAAG;iBAC9C,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;cAC7B;UACF;SACD,OAAO,IAAI,CAAC;MACb;KACD,yCAAgB,GAAhB,UAAiB,MAAW;SAC1B,IAAI,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;SAC/B,KAAK,MAAM,IAAI,MAAM,YAAY,IAAI,GAAG;aACtC,IAAI,MAAM,GAAG,QAAQ,CAAC,gBAAgB,CAAC;aACvC,IAAI,QAAQ,CAAC,kBAAkB,KAAK,IAAI,EAAE;iBACxC,MAAM,GAAG,SAAS,CAAC;iBACnB,QAAQ,CAAC,kBAAkB,GAAG,KAAK,CAAC;cACrC;aACD,IAAI,MAAM,KAAK,SAAS,EAAE;iBACxB,OAAO,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;cACpC;aACD,MAAM,CAAC,kBAAkB,GAAG,QAAQ,CAAC,kBAAkB,CAAC;aACxD,MAAM,CAAC,iBAAiB,GAAG,QAAQ,CAAC,iBAAiB,CAAC;aACtD,MAAM,CAAC,gBAAgB,GAAG,QAAQ,CAAC,gBAAgB,CAAC;aACpD,MAAM,CAAC,aAAa,GAAG,QAAQ,CAAC,aAAa,CAAC;aAC9C,MAAM,CAAC,gBAAgB,GAAG,QAAQ,CAAC,gBAAgB,CAAC;aACpD,QAAQ,CAAC,kBAAkB,GAAG,KAAK,CAAC;aACpC,QAAQ,CAAC,iBAAiB,GAAG,KAAK,CAAC;aACnC,QAAQ,CAAC,gBAAgB,GAAG,KAAK,CAAC;aAClC,QAAQ,CAAC,aAAa,GAAG,KAAK,CAAC;aAC/B,QAAQ,CAAC,gBAAgB,GAAG,KAAK,CAAC;aAClC,QAAQ,GAAG,MAAM,CAAC;UACnB;SACD,IAAI,SAAS,CAAC;SACd,IAAI,QAAQ,CAAC,kBAAkB,KAAK,IAAI,EAAE;aACxC,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC;aACrC,IAAI,SAAS,KAAK,SAAS,EAAE;iBAC3B,SAAS,CAAC,iBAAiB,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;iBAC/C,SAAS,CAAC,WAAW,GAAG,IAAI,CAAC;cAC9B;aACD,QAAQ,CAAC,kBAAkB,GAAG,KAAK,CAAC;UACrC;SACD,IAAI,QAAQ,CAAC,iBAAiB,KAAK,IAAI,EAAE;aACvC,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC;aACnC,IAAI,SAAS,KAAK,SAAS,EAAE;iBAC3B,SAAS,CAAC,iBAAiB,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;iBAC9C,SAAS,CAAC,WAAW,GAAG,IAAI,CAAC;cAC9B;aACD,QAAQ,CAAC,iBAAiB,GAAG,KAAK,CAAC;UACpC;SACD,IAAI,QAAQ,CAAC,gBAAgB,KAAK,IAAI,EAAE;aACtC,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC;aAClC,IAAI,SAAS,KAAK,SAAS,EAAE;iBAC3B,SAAS,CAAC,eAAe,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;iBAC3C,SAAS,CAAC,WAAW,GAAG,IAAI,CAAC;cAC9B;aACD,QAAQ,CAAC,gBAAgB,GAAG,KAAK,CAAC;UACnC;SACD,IAAI,QAAQ,CAAC,aAAa,EAAE;aAC1B,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC;aAC/B,IAAI,SAAS,KAAK,SAAS,EAAE;iBAC3B,SAAS,CAAC,iBAAiB,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;iBAC1C,SAAS,CAAC,WAAW,GAAG,IAAI,CAAC;cAC9B;aACD,QAAQ,CAAC,aAAa,GAAG,KAAK,CAAC;UAChC;SACD,IAAI,QAAQ,CAAC,uBAAuB,EAAE;aACpC,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC;aACzC,IAAI,SAAS,KAAK,SAAS,EAAE;iBAC3B,SAAS,CAAC,SAAS,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;iBAC5C,SAAS,CAAC,WAAW,GAAG,IAAI,CAAC;cAC9B;aACD,QAAQ,CAAC,uBAAuB,GAAG,KAAK,CAAC;UAC1C;SACD,IAAI,QAAQ,CAAC,gBAAgB,EAAE;aAC7B,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;aACxC,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC;aAC9B,QAAQ,CAAC,gBAAgB,GAAG,KAAK,CAAC;UACnC;SACD,OAAO,IAAI,CAAC;MACb;KACD,qCAAY,GAAZ,UAAa,QAAa;SACxB,QAAQ,CAAC,gBAAgB,GAAG,IAAI,cAAc,EAAE,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;SACxE,OAAO,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,gBAAgB,CAAC,CAAC;MAC3D;KACD,2CAAkB,GAAlB,UAAmB,QAAa;SAC9B,IAAM,SAAS,GAAG,IAAI,YAAY,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;SACjE,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,IAAI,eAAe,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,iBAAiB,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;SACtG,IAAI,QAAQ,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;aAC/B,IAAM,OAAO,GAAG,IAAI,YAAY,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;aAC9D,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,IAAI,eAAe,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,iBAAiB,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;UAClG;SACD,IAAI,QAAQ,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;aAC9B,IAAM,MAAM,GAAG,IAAI,YAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;aAC5D,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,IAAI,eAAe,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,eAAe,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;UAC7F;SACD,IAAI,QAAQ,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,EAAE;aAC3B,IAAM,GAAG,GAAG,IAAI,YAAY,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;aACtD,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,IAAI,eAAe,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,iBAAiB,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;UACtF;SACD,IAAI,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;aAC5B,IAAM,IAAI,GAAG,IAAI,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;aACxD,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,IAAI,eAAe,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,iBAAiB,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;UACzF;SACD,IAAI,QAAQ,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;aAC/B,IAAM,SAAS,GAAG,QAAQ,CAAC,QAAQ,CAAC,MAAM,GAAG,KAAK,GAAG,WAAW,GAAG,WAAW,CAAC;aAC/E,IAAM,OAAO,GAAG,IAAI,SAAS,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;aAC3D,IAAI,CAAC,QAAQ,CAAC,IAAI,eAAe,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,gBAAgB,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;UACnF;;SAED,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC;;SAE9B,KAAK,IAAI,IAAI,IAAI,QAAQ,CAAC,YAAY,EAAE;aACtC,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,IAAI,CAAC;iBAAE,SAAS;aAC3C,IAAM,KAAK,GAAG,EAAE,CAAC;aACjB,IAAM,YAAY,GAAG,QAAQ,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;aACjD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,YAAY,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAG,EAAE;iBACpD,IAAM,WAAW,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC;iBACpC,IAAM,SAAS,GAAG,gBAAgB,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;iBAC9D,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,iBAAiB,CAAC,WAAW,CAAC,CAAC,CAAC;cACtD;aACD,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC;UACpC;;SAED,IAAI,QAAQ,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,EAAE;aACnC,IAAM,WAAW,GAAG,gBAAgB,CAAC,QAAQ,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;aACzE,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,WAAW,CAAC,iBAAiB,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC;UACrF;SACD,IAAI,QAAQ,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,EAAE;aACnC,IAAM,WAAW,GAAG,gBAAgB,CAAC,QAAQ,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;aACzE,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE,WAAW,CAAC,iBAAiB,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC;UACtF;;SAED,IAAI,QAAQ,CAAC,cAAc,KAAK,IAAI,EAAE;aACpC,IAAI,CAAC,cAAc,GAAG,QAAQ,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;UACvD;SACD,IAAI,QAAQ,CAAC,WAAW,KAAK,IAAI,EAAE;aACjC,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;UACjD;SACD,OAAO,IAAI,CAAC;MACb;KACD,2CAAkB,GAAlB;SACE,IAAI,IAAI,CAAC,WAAW,KAAK,IAAI,EAAE;aAC7B,IAAI,CAAC,WAAW,GAAG,IAAI,IAAI,EAAE,CAAC;UAC/B;SACD,IAAM,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,KAAK,CAAC;SACjD,IAAI,SAAS,KAAK,SAAS,EAAE;aAC3B,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;UAC1C;cAAM;aACL,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC;UAC9B;SACD,IAAI,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE;aACnG,OAAO,CAAC,KAAK,CAAC,mIAAmI,EAAE,IAAI,CAAC,CAAC;UAC1J;MACF;KACD,8CAAqB,GAArB;SACE,IAAM,GAAG,GAAG,IAAI,IAAI,EAAE,CAAC;SACvB,IAAM,MAAM,GAAG,IAAI,OAAO,EAAE,CAAC;;SAE3B,IAAI,IAAI,CAAC,cAAc,KAAK,IAAI,EAAE;aAChC,IAAI,CAAC,cAAc,GAAG,IAAI,MAAM,EAAE,CAAC;UACpC;SACD,IAAM,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC;SAC3C,IAAI,SAAS,EAAE;aACb,IAAM,KAAK,GAAG,SAAS,CAAC,KAAK,CAAC;aAC9B,IAAM,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC;aAC1C,GAAG,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;aACxB,GAAG,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;;;aAGtB,IAAI,WAAW,GAAG,CAAC,CAAC;aACpB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,IAAI,CAAC,EAAE;iBACjD,MAAM,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;iBAC3B,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,MAAM,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC,CAAC;cACvE;aACD,IAAI,CAAC,cAAc,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;aACpD,IAAI,KAAK,CAAC,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,EAAE;iBACrC,OAAO,CAAC,KAAK,CAAC,8HAA8H,EAAE,IAAI,CAAC,CAAC;cACrJ;UACF;;MAEJ;KACD,2CAAkB,GAAlB;;MAEC;KACD,6CAAoB,GAApB;SACE,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;SACzB,IAAM,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;SACnC,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;SAC3B,IAAI,UAAU,CAAC,QAAQ,EAAE;aACvB,IAAM,SAAS,GAAG,UAAU,CAAC,QAAQ,CAAC,KAAK,CAAC;aAC5C,IAAI,UAAU,CAAC,MAAM,KAAK,SAAS,EAAE;iBACnC,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,IAAI,eAAe,CAAC,IAAI,YAAY,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;cACzF;kBAAM;;iBAEL,IAAM,KAAK,GAAG,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC;iBACtC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAG,EAAE;qBAC/C,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;kBACd;cACF;aACD,IAAM,OAAO,GAAG,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC;aACxC,IAAI,EAAE,SAAA,EAAE,EAAE,SAAA,EAAE,EAAE,SAAA,EACd,EAAE,GAAG,IAAI,OAAO,EAAE,EAClB,EAAE,GAAG,IAAI,OAAO,EAAE,EAClB,EAAE,GAAG,IAAI,OAAO,EAAE,EAClB,EAAE,GAAG,IAAI,OAAO,EAAE,EAClB,EAAE,GAAG,IAAI,OAAO,EAAE,CAAC;;aAEnB,IAAI,KAAK,EAAE;iBACT,IAAM,OAAO,GAAG,KAAK,CAAC,KAAK,CAAC;iBAC5B,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;qBACvB,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC;kBAClC;iBACD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,EAAG,CAAC,EAAE;qBAChD,IAAM,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;qBACxB,IAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;qBAC1B,IAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;qBAC1B,KAAK,IAAI,CAAC,GAAG,KAAK,EAAE,EAAE,GAAG,KAAK,GAAG,KAAK,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,IAAI,CAAC,EAAE;yBACtD,EAAE,GAAG,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;yBACxB,EAAE,GAAG,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;yBACxB,EAAE,GAAG,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;yBACxB,EAAE,CAAC,SAAS,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC;yBAC5B,EAAE,CAAC,SAAS,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC;yBAC5B,EAAE,CAAC,SAAS,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC;yBAC5B,EAAE,CAAC,UAAU,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;yBACtB,EAAE,CAAC,UAAU,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;yBACtB,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;yBACb,OAAO,CAAC,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;yBACpB,OAAO,CAAC,EAAE,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;yBACxB,OAAO,CAAC,EAAE,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;yBACxB,OAAO,CAAC,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;yBACpB,OAAO,CAAC,EAAE,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;yBACxB,OAAO,CAAC,EAAE,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;yBACxB,OAAO,CAAC,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;yBACpB,OAAO,CAAC,EAAE,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;yBACxB,OAAO,CAAC,EAAE,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;sBACzB;kBACF;cACF;kBAAM;;iBAEL,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,IAAI,CAAC,EAAE;qBACrD,EAAE,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;qBAC3B,EAAE,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;qBAC/B,EAAE,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;qBAC/B,EAAE,CAAC,UAAU,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;qBACtB,EAAE,CAAC,UAAU,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;qBACtB,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;qBACb,OAAO,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;qBAClB,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;qBACtB,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;qBACtB,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;qBACtB,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;qBACtB,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;qBACtB,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;qBACtB,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;qBACtB,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;kBACvB;cACF;aACD,IAAI,CAAC,gBAAgB,EAAE,CAAC;aACxB,UAAU,CAAC,MAAM,CAAC,WAAW,GAAG,IAAI,CAAC;UACtC;MACF;KACD,8BAAK,GAAL,UAAM,QAAwB,EAAE,MAAkB;SAAlB,uBAAA,EAAA,UAAkB;SAChD,IAAI,CAAC,QAAQ,IAAI,QAAQ,YAAY,cAAc,MAAM,KAAK,EAAE;aAC9D,OAAO,CAAC,KAAK,CAAC,iFAAiF,EAAE,QAAQ,CAAC,CAAC;aAC3G,OAAO,IAAI,CAAC;UACb;SACD,IAAM,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;SACnC,KAAK,IAAI,GAAG,IAAI,UAAU,EAAE;aAC1B,IAAM,UAAU,GAAG,UAAU,CAAC,GAAG,CAAC,CAAC;aACnC,IAAI,UAAU,KAAK,SAAS;iBAAE,SAAS;aACvC,IAAM,eAAe,GAAG,UAAU,CAAC,KAAK,CAAC;aACzC,IAAM,UAAU,GAAG,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;aAC5C,IAAI,UAAU,KAAK,SAAS;iBAAE,SAAS;aACvC,IAAM,eAAe,GAAG,UAAU,CAAC,KAAK,CAAC;aACzC,IAAM,aAAa,GAAG,UAAU,CAAC,QAAQ,CAAC;aAC1C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,aAAa,GAAG,MAAM,EAAE,CAAC,GAAG,eAAe,CAAC,MAAM,EAAE,CAAC,EAAG,EAAE,CAAC,EAAG,EAAE;iBAClF,eAAe,CAAC,CAAC,CAAC,GAAG,eAAe,CAAC,CAAC,CAAC,CAAC;cACzC;UACF;SACD,OAAO,IAAI,CAAC;MACb;KACD,yCAAgB,GAAhB;SACE,IAAM,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC;SAC7C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,IAAI,CAAC,EAAE;aACnD,IAAM,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;aACrB,IAAM,CAAC,GAAG,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;aACzB,IAAM,CAAC,GAAG,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;aACzB,IAAM,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;aACjD,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;aAChB,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC;aACpB,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC;UACrB;MACF;KACD,qCAAY,GAAZ;SACE,IAAI,IAAI,CAAC,KAAK,KAAK,IAAI,EAAE;aACvB,OAAO,CAAC,IAAI,CAAC,uEAAuE,CAAC,CAAC;aACtF,OAAO,IAAI,CAAC;UACb;SACD,IAAM,SAAS,GAAG,IAAI,cAAc,EAAE,CAAC;SACvC,IAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;SACjC,IAAM,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;SACnC,KAAK,IAAI,IAAI,IAAI,UAAU,EAAE;aAC3B,IAAM,SAAS,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC;aACnC,IAAI,SAAS,KAAK,SAAS;iBAAE,SAAS;aACtC,IAAM,KAAK,GAAG,SAAS,CAAC,KAAK,CAAC;aAC9B,IAAM,QAAQ,GAAG,SAAS,CAAC,QAAQ,CAAC;aACpC,IAAM,MAAM,GAAG,IAAI,KAAK,CAAC,WAAW,CAAC,OAAO,CAAC,MAAM,GAAG,QAAQ,CAAC,CAAC;aAChE,IAAI,KAAK,GAAG,CAAC,EAAE,MAAM,GAAG,CAAC,CAAC;aAC1B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAG,EAAE;iBAC/C,KAAK,GAAG,OAAO,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC;iBAC9B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,EAAE,CAAC,EAAG,EAAE;qBAClC,MAAM,CAAC,MAAM,EAAG,CAAC,GAAG,KAAK,CAAC,KAAK,EAAG,CAAC,CAAC;kBACrC;cACF;aACD,SAAS,CAAC,YAAY,CAAC,IAAI,EAAE,IAAI,eAAe,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC,CAAC;UACrE;SACD,OAAO,SAAS,CAAC;MAClB;KACD,+BAAM,GAAN,UAAO,IAAU;SACf,IAAM,IAAI,GAAQ;aAChB,QAAQ,EAAE;iBACR,OAAO,EAAE,GAAG;iBACZ,IAAI,EAAE,gBAAgB;iBACtB,SAAS,EAAE,uBAAuB;cACnC;UACF,CAAC;;SAEF,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;SACtB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;SACtB,IAAI,IAAI,CAAC,IAAI,KAAK,EAAE;aAAE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;SAC5C,IAAI,IAAI,CAAC,UAAU,KAAK,SAAS,EAAE;aACjC,IAAM,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;aACnC,KAAK,IAAI,GAAG,IAAI,UAAU,EAAE;iBAC1B,IAAI,UAAU,CAAC,GAAG,CAAC,KAAK,SAAS;qBAAE,IAAI,CAAC,GAAG,CAAC,GAAG,UAAU,CAAC,GAAG,CAAC,CAAC;cAChE;aACD,OAAO,IAAI,CAAC;UACb;SACD,IAAI,CAAC,IAAI,GAAG,EAAE,UAAU,EAAE,EAAE,EAAE,CAAC;SAC/B,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;SACzB,IAAI,KAAK,KAAK,IAAI,EAAE;aAClB,IAAM,KAAK,GAAG,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;aACtD,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG;iBAChB,IAAI,EAAE,KAAK,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI;iBAClC,KAAK,EAAE,KAAK;cACb,CAAC;UACH;SACD,IAAM,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;SACnC,KAAK,IAAI,GAAG,IAAI,UAAU,EAAE;aAC1B,IAAM,SAAS,GAAG,UAAU,CAAC,GAAG,CAAC,CAAC;aAClC,IAAI,SAAS,KAAK,SAAS;iBAAE,SAAS;aACtC,IAAM,KAAK,GAAG,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;aAC1D,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG;iBAC1B,QAAQ,EAAE,SAAS,CAAC,QAAQ;iBAC5B,IAAI,EAAE,SAAS,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI;iBACtC,KAAK,EAAE,KAAK;iBACZ,UAAU,EAAE,SAAS,CAAC,UAAU;cACjC,CAAC;UACH;SACD,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;SAC3B,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;aACrB,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC;UACvD;SACD,IAAM,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC;SAC3C,IAAI,cAAc,KAAK,IAAI,EAAE;aAC3B,IAAI,CAAC,IAAI,CAAC,cAAc,GAAG;iBACzB,MAAM,EAAE,cAAc,CAAC,MAAM,CAAC,OAAO,EAAE;iBACvC,MAAM,EAAE,cAAc,CAAC,MAAM;cAC9B,CAAC;UACH;SACD,OAAO,IAAI,CAAC;MACb;KACD,8BAAK,GAAL;;;;;;;;;;;;;;;SAeE,OAAO,IAAK,IAAI,CAAC,WAAmB,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;MACnD;KACD,6BAAI,GAAJ,UAAK,MAAY;SACf,IAAM,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;SAC3B,IAAI,KAAK,KAAK,IAAI,EAAE;aAClB,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC;UAC9B;SACD,IAAM,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC;SACrC,KAAK,IAAI,IAAI,IAAI,UAAU,EAAE;aAC3B,IAAM,SAAS,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC;aACnC,IAAI,SAAS,KAAK,SAAS;iBAAE,SAAS;aACtC,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,SAAS,CAAC,KAAK,EAAE,CAAC,CAAC;UAC5C;SACD,IAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;SAC7B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAG,EAAE;aAC9C,IAAM,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;aACxB,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,aAAa,CAAC,CAAC;UAC9D;SACD,OAAO,IAAI,CAAC;MACb;KACD,gCAAO,GAAP;SACE,IAAI,CAAC,aAAa,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,CAAC,CAAC;MACzC;KACD,iCAAQ,GAAR,UAAS,KAAsB;SAC7B,OAAO,CAAC,IAAI,CAAC,oEAAoE,CAAC,CAAC;SACnF,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;MACtB;KACD,oCAAW,GAAX,UAAY,KAAa,EAAE,KAAa,EAAE,WAAoB;SAC5D,IAAI,WAAW,KAAK,SAAS,EAAE;aAC7B,OAAO,CAAC,IAAI,CAAC,sEAAsE,CAAC,CAAC;UACtF;SACD,OAAO,CAAC,IAAI,CAAC,0DAA0D,CAAC,CAAC;SACzE,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;MAC7B;KACD,uCAAc,GAAd;SACE,OAAO,CAAC,IAAI,CAAC,gEAAgE,CAAC,CAAC;SAC/E,IAAI,CAAC,WAAW,EAAE,CAAC;MACpB;KACD,wCAAe,GAAf;SACE,OAAO,CAAC,IAAI,CAAC,4DAA4D,CAAC,CAAC;MAC5E;KACD,uCAAc,GAAd;SACE,OAAO,CAAC,IAAI,CAAC,2DAA2D,CAAC,CAAC;MAC3E;KACD,sBAAI,qCAAS;cAAb;aACE,OAAO,CAAC,KAAK,CAAC,+DAA+D,CAAC,CAAC;aAC/E,OAAO,IAAI,CAAC,MAAM,CAAC;UACpB;;;QAAA;KACD,sBAAI,mCAAO;cAAX;aACE,OAAO,CAAC,IAAI,CAAC,6DAA6D,CAAC,CAAC;aAC5E,OAAO,IAAI,CAAC,MAAM,CAAC;UACpB;;;QAAA;KAjkBM,uBAAQ,GAAW,KAAK,CAAC;KAkkBlC,qBAAC;EAAA,CAlmBmC,eAAe;;CCdnD;;;;;;AAMA;KAA0BA,wBAAQ;KAKhC,cAAY,QAA0D,EAAE,QAA+F;SAA3J,yBAAA,EAAA,eAA0C,cAAc,EAAE;SAAE,yBAAA,EAAA,eAAyC,iBAAiB,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,MAAM,EAAE,GAAG,QAAQ,EAAE,CAAC;SAAvK,YACE,iBAAO,SAKR;SAVD,cAAQ,GAAaH,gBAAQ,CAAC,SAAS,CAAC;SAG/B,YAAM,GAAY,IAAI,CAAC;SAG9B,KAAI,CAAC,IAAI,GAAG,MAAM,CAAC;SACnB,KAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;SACzB,KAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;SACzB,KAAI,CAAC,kBAAkB,EAAE,CAAC;;MAC3B;KACD,0BAAW,GAAX,UAAY,KAAe;SACzB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;MACvB;KACD,mBAAI,GAAJ,UAAK,MAAY;SACf,iBAAM,IAAI,YAAC,MAAM,CAAC,CAAC;SACnB,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;SAChC,OAAO,IAAI,CAAC;MACb;KACD,iCAAkB,GAAlB;SACE,IAAI,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC;SAC9C,IAAI,YAAY,KAAK,SAAS,IAAI,YAAY,CAAC,MAAM,GAAG,CAAC,EAAE;aACzD,IAAI,CAAC,qBAAqB,GAAG,EAAE,CAAC;aAChC,IAAI,CAAC,qBAAqB,GAAG,EAAE,CAAC;aAChC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,YAAY,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAG,EAAE;iBACtD,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;iBACnC,IAAI,CAAC,qBAAqB,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;cACtD;UACF;MACF;KACD,sBAAO,GAAP,UAAQ,SAAoB,EAAE,UAAuB;SACnD,IAAI,aAAa,GAAG,IAAI,OAAO,EAAE,CAAC;SAClC,IAAI,GAAG,GAAG,IAAI,GAAG,EAAE,CAAC;SACpB,IAAI,MAAM,GAAG,IAAI,MAAM,EAAE,CAAC;SAC1B,IAAI,EAAE,GAAG,IAAI,OAAO,EAAE,CAAC;SACvB,IAAI,EAAE,GAAG,IAAI,OAAO,EAAE,CAAC;SACvB,IAAI,EAAE,GAAG,IAAI,OAAO,EAAE,CAAC;SACvB,IAAI,KAAK,GAAG,IAAI,OAAO,EAAE,CAAC;SAC1B,IAAI,KAAK,GAAG,IAAI,OAAO,EAAE,CAAC;SAC1B,IAAI,KAAK,GAAG,IAAI,OAAO,EAAE,CAAC;SAC1B,IAAI,GAAG,GAAG,IAAI,OAAO,EAAE,CAAC;SACxB,IAAI,GAAG,GAAG,IAAI,OAAO,EAAE,CAAC;SACxB,IAAI,GAAG,GAAG,IAAI,OAAO,EAAE,CAAC;SACxB,IAAI,SAAS,GAAG,IAAI,OAAO,EAAE,CAAC;SAC9B,IAAI,iBAAiB,GAAG,IAAI,OAAO,EAAE,CAAC;SACtC,IAAI,sBAAsB,GAAG,IAAI,OAAO,EAAE,CAAC;SAC3C,SAAS,cAAc,CAAC,KAAc,EAAE,EAAW,EAAE,EAAW,EAAE,EAAW,EAAE,GAAY,EAAE,GAAY,EAAE,GAAY;aACrH,QAAQ,CAAC,kBAAkB,CAAC,KAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,SAAS,CAAC,CAAC;aAC1D,GAAG,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;aAChC,GAAG,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;aAChC,GAAG,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;aAChC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;aACtB,OAAO,GAAG,CAAC,KAAK,EAAE,CAAC;UACpB;SACD,SAAS,iBAAiB,CAAC,MAAgB,EAAE,SAAoB,EAAE,GAAQ,EAAE,EAAW,EAAE,EAAW,EAAE,EAAW,EAAE,KAAc;aAChI,IAAI,SAAS,CAAC;aACd,IAAI,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;aAC/B,IAAI,QAAQ,CAAC,IAAI,KAAKjB,gBAAQ,CAAC,IAAI,EAAE;iBACnC,SAAS,GAAG,GAAG,CAAC,iBAAiB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;cAC5D;kBAAM;iBACL,SAAS,GAAG,GAAG,CAAC,iBAAiB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,QAAQ,CAAC,IAAI,KAAKA,gBAAQ,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;cACzF;aACD,IAAI,SAAS,KAAK,IAAI;iBAAE,OAAO,IAAI,CAAC;aACpC,sBAAsB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aACnC,sBAAsB,CAAC,YAAY,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;aACxD,IAAI,QAAQ,GAAG,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,sBAAsB,CAAC,CAAC;aACvE,IAAI,QAAQ,GAAG,SAAS,CAAC,IAAI,IAAI,QAAQ,GAAG,SAAS,CAAC,GAAG;iBAAE,OAAO,IAAI,CAAC;aACvE,OAAO;iBACL,QAAQ,EAAE,QAAQ;iBAClB,KAAK,EAAE,sBAAsB,CAAC,KAAK,EAAE;iBACrC,KAAK,EAAE,CAAC;iBACR,IAAI,EAAE,IAAI;iBACV,SAAS,EAAE,CAAC;iBACZ,EAAE,EAAE,IAAI;iBACR,MAAM,EAAE,MAAM;cACf,CAAC;UACH;SACD,SAAS,+BAA+B,CAAC,MAAgB,EAAE,SAAoB,EAAE,GAAQ,EAAE,SAAmB,EAAE,GAAa,EAAE,CAAS,EAAE,CAAS,EAAE,CAAS;aAC5J,EAAE,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;aAC/B,EAAE,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;aAC/B,EAAE,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;aAC/B,IAAI,YAAY,GAAG,iBAAiB,CAAC,MAAM,EAAE,SAAS,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,iBAAiB,CAAC,CAAC;aAC5F,IAAI,YAAY,EAAE;iBAChB,IAAI,GAAG,EAAE;qBACP,GAAG,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;qBAC1B,GAAG,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;qBAC1B,GAAG,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;qBAC1B,YAAY,CAAC,EAAE,GAAG,cAAc,CAAC,iBAAiB,EAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAG,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;kBAClF;iBACD,YAAY,CAAC,IAAI,GAAG,IAAI,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,QAAQ,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;iBACpE,YAAY,CAAC,SAAS,GAAG,CAAC,CAAC;cAC5B;aACD,OAAO,YAAY,CAAC;UACrB;;SAEC,IAAI,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;SAC7B,IAAI,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;SAC7B,IAAI,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;SACnC,IAAI,QAAQ,KAAK,SAAS;aAAE,OAAO,UAAU,CAAC;;SAE9C,IAAI,QAAQ,CAAC,cAAc,KAAK,IAAI;aAAE,QAAQ,CAAC,qBAAqB,EAAE,CAAC;SACvE,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC;SACrC,MAAM,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC;SACjC,IAAI,SAAS,CAAC,GAAG,CAAC,gBAAgB,CAAC,MAAM,CAAC,KAAK,KAAK;aAAE,OAAO,UAAU,CAAC;;SAExE,aAAa,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;SACtC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,YAAY,CAAC,aAAa,CAAC,CAAC;;SAEpD,IAAI,QAAQ,CAAC,WAAW,KAAK,IAAI,EAAE;aACjC,IAAI,GAAG,CAAC,aAAa,CAAC,QAAQ,CAAC,WAAW,CAAC,KAAK,KAAK;iBAAE,OAAO,UAAU,CAAC;UAC1E;SACD,IAAI,GAAG,EAAE,YAAY,CAAC;SACtB,KAAK,QAAQ,IAAI,QAAQ,YAAY,cAAc,GAAG;aACpD,IAAI,CAAC,SAAA,EAAE,CAAC,SAAA,EAAE,CAAC,SAAA,CAAC;aACZ,IAAI,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC;aAC3B,IAAI,UAAU,GAAG,QAAQ,CAAC,UAAU,CAAC;aACrC,IAAI,SAAS,GAAG,UAAU,CAAC,QAAQ,CAAC,KAAK,CAAC;aAC1C,IAAI,UAAU,CAAC,EAAE,KAAK,SAAS,EAAE;iBAC/B,GAAG,GAAG,UAAU,CAAC,EAAE,CAAC,KAAK,CAAC;cAC3B;aACD,IAAI,KAAK,KAAK,IAAI,EAAE;iBAClB,IAAI,OAAO,GAAG,KAAK,CAAC,KAAK,CAAC;iBAC1B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE;qBACjD,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;qBACf,CAAC,GAAG,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;qBACnB,CAAC,GAAG,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;qBACnB,YAAY,GAAG,+BAA+B,CAAC,IAAI,EAAE,SAAS,EAAE,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;qBAC9F,IAAI,YAAY,EAAE;yBAChB,YAAY,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;yBAC3C,UAAU,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;sBAC/B;kBACF;cACF;kBAAM;iBACL,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE;qBACnD,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;qBACV,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;qBACV,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;qBACV,YAAY,GAAG,+BAA+B,CAAC,IAAI,EAAE,SAAS,EAAE,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;qBAC9F,IAAI,YAAY,EAAE;yBAChB,YAAY,CAAC,KAAK,GAAG,CAAC,CAAC;yBACvB,UAAU,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;sBAC/B;kBACF;cACF;UACF;cAAM,KAAK,QAAQ,IAAI,QAAQ,YAAY,QAAQ,GAAG;aACrD,IAAI,GAAG,SAAA,EAAE,GAAG,SAAA,EAAE,GAAG,SAAA,CAAC;aAClB,IAAI,cAAc,IAAI,QAAQ,IAAI,QAAQ,YAAY,aAAa,CAAC,CAAC;aACrE,IAAI,SAAS,GAAG,cAAc,KAAK,IAAI,GAAG,QAAQ,CAAC,SAAS,GAAG,IAAI,CAAC;aACpE,IAAI,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC;aACjC,IAAI,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC;aAC3B,IAAI,aAAa,GAAG,QAAQ,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;aAC9C,IAAI,aAAa,CAAC,MAAM,GAAG,CAAC;iBAAE,GAAG,GAAG,aAAa,CAAC;aAClD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAG,EAAE;iBAC/C,IAAI,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;iBACpB,IAAI,YAAY,GAAG,cAAc,KAAK,IAAI,GAAG,SAAS,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,QAAQ,CAAC;iBACtF,IAAI,YAAY,KAAK,SAAS;qBAAE,SAAS;iBACzC,GAAG,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;iBACvB,GAAG,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;iBACvB,GAAG,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;iBACvB,IAAI,YAAY,CAAC,YAAY,KAAK,IAAI,EAAE;qBACtC,IAAI,YAAY,GAAG,QAAQ,CAAC,YAAY,CAAC;qBACzC,IAAI,eAAe,GAAG,IAAI,CAAC,qBAAqB,CAAC;qBACjD,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;qBAChB,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;qBAChB,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;qBAChB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,YAAY,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAG,EAAE;yBACtD,IAAI,SAAS,GAAG,eAAe,CAAC,CAAC,CAAC,CAAC;yBACnC,IAAI,SAAS,KAAK,CAAC;6BAAE,SAAS;yBAC9B,IAAI,OAAO,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;yBACvC,EAAE,CAAC,eAAe,CAAC,KAAK,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,SAAS,CAAC,CAAC;yBACtE,EAAE,CAAC,eAAe,CAAC,KAAK,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,SAAS,CAAC,CAAC;yBACtE,EAAE,CAAC,eAAe,CAAC,KAAK,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,SAAS,CAAC,CAAC;sBACvE;qBACD,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;qBACZ,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;qBACZ,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;qBACZ,GAAG,GAAG,EAAE,CAAC;qBACT,GAAG,GAAG,EAAE,CAAC;qBACT,GAAG,GAAG,EAAE,CAAC;kBACV;iBACD,YAAY,GAAG,iBAAiB,CAAC,IAAI,EAAE,SAAS,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,iBAAiB,CAAC,CAAC;iBACzF,IAAI,YAAY,EAAE;qBAChB,IAAI,GAAG,EAAE;yBACP,IAAI,KAAK,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;yBACnB,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;yBACnB,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;yBACnB,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;yBACnB,YAAY,CAAC,EAAE,GAAG,cAAc,CAAC,iBAAiB,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;sBACnF;qBACD,YAAY,CAAC,IAAI,GAAG,IAAI,CAAC;qBACzB,YAAY,CAAC,SAAS,GAAG,CAAC,CAAC;qBAC3B,UAAU,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;kBAC/B;cACF;UACF;SACD,OAAO,UAAU,CAAC;;MAErB;KACD,oBAAK,GAAL;SACE,OAAO,IAAK,IAAI,CAAC,WAAmB,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;MAC/E;KACH,WAAC;CAAD,CA1MA,CAA0B,QAAQ;;CCLlC;;;;;;;;AAQA;KAA8BoB,4BAAe;KAiC3C;SAAA,YACE,iBAAO,SACR;SAlCD,QAAE,GAAW,eAAe,EAAE,CAAC;SAC/B,UAAI,GAAW,KAAK,CAAC,YAAY,EAAE,CAAC;SACpC,UAAI,GAAW,EAAE,CAAC;SAClB,UAAI,GAAW,UAAU,CAAC;SAC1B,cAAQ,GAAc,EAAE,CAAC;SACzB,YAAM,GAAY,EAAE,CAAC;SACrB,WAAK,GAAY,EAAE,CAAC;SACpB,mBAAa,GAAkB,CAAC,EAAE,CAAC,CAAC;SACpC,kBAAY,GAAU,EAAE,CAAC;SACzB,kBAAY,GAAU,EAAE,CAAC;SACzB,iBAAW,GAAc,EAAE,CAAC;SAC5B,iBAAW,GAAc,EAAE,CAAC;SAC5B,mBAAa,GAAa,EAAE,CAAC;SAC7B,iBAAW,GAAS,IAAI,CAAC;SACzB,oBAAc,GAAW,IAAI,CAAC;;SAE9B,wBAAkB,GAAY,KAAK,CAAC;SACpC,wBAAkB,GAAY,KAAK,CAAC;SACpC,mBAAa,GAAY,KAAK,CAAC;SAC/B,uBAAiB,GAAY,KAAK,CAAC;SACnC,sBAAgB,GAAY,KAAK,CAAC;SAClC,6BAAuB,GAAY,KAAK,CAAC;SACzC,sBAAgB,GAAY,KAAK,CAAC;SAClC,gBAAU,GAAQ,SAAS,CAAC;;SAOnB,gBAAU,GAAY,IAAI,CAAC;SAC3B,sBAAgB,GAAY,KAAK,CAAC;;MAG1C;KACD,8BAAW,GAAX,UAAY,MAAe;SACzB,IAAM,YAAY,GAAG,IAAI,OAAO,EAAE,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;SAC3D,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAG,EAAE;aACvD,IAAM,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;aAChC,MAAM,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;UAC7B;SACD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAG,EAAE;aACpD,IAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;aAC3B,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC,SAAS,EAAE,CAAC;aACnD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAG,EAAE;iBAC5D,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC,SAAS,EAAE,CAAC;cAC9D;UACF;SACD,IAAI,IAAI,CAAC,WAAW,KAAK,IAAI,EAAE;aAC7B,IAAI,CAAC,kBAAkB,EAAE,CAAC;UAC3B;SACD,IAAI,IAAI,CAAC,cAAc,KAAK,IAAI,EAAE;aAChC,IAAI,CAAC,qBAAqB,EAAE,CAAC;UAC9B;SACD,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;SAC/B,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;SAC9B,OAAO,IAAI,CAAC;MACb;KACD,0BAAO,GAAP,UAAQ,KAAa;;SAEnB,IAAM,EAAE,GAAG,IAAI,OAAO,EAAE,CAAC;;SAEvB,EAAE,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;SACxB,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;SACrB,OAAO,IAAI,CAAC;;MAEf;KACD,0BAAO,GAAP,UAAQ,KAAa;;SAEnB,IAAM,EAAE,GAAG,IAAI,OAAO,EAAE,CAAC;;SAEvB,EAAE,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;SACxB,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;SACrB,OAAO,IAAI,CAAC;;MAEf;KACD,0BAAO,GAAP,UAAQ,KAAa;;SAEnB,IAAM,EAAE,GAAG,IAAI,OAAO,EAAE,CAAC;;SAEvB,EAAE,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;SACxB,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;SACrB,OAAO,IAAI,CAAC;;MAEf;KACD,4BAAS,GAAT,UAAU,CAAS,EAAE,CAAS,EAAE,CAAS;;SAEvC,IAAM,EAAE,GAAG,IAAI,OAAO,EAAE,CAAC;;SAEvB,EAAE,CAAC,eAAe,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;SAC5B,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;SACrB,OAAO,IAAI,CAAC;;MAEf;KACD,wBAAK,GAAL,UAAM,CAAS,EAAE,CAAS,EAAE,CAAS;;SAEnC,IAAM,EAAE,GAAG,IAAI,OAAO,EAAE,CAAC;;SAEvB,EAAE,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;SACtB,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;SACrB,OAAO,IAAI,CAAC;;MAEf;KACD,yBAAM,GAAN,UAAO,MAAe;SACpB,IAAM,GAAG,GAAG,IAAI,QAAQ,EAAE,CAAC;;SAEzB,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;SACnB,GAAG,CAAC,YAAY,EAAE,CAAC;SACnB,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;;MAEhC;KACD,qCAAkB,GAAlB,UAAmB,QAAwB;SACzC,IAAM,KAAK,GAAG,IAAI,CAAC;SACnB,IAAM,OAAO,GAAG,QAAQ,CAAC,KAAK,KAAK,IAAI,GAAG,QAAQ,CAAC,KAAK,CAAC,KAAK,GAAG,SAAS,CAAC;SAC3E,IAAM,UAAU,GAAG,QAAQ,CAAC,UAAU,CAAC;SACvC,IAAM,SAAS,GAAG,UAAU,CAAC,QAAQ,CAAC,KAAK,CAAC;SAC5C,IAAM,OAAO,GAAG,UAAU,CAAC,MAAM,KAAK,SAAS,GAAG,UAAU,CAAC,MAAM,CAAC,KAAK,GAAG,SAAS,CAAC;SACtF,IAAM,MAAM,GAAG,UAAU,CAAC,KAAK,KAAK,SAAS,GAAG,UAAU,CAAC,KAAK,CAAC,KAAK,GAAG,SAAS,CAAC;SACnF,IAAM,GAAG,GAAG,UAAU,CAAC,EAAE,KAAK,SAAS,GAAG,UAAU,CAAC,EAAE,CAAC,KAAK,GAAG,SAAS,CAAC;SAC1E,IAAM,IAAI,GAAG,UAAU,CAAC,GAAG,KAAK,SAAS,GAAG,UAAU,CAAC,GAAG,CAAC,KAAK,GAAG,SAAS,CAAC;SAC7E,IAAI,IAAI,KAAK,SAAS;aAAE,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;SACnD,IAAM,WAAW,GAAU,EAAE,CAAC;SAC9B,IAAM,OAAO,GAAU,EAAE,CAAC;SAC1B,IAAM,QAAQ,GAAU,EAAE,CAAC;SAC3B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE;aAC3D,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;aACnF,IAAI,OAAO,KAAK,SAAS,EAAE;iBACzB,WAAW,CAAC,IAAI,CAAC,IAAI,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;cAC3E;aACD,IAAI,MAAM,KAAK,SAAS,EAAE;iBACxB,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;cACvE;aACD,IAAI,GAAG,KAAK,SAAS,EAAE;iBACrB,OAAO,CAAC,IAAI,CAAC,IAAI,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;cAC/C;aACD,IAAI,IAAI,KAAK,SAAS,EAAE;iBACtB,QAAQ,CAAC,IAAI,CAAC,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;cAClD;UACF;SACD,SAAS,OAAO,CAAC,CAAS,EAAE,CAAS,EAAE,CAAS,EAAE,aAAsB;aACtE,IAAM,aAAa,GAAc,OAAO,KAAK,SAAS,GAAG,CAAE,WAAW,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,EAAE,WAAW,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,EAAE,WAAW,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAE,GAAG,EAAE,CAAC;aACzI,IAAM,YAAY,GAAY,MAAM,KAAK,SAAS,GAAG,CAAE,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAE,GAAG,EAAE,CAAC;aACxI,IAAM,IAAI,GAAG,IAAI,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,aAAa,EAAE,YAAY,EAAE,aAAa,CAAC,CAAC;aAC5E,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aACvB,IAAI,GAAG,KAAK,SAAS,EAAE;iBACrB,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;cAC3F;aACD,IAAI,IAAI,KAAK,SAAS,EAAE;iBACtB,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;cAC9F;UACF;SACD,IAAI,OAAO,KAAK,SAAS,EAAE;aACzB,IAAM,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC;aAC/B,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;iBACrB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAG,EAAE;qBACvC,IAAM,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;qBACxB,IAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;qBAC1B,IAAM,OAAK,GAAG,KAAK,CAAC,KAAK,CAAC;qBAC1B,KAAK,IAAI,CAAC,GAAG,KAAK,EAAE,EAAE,GAAG,KAAK,GAAG,OAAK,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,IAAI,CAAC,EAAE;yBACtD,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,CAAC,aAAa,CAAC,CAAC;sBAC1E;kBACF;cACF;kBAAM;iBACL,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;qBAC1C,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;kBACrD;cACF;UACF;cAAM;aACL,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE;iBAChD,OAAO,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;cAC1B;UACF;SACD,IAAI,CAAC,kBAAkB,EAAE,CAAC;SAC1B,IAAI,QAAQ,CAAC,WAAW,KAAK,IAAI,EAAE;aACjC,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;UACjD;SACD,IAAI,QAAQ,CAAC,cAAc,KAAK,IAAI,EAAE;aACpC,IAAI,CAAC,cAAc,GAAG,QAAQ,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;UACvD;SACD,OAAO,IAAI,CAAC;MACb;KACD,yBAAM,GAAN;SACE,IAAI,CAAC,kBAAkB,EAAE,CAAC;SAC1B,IAAM,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC,MAAM,EAAE,CAAC;SACrD,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC;SAC7C,OAAO,MAAM,CAAC;MACf;KACD,4BAAS,GAAT;SACE,IAAI,CAAC,qBAAqB,EAAE,CAAC;SAC7B,IAAM,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC;SAC1C,IAAM,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC;SAC1C,IAAM,CAAC,GAAG,MAAM,KAAK,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,MAAM,CAAC;SAC1C,IAAM,MAAM,GAAG,IAAI,OAAO,EAAE,CAAC;SAC7B,MAAM,CAAC,GAAG,CACR,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,GAAG,MAAM,CAAC,CAAC,EACvB,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,GAAG,MAAM,CAAC,CAAC,EACvB,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,GAAG,MAAM,CAAC,CAAC,EACvB,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CACX,CAAC;SACF,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;SACzB,OAAO,IAAI,CAAC;MACb;KACD,qCAAkB,GAAlB;SACE,IAAM,EAAE,GAAG,IAAI,OAAO,EAAE,EAAE,EAAE,GAAG,IAAI,OAAO,EAAE,CAAC;SAC7C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAG,EAAE;aACpD,IAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;aAC3B,IAAM,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aACjC,IAAM,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aACjC,IAAM,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aACjC,EAAE,CAAC,UAAU,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;aACtB,EAAE,CAAC,UAAU,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;aACtB,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;aACb,EAAE,CAAC,SAAS,EAAE,CAAC;aACf,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;UACtB;MACF;KACD,uCAAoB,GAApB,UAAqB,YAA4B;SAA5B,6BAAA,EAAA,mBAA4B;SAC/C,IAAI,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,IAAI,EAAE,QAAQ,CAAC;SACjC,QAAQ,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;SAC3C,KAAK,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAG,EAAE;aACnD,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAI,OAAO,EAAE,CAAC;UAC7B;SACD,IAAI,YAAY,EAAE;;;aAGhB,IAAI,EAAE,SAAA,EAAE,EAAE,SAAA,EAAE,EAAE,SAAA,CAAC;aACf,IAAM,EAAE,GAAG,IAAI,OAAO,EAAE,EAAE,EAAE,GAAG,IAAI,OAAO,EAAE,CAAC;aAC7C,KAAK,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAG,EAAE;iBAChD,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;iBACrB,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;iBAC3B,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;iBAC3B,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;iBAC3B,EAAE,CAAC,UAAU,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;iBACtB,EAAE,CAAC,UAAU,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;iBACtB,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;iBACb,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;iBACzB,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;iBACzB,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;cAC1B;UACF;cAAM;aACL,IAAI,CAAC,kBAAkB,EAAE,CAAC;aAC1B,KAAK,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAG,EAAE;iBAChD,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;iBACrB,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;iBAClC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;iBAClC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;cACnC;UACF;SACD,KAAK,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAG,EAAE;aACnD,QAAQ,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC;UACzB;SACD,KAAK,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAG,EAAE;aAChD,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;aACrB,IAAM,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC;aACzC,IAAI,aAAa,CAAC,MAAM,KAAK,CAAC,EAAE;iBAC9B,aAAa,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;iBACxC,aAAa,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;iBACxC,aAAa,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;cACzC;kBAAM;iBACL,aAAa,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;iBAC5C,aAAa,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;iBAC5C,aAAa,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;cAC7C;UACF;SACD,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;aACzB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;UAC/B;MACF;KACD,2CAAwB,GAAxB;SACE,IAAI,CAAC,kBAAkB,EAAE,CAAC;SAC1B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAG,EAAE;aACpD,IAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAE,CAAC,CAAE,CAAC;aAC7B,IAAM,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC;aACzC,IAAI,aAAa,CAAC,MAAM,KAAK,CAAC,EAAE;iBAC9B,aAAa,CAAE,CAAC,CAAE,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;iBACrC,aAAa,CAAE,CAAC,CAAE,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;iBACrC,aAAa,CAAE,CAAC,CAAE,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;cACtC;kBAAM;iBACL,aAAa,CAAE,CAAC,CAAE,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;iBACzC,aAAa,CAAE,CAAC,CAAE,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;iBACzC,aAAa,CAAE,CAAC,CAAE,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;cAC1C;UACF;SACD,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;aACzB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;UAC/B;MACF;KACD,sCAAmB,GAAnB;SACE,IAAI,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,IAAI,CAAC;;;;SAIvB,KAAK,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAG,EAAE;aAChD,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;aACrB,IAAI,CAAE,IAAI,CAAC,oBAAoB,EAAE;iBAC/B,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;cACjD;kBAAM;iBACL,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;cAC7C;aACD,IAAI,CAAE,IAAI,CAAC,uBAAuB;iBAAE,IAAI,CAAC,uBAAuB,GAAG,EAAE,CAAC;aACtE,KAAK,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAG,EAAE;iBACxD,IAAI,CAAE,IAAI,CAAC,uBAAuB,CAAC,CAAC,CAAC,EAAE;qBACrC,IAAI,CAAC,uBAAuB,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;kBACjE;sBAAM;qBACL,IAAI,CAAC,uBAAuB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;kBAC7D;cACF;UACF;;SAED,IAAM,MAAM,GAAG,IAAI,QAAQ,EAAE,CAAC;SAC9B,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;SAC1B,KAAK,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAG,EAAE;;aAEvD,IAAI,CAAE,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,EAAE;iBAC1B,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;iBAC1B,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,WAAW,GAAG,EAAE,CAAC;iBACtC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,aAAa,GAAG,EAAE,CAAC;iBACxC,IAAM,cAAc,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC;iBACxD,IAAM,gBAAgB,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC;iBAC5D,IAAI,YAAU,SAAA,EAAE,eAAa,SAAA,CAAC;iBAC9B,KAAK,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAG,EAAE;qBAChD,YAAU,GAAG,IAAI,OAAO,EAAE,CAAC;qBAC3B,eAAa,GAAG,EAAE,CAAC,EAAE,IAAI,OAAO,EAAE,EAAE,CAAC,EAAE,IAAI,OAAO,EAAE,EAAE,CAAC,EAAE,IAAI,OAAO,EAAE,EAAE,CAAC;qBACzE,cAAc,CAAC,IAAI,CAAC,YAAU,CAAC,CAAC;qBAChC,gBAAgB,CAAC,IAAI,CAAC,eAAa,CAAC,CAAC;kBACtC;cACF;aACD,IAAM,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;;aAE1C,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;;aAEhD,MAAM,CAAC,kBAAkB,EAAE,CAAC;aAC5B,MAAM,CAAC,oBAAoB,EAAE,CAAC;;aAE9B,IAAI,UAAU,SAAA,EAAE,aAAa,SAAA,CAAC;aAC9B,KAAK,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAG,EAAE;iBAChD,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;iBACrB,UAAU,GAAG,YAAY,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;iBACzC,aAAa,GAAG,YAAY,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;iBAC9C,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;iBAC7B,aAAa,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;iBAC5C,aAAa,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;iBAC5C,aAAa,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;cAC7C;UACF;;SAED,KAAK,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAG,EAAE;aAChD,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;aACrB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,oBAAoB,CAAC;aACxC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,uBAAuB,CAAC;UACnD;MACF;KACD,kCAAe,GAAf;SACE,OAAO,CAAC,IAAI,CAAC,sDAAsD,CAAC,CAAC;MACtE;KACD,uCAAoB,GAApB;SACE,IAAI,CAAC,GAAG,CAAC,CAAC;SACV,IAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;SAC/B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAG,EAAE;aAClD,IAAI,CAAC,GAAG,CAAC,EAAE;iBACT,CAAC,IAAI,QAAQ,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;cAC9C;aACD,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;UAC3B;MACF;KACD,qCAAkB,GAAlB;SACE,IAAI,IAAI,CAAC,WAAW,KAAK,IAAI,EAAE;aAC7B,IAAI,CAAC,WAAW,GAAG,IAAI,IAAI,EAAE,CAAC;UAC/B;SACD,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;MAC/C;KACD,wCAAqB,GAArB;SACE,IAAI,IAAI,CAAC,cAAc,KAAK,IAAI,EAAE;aAChC,IAAI,CAAC,cAAc,GAAG,IAAI,MAAM,EAAE,CAAC;UACpC;SACD,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;MAClD;KACD,wBAAK,GAAL,UAAM,QAAkB,EAAE,MAAW,EAAE,mBAA+B;SAA/B,oCAAA,EAAA,uBAA+B;SACpE,IAAI,YAAY,EAChB,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EACnC,SAAS,GAAG,IAAI,CAAC,QAAQ,EACzB,SAAS,GAAG,QAAQ,CAAC,QAAQ,EAC7B,MAAM,GAAG,IAAI,CAAC,KAAK,EACnB,MAAM,GAAG,QAAQ,CAAC,KAAK,EACvB,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,EAC5B,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,CAAC,CAAC,EAChC,OAAO,GAAG,IAAI,CAAC,MAAM,EACrB,OAAO,GAAG,QAAQ,CAAC,MAAM,CAAC;SAC1B,IAAI,MAAM,KAAK,SAAS,EAAE;aACxB,YAAY,GAAG,IAAI,OAAO,EAAE,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;UACtD;;SAED,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAG,EAAE;aACnD,IAAM,MAAM,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;aAC5B,IAAM,UAAU,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;aAClC,IAAI,MAAM,KAAK,SAAS;iBAAE,UAAU,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;aAC1D,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;UAC5B;;SAED,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAG,EAAE;aACjD,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC;UAClC;;SAED,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAG,EAAE;aAChD,IAAI,IAAI,GAAG,MAAM,CAAC,CAAC,CAAC,EAAE,QAAQ,SAAA,EAAE,MAAM,SAAA,EAAE,KAAK,SAAA,EAC7C,iBAAiB,GAAG,IAAI,CAAC,aAAa,EACtC,gBAAgB,GAAG,IAAI,CAAC,YAAY,CAAC;aACrC,QAAQ,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,CAAC,GAAG,YAAY,EAAE,IAAI,CAAC,CAAC,GAAG,YAAY,EAAE,IAAI,CAAC,CAAC,GAAG,YAAY,CAAC,CAAC;aAC1F,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;aAClC,IAAI,YAAY,KAAK,SAAS,EAAE;iBAC9B,QAAQ,CAAC,MAAM,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC,SAAS,EAAE,CAAC;cACxD;aACD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,iBAAiB,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAG,EAAE;iBAC3D,MAAM,GAAG,iBAAiB,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;iBACtC,IAAI,YAAY,KAAK,SAAS,EAAE;qBAC9B,MAAM,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC,SAAS,EAAE,CAAC;kBAC/C;iBACD,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;cACrC;aACD,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aAChC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,gBAAgB,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAG,EAAE;iBAC1D,KAAK,GAAG,gBAAgB,CAAC,CAAC,CAAC,CAAC;iBAC5B,QAAQ,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC;cAC3C;aACD,QAAQ,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,GAAG,mBAAmB,CAAC;aAClE,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;UACvB;;SAED,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAG,EAAE;aAC9C,IAAM,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE,MAAM,GAAG,EAAE,CAAC;aAChC,IAAI,EAAE,KAAK,SAAS,EAAE;iBACpB,SAAS;cACV;aACD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,EAAE,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAG,EAAE;iBAC5C,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC;cAC5B;aACD,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;UACnB;MACF;KACD,4BAAS,GAAT,UAAU,IAAU;SAClB,IAAI,CAAC,IAAI,IAAI,IAAI,YAAY,IAAI,MAAM,KAAK,EAAE;aAC5C,OAAO,CAAC,KAAK,CAAC,iEAAiE,EAAE,IAAI,CAAC,CAAC;aACvF,OAAO;UACR;SACD,IAAI,CAAC,gBAAgB,IAAI,IAAI,CAAC,YAAY,EAAE,CAAC;SAC7C,IAAI,IAAI,CAAC,QAAQ,YAAY,QAAQ,EAAE;aACrC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;UACxC;MACF;;;;;;KAMD,gCAAa,GAAb;SACE,IAAM,WAAW,GAAG,EAAE,CAAC;SACvB,IAAM,MAAM,GAAU,EAAE,EAAE,OAAO,GAAU,EAAE,CAAC;SAC9C,IAAI,CAAC,EAAE,GAAG,CAAC;SACX,IAAM,eAAe,GAAG,CAAC,CAAC;SAC1B,IAAM,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,eAAe,CAAC,CAAC;SAChD,IAAI,CAAC,EAAE,EAAE,EAAE,IAAI,CAAC;SAChB,IAAI,OAAO,EAAE,CAAC,EAAE,EAAE,CAAC;SACnB,KAAK,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAG,EAAE;aACnD,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;aACrB,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC;aAC1G,IAAI,WAAW,CAAC,GAAG,CAAC,KAAK,SAAS,EAAE;iBAClC,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;iBACrB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;iBAC9B,OAAO,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;cAChC;kBAAM;;iBAEL,OAAO,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC;cACxC;UACF;;;SAGD,IAAM,mBAAmB,GAAG,EAAE,CAAC;SAC/B,KAAK,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAG,EAAE;aAChD,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;aACrB,IAAI,CAAC,CAAC,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aACzB,IAAI,CAAC,CAAC,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aACzB,IAAI,CAAC,CAAC,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aACzB,OAAO,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;;;aAInC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAG,EAAE;iBAC3B,IAAI,OAAO,CAAC,CAAC,CAAC,KAAK,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE;qBAEvC,mBAAmB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;qBAC5B,MAAM;kBACP;cACF;UACF;SACD,KAAK,CAAC,GAAG,mBAAmB,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAG,EAAE;aACrD,IAAM,GAAG,GAAG,mBAAmB,CAAC,CAAC,CAAC,CAAC;aACnC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;aAC1B,KAAK,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAG,EAAE;iBACxD,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;cACtC;UACF;;SAED,IAAM,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;SAClD,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC;SACvB,OAAO,IAAI,CAAC;MACb;KACD,2CAAwB,GAAxB;SACE,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;SACzB,IAAM,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;;SAE5B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAG,EAAE;aAChC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;UAClB;;SAED,SAAS,iBAAiB,CAAC,CAAM,EAAE,CAAM;aACvC,OAAO,CAAC,CAAC,aAAa,GAAG,CAAC,CAAC,aAAa,CAAC;UAC1C;SACD,KAAK,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;;SAE9B,IAAM,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;SACnC,IAAM,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;SACnC,IAAI,OAAc,EAAE,OAAc,CAAC;SACnC,IAAI,IAAI,IAAI,IAAI,CAAC,MAAM,KAAK,MAAM;aAAE,OAAO,GAAG,EAAE,CAAC;SACjD,IAAI,IAAI,IAAI,IAAI,CAAC,MAAM,KAAK,MAAM;aAAE,OAAO,GAAG,EAAE,CAAC;SACjD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAG,EAAE;aAChC,IAAM,EAAE,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;aACxB,IAAI,OAAO;iBAAE,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;aACpC,IAAI,OAAO;iBAAE,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;UACrC;SACD,IAAI,OAAO;aAAE,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC;SAC7C,IAAI,OAAO;aAAE,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC;MAC9C;KACD,yBAAM,GAAN,UAAO,IAAS;SACd,IAAM,IAAI,GAAQ;aAChB,QAAQ,EAAE;iBACR,OAAO,EAAE,GAAG;iBACZ,IAAI,EAAE,UAAU;iBAChB,SAAS,EAAE,iBAAiB;cAC7B;UACF,CAAC;;SAEF,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;SACtB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;SACtB,IAAI,IAAI,CAAC,IAAI,KAAK,EAAE;aAAE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;SAC5C,IAAI,IAAI,CAAC,UAAU,KAAK,SAAS,EAAE;aACjC,IAAM,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;aACnC,KAAK,IAAI,GAAG,IAAI,UAAU,EAAE;iBAC1B,IAAI,UAAU,CAAC,GAAG,CAAC,KAAK,SAAS;qBAAE,IAAI,CAAC,GAAG,CAAC,GAAG,UAAU,CAAC,GAAG,CAAC,CAAC;cAChE;aACD,OAAO,IAAI,CAAC;UACb;SACD,IAAM,QAAQ,GAAG,EAAE,CAAC;SACpB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAG,EAAE;aAC9C,IAAM,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;aAChC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC;UAC7C;SACD,IAAM,KAAK,GAAU,EAAE,CAAC;SACxB,IAAM,OAAO,GAAU,EAAE,CAAC;SAC1B,IAAM,WAAW,GAAQ,EAAE,CAAC;SAC5B,IAAM,MAAM,GAAU,EAAE,CAAC;SACzB,IAAM,UAAU,GAAG,EAAE,CAAC;SACtB,IAAM,GAAG,GAAU,EAAE,CAAC;SACtB,IAAM,OAAO,GAAG,EAAE,CAAC;SACnB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAG,EAAE;aAC3C,IAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;aAC3B,IAAM,WAAW,GAAG,IAAI,CAAC;aACzB,IAAM,SAAS,GAAG,KAAK,CAAC;aACxB,IAAM,eAAe,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,SAAS,CAAC;aAC/D,IAAM,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;aAC/C,IAAM,mBAAmB,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC,CAAC;aAC1D,IAAM,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC;aACpF,IAAM,kBAAkB,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC;aACxD,IAAI,QAAQ,GAAG,CAAC,CAAC;aACjB,QAAQ,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;aACtC,QAAQ,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC,EAAE,WAAW,CAAC,CAAC;aAC5C,QAAQ,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC,EAAE,SAAS,CAAC,CAAC;aAC1C,QAAQ,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC,EAAE,eAAe,CAAC,CAAC;aAChD,QAAQ,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC,EAAE,aAAa,CAAC,CAAC;aAC9C,QAAQ,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC,EAAE,mBAAmB,CAAC,CAAC;aACpD,QAAQ,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC,EAAE,YAAY,CAAC,CAAC;aAC7C,QAAQ,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC,EAAE,kBAAkB,CAAC,CAAC;aACnD,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aACrB,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;aACnC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;aAC/B,IAAI,eAAe,EAAE;iBACnB,IAAM,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;iBAC/C,KAAK,CAAC,IAAI,CACR,UAAU,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,EAC5B,UAAU,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,EAC5B,UAAU,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAC7B,CAAC;cACH;aACD,IAAI,aAAa,EAAE;iBACjB,KAAK,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;cACzC;aACD,IAAI,mBAAmB,EAAE;iBACvB,IAAM,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC;iBACzC,KAAK,CAAC,IAAI,CACR,cAAc,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,EAChC,cAAc,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,EAChC,cAAc,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CACjC,CAAC;cACH;aACD,IAAI,YAAY,EAAE;iBAChB,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;cACvC;aACD,IAAI,kBAAkB,EAAE;iBACtB,IAAM,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;iBACvC,KAAK,CAAC,IAAI,CACR,aAAa,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,EAC9B,aAAa,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,EAC9B,aAAa,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAC/B,CAAC;cACH;UACF;SACD,SAAS,MAAM,CAAC,KAAa,EAAE,QAAgB,EAAE,OAAgB;aAC/D,OAAO,OAAO,GAAG,KAAK,IAAI,CAAC,IAAI,QAAQ,CAAC,GAAG,KAAK,IAAI,EAAG,CAAC,IAAI,QAAQ,CAAC,CAAC,CAAC;UACxE;SACD,SAAS,cAAc,CAAC,MAAe;aACrC,IAAM,IAAI,GAAG,MAAM,CAAC,CAAC,CAAC,QAAQ,EAAE,GAAG,MAAM,CAAC,CAAC,CAAC,QAAQ,EAAE,GAAG,MAAM,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;aAC7E,IAAI,WAAW,CAAC,IAAI,CAAC,KAAK,SAAS,EAAE;iBACnC,OAAO,WAAW,CAAC,IAAI,CAAC,CAAC;cAC1B;aACD,WAAW,CAAC,IAAI,CAAC,GAAG,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC;aACvC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC;aAC3C,OAAO,WAAW,CAAC,IAAI,CAAC,CAAC;UAC1B;SACD,SAAS,aAAa,CAAC,KAAY;aACjC,IAAM,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,QAAQ,EAAE,GAAG,KAAK,CAAC,CAAC,CAAC,QAAQ,EAAE,GAAG,KAAK,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;aAC1E,IAAI,UAAU,CAAC,IAAI,CAAC,KAAK,SAAS,EAAE;iBAClC,OAAO,UAAU,CAAC,IAAI,CAAC,CAAC;cACzB;aACD,UAAU,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC;aACjC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,CAAC;aAC5B,OAAO,UAAU,CAAC,IAAI,CAAC,CAAC;UACzB;SACD,SAAS,UAAU,CAAC,EAAW;aAC7B,IAAM,IAAI,GAAG,EAAE,CAAC,CAAC,CAAC,QAAQ,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;aAC/C,IAAI,OAAO,CAAC,IAAI,CAAC,KAAK,SAAS,EAAE;iBAC/B,OAAO,OAAO,CAAC,IAAI,CAAC,CAAC;cACtB;aACD,OAAO,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC;aAC/B,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;aACrB,OAAO,OAAO,CAAC,IAAI,CAAC,CAAC;UACtB;SACD,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;SACf,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;SAC9B,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;SAC5B,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC;aAAE,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;SACjD,IAAI,GAAG,CAAC,MAAM,GAAG,CAAC;aAAE,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;SAC1C,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;SACxB,OAAO,IAAI,CAAC;MACb;KACD,wBAAK,GAAL;;;;;;;;;;;;;;;SAeE,OAAO,IAAK,IAAI,CAAC,WAAmB,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;MACnD;KACD,uBAAI,GAAJ,UAAK,MAAY;SACf,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;SACnB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;SAChB,IAAI,CAAC,aAAa,GAAG,CAAC,EAAE,CAAC,CAAC;SAC1B,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;SACjB,IAAM,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;SACjC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAG,EAAE;aAClD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC;UACzC;SACD,IAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;SAC7B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAG,EAAE;aAChD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC;UACrC;SACD,IAAM,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;SAC3B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAG,EAAE;aAC/C,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC;UACnC;SACD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,MAAM,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAG,EAAE;aAC9D,IAAM,aAAa,GAAG,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;aAC9C,IAAI,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,KAAK,SAAS,EAAE;iBACvC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;cAC5B;aACD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,aAAa,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAG,EAAE;iBACvD,IAAM,GAAG,GAAG,aAAa,CAAC,CAAC,CAAC,EAAE,OAAO,GAAG,EAAE,CAAC;iBAC3C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAG,EAAE;qBAC7C,IAAM,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;qBAClB,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC;kBAC1B;iBACD,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;cACrC;UACF;SACD,OAAO,IAAI,CAAC;MACb;KACD,0BAAO,GAAP;SACE,IAAI,CAAC,aAAa,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,CAAC,CAAC;MACzC;KACH,eAAC;CAAD,CAnsBA,CAA8B,eAAe,GAmsB5C;CACD,IAAIC,OAAK,GAAW,CAAC,CAAC;AACtB,UAAgB,eAAe,KAAa,OAAOA,OAAK,EAAE,CAAC,EAAE;;CCrtB7D;;;;AAIA;KAIE,cAAY,GAAqD,EAAE,GAAqD;SAA5G,oBAAA,EAAA,UAAU,OAAO,CAAC,CAAE,QAAQ,EAAE,CAAE,QAAQ,EAAE,CAAE,QAAQ,CAAC;SAAE,oBAAA,EAAA,UAAU,OAAO,CAAC,CAAE,QAAQ,EAAE,CAAE,QAAQ,EAAE,CAAE,QAAQ,CAAC;SAD/G,WAAM,GAAY,IAAI,CAAC;SAE9B,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;SACf,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;MAChB;KACD,kBAAG,GAAH,UAAI,GAAY,EAAE,GAAY;SAC5B,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SACnB,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SACnB,OAAO,IAAI,CAAC;MACb;KACD,2BAAY,GAAZ,UAAa,KAAe;SAC1B,IAAI,IAAI,GAAG,CAAE,QAAQ,CAAC;SACtB,IAAI,IAAI,GAAG,CAAE,QAAQ,CAAC;SACtB,IAAI,IAAI,GAAG,CAAE,QAAQ,CAAC;SACtB,IAAI,IAAI,GAAG,CAAE,QAAQ,CAAC;SACtB,IAAI,IAAI,GAAG,CAAE,QAAQ,CAAC;SACtB,IAAI,IAAI,GAAG,CAAE,QAAQ,CAAC;SACtB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE;aAC/C,IAAM,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;aACnB,IAAM,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;aACvB,IAAM,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;aACvB,IAAI,CAAC,GAAG,IAAI;iBAAE,IAAI,GAAG,CAAC,CAAC;aACvB,IAAI,CAAC,GAAG,IAAI;iBAAE,IAAI,GAAG,CAAC,CAAC;aACvB,IAAI,CAAC,GAAG,IAAI;iBAAE,IAAI,GAAG,CAAC,CAAC;aACvB,IAAI,CAAC,GAAG,IAAI;iBAAE,IAAI,GAAG,CAAC,CAAC;aACvB,IAAI,CAAC,GAAG,IAAI;iBAAE,IAAI,GAAG,CAAC,CAAC;aACvB,IAAI,CAAC,GAAG,IAAI;iBAAE,IAAI,GAAG,CAAC,CAAC;UACxB;SACD,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;SAC/B,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;MAChC;KACD,4BAAa,GAAb,UAAc,MAAiB;SAC7B,IAAI,CAAC,SAAS,EAAE,CAAC;SACjB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAG,EAAE;aAChD,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;UAC/B;SACD,OAAO,IAAI,CAAC;MACb;KAED,mCAAoB,GAApB,UAAqB,MAAe,EAAE,IAAa;SACjD,IAAM,EAAE,GAAG,IAAI,CAAC,wBAAwB,CAAC;SACzC,IAAM,QAAQ,GAAG,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC;SACnD,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;SACpC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;SACpC,OAAO,IAAI,CAAC;MACb;KAED,4BAAa,GAAb,UAAc,MAAgB;;;SAG5B,IAAM,EAAE,GAAG,IAAI,CAAC,iBAAiB,CAAC;SAClC,IAAM,KAAK,GAAG,IAAI,CAAC;SACnB,MAAM,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;SAC/B,IAAI,CAAC,SAAS,EAAE,CAAC;SACjB,MAAM,CAAC,QAAQ,CAAC,UAAS,IAAc;aACrC,IAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;aAC/B,IAAI,QAAQ,KAAK,SAAS,EAAE;iBAC1B,KAAK,QAAQ,IAAI,QAAQ,YAAY,QAAQ,GAAG;qBAC9C,IAAM,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC;qBACnC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAG,EAAE;yBAClD,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;yBACrB,EAAE,CAAC,YAAY,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;yBAClC,KAAK,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;sBACzB;kBACF;sBAAM,KAAK,QAAQ,IAAI,QAAQ,YAAY,cAAc,GAAG;qBAC3D,IAAM,SAAS,GAAG,QAAQ,CAAC,UAAU,CAAC,QAAQ,CAAC;qBAC/C,IAAI,SAAS,KAAK,SAAS,EAAE;yBAC3B,IAAI,KAAK,SAAA,EAAE,MAAM,SAAQ,EAAE,MAAM,SAAA,CAAC;yBAClC,KAAK,SAAS,IAAI,SAAS,YAAY,0BAA0B,GAAG;6BAClE,KAAK,GAAG,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC;6BAC7B,MAAM,GAAG,SAAS,CAAC,MAAM,CAAC;6BAC1B,MAAM,GAAG,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC;0BAChC;8BAAM;6BACL,KAAK,GAAG,SAAS,CAAC,KAAK,CAAC;6BACxB,MAAM,GAAG,CAAC,CAAC;6BACX,MAAM,GAAG,CAAC,CAAC;0BACZ;yBACD,KAAK,IAAI,CAAC,GAAG,MAAM,EAAE,EAAE,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,IAAI,MAAM,EAAE;6BAC3D,EAAE,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;6BACvB,EAAE,CAAC,YAAY,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;6BAClC,KAAK,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;0BACzB;sBACF;kBACF;cACF;UACF,CAAC,CAAC;SACH,OAAO,IAAI,CAAC;MACb;KACD,oBAAK,GAAL;SACE,OAAO,IAAK,IAAI,CAAC,WAAmB,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;MACnD;KACD,mBAAI,GAAJ,UAAK,GAAS;SACZ,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;SACvB,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;SACvB,OAAO,IAAI,CAAC;MACb;KACD,wBAAS,GAAT;SACE,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAE,QAAQ,CAAC;SAClD,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAE,QAAQ,CAAC;SAClD,OAAO,IAAI,CAAC;MACb;KACD,sBAAO,GAAP;;SAEE,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MAC5F;KACD,wBAAS,GAAT,UAAU,MAA+B;SAA/B,uBAAA,EAAA,aAAsB,OAAO,EAAE;SACvC,OAAO,IAAI,CAAC,OAAO,EAAE,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC;MACzG;KACD,sBAAO,GAAP,UAAQ,MAA+B;SAA/B,uBAAA,EAAA,aAAsB,OAAO,EAAE;SACrC,OAAO,IAAI,CAAC,OAAO,EAAE,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;MACrF;KACD,4BAAa,GAAb,UAAc,KAAc;SAC1B,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;SACpB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;SACpB,OAAO,IAAI,CAAC;MACb;KACD,6BAAc,GAAd,UAAe,MAAe;SAC5B,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;SACrB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;SACrB,OAAO,IAAI,CAAC;MACb;KACD,6BAAc,GAAd,UAAe,MAAc;SAC3B,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAE,MAAM,CAAC,CAAC;SAC7B,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;SAC3B,OAAO,IAAI,CAAC;MACb;KACD,4BAAa,GAAb,UAAc,KAAc;SAC1B,IAAI,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;aAC3C,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;aAC5C,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE;aACjD,OAAO,KAAK,CAAC;UACd;SACD,OAAO,IAAI,CAAC;MACb;KACD,0BAAW,GAAX,UAAY,GAAS;SACnB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;cACtD,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;cACrD,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE;aACzD,OAAO,IAAI,CAAC;UACb;SACD,OAAO,KAAK,CAAC;MACd;KACD,2BAAY,GAAZ,UAAa,KAAc,EAAE,MAA+B;SAA/B,uBAAA,EAAA,aAAsB,OAAO,EAAE;;;SAG1D,OAAO,MAAM,CAAC,GAAG,CACf,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAClD,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAClD,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CACnD,CAAC;MACH;KACD,4BAAa,GAAb,UAAc,GAAS;;SAErB,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;aAC/C,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;aAChD,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE;aACrD,OAAO,KAAK,CAAC;UACd;SACD,OAAO,IAAI,CAAC;MACb;KAED,+BAAgB,GAAhB,UAAiB,MAAc;SAC7B,IAAM,YAAY,GAAG,IAAI,CAAC,8BAA8B,CAAC;;SAEzD,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;;SAE7C,OAAO,YAAY,CAAC,iBAAiB,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC;MACzF;KACD,8BAAe,GAAf,UAAgB,KAAY;;;SAG1B,IAAI,GAAG,EAAE,GAAG,CAAC;SACb,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,EAAE;aACtB,GAAG,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;aAClC,GAAG,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;UACnC;cAAM;aACL,GAAG,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;aAClC,GAAG,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;UACnC;SACD,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,EAAE;aACtB,GAAG,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;aACnC,GAAG,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;UACpC;cAAM;aACL,GAAG,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;aACnC,GAAG,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;UACpC;SACD,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,EAAE;aACtB,GAAG,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;aACnC,GAAG,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;UACpC;cAAM;aACL,GAAG,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;aACnC,GAAG,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;UACpC;SACD,QAAQ,GAAG,IAAI,KAAK,CAAC,QAAQ,IAAI,GAAG,IAAI,KAAK,CAAC,QAAQ,EAAE;MACzD;KACD,yBAAU,GAAV,UAAW,KAAc,EAAE,MAA+B;SAA/B,uBAAA,EAAA,aAAsB,OAAO,EAAE;SACxD,OAAO,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;MACrD;KAED,8BAAe,GAAf,UAAgB,KAAc;SAC5B,IAAM,EAAE,GAAG,IAAI,CAAC,mBAAmB,CAAC;SACpC,IAAM,YAAY,GAAG,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;SAC9D,OAAO,YAAY,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,MAAM,EAAE,CAAC;MACzC;KAED,gCAAiB,GAAjB,UAAkB,MAA6B;SAA7B,uBAAA,EAAA,aAAqB,MAAM,EAAE;SAC7C,IAAM,EAAE,GAAG,IAAI,CAAC,qBAAqB,CAAC;SACtC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;SAC9B,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC;SAChD,OAAO,MAAM,CAAC;MACf;KACD,wBAAS,GAAT,UAAU,GAAS;SACjB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;SACtB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;;SAEtB,IAAI,IAAI,CAAC,OAAO,EAAE;aAAE,IAAI,CAAC,SAAS,EAAE,CAAC;SACrC,OAAO,IAAI,CAAC;MACb;KACD,oBAAK,GAAL,UAAM,GAAS;SACb,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;SACtB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;SACtB,OAAO,IAAI,CAAC;MACb;KAKD,2BAAY,GAAZ,UAAa,MAAe;;SAE1B,IAAI,IAAI,CAAC,OAAO,EAAE;aAAE,OAAO,IAAI,CAAC;SAChC,IAAM,MAAM,GAAG,IAAI,CAAC,oBAAoB,CAAC;;SAEzC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;SACvE,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;SACvE,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;SACvE,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;SACvE,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;SACvE,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;SACvE,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;SACvE,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;SACvE,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;SAC3B,OAAO,IAAI,CAAC;MACb;KACD,wBAAS,GAAT,UAAU,MAAe;SACvB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;SACrB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;SACrB,OAAO,IAAI,CAAC;MACb;KACD,qBAAM,GAAN,UAAO,GAAS;SACd,OAAO,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;MAC7D;KACD,qBAAM,GAAN,UAAO,cAAuC;SAAvC,+BAAA,EAAA,qBAA8B,OAAO,EAAE;SAC5C,OAAO,CAAC,IAAI,CAAC,yDAAyD,CAAC,CAAC;SACxE,OAAO,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC;MACvC;KACD,oBAAK,GAAL;SACE,OAAO,CAAC,IAAI,CAAC,sDAAsD,CAAC,CAAC;SACrE,OAAO,IAAI,CAAC,OAAO,EAAE,CAAC;MACvB;KACD,gCAAiB,GAAjB,UAAkB,GAAS;SACzB,OAAO,CAAC,IAAI,CAAC,wEAAwE,CAAC,CAAC;SACvF,OAAO,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;MAChC;KACD,mCAAoB,GAApB,UAAqB,MAAc;SACjC,OAAO,CAAC,IAAI,CAAC,8EAA8E,CAAC,CAAC;SAC7F,OAAO,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC;MACtC;KACD,mBAAI,GAAJ,UAAK,cAAuC;SAAvC,+BAAA,EAAA,qBAA8B,OAAO,EAAE;SAC1C,OAAO,CAAC,IAAI,CAAC,qDAAqD,CAAC,CAAC;SACpE,OAAO,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;MACrC;KAxOc,6BAAwB,GAAG,IAAI,OAAO,EAAE,CAAC;KAQzC,sBAAiB,GAAG,IAAI,OAAO,EAAE,CAAC;KAkHlC,mCAA8B,GAAG,IAAI,OAAO,EAAE,CAAC;KAsC/C,wBAAmB,GAAG,IAAI,OAAO,EAAE,CAAC;KAMpC,0BAAqB,GAAG,IAAI,OAAO,EAAE,CAAC;KAmBtC,yBAAoB,GAAG;SACpC,IAAI,OAAO,EAAE,EAAE,IAAI,OAAO,EAAE,EAAE,IAAI,OAAO,EAAE,EAAE,IAAI,OAAO,EAAE;SAC1D,IAAI,OAAO,EAAE,EAAE,IAAI,OAAO,EAAE,EAAE,IAAI,OAAO,EAAE,EAAE,IAAI,OAAO,EAAE;MAC3D,CAAC;KA6CJ,WAAC;EAlRD;;CCRA;;;;AAIA;KAGE,gBAAY,MAA+B,EAAE,MAAkB;SAAnD,uBAAA,EAAA,aAAsB,OAAO,EAAE;SAAE,uBAAA,EAAA,UAAkB;SAC7D,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;SACrB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;MACtB;KACD,oBAAG,GAAH,UAAI,MAAe,EAAE,MAAc;SACjC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SACzB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;SACrB,OAAO,IAAI,CAAC;MACb;KAED,8BAAa,GAAb,UAAc,MAAiB,EAAE,cAAwB;SACvD,IAAM,GAAG,GAAG,MAAM,CAAC,iBAAiB,CAAC;SACrC,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;SAC3B,IAAI,cAAc,KAAK,SAAS,EAAE;aAChC,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;UAC7B;cAAM;aACL,GAAG,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;UAC7C;SACD,IAAI,WAAW,GAAG,CAAC,CAAC;SACpB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAG,EAAE;aAChD,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,MAAM,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UAC1E;SACD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;SACrC,OAAO,IAAI,CAAC;MACb;KACD,sBAAK,GAAL;SACE,OAAO,IAAK,IAAI,CAAC,WAAmB,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;MACnD;KACD,qBAAI,GAAJ,UAAK,MAAc;SACjB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;SAChC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;SAC5B,OAAO,IAAI,CAAC;MACb;KACD,sBAAK,GAAL;SACE,QAAQ,IAAI,CAAC,MAAM,IAAI,CAAC,EAAE;MAC3B;KACD,8BAAa,GAAb,UAAc,KAAc;SAC1B,QAAQ,KAAK,CAAC,iBAAiB,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE;MAC9E;KACD,gCAAe,GAAf,UAAgB,KAAc;SAC5B,QAAQ,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE;MACtD;KACD,iCAAgB,GAAhB,UAAiB,MAAc;SAC7B,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;SAC9C,OAAO,MAAM,CAAC,MAAM,CAAC,iBAAiB,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,SAAS,GAAG,SAAS,CAAC,CAAC;MAChF;KACD,8BAAa,GAAb,UAAc,GAAS;SACrB,OAAO,GAAG,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;MACnC;KACD,gCAAe,GAAf,UAAgB,KAAY;;;;;;;;SAQ1B,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,KAAK,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC;MAChF;KACD,2BAAU,GAAV,UAAW,KAAc,EAAE,MAA+B;SAA/B,uBAAA,EAAA,aAAsB,OAAO,EAAE;SACxD,IAAM,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;SAC3D,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SACnB,IAAI,aAAa,IAAI,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE;aAC/C,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,EAAE,CAAC;aACpC,MAAM,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;UACrD;SACD,OAAO,MAAM,CAAC;MACf;KACD,+BAAc,GAAd,UAAe,GAAsB;SAAtB,oBAAA,EAAA,UAAgB,IAAI,EAAE;SACnC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;SAClC,GAAG,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SAChC,OAAO,GAAG,CAAC;MACZ;KACD,6BAAY,GAAZ,UAAa,MAAe;SAC1B,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;SACjC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,iBAAiB,EAAE,CAAC;SACvD,OAAO,IAAI,CAAC;MACb;KACD,0BAAS,GAAT,UAAU,MAAe;SACvB,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;SACxB,OAAO,IAAI,CAAC;MACb;KACD,uBAAM,GAAN,UAAO,MAAc;SACnB,OAAO,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,MAAM,CAAC,MAAM,KAAK,IAAI,CAAC,MAAM,CAAC,CAAC;MAC7E;KA3Ec,wBAAiB,GAAG,IAAI,IAAI,EAAE,CAAC;KA4EhD,aAAC;EAxFD;;CCDA;;;;;AAKA;KAEE,iBAAY,EAAuB,EAAE,EAAuB,EAAE,EAAuB,EAAE,EAAuB,EAAE,EAAuB,EAAE,EAAuB;SAApJ,mBAAA,EAAA,SAAgB,KAAK,EAAE;SAAE,mBAAA,EAAA,SAAgB,KAAK,EAAE;SAAE,mBAAA,EAAA,SAAgB,KAAK,EAAE;SAAE,mBAAA,EAAA,SAAgB,KAAK,EAAE;SAAE,mBAAA,EAAA,SAAgB,KAAK,EAAE;SAAE,mBAAA,EAAA,SAAgB,KAAK,EAAE;SAC9J,IAAI,CAAC,MAAM,GAAG,CAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAE,CAAC;MAC1C;KACD,qBAAG,GAAH,UAAI,EAAS,EAAE,EAAS,EAAE,EAAS,EAAE,EAAS,EAAE,EAAS,EAAE,EAAS;SAClE,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;SAC3B,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;SACnB,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;SACnB,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;SACnB,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;SACnB,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;SACnB,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;SACnB,OAAO,IAAI,CAAC;MACb;KACD,uBAAK,GAAL;SACE,OAAO,IAAK,IAAI,CAAC,WAAmB,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;MACnD;KACD,sBAAI,GAAJ,UAAK,OAAgB;SACnB,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;SAC3B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAG,EAAE;aAC3B,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;UACnC;SACD,OAAO,IAAI,CAAC;MACb;KACD,+BAAa,GAAb,UAAc,CAAU;SACtB,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;SAC3B,IAAM,EAAE,GAAiB,CAAC,CAAC,QAAQ,CAAC;SACpC,IAAM,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;SACzD,IAAM,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;SACzD,IAAM,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;SAC7D,IAAM,IAAI,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;SACjE,MAAM,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,IAAI,GAAG,GAAG,EAAE,IAAI,GAAG,IAAI,CAAC,CAAC,SAAS,EAAE,CAAC;SACnF,MAAM,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,IAAI,GAAG,GAAG,EAAE,IAAI,GAAG,IAAI,CAAC,CAAC,SAAS,EAAE,CAAC;SACnF,MAAM,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,IAAI,GAAG,GAAG,EAAE,IAAI,GAAG,IAAI,CAAC,CAAC,SAAS,EAAE,CAAC;SACnF,MAAM,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,IAAI,GAAG,GAAG,EAAE,IAAI,GAAG,IAAI,CAAC,CAAC,SAAS,EAAE,CAAC;SACnF,MAAM,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,IAAI,CAAC,CAAC,SAAS,EAAE,CAAC;SACpF,MAAM,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,IAAI,CAAC,CAAC,SAAS,EAAE,CAAC;SACpF,OAAO,IAAI,CAAC;MACb;KAED,kCAAgB,GAAhB,UAAiB,MAAgB;SAC/B,IAAM,MAAM,GAAG,OAAO,CAAC,uBAAuB,CAAC;SAC/C,IAAM,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;SACjC,IAAI,QAAQ,CAAC,cAAc,KAAK,IAAI;aAClC,QAAQ,CAAC,qBAAqB,EAAE,CAAC;SACnC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC;cACjC,YAAY,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;SACpC,OAAO,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC;MACtC;KAED,kCAAgB,GAAhB,UAAiB,MAAc;SAC7B,IAAM,MAAM,GAAG,OAAO,CAAC,uBAAuB,CAAC;SAC/C,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;SAC3B,MAAM,CAAC,MAAM,GAAG,kBAAkB,CAAC;SACnC,MAAM,CAAC,YAAY,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;SACxC,OAAO,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC;MACtC;KACD,kCAAgB,GAAhB,UAAiB,MAAc;SAC7B,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;SAC3B,IAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;SAC7B,IAAM,SAAS,GAAG,CAAE,MAAM,CAAC,MAAM,CAAC;SAClC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAG,EAAE;aAC3B,IAAM,QAAQ,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;aACnD,IAAI,QAAQ,GAAG,SAAS,EAAE;iBACxB,OAAO,KAAK,CAAC;cACd;UACF;SACD,OAAO,IAAI,CAAC;MACb;KAGD,+BAAa,GAAb,UAAc,GAAS;SACrB,IAAM,EAAE,GAAG,OAAO,CAAC,gBAAgB,EACjC,EAAE,GAAG,OAAO,CAAC,gBAAgB,CAAC;SAChC,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;SAC3B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAG,CAAC,EAAG,EAAE;aAC5B,IAAM,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;aACxB,EAAE,CAAC,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;aAClD,EAAE,CAAC,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;aAClD,EAAE,CAAC,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;aAClD,EAAE,CAAC,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;aAClD,EAAE,CAAC,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;aAClD,EAAE,CAAC,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;aAClD,IAAM,EAAE,GAAG,KAAK,CAAC,eAAe,CAAC,EAAE,CAAC,CAAC;aACrC,IAAM,EAAE,GAAG,KAAK,CAAC,eAAe,CAAC,EAAE,CAAC,CAAC;;aAErC,IAAI,EAAE,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE;iBACpB,OAAO,KAAK,CAAC;cACd;UACF;SACD,OAAO,IAAI,CAAC;MACb;KACD,+BAAa,GAAb,UAAc,KAAc;SAC1B,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;SAC3B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAG,EAAE;aAC3B,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE;iBACxC,OAAO,KAAK,CAAC;cACd;UACF;SACD,OAAO,IAAI,CAAC;MACb;KA7Dc,+BAAuB,GAAG,IAAI,MAAM,EAAE,CAAC;KAUvC,+BAAuB,GAAG,IAAI,MAAM,EAAE,CAAC;KAoBvC,wBAAgB,GAAG,IAAI,OAAO,EAAE,CAAC;KACjC,wBAAgB,GAAG,IAAI,OAAO,EAAE,CAAC;KA+BlD,cAAC;EAtGD;;CCRA;;;;;AAKA;KAA4BD,0BAAQ;KAOlC;SAAA,YACE,iBAAO,SAER;SATD,wBAAkB,GAAY,IAAI,OAAO,EAAE,CAAC;SAC5C,sBAAgB,GAAY,IAAI,OAAO,EAAE,CAAC;;SAIjC,cAAQ,GAAY,IAAI,CAAC;SAGhC,KAAI,CAAC,IAAI,GAAG,QAAQ,CAAC;;MACtB;KACD,uCAAsB,GAAtB,eAAiC;KACjC,kCAAiB,GAAjB,UAAkB,MAA+B;SAA/B,uBAAA,EAAA,aAAsB,OAAO,EAAE;SAC/C,IAAM,UAAU,GAAG,IAAI,UAAU,EAAE,CAAC;;SAElC,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,CAAC;SACpC,OAAO,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,CAAC,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;;MAE5D;KACD,uBAAM,GAAN,UAAO,MAAe;;SAEpB,IAAM,EAAE,GAAG,IAAI,OAAO,EAAE,CAAC;;SAEvB,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,MAAM,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC;SAC1C,IAAI,CAAC,UAAU,CAAC,qBAAqB,CAAC,EAAE,CAAC,CAAC;;MAE7C;KACD,sBAAK,GAAL;SACE,OAAO,IAAK,IAAI,CAAC,WAAmB,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;MACnD;KACD,qBAAI,GAAJ,UAAK,MAAY;SACf,iBAAM,IAAI,YAAC,MAAM,CAAC,CAAC;SACnB,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC;SACxD,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC;SACpD,OAAO,IAAI,CAAC;MACb;KACH,aAAC;CAAD,CApCA,CAA4B,QAAQ;;CCRpC;;;;AAIA;KAAwCA,sCAAM;KAU5C,4BAAY,IAAY,EAAE,KAAa,EAAE,GAAW,EAAE,MAAc,EAAE,IAAkB,EAAE,GAAkB;SAAtC,qBAAA,EAAA,UAAkB;SAAE,oBAAA,EAAA,UAAkB;SAA5G,YACE,iBAAO,SASR;SAnBD,UAAI,GAAW,CAAC,CAAC;SACjB,UAAI,GAAQ,IAAI,CAAC;SAOR,0BAAoB,GAAY,IAAI,CAAC;SAG5C,KAAI,CAAC,IAAI,GAAG,oBAAoB,CAAC;SACjC,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC;SACjB,KAAI,CAAC,KAAK,GAAG,KAAK,CAAC;SACnB,KAAI,CAAC,GAAG,GAAG,GAAG,CAAC;SACf,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC;SACrB,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC;SACjB,KAAI,CAAC,GAAG,GAAG,GAAG,CAAC;SACf,KAAI,CAAC,sBAAsB,EAAE,CAAC;;MAC/B;KACD,iCAAI,GAAJ,UAAK,MAAY;SACf,iBAAM,IAAI,YAAC,MAAM,CAAC,CAAC;SACnB,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;SACxB,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;SAC1B,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC;SACtB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;SAC5B,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;SACxB,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC;SACtB,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;SACxB,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,KAAK,IAAI,GAAG,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;SACzE,OAAO,IAAI,CAAC;MACb;KACD,0CAAa,GAAb,UAAc,SAAiB,EAAE,UAAkB,EAAE,CAAS,EAAE,CAAS,EAAE,KAAa,EAAE,MAAc;SACtG,IAAI,CAAC,IAAI,GAAG;aACV,SAAS,EAAE,SAAS;aACpB,UAAU,EAAE,UAAU;aACtB,OAAO,EAAE,CAAC;aACV,OAAO,EAAE,CAAC;aACV,KAAK,EAAE,KAAK;aACZ,MAAM,EAAE,MAAM;UACf,CAAC;SACF,IAAI,CAAC,sBAAsB,EAAE,CAAC;MAC/B;KACD,4CAAe,GAAf;SACE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;SACjB,IAAI,CAAC,sBAAsB,EAAE,CAAC;MAC/B;KACD,mDAAsB,GAAtB;SACE,IAAM,EAAE,GAAG,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,KAAK,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;SACtD,IAAM,EAAE,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,MAAM,KAAK,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;SACtD,IAAM,EAAE,GAAG,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,IAAI,CAAC,CAAC;SACxC,IAAM,EAAE,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,MAAM,IAAI,CAAC,CAAC;SACxC,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC;SACnB,IAAI,KAAK,GAAG,EAAE,GAAG,EAAE,CAAC;SACpB,IAAI,GAAG,GAAG,EAAE,GAAG,EAAE,CAAC;SAClB,IAAI,MAAM,GAAG,EAAE,GAAG,EAAE,CAAC;SACrB,IAAI,IAAI,CAAC,IAAI,KAAK,IAAI,EAAE;aACtB,IAAM,KAAK,GAAG,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;aAClE,IAAM,KAAK,GAAG,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;aACpE,IAAM,MAAM,GAAG,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;aAC1D,IAAM,MAAM,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;aAC3D,IAAI,IAAI,MAAM,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC,CAAC;aAC7C,KAAK,GAAG,IAAI,GAAG,MAAM,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,CAAC;aAClD,GAAG,IAAI,MAAM,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC,CAAC;aAC5C,MAAM,GAAG,GAAG,GAAG,MAAM,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC;UACpD;SACD,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;MACvF;KACD,mCAAM,GAAN,UAAO,IAAS;SACd,IAAM,IAAI,GAAG,iBAAM,MAAM,YAAC,IAAI,CAAC,CAAC;SAChC,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;SAC7B,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;SAC7B,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;SAC/B,IAAI,CAAC,MAAM,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;SAC3B,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;SACjC,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;SAC7B,IAAI,CAAC,MAAM,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;SAC3B,IAAI,IAAI,CAAC,IAAI,KAAK,IAAI;aAAE,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;SACxE,OAAO,IAAI,CAAC;MACb;KACH,yBAAC;CAAD,CAjFA,CAAwC,MAAM;;CCH9C;;;;;;AAMA;KAAuCA,qCAAM;KAW3C,2BAAY,GAAgB,EAAE,MAAkB,EAAE,IAAkB,EAAE,GAAkB;SAA5E,oBAAA,EAAA,QAAgB;SAAE,uBAAA,EAAA,UAAkB;SAAE,qBAAA,EAAA,UAAkB;SAAE,oBAAA,EAAA,UAAkB;SAAxF,YACE,iBAAO,SAOR;SAjBD,UAAI,GAAW,CAAC,CAAC;SAGjB,WAAK,GAAW,EAAE,CAAC;SAEnB,UAAI,GAAQ,IAAI,CAAC;SACjB,eAAS,GAAW,EAAE,CAAC;SACvB,gBAAU,GAAW,CAAC,CAAC;SACd,yBAAmB,GAAY,IAAI,CAAC;SAG3C,KAAI,CAAC,IAAI,GAAG,mBAAmB,CAAC;SAChC,KAAI,CAAC,GAAG,GAAG,GAAG,CAAC;SACf,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC;SACjB,KAAI,CAAC,GAAG,GAAG,GAAG,CAAC;SACf,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC;SACrB,KAAI,CAAC,sBAAsB,EAAE,CAAC;;MAC/B;KACD,gCAAI,GAAJ,UAAK,MAAY;SACf,iBAAM,IAAI,YAAC,MAAM,CAAC,CAAC;SACnB,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC;SACtB,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;SACxB,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;SACxB,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC;SACtB,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;SAC1B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;SAC5B,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,KAAK,IAAI,GAAG,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;SACzE,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;SAClC,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC;SACpC,OAAO,IAAI,CAAC;MACb;KACD,mCAAO,GAAP,UAAQ,WAAmB,EAAE,SAAiB;SAC5C,OAAO,CAAC,IAAI,CAAC,iDAAiD;aAC1D,8DAA8D,CAAC,CAAC;SACpE,IAAI,SAAS,KAAK,SAAS;aAAE,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;SACxD,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC;MAClC;;;;;;;;;KASD,0CAAc,GAAd,UAAe,WAAmB;;SAEhC,IAAM,YAAY,GAAG,GAAG,GAAG,IAAI,CAAC,aAAa,EAAE,GAAG,WAAW,CAAC;SAC9D,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC,OAAO,GAAG,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;SACvD,IAAI,CAAC,sBAAsB,EAAE,CAAC;MAC/B;;;;KAID,0CAAc,GAAd;SACE,IAAM,YAAY,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,GAAG,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;SAC9D,OAAO,GAAG,GAAG,IAAI,CAAC,aAAa,EAAE,GAAG,YAAY,CAAC;MAClD;KACD,2CAAe,GAAf;SACE,OAAO,KAAK,CAAC,OAAO,GAAG,CAAC,GAAG,IAAI,CAAC,IAAI,CAChC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,GAAG,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;MAC3D;KACD,wCAAY,GAAZ;;SAEE,OAAO,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;MAClD;KACD,yCAAa,GAAb;;SAEE,OAAO,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;MAClD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KAoCD,yCAAa,GAAb,UAAc,SAAiB,EAAE,UAAkB,EAAE,CAAS,EAAE,CAAS,EAAE,KAAa,EAAE,MAAc;SACtG,IAAI,CAAC,MAAM,GAAG,SAAS,GAAG,UAAU,CAAC;SACrC,IAAI,CAAC,IAAI,GAAG;aACV,SAAS,EAAE,SAAS;aACpB,UAAU,EAAE,UAAU;aACtB,OAAO,EAAE,CAAC;aACV,OAAO,EAAE,CAAC;aACV,KAAK,EAAE,KAAK;aACZ,MAAM,EAAE,MAAM;UACf,CAAC;SACF,IAAI,CAAC,sBAAsB,EAAE,CAAC;MAC/B;KACD,2CAAe,GAAf;SACE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;SACjB,IAAI,CAAC,sBAAsB,EAAE,CAAC;MAC/B;KACD,kDAAsB,GAAtB;SACE,IAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;SACvB,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,CAAC,GAAG,CACnB,KAAK,CAAC,OAAO,GAAG,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC;SAClD,IAAI,MAAM,GAAG,CAAC,GAAG,GAAG,CAAC;SACrB,IAAI,KAAK,GAAG,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;SACjC,IAAI,IAAI,GAAG,CAAE,GAAG,GAAG,KAAK,CAAC;SACzB,IAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;SACvB,IAAI,IAAI,KAAK,IAAI,EAAE;aACjB,IAAM,SAAS,GAAG,IAAI,CAAC,SAAS,EAC9B,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;aAC/B,IAAI,IAAI,IAAI,CAAC,OAAO,GAAG,KAAK,GAAG,SAAS,CAAC;aACzC,GAAG,IAAI,IAAI,CAAC,OAAO,GAAG,MAAM,GAAG,UAAU,CAAC;aAC1C,KAAK,IAAI,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC;aAChC,MAAM,IAAI,IAAI,CAAC,MAAM,GAAG,UAAU,CAAC;UACpC;SACD,IAAM,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC;SAC7B,IAAI,IAAI,KAAK,CAAC;aAAE,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;SAC1D,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAC7B,IAAI,EAAE,IAAI,GAAG,KAAK,EAAE,GAAG,GAAG,MAAM,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;MAC5D;KACD,kCAAM,GAAN,UAAO,IAAS;SACd,IAAM,IAAI,GAAG,iBAAM,MAAM,YAAC,IAAI,CAAC,CAAC;SAChC,IAAI,CAAC,MAAM,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;SAC3B,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;SAC7B,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;SAC7B,IAAI,CAAC,MAAM,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;SAC3B,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;SAC/B,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;SACjC,IAAI,IAAI,CAAC,IAAI,KAAK,IAAI;aAAE,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;SACxE,IAAI,CAAC,MAAM,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;SACvC,IAAI,CAAC,MAAM,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;SACzC,OAAO,IAAI,CAAC;MACb;KACH,wBAAC;CAAD,CA7JA,CAAuC,MAAM;;CCH7C;;;;AAIA;KAA2BA,yBAAQ;KAWjC,eAAY,KAAa,EAAE,SAAqB;SAArB,0BAAA,EAAA,aAAqB;SAAhD,YACE,iBAAO,SAKR;SAPQ,aAAO,GAAY,IAAI,CAAC;SAG/B,KAAI,CAAC,IAAI,GAAG,OAAO,CAAC;SACpB,KAAI,CAAC,KAAK,GAAG,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC;SAC9B,KAAI,CAAC,SAAS,GAAG,SAAS,KAAK,SAAS,GAAG,SAAS,GAAG,CAAC,CAAC;SACzD,KAAI,CAAC,aAAa,GAAG,SAAS,CAAC;;MAChC;KACD,oBAAI,GAAJ,UAAK,MAAY;SACf,iBAAM,IAAI,YAAC,MAAM,CAAC,CAAC;SACnB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;SAC9B,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;SAClC,OAAO,IAAI,CAAC;MACb;KACD,sBAAM,GAAN,UAAO,IAAS;SACd,IAAI,IAAI,GAAG,iBAAM,MAAM,YAAC,IAAI,CAAC,CAAC;SAC9B,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC;SACxC,IAAI,CAAC,MAAM,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;SACvC,IAAI,IAAI,CAAC,WAAW,KAAK,SAAS;aAAE,IAAI,CAAC,MAAM,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;SACxF,IAAI,IAAI,CAAC,QAAQ,KAAK,SAAS;aAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;SACtE,IAAI,IAAI,CAAC,KAAK,KAAK,SAAS;aAAE,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;SAC7D,IAAI,IAAI,CAAC,KAAK,KAAK,SAAS;aAAE,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;SAC7D,IAAI,IAAI,CAAC,QAAQ,KAAK,SAAS;aAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;SACtE,IAAI,IAAI,CAAC,MAAM,KAAK,SAAS;aAAE,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC;SACzE,OAAO,IAAI,CAAC;MACb;KACD,sBAAI,6BAAU;cAAd,UAAe,KAAc;aAC3B,OAAO,CAAC,IAAI,CAAC,4CAA4C,CAAC,CAAC;UAC5D;;;QAAA;KACD,sBAAI,kCAAe;cAAnB,UAAoB,KAAa;aAC/B,OAAO,CAAC,IAAI,CAAC,0DAA0D,CAAC,CAAC;aACzE,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,YAAY,iBAAiB,EAAE;iBACnD,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,GAAG,KAAK,CAAC;cAChC;UACF;;;QAAA;KACD,sBAAI,mCAAgB;cAApB,UAAqB,KAAa;aAChC,OAAO,CAAC,IAAI,CAAC,4DAA4D,CAAC,CAAC;aAC3E,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,YAAY,kBAAkB,EAAE;iBACpD,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,GAAG,KAAK,CAAC;cACjC;UACF;;;QAAA;KACD,sBAAI,oCAAiB;cAArB,UAAsB,KAAa;aACjC,OAAO,CAAC,IAAI,CAAC,8DAA8D,CAAC,CAAC;aAC7E,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,YAAY,kBAAkB,EAAE;iBACpD,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC;cAClC;UACF;;;QAAA;KACD,sBAAI,kCAAe;cAAnB,UAAoB,KAAa;aAC/B,OAAO,CAAC,IAAI,CAAC,0DAA0D,CAAC,CAAC;aACzE,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,YAAY,kBAAkB,EAAE;iBACpD,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,GAAG,KAAK,CAAC;cAChC;UACF;;;QAAA;KACD,sBAAI,qCAAkB;cAAtB,UAAuB,KAAa;aAClC,OAAO,CAAC,IAAI,CAAC,gEAAgE,CAAC,CAAC;aAC/E,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,YAAY,kBAAkB,EAAE;iBACpD,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,KAAK,CAAC;cACnC;UACF;;;QAAA;KACD,sBAAI,mCAAgB;cAApB,UAAqB,KAAa;aAChC,OAAO,CAAC,IAAI,CAAC,4DAA4D,CAAC,CAAC;aAC3E,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,YAAY,kBAAkB,EAAE;iBACpD,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,GAAG,KAAK,CAAC;cACjC;UACF;;;QAAA;KACD,sBAAI,kCAAe;cAAnB,UAAoB,KAAa;aAC/B,OAAO,CAAC,IAAI,CAAC,0DAA0D,CAAC,CAAC;aACzE,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,YAAY,kBAAkB,EAAE;iBACpD,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,GAAG,KAAK,CAAC;cAChC;UACF;;;QAAA;KACD,sBAAI,sCAAmB;cAAvB,UAAwB,KAAc;aACpC,OAAO,CAAC,IAAI,CAAC,8GAA8G,CAAC,CAAC;UAC9H;;;QAAA;KACD,sBAAI,6BAAU;cAAd,UAAe,KAAa;aAC1B,OAAO,CAAC,IAAI,CAAC,+CAA+C,CAAC,CAAC;aAC9D,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,KAAK,CAAC;UAC1B;;;QAAA;KACD,sBAAI,iCAAc;cAAlB,UAAmB,KAAa;aAC9B,OAAO,CAAC,IAAI,CAAC,gDAAgD,CAAC,CAAC;UAChE;;;QAAA;KACD,sBAAI,iCAAc;cAAlB,UAAmB,KAAa;aAC9B,OAAO,CAAC,IAAI,CAAC,4DAA4D,CAAC,CAAC;aAC3E,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC;UACnC;;;QAAA;KACD,sBAAI,kCAAe;cAAnB,UAAoB,KAAa;aAC/B,OAAO,CAAC,IAAI,CAAC,8DAA8D,CAAC,CAAC;aAC7E,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,GAAG,KAAK,CAAC;UACpC;;;QAAA;KACH,YAAC;CAAD,CAnGA,CAA2B,QAAQ;;CCNnC;;;AAGA;KAOE,qBAAY,MAAe;SAL3B,SAAI,GAAW,CAAC,CAAC;SACjB,WAAM,GAAW,CAAC,CAAC;SACnB,YAAO,GAAY,IAAI,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;SACzC,QAAG,GAAQ,IAAI,CAAC;SAChB,WAAM,GAAY,IAAI,OAAO,EAAE,CAAC;SAE9B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;MACtB;KACD,0BAAI,GAAJ,UAAK,MAAY;SACf,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;SACpC,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;SACxB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;SAC5B,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;SAClC,OAAO,IAAI,CAAC;MACb;KACD,2BAAK,GAAL;SACE,OAAO,IAAK,IAAI,CAAC,WAAmB,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;MACnD;KACD,4BAAM,GAAN;SACE,IAAI,MAAM,GAAQ,EAAE,CAAC;SACrB,IAAI,IAAI,CAAC,IAAI,KAAK,CAAC;aAAE,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;SAC7C,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC;aAAE,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;SACnD,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,KAAK,GAAG,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,KAAK,GAAG;aAAE,MAAM,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;SAC9F,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC;SACjD,OAAO,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC;SAC5B,OAAO,MAAM,CAAC;MACf;KACH,kBAAC;CAAD,CAAC;;CChCD;;;AAGA;KAAgCA,8BAAK;KAEnC,oBAAY,KAAa,EAAE,SAAkB,EAAE,QAAoB,EAAE,KAAiB;SAAvC,yBAAA,EAAA,YAAoB;SAAE,sBAAA,EAAA,SAAiB;SAAtF,YACE,kBAAM,KAAK,EAAE,SAAS,CAAC,SAKxB;SAPQ,kBAAY,GAAY,IAAI,CAAC;SAGpC,KAAI,CAAC,IAAI,GAAG,YAAY,CAAC;SACzB,KAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;SACzB,KAAI,CAAC,KAAK,GAAG,KAAK,CAAC;SACnB,KAAI,CAAC,MAAM,GAAG,IAAI,WAAW,CAAC,IAAI,iBAAiB,CAAC,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;;MACvE;KACD,sBAAI,6BAAK;cAAT;;;aAGE,OAAO,IAAI,CAAC,SAAS,GAAG,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC;UACrC;cACD,UAAU,KAAa;;;aAGrB,IAAI,CAAC,SAAS,GAAG,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC;UACxC;;;QALA;KAMD,yBAAI,GAAJ,UAAK,MAAY;SACf,iBAAM,IAAI,YAAC,MAAM,CAAC,CAAC;SACnB,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;SAChC,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;SAC1B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;SACpC,OAAO,IAAI,CAAC;MACb;KACH,iBAAC;CAAD,CA1BA,CAAgC,KAAK;;CCFrC;;;AAGA;KAAqCA,mCAAW;KAE9C;SAAA,YACE,kBAAM,IAAI,iBAAiB,CAAC,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,SAC9C;SAHQ,uBAAiB,GAAY,IAAI,CAAC;;MAG1C;KACD,gCAAM,GAAN,UAAO,KAAY;SACjB,IAAI,GAAG,GAAG,KAAK,CAAC,OAAO,GAAG,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC;SAC1C,IAAI,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;SACtD,IAAI,GAAG,GAAG,KAAK,CAAC,QAAQ,IAAI,GAAG,CAAC;SAChC,IAAI,MAAM,GAAuB,IAAI,CAAC,MAAM,CAAC;SAC7C,IAAI,GAAG,KAAK,MAAM,CAAC,GAAG,IAAI,MAAM,KAAK,MAAM,CAAC,MAAM,IAAI,GAAG,KAAK,MAAM,CAAC,GAAG,EAAE;aACxE,MAAM,CAAC,GAAG,GAAG,GAAG,CAAC;aACjB,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC;aACvB,MAAM,CAAC,GAAG,GAAG,GAAG,CAAC;aACjB,MAAM,CAAC,sBAAsB,EAAE,CAAC;UACjC;MACF;KACH,sBAAC;CAAD,CAjBA,CAAqC,WAAW;;CCLhD;;;AAGA;KAAiCA,+BAAO;KAEtC,qBAAY,IAAU,EAAE,KAAc,EAAE,MAAe,EAAE,MAAsB,EAAE,IAAkB,EAAE,OAAwB,EAAE,KAAuB,EAAE,KAAuB,EAAE,SAAgD,EAAE,SAAgD,EAAE,UAAmB,EAAE,QAA0B;SAAnJ,0BAAA,EAAA,YAA2BT,qBAAa,CAAC,OAAO;SAAE,0BAAA,EAAA,YAA2BA,qBAAa,CAAC,OAAO;SAAnR,YACE,kBAAM,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,SAAS,EAAE,SAAS,EAAE,MAAM,EAAE,IAAI,EAAE,UAAU,EAAE,QAAQ,CAAC,SAO7F;SATQ,mBAAa,GAAY,IAAI,CAAC;SAGrC,KAAI,CAAC,KAAK,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC;SAC1D,KAAI,CAAC,SAAS,GAAG,SAAS,CAAC;SAC3B,KAAI,CAAC,SAAS,GAAG,SAAS,CAAC;SAC3B,KAAI,CAAC,eAAe,GAAI,KAAK,CAAC;SAC9B,KAAI,CAAC,KAAK,GAAG,KAAK,CAAC;SACnB,KAAI,CAAC,eAAe,GAAG,CAAC,CAAC;;MAC1B;KACH,kBAAC;CAAD,CAXA,CAAiC,OAAO;;CCHxC;;;;;AAKA;KAA0BS,wBAAQ;KAGhC,cAAY,IAAkB;SAA9B,YACE,iBAAO,SAGR;SALQ,YAAM,GAAY,IAAI,CAAC;SAG9B,KAAI,CAAC,IAAI,GAAG,MAAM,CAAC;SACnB,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC;;MAClB;KACD,mBAAI,GAAJ,UAAK,MAAY;SACf,iBAAM,IAAI,YAAC,MAAM,CAAC,CAAC;SACnB,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;SACxB,OAAO,IAAI,CAAC;MACb;KACH,WAAC;CAAD,CAbA,CAA0B,QAAQ;;CCFlC;;;;;;AAMA;KASE,kBAAY,KAAkB,EAAE,YAAwB,EAAE,gBAAgC;SAA9E,sBAAA,EAAA,UAAkB;SAA4B,iCAAA,EAAA,uBAAgC;SAP1F,mBAAc,GAAY,IAAI,OAAO,EAAE,CAAC;SAQtC,IAAI,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;;SAEzC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;;SAE5B,IAAI,IAAI,CAAC,gBAAgB,EAAE;;;;;;;aAOzB,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;aAC5C,IAAI,GAAG,KAAK,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;aAC7C,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;aACzB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;aAC7B,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;aAC9B,IAAI,CAAC,YAAY,GAAG,IAAI,YAAY,CAAC,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,iBAAiB,GAAG,CAAC,CAAC,CAAC;aACzF,IAAI,CAAC,WAAW,GAAG,IAAI,WAAW,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,iBAAiB,EAAEP,qBAAa,CAAC,IAAI,EAAED,mBAAW,CAAC,KAAK,CAAC,CAAC;UAC7I;cAAM;aACL,IAAI,CAAC,YAAY,GAAG,IAAI,YAAY,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;UAC9D;;SAED,IAAI,YAAY,KAAK,SAAS,EAAE;aAC9B,IAAI,CAAC,iBAAiB,EAAE,CAAC;UAC1B;cAAM;aACL,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,KAAK,YAAY,CAAC,MAAM,EAAE;iBAC7C,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;cAC3C;kBAAM;iBACL,OAAO,CAAC,IAAI,CAAC,iDAAiD,CAAC,CAAC;iBAChE,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;iBACvB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAG,EAAE;qBACpD,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,OAAO,EAAE,CAAC,CAAC;kBACvC;cACF;UACF;MACF;KACD,oCAAiB,GAAjB;SACE,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;SACvB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAG,EAAE;aACpD,IAAM,OAAO,GAAG,IAAI,OAAO,EAAE,CAAC;aAC9B,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE;iBACjB,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC;cAC/C;aACD,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;UACjC;MACF;KACD,uBAAI,GAAJ;SACE,IAAI,IAAU,CAAC;;SAEf,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAG,EAAE;aACpD,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;aACrB,IAAI,IAAI,EAAE;iBACR,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;cACnD;UACF;;SAED,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAG,EAAE;aACpD,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;aACrB,IAAI,IAAI,EAAE;iBACR,KAAK,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,YAAY,IAAI,GAAG;qBAChD,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;qBAChD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;kBACxC;sBAAM;qBACL,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;kBACpC;iBACD,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;cACnE;UACF;MACF;KAED,yBAAM,GAAN;SACE,IAAM,YAAY,GAAG,QAAQ,CAAC,mBAAmB,CAAC;;;SAGhD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAG,EAAE;;aAEpD,IAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC;aAC/E,YAAY,CAAC,gBAAgB,CAAC,MAAM,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;aAC5D,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC;UACjD;SACD,IAAI,IAAI,CAAC,gBAAgB,EAAE;aACzB,IAAI,CAAC,WAAW,CAAC,WAAW,GAAG,IAAI,CAAC;UACrC;;MAEJ;KACD,wBAAK,GAAL;SACE,OAAO,IAAK,IAAI,CAAC,WAAmB,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;MAC5F;KAlBc,4BAAmB,GAAG,IAAI,OAAO,EAAE,CAAC;KAmBrD,eAAC;EAlGD;;CCFA;;;;;AAKA;KAAiCQ,+BAAI;KAUnC,qBAAY,QAAmC,EAAE,QAAkC,EAAE,gBAAgC;SAAhC,iCAAA,EAAA,uBAAgC;SAArH,YACE,kBAAM,QAAQ,EAAE,QAAQ,CAAC,SA8B1B;SAxCD,cAAQ,GAAW,UAAU,CAAC;SAC9B,gBAAU,GAAY,IAAI,OAAO,EAAE,CAAC;SACpC,uBAAiB,GAAY,IAAI,OAAO,EAAE,CAAC;SAMlC,mBAAa,GAAY,IAAI,CAAC;SAGrC,KAAI,CAAC,IAAI,GAAG,aAAa,CAAC;;;;SAI1B,IAAI,KAAK,GAAG,EAAE,CAAC;SACf,IAAI,KAAI,CAAC,QAAQ,IAAI,KAAI,CAAC,QAAQ,CAAC,KAAK,KAAK,SAAS,EAAE;aACtD,IAAI,IAAI,SAAA,EAAE,KAAK,SAAA,CAAC;aAChB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,EAAG,CAAC,EAAE;iBAC7D,KAAK,GAAG,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAE,CAAC,CAAE,CAAC;iBACjC,IAAI,GAAG,IAAI,IAAI,CAAC,KAAI,CAAC,CAAC;iBACtB,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;iBACjB,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;iBACvB,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;iBACnC,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;iBACtC,IAAI,KAAK,CAAC,GAAG,KAAK,SAAS;qBAAE,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;cAC9D;aACD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,EAAG,CAAC,EAAE;iBAC7D,KAAK,GAAG,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAE,CAAC,CAAE,CAAC;iBACjC,IAAI,KAAK,CAAC,MAAM,KAAK,CAAE,CAAC,IAAI,KAAK,CAAC,MAAM,KAAK,IAAI;qBAC7C,KAAK,CAAE,KAAK,CAAC,MAAM,CAAE,KAAK,SAAS,EAAE;qBACvC,KAAK,CAAE,KAAK,CAAC,MAAM,CAAE,CAAC,GAAG,CAAC,KAAK,CAAE,CAAC,CAAE,CAAC,CAAC;kBACvC;sBAAM;qBACL,KAAI,CAAC,GAAG,CAAC,KAAK,CAAE,CAAC,CAAE,CAAC,CAAC;kBACtB;cACF;UACF;SACD,KAAI,CAAC,oBAAoB,EAAE,CAAC;SAC5B,KAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;SAC7B,KAAI,CAAC,IAAI,CAAC,IAAI,QAAQ,CAAC,KAAK,EAAE,SAAS,EAAE,gBAAgB,CAAC,EAAE,KAAI,CAAC,WAAW,CAAC,CAAC;;MAC/E;KACD,0BAAI,GAAJ,UAAK,QAAkB,EAAE,UAAmB;SAC1C,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;SACzB,IAAI,UAAU,KAAK,SAAS,EAAE;aAC5B,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;aAC7B,IAAI,CAAC,QAAQ,CAAC,iBAAiB,EAAE,CAAC;aAClC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC;UAC/B;SACD,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;SACjC,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;MAC/C;KACD,0BAAI,GAAJ;SACE,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;MACtB;KACD,0CAAoB,GAApB;SACE,KAAK,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,YAAY,QAAQ,GAAG;aACxD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,EAAG,EAAE;iBAC1D,IAAI,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAE,CAAC,CAAE,CAAC;iBACxC,IAAI,KAAK,GAAG,GAAG,GAAG,EAAE,CAAC,eAAe,EAAE,CAAC;iBACvC,IAAI,KAAK,KAAK,QAAQ,EAAE;qBACtB,EAAE,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;kBAC1B;sBAAM;qBACL,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;kBACpB;cACF;UACF;cAAM,KAAK,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,YAAY,cAAc,GAAG;aACrE,IAAI,GAAG,GAAG,IAAI,OAAO,EAAE,CAAC;aACxB,IAAI,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,UAAU,CAAC;aACrD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,KAAK,EAAE,CAAC,EAAG,EAAE;iBAC1C,GAAG,CAAC,CAAC,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;iBAC3B,GAAG,CAAC,CAAC,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;iBAC3B,GAAG,CAAC,CAAC,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;iBAC3B,GAAG,CAAC,CAAC,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;iBAC3B,IAAI,KAAK,GAAG,GAAG,GAAG,GAAG,CAAC,eAAe,EAAE,CAAC;iBACxC,IAAI,KAAK,KAAK,QAAQ,EAAE;qBACtB,GAAG,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;kBAC3B;sBAAM;qBACL,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;kBACrB;iBACD,UAAU,CAAC,OAAO,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;cACnD;UACF;MACF;KACD,uCAAiB,GAAjB,UAAkB,KAAc;SAC9B,iBAAM,iBAAiB,YAAC,IAAI,CAAC,CAAC;SAC9B,IAAI,IAAI,CAAC,QAAQ,KAAK,UAAU,EAAE;aAChC,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;UACrD;cAAM,IAAI,IAAI,CAAC,QAAQ,KAAK,UAAU,EAAE;aACvC,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;UACpD;cAAM;aACL,OAAO,CAAC,IAAI,CAAC,2CAA2C,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC;UAC3E;MACF;KACD,2BAAK,GAAL;SACE,OAAO,IAAK,IAAI,CAAC,WAAmB,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;MAC/G;KACH,kBAAC;CAAD,CAjGA,CAAiC,IAAI;;CCdrC;;;;AAIA,CAqBA;KA8BE,wBAAY,SAAc,EAAE,OAAY,EAAE,QAAa,EAAE,YAAiB;SACxE,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;SAC3B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;SACvB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;SACzB,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;SACjC,IAAI,CAAC,GAAG,GAAG,SAAS,CAAC,OAAO,CAAC;SAC7B,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC,KAAK,CAAC;SAC9B,IAAI,CAAC,QAAQ,GAAG,IAAI,OAAO,EAAE,CAAC;SAC9B,IAAI,CAAC,iBAAiB,GAAG,IAAI,OAAO,EAAE,CAAC;SACvC,IAAI,CAAC,aAAa,GAAG,OAAO,CAAC,OAAO,CAAC;SACrC,IAAI,CAAC,cAAc,GAAG,IAAI,OAAO,EAAE,CAAC;SACpC,IAAI,CAAC,iBAAiB,GAAG,IAAI,OAAO,CAAC,YAAY,CAAC,cAAc,EAAE,YAAY,CAAC,cAAc,CAAC,CAAC;SAC/F,IAAI,CAAC,WAAW,GAAG,IAAI,OAAO,EAAE,CAAC;SACjC,IAAI,CAAC,mBAAmB,GAAG,IAAI,OAAO,EAAE,CAAC;SACzC,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;SACtB,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;SACvB,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;SACvB,IAAI,CAAC,yBAAyB,GAAG,CAAC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,IAAI,CAAC,CAAC;SAC/E,IAAI,CAAC,eAAe,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,yBAAyB,CAAC,CAAC;SACjE,IAAI,CAAC,kBAAkB,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,yBAAyB,CAAC,CAAC;SACpE,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;SACzB,IAAI,CAAC,cAAc,GAAG;aACpB,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,OAAO,CAAC,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;aAClE,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,CAAC,EAAE,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,OAAO,CAAC,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,CAAC;UACrE,CAAC;SACF,IAAI,CAAC,OAAO,GAAG;aACb,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;aAChE,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAG,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,CAAC;UACpE,CAAC;SACF,IAAI,CAAC,eAAe,GAAG;aACrB,IAAI,OAAO,EAAE,EAAE,IAAI,OAAO,EAAE,EAAE,IAAI,OAAO,EAAE;aAC3C,IAAI,OAAO,EAAE,EAAE,IAAI,OAAO,EAAE,EAAE,IAAI,OAAO,EAAE;UAC5C,CAAC;;SAEF,IAAM,qBAAqB,GAAG,IAAI,iBAAiB,EAAE,CAAC;SACtD,qBAAqB,CAAC,YAAY,GAAGD,oBAAY,CAAC,IAAI,CAAC;SACvD,qBAAqB,CAAC,QAAQ,GAAG,IAAI,CAAC;SACtC,IAAM,cAAc,GAAG,SAAS,CAAC,cAAc,CAAC,CAAC;SACjD,IAAM,gBAAgB,GAAG,aAAa,CAAC,KAAK,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;SACtE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,KAAK,IAAI,CAAC,yBAAyB,EAAE,EAAG,CAAC,EAAE;aAC1D,IAAM,WAAW,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,aAAa,MAAM,CAAC,CAAC;aACnD,IAAM,WAAW,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,aAAa,MAAM,CAAC,CAAC;aACnD,IAAM,aAAa,GAAG,qBAAqB,CAAC,KAAK,EAAE,CAAC;aACpD,aAAa,CAAC,YAAY,GAAG,WAAW,CAAC;aACzC,aAAa,CAAC,QAAQ,GAAG,WAAW,CAAC;aACrC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,GAAG,aAAa,CAAC;aACxC,IAAM,gBAAgB,GAAG,IAAI,cAAc,CAAC;iBAC1C,OAAO,EAAE;qBACP,eAAe,EAAE,EAAE;kBACpB;iBACD,QAAQ,EAAE,gBAAgB;iBAC1B,YAAY,EAAE,cAAc,CAAC,YAAY;iBACzC,cAAc,EAAE,cAAc,CAAC,cAAc;iBAC7C,YAAY,EAAE,WAAW;iBACzB,QAAQ,EAAE,WAAW;iBACrB,QAAQ,EAAE,IAAI;cACf,CAAC,CAAC;aACH,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,GAAG,gBAAgB,CAAC;UAC/C;;SAED,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;SACrB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;SACvB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;SACzB,IAAI,CAAC,IAAI,GAAGpB,iBAAS,CAAC,GAAG,CAAC;SAC1B,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;SAC/B,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;MAC/B;KACD,+BAAM,GAAN,UAAO,KAAU,EAAE,MAAW;SAC5B,IAAI,IAAI,CAAC,OAAO,KAAK,KAAK;aAAE,OAAO;SACnC,IAAI,IAAI,CAAC,UAAU,KAAK,KAAK,IAAI,IAAI,CAAC,WAAW,KAAK,KAAK;aAAE,OAAO;SACpE,IAAI,IAAI,CAAC,aAAa,CAAC,MAAM,KAAK,CAAC;aAAE,OAAO;;SAE5C,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;SACnC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;SACpC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;SAC/B,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;;SAElC,IAAI,SAAS,EAAE,YAAY,CAAC;SAC5B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAG,EAAE;aAC5D,IAAM,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;aACpC,IAAM,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;aAC5B,IAAI,MAAM,KAAK,SAAS,EAAE;iBACxB,OAAO,CAAC,IAAI,CAAC,uBAAuB,EAAE,KAAK,EAAE,gBAAgB,CAAC,CAAC;iBAC/D,SAAS;cACV;aACD,IAAM,YAAY,GAAG,MAAM,CAAC,MAAM,CAAC;aACnC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;aACzC,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;aAChD,KAAK,KAAK,IAAI,KAAK,YAAY,UAAU,GAAG;iBAC1C,SAAS,GAAG,CAAC,CAAC;iBACd,YAAY,GAAG,IAAI,CAAC;iBACpB,IAAM,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;iBACtC,IAAM,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;;;;;;;;;;;;;;iBAcvC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,GAAG,CAAC,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAC;;iBAEtE,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAC;;iBAE5D,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,GAAG,CAAC,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAC;;iBAEtE,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAC;;iBAElE,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,GAAG,CAAC,EAAE,CAAC,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAC;;iBAE/D,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAC;iBAC3D,IAAI,CAAC,cAAc,CAAC,CAAC,IAAI,GAAG,CAAC;iBAC7B,IAAI,CAAC,cAAc,CAAC,CAAC,IAAI,GAAG,CAAC;cAC9B;kBAAM;iBACL,SAAS,GAAG,CAAC,CAAC;iBACd,YAAY,GAAG,KAAK,CAAC;cACtB;aACD,IAAI,MAAM,CAAC,GAAG,KAAK,IAAI,EAAE;iBACvB,IAAM,IAAI,GAAG,EAAE,SAAS,EAAEY,qBAAa,CAAC,OAAO,EAAE,SAAS,EAAEA,qBAAa,CAAC,OAAO,EAAE,MAAM,EAAEE,qBAAa,CAAC,IAAI,EAAE,CAAC;iBAChH,MAAM,CAAC,GAAG,GAAG,IAAI,iBAAiB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;iBACvF,YAAY,CAAC,sBAAsB,EAAE,CAAC;cACvC;aACD,KAAK,MAAM,IAAI,MAAM,YAAY,eAAe,GAAG;iBACjD,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;cACtB;aACD,IAAM,SAAS,GAAG,MAAM,CAAC,GAAG,CAAC;aAC7B,IAAM,YAAY,GAAG,MAAM,CAAC,MAAM,CAAC;aACnC,IAAI,CAAC,mBAAmB,CAAC,qBAAqB,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;aAClE,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;aACrD,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;aAC1C,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;;;aAGvB,KAAK,IAAI,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,SAAS,EAAE,IAAI,EAAG,EAAE;iBAC5C,IAAI,YAAY,EAAE;qBAChB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;qBAC7C,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC;qBAChD,YAAY,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;qBACzC,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;qBACtC,IAAM,YAAY,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;qBAChD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;kBACpC;sBAAM;qBACL,IAAI,CAAC,WAAW,CAAC,qBAAqB,CAAC,KAAK,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;qBACjE,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;kBACvC;iBACD,YAAY,CAAC,iBAAiB,EAAE,CAAC;iBACjC,YAAY,CAAC,kBAAkB,CAAC,UAAU,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC;;iBAErE,YAAY,CAAC,GAAG,CACd,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAClB,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAClB,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAClB,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CACnB,CAAC;iBACF,YAAY,CAAC,QAAQ,CAAC,YAAY,CAAC,gBAAgB,CAAC,CAAC;iBACrD,YAAY,CAAC,QAAQ,CAAC,YAAY,CAAC,kBAAkB,CAAC,CAAC;;iBAEvD,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,YAAY,CAAC,gBAAgB,EAAE,YAAY,CAAC,kBAAkB,CAAC,CAAC;iBACxG,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;;iBAEpD,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC;iBAC5B,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,MAAM,EAAE,YAAY,CAAC,CAAC;;;iBAGhD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAG,EAAE;qBAC1D,IAAM,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;qBACnC,IAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;qBAC9C,IAAM,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;qBACjC,KAAK,QAAQ,IAAI,QAAQ,YAAY,aAAa,GAAG;yBACnD,IAAM,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC;yBAC/B,IAAM,SAAS,GAAG,QAAQ,CAAC,SAAS,CAAC;yBACrC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAG,EAAE;6BAChD,IAAM,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;6BACxB,IAAM,aAAa,GAAG,SAAS,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC;6BACrD,IAAI,aAAa,CAAC,OAAO,KAAK,IAAI,EAAE;iCAClC,IAAM,aAAa,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE,aAAa,EAAE,YAAY,EAAE,IAAI,CAAC,mBAAmB,CAAC,CAAC;iCAC3G,IAAI,CAAC,SAAS,CAAC,kBAAkB,CAAC,YAAY,EAAE,IAAI,EAAE,QAAQ,EAAE,aAAa,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;8BAC/F;0BACF;sBACF;0BAAM;yBACL,IAAM,aAAa,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE,QAAQ,EAAE,YAAY,EAAE,IAAI,CAAC,mBAAmB,CAAC,CAAC;yBACtG,IAAI,CAAC,SAAS,CAAC,kBAAkB,CAAC,YAAY,EAAE,IAAI,EAAE,QAAQ,EAAE,aAAa,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;sBAC9F;kBACF;cACF;UACF;;SAED,IAAM,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE,EACjD,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE,CAAC;SAC5C,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,UAAU,EAAE,UAAU,CAAC,CAAC;SACrD,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;MAC1B;KACO,yCAAgB,GAAxB,UAAyB,MAAW,EAAE,QAAa,EAAE,YAAiB,EAAE,kBAAuB;SAC7F,IAAM,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;SACjC,IAAI,MAAM,GAAG,IAAI,CAAC;SAClB,IAAI,gBAAgB,GAAG,IAAI,CAAC,eAAe,CAAC;SAC5C,IAAI,cAAc,GAAG,MAAM,CAAC,mBAAmB,CAAC;SAChD,IAAI,YAAY,EAAE;aAChB,gBAAgB,GAAG,IAAI,CAAC,kBAAkB,CAAC;aAC3C,cAAc,GAAG,MAAM,CAAC,sBAAsB,CAAC;UAChD;SACD,IAAI,CAAE,cAAc,EAAE;aACpB,IAAI,WAAW,GAAG,KAAK,CAAC;aACxB,IAAI,QAAQ,CAAC,YAAY,EAAE;iBACzB,KAAK,QAAQ,IAAI,QAAQ,YAAY,cAAc,GAAG;qBACpD,WAAW,GAAG,QAAQ,CAAC,eAAe,IAAI,QAAQ,CAAC,eAAe,CAAC,QAAQ,IAAI,QAAQ,CAAC,eAAe,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC;kBAC7H;sBAAM,KAAK,QAAQ,IAAI,QAAQ,YAAY,QAAQ,GAAG;qBACrD,WAAW,GAAG,QAAQ,CAAC,YAAY,IAAI,QAAQ,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC;kBACzE;cACF;aACD,IAAM,WAAW,GAAG,MAAM,YAAY,WAAW,IAAI,QAAQ,CAAC,QAAQ,CAAC;aACvE,IAAI,YAAY,GAAG,CAAC,CAAC;aACrB,IAAI,WAAW;iBAAE,YAAY,IAAI,IAAI,CAAC,aAAa,CAAC;aACpD,IAAI,WAAW;iBAAE,YAAY,IAAI,IAAI,CAAC,aAAa,CAAC;aACpD,MAAM,GAAG,gBAAgB,CAAC,YAAY,CAAC,CAAC;UACzC;cAAM;aACL,MAAM,GAAG,cAAc,CAAC;UACzB;SACD,IAAI,IAAI,CAAC,SAAS,CAAC,oBAAoB;aACpC,QAAQ,CAAC,WAAW,KAAK,IAAI;aAC5B,QAAQ,CAAC,cAAc,CAAC,MAAM,KAAK,CAAC,EAAE;;;aAGxC,IAAM,IAAI,GAAG,MAAM,CAAC,IAAI,EAAE,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC;aAC/C,IAAI,mBAAmB,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;aACpD,IAAI,mBAAmB,KAAK,SAAS,EAAE;iBACrC,mBAAmB,GAAG,EAAE,CAAC;iBACzB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,mBAAmB,CAAC;cACjD;aACD,IAAI,cAAc,GAAG,mBAAmB,CAAC,IAAI,CAAC,CAAC;aAC/C,IAAI,cAAc,KAAK,SAAS,EAAE;iBAChC,cAAc,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;iBAChC,mBAAmB,CAAC,IAAI,CAAC,GAAG,cAAc,CAAC;cAC5C;aACD,MAAM,GAAG,cAAc,CAAC;UACzB;SACD,MAAM,CAAC,OAAO,GAAG,QAAQ,CAAC,OAAO,CAAC;SAClC,MAAM,CAAC,SAAS,GAAG,QAAQ,CAAC,SAAS,CAAC;SACtC,IAAI,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC;SACzB,IAAI,IAAI,CAAC,iBAAiB,IAAI,IAAI,KAAKb,gBAAQ,CAAC,MAAM,EAAE;aACtD,IAAI,GAAGA,gBAAQ,CAAC,KAAK,CAAC;UACvB;SACD,IAAI,IAAI,CAAC,kBAAkB,EAAE;aAC3B,IAAI,IAAI,KAAKA,gBAAQ,CAAC,KAAK;iBAAE,IAAI,GAAGA,gBAAQ,CAAC,IAAI,CAAC;kBAC7C,IAAI,IAAI,KAAKA,gBAAQ,CAAC,IAAI;iBAAE,IAAI,GAAGA,gBAAQ,CAAC,KAAK,CAAC;UACxD;SACD,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC;SACnB,MAAM,CAAC,WAAW,GAAG,QAAQ,CAAC,WAAW,CAAC;SAC1C,MAAM,CAAC,cAAc,GAAG,QAAQ,CAAC,cAAc,CAAC;SAChD,MAAM,CAAC,kBAAkB,GAAG,QAAQ,CAAC,kBAAkB,CAAC;SACxD,MAAM,CAAC,SAAS,GAAG,QAAQ,CAAC,SAAS,CAAC;SACtC,IAAI,YAAY,IAAI,MAAM,CAAC,QAAQ,CAAC,QAAQ,KAAK,SAAS,EAAE;aAC1D,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;UACzD;SACD,OAAO,MAAM,CAAC;MACf;KACO,sCAAa,GAArB,UAAsB,MAAW,EAAE,MAAW,EAAE,YAAiB;SAC/D,IAAI,MAAM,CAAC,OAAO,KAAK,KAAK;aAAE,OAAO;SACrC,IAAM,OAAO,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,MAAM,CAAC,CAAC;SAChE,IAAI,OAAO,KAAK,MAAM,YAAY,IAAI,IAAI,MAAM,YAAY,IAAI,IAAI,MAAM,YAAY,MAAM,CAAC,EAAE;aAC7F,IAAI,MAAM,CAAC,UAAU,KAAK,MAAM,CAAC,aAAa,KAAK,KAAK,IAAI,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,MAAM,CAAC,KAAK,IAAI,CAAC,EAAE;iBAC5G,IAAM,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;iBACjC,IAAI,QAAQ,CAAC,OAAO,KAAK,IAAI,EAAE;qBAC7B,MAAM,CAAC,eAAe,CAAC,gBAAgB,CAAC,YAAY,CAAC,kBAAkB,EAAE,MAAM,CAAC,WAAW,CAAC,CAAC;qBAC7F,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;kBAC/B;cACF;UACF;SACD,IAAM,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;SACjC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAG,EAAE;aAChD,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,MAAM,EAAE,YAAY,CAAC,CAAC;UACvD;MACF;KACD,sBAAI,oCAAQ;cAAZ;aACE,OAAO,IAAI,CAAC,kBAAkB,GAAGH,gBAAQ,CAAC,KAAK,GAAGA,gBAAQ,CAAC,IAAI,CAAC;UACjE;cACD,UAAa,QAAkB;aAC7B,IAAM,KAAK,IAAI,QAAQ,KAAKA,gBAAQ,CAAC,IAAI,CAAC,CAAC;aAC3C,OAAO,CAAC,IAAI,CAAC,yFAAyF,GAAG,KAAK,GAAG,GAAG,CAAC,CAAC;aACtH,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;UACjC;;;QALA;KAMH,qBAAC;CAAD,CAAC,IAAA;;CCnVD;;;AAGA;KAAuCuB,qCAAc;KACnD,2BAAY,KAAa,EAAE,MAAc,EAAE,KAAa,EAAE,aAAsB,EAAE,cAAuB,EAAE,aAAsB;SAAjI,YACE,iBAAO,SAkIR;SAjIC,KAAI,CAAC,IAAI,GAAG,mBAAmB,CAAC;SAChC,KAAI,CAAC,UAAU,GAAG;aAChB,KAAK,EAAE,KAAK;aACZ,MAAM,EAAE,MAAM;aACd,KAAK,EAAE,KAAK;aACZ,aAAa,EAAE,aAAa;aAC5B,cAAc,EAAE,cAAc;aAC9B,aAAa,EAAE,aAAa;UAC7B,CAAC;SACF,IAAM,KAAK,GAAG,KAAI,CAAC;;SAEnB,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;SAC/C,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;SACjD,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;;SAE/C,IAAM,WAAW,GAAG,oBAAoB,CAAC,aAAa,EAAE,cAAc,EAAE,aAAa,CAAC,CAAC;SACvF,IAAM,UAAU,GAAG,mBAAmB,CAAC,aAAa,EAAE,cAAc,EAAE,aAAa,CAAC,CAAC;;SAErF,IAAM,OAAO,GAAG,KAAK,UAAU,GAAG,KAAK,GAAG,WAAW,GAAG,WAAW,EAAE,UAAU,CAAC,CAAC;SACjF,IAAM,QAAQ,GAAG,IAAI,YAAY,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC;SACnD,IAAM,OAAO,GAAG,IAAI,YAAY,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC;SAClD,IAAM,GAAG,GAAG,IAAI,YAAY,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC;;SAE9C,IAAI,kBAAkB,GAAG,CAAC,CAAC;SAC3B,IAAI,cAAc,GAAG,CAAC,CAAC;SACvB,IAAI,iBAAiB,GAAG,CAAC,CAAC;SAC1B,IAAI,gBAAgB,GAAG,CAAC,CAAC;;SAEzB,IAAI,UAAU,GAAG,CAAC,CAAC;;SAEnB,UAAU,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,KAAK,EAAE,MAAM,EAAI,KAAK,EAAG,aAAa,EAAE,cAAc,EAAE,CAAC,CAAC,CAAC;SAC/F,UAAU,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAI,CAAC,EAAE,CAAE,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,CAAE,KAAK,EAAG,aAAa,EAAE,cAAc,EAAE,CAAC,CAAC,CAAC;SAC/F,UAAU,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAI,CAAC,EAAI,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,MAAM,EAAE,aAAa,EAAE,aAAa,EAAG,CAAC,CAAC,CAAC;SAC/F,UAAU,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAI,CAAC,EAAE,CAAE,CAAC,EAAE,KAAK,EAAE,KAAK,EAAG,CAAE,MAAM,EAAE,aAAa,EAAE,aAAa,EAAG,CAAC,CAAC,CAAC;SAC/F,UAAU,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAI,CAAC,EAAE,CAAE,CAAC,EAAE,KAAK,EAAE,MAAM,EAAI,KAAK,EAAG,aAAa,EAAE,cAAc,EAAE,CAAC,CAAC,CAAC;SAC/F,UAAU,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,CAAE,KAAK,EAAG,aAAa,EAAE,cAAc,EAAE,CAAC,CAAC,CAAC;;SAE/F,KAAI,CAAC,QAAQ,CAAC,IAAI,eAAe,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,CAAC;SAC/C,KAAI,CAAC,YAAY,CAAC,UAAU,EAAE,IAAI,eAAe,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC;SAChE,KAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,IAAI,eAAe,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,CAAC;SAC7D,KAAI,CAAC,YAAY,CAAC,IAAI,EAAE,IAAI,eAAe,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;;SAErD,SAAS,oBAAoB,CAAC,CAAS,EAAE,CAAS,EAAE,CAAS;aAC3D,IAAI,QAAQ,GAAG,CAAC,CAAC;;aAEjB,QAAQ,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;aAClC,QAAQ,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;aAClC,QAAQ,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;aAClC,OAAO,QAAQ,CAAC;UACjB;SACD,SAAS,mBAAmB,CAAC,CAAS,EAAE,CAAS,EAAE,CAAS;aAC1D,IAAI,KAAK,GAAG,CAAC,CAAC;;aAEd,KAAK,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;aACnB,KAAK,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;aACnB,KAAK,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;aACnB,OAAO,KAAK,GAAG,CAAC,CAAC;UAClB;SACD,SAAS,UAAU,CAAC,CAAS,EAAE,CAAS,EAAE,CAAS,EAAE,IAAY,EAAE,IAAY,EAAE,KAAa,EAAE,MAAc,EAAE,KAAa,EAAE,KAAa,EAAE,KAAa,EAAE,aAAqB;aAChL,IAAM,YAAY,GAAI,KAAK,GAAG,KAAK,CAAC;aACpC,IAAM,aAAa,GAAG,MAAM,GAAG,KAAK,CAAC;aACrC,IAAM,SAAS,GAAG,KAAK,GAAG,CAAC,CAAC;aAC5B,IAAM,UAAU,GAAG,MAAM,GAAG,CAAC,CAAC;aAC9B,IAAM,SAAS,GAAG,KAAK,GAAG,CAAC,CAAC;aAC5B,IAAM,MAAM,GAAG,KAAK,GAAG,CAAC,CAAC;aACzB,IAAM,MAAM,GAAG,KAAK,GAAG,CAAC,CAAC;aACzB,IAAI,aAAa,GAAG,CAAC,CAAC;aACtB,IAAI,UAAU,GAAG,CAAC,CAAC;aACnB,IAAM,MAAM,GAAG,IAAI,OAAO,EAAE,CAAC;;aAE7B,KAAK,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,MAAM,EAAE,EAAE,EAAG,EAAE;iBACnC,IAAM,CAAC,GAAG,EAAE,GAAG,aAAa,GAAG,UAAU,CAAC;iBAC1C,KAAK,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,MAAM,EAAE,EAAE,EAAG,EAAE;qBACnC,IAAM,CAAC,GAAG,EAAE,GAAG,YAAY,GAAG,SAAS,CAAC;;qBAExC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC;qBACrB,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC;qBACrB,MAAM,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC;;qBAEtB,QAAQ,CAAC,kBAAkB,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;qBACxC,QAAQ,CAAC,kBAAkB,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;qBAC5C,QAAQ,CAAC,kBAAkB,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;;qBAE5C,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;qBACd,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;qBACd,MAAM,CAAC,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,GAAG,CAAC,GAAG,CAAE,CAAC,CAAC;;qBAEhC,OAAO,CAAC,kBAAkB,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;qBACvC,OAAO,CAAC,kBAAkB,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;qBAC3C,OAAO,CAAC,kBAAkB,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;;qBAE3C,GAAG,CAAC,cAAc,CAAC,GAAG,EAAE,GAAG,KAAK,CAAC;qBACjC,GAAG,CAAC,cAAc,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,KAAK,CAAC,CAAC;;qBAE3C,kBAAkB,IAAI,CAAC,CAAC;qBACxB,cAAc,IAAI,CAAC,CAAC;qBACpB,aAAa,IAAI,CAAC,CAAC;kBACpB;cACF;;;;aAID,KAAK,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,KAAK,EAAE,EAAE,EAAG,EAAE;iBAClC,KAAK,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,KAAK,EAAE,EAAE,EAAG,EAAE;;qBAElC,IAAM,CAAC,GAAG,gBAAgB,GAAG,EAAE,GAAG,MAAM,GAAG,EAAE,CAAC;qBAC9C,IAAM,CAAC,GAAG,gBAAgB,GAAG,EAAE,GAAG,MAAM,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC;qBACpD,IAAM,CAAC,GAAG,gBAAgB,IAAI,EAAE,GAAG,CAAC,CAAC,GAAG,MAAM,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC;qBAC1D,IAAM,CAAC,GAAG,gBAAgB,IAAI,EAAE,GAAG,CAAC,CAAC,GAAG,MAAM,GAAG,EAAE,CAAC;;qBAEpD,OAAO,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC;qBAC/B,OAAO,CAAC,iBAAiB,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;qBACnC,OAAO,CAAC,iBAAiB,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;;qBAEnC,OAAO,CAAC,iBAAiB,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;qBACnC,OAAO,CAAC,iBAAiB,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;qBACnC,OAAO,CAAC,iBAAiB,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;;qBAEnC,iBAAiB,IAAI,CAAC,CAAC;qBACvB,UAAU,IAAI,CAAC,CAAC;kBACjB;cACF;;aAED,KAAK,CAAC,QAAQ,CAAC,UAAU,EAAE,UAAU,EAAE,aAAa,CAAC,CAAC;;aAEtD,UAAU,IAAI,UAAU,CAAC;;aAEzB,gBAAgB,IAAI,aAAa,CAAC;UACnC;;MACF;KACH,wBAAC;CAAD,CArIA,CAAuC,cAAc;;CCJrD;;;;AAIA;KAAyCA,uCAAc;KACrD,6BAAY,KAAa,EAAE,MAAc,EAAE,aAAsB,EAAE,cAAuB;SAA1F,YACE,iBAAO,SAuDR;SAtDC,KAAI,CAAC,IAAI,GAAG,qBAAqB,CAAC;SAClC,KAAI,CAAC,UAAU,GAAG;aAChB,KAAK,EAAE,KAAK;aACZ,MAAM,EAAE,MAAM;aACd,aAAa,EAAE,aAAa;aAC5B,cAAc,EAAE,cAAc;UAC/B,CAAC;SACF,IAAM,UAAU,GAAG,KAAK,GAAG,CAAC,CAAC;SAC7B,IAAM,WAAW,GAAG,MAAM,GAAG,CAAC,CAAC;SAC/B,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;SAC7C,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;SAC9C,IAAM,MAAM,GAAG,KAAK,GAAG,CAAC,CAAC;SACzB,IAAM,MAAM,GAAG,KAAK,GAAG,CAAC,CAAC;SACzB,IAAM,aAAa,GAAG,KAAK,GAAG,KAAK,CAAC;SACpC,IAAM,cAAc,GAAG,MAAM,GAAG,KAAK,CAAC;SACtC,IAAM,QAAQ,GAAG,IAAI,YAAY,CAAC,MAAM,GAAG,MAAM,GAAG,CAAC,CAAC,CAAC;SACvD,IAAM,OAAO,GAAG,IAAI,YAAY,CAAC,MAAM,GAAG,MAAM,GAAG,CAAC,CAAC,CAAC;SACtD,IAAM,GAAG,GAAG,IAAI,YAAY,CAAC,MAAM,GAAG,MAAM,GAAG,CAAC,CAAC,CAAC;SAClD,IAAI,MAAM,GAAG,CAAC,CAAC;SACf,IAAI,OAAO,GAAG,CAAC,CAAC;SAChB,KAAK,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,MAAM,EAAE,EAAE,EAAG,EAAE;aACnC,IAAM,CAAC,GAAG,EAAE,GAAG,cAAc,GAAG,WAAW,CAAC;aAC5C,KAAK,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,MAAM,EAAE,EAAE,EAAG,EAAE;iBACnC,IAAM,CAAC,GAAG,EAAE,GAAG,aAAa,GAAG,UAAU,CAAC;iBAC1C,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;iBACrB,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,CAAE,CAAC,CAAC;iBAC3B,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;iBACxB,GAAG,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,KAAK,CAAC;iBAC1B,GAAG,CAAC,OAAO,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,KAAK,CAAC,CAAC;iBACpC,MAAM,IAAI,CAAC,CAAC;iBACZ,OAAO,IAAI,CAAC,CAAC;cACd;UACF;SACD,MAAM,GAAG,CAAC,CAAC;SACX,IAAM,OAAO,GAAG,KAAK,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,IAAI,KAAK,GAAG,WAAW,GAAG,WAAW,EAAE,KAAK,GAAG,KAAK,GAAG,CAAC,CAAC,CAAC;SACnG,KAAK,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,KAAK,EAAE,EAAE,EAAG,EAAE;aAClC,KAAK,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,KAAK,EAAE,EAAE,EAAG,EAAE;iBAClC,IAAM,CAAC,GAAG,EAAE,GAAG,MAAM,GAAG,EAAE,CAAC;iBAC3B,IAAM,CAAC,GAAG,EAAE,GAAG,MAAM,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC;iBACjC,IAAM,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,IAAI,MAAM,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC;iBACvC,IAAM,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,IAAI,MAAM,GAAG,EAAE,CAAC;iBACjC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;iBACpB,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;iBACxB,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;iBACxB,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;iBACxB,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;iBACxB,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;iBACxB,MAAM,IAAI,CAAC,CAAC;cACb;UACF;SACD,KAAI,CAAC,QAAQ,CAAC,IAAI,eAAe,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,CAAC;SAC/C,KAAI,CAAC,YAAY,CAAC,UAAU,EAAE,IAAI,eAAe,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC;SAChE,KAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,IAAI,eAAe,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,CAAC;SAC7D,KAAI,CAAC,YAAY,CAAC,IAAI,EAAE,IAAI,eAAe,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;;MACtD;KACH,0BAAC;CAAD,CA1DA,CAAyC,cAAc;;;KC6FhBA,qCAAQ;KAS7C,2BAAY,UAAwC;SAApD,YACE,iBAAO,SAkCR;SApCQ,yBAAmB,GAAY,IAAI,CAAC;SAG3C,KAAI,CAAC,IAAI,GAAG,mBAAmB,CAAC;SAChC,KAAI,CAAC,KAAK,GAAG,IAAI,KAAK,CAAC,QAAQ,CAAC,CAAC;SACjC,KAAI,CAAC,QAAQ,GAAG,IAAI,KAAK,CAAC,QAAQ,CAAC,CAAC;SACpC,KAAI,CAAC,SAAS,GAAG,EAAE,CAAC;SACpB,KAAI,CAAC,GAAG,GAAG,IAAI,CAAC;SAChB,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;SACrB,KAAI,CAAC,iBAAiB,GAAG,GAAG,CAAC;SAC7B,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC;SAClB,KAAI,CAAC,cAAc,GAAG,GAAG,CAAC;SAC1B,KAAI,CAAC,QAAQ,GAAG,IAAI,KAAK,CAAC,QAAQ,CAAC,CAAC;SACpC,KAAI,CAAC,iBAAiB,GAAG,GAAG,CAAC;SAC7B,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC;SACxB,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC;SACpB,KAAI,CAAC,SAAS,GAAG,CAAC,CAAC;SACnB,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC;SACtB,KAAI,CAAC,WAAW,GAAG,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;SACrC,KAAI,CAAC,eAAe,GAAG,IAAI,CAAC;SAC5B,KAAI,CAAC,iBAAiB,GAAG,CAAC,CAAC;SAC3B,KAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC;SAC1B,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC;SACxB,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;SACrB,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC;SACnB,KAAI,CAAC,OAAO,GAAGb,yBAAiB,CAAC,QAAQ,CAAC;SAC1C,KAAI,CAAC,YAAY,GAAG,CAAC,CAAC;SACtB,KAAI,CAAC,eAAe,GAAG,IAAI,CAAC;SAC5B,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;SACvB,KAAI,CAAC,kBAAkB,GAAG,CAAC,CAAC;SAC5B,KAAI,CAAC,gBAAgB,GAAG,OAAO,CAAC;SAChC,KAAI,CAAC,iBAAiB,GAAG,OAAO,CAAC;SACjC,KAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;SACtB,KAAI,CAAC,YAAY,GAAG,KAAK,CAAC;SAC1B,KAAI,CAAC,YAAY,GAAG,KAAK,CAAC;SAC1B,KAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;;MAC5B;KACD,gCAAI,GAAJ,UAAK,MAAY;SACf,iBAAM,IAAI,YAAC,MAAM,CAAC,CAAC;SACnB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;SAC9B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;SACpC,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;SAClC,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC;SACtB,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;SAChC,IAAI,CAAC,iBAAiB,GAAG,MAAM,CAAC,iBAAiB,CAAC;SAClD,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;SAC1B,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC,cAAc,CAAC;SAC5C,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;SACpC,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC;SACtC,IAAI,CAAC,iBAAiB,GAAG,MAAM,CAAC,iBAAiB,CAAC;SAClD,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;SAC9B,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;SAClC,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;SAClC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;SAC1C,IAAI,CAAC,eAAe,GAAG,MAAM,CAAC,eAAe,CAAC;SAC9C,IAAI,CAAC,iBAAiB,GAAG,MAAM,CAAC,iBAAiB,CAAC;SAClD,IAAI,CAAC,gBAAgB,GAAG,MAAM,CAAC,gBAAgB,CAAC;SAChD,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC;SACtC,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;SAChC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;SAC5B,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;SAC9B,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,YAAY,CAAC;SACxC,IAAI,CAAC,eAAe,GAAG,MAAM,CAAC,eAAe,CAAC;SAC9C,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;SAClC,IAAI,CAAC,kBAAkB,GAAG,MAAM,CAAC,kBAAkB,CAAC;SACpD,IAAI,CAAC,gBAAgB,GAAG,MAAM,CAAC,gBAAgB,CAAC;SAChD,IAAI,CAAC,iBAAiB,GAAG,MAAM,CAAC,iBAAiB,CAAC;SAClD,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;SAChC,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,YAAY,CAAC;SACxC,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,YAAY,CAAC;SACxC,OAAO,IAAI,CAAC;MACb;KACD,sBAAI,oCAAK;cAAT;aACE,OAAO,CAAC,IAAI,CAAC,2FAA2F,CAAC,CAAC;aAC1G,OAAO,KAAK,CAAC;UACd;cACD,UAAU,KAAK;aACb,OAAO,CAAC,IAAI,CAAC,0FAA0F,CAAC,CAAC;UAC1G;;;QAHA;KAIH,wBAAC;CAAD,CAvFA,CAAuC,QAAQ;;;KC5CLa,wCAAQ;KAUhD,8BAAY,UAA2C;SAAvD,YACE,iBAAO,SAmCR;SArCQ,4BAAsB,GAAY,IAAI,CAAC;SAG9C,KAAI,CAAC,OAAO,GAAG,EAAE,UAAU,EAAE,EAAE,EAAE,CAAC;SAClC,KAAI,CAAC,IAAI,GAAG,sBAAsB,CAAC;SACnC,KAAI,CAAC,KAAK,GAAG,IAAI,KAAK,CAAC,QAAQ,CAAC,CAAC;SACjC,KAAI,CAAC,SAAS,GAAG,GAAG,CAAC;SACrB,KAAI,CAAC,SAAS,GAAG,GAAG,CAAC;SACrB,KAAI,CAAC,GAAG,GAAG,IAAI,CAAC;SAChB,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;SACrB,KAAI,CAAC,iBAAiB,GAAG,GAAG,CAAC;SAC7B,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC;SAClB,KAAI,CAAC,cAAc,GAAG,GAAG,CAAC;SAC1B,KAAI,CAAC,QAAQ,GAAG,IAAI,KAAK,CAAC,QAAQ,CAAC,CAAC;SACpC,KAAI,CAAC,iBAAiB,GAAG,GAAG,CAAC;SAC7B,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC;SACxB,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC;SACpB,KAAI,CAAC,SAAS,GAAG,CAAC,CAAC;SACnB,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC;SACtB,KAAI,CAAC,WAAW,GAAG,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;SACrC,KAAI,CAAC,eAAe,GAAG,IAAI,CAAC;SAC5B,KAAI,CAAC,iBAAiB,GAAG,CAAC,CAAC;SAC3B,KAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC;SAC1B,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC;SACzB,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC;SACzB,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;SACrB,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC;SACnB,KAAI,CAAC,eAAe,GAAG,GAAG,CAAC;SAC3B,KAAI,CAAC,eAAe,GAAG,IAAI,CAAC;SAC5B,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;SACvB,KAAI,CAAC,kBAAkB,GAAG,CAAC,CAAC;SAC5B,KAAI,CAAC,gBAAgB,GAAG,OAAO,CAAC;SAChC,KAAI,CAAC,iBAAiB,GAAG,OAAO,CAAC;SACjC,KAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;SACtB,KAAI,CAAC,YAAY,GAAG,KAAK,CAAC;SAC1B,KAAI,CAAC,YAAY,GAAG,KAAK,CAAC;SAC1B,KAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;;MAC5B;KACD,mCAAI,GAAJ,UAAK,MAAY;SACf,iBAAM,IAAI,YAAC,MAAM,CAAC,CAAC;SACnB,IAAI,CAAC,OAAO,GAAG,EAAE,UAAU,EAAE,EAAE,EAAE,CAAC;SAClC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;SAC9B,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;SAClC,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;SAClC,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC;SACtB,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;SAChC,IAAI,CAAC,iBAAiB,GAAG,MAAM,CAAC,iBAAiB,CAAC;SAClD,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;SAC1B,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC,cAAc,CAAC;SAC5C,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;SACpC,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC;SACtC,IAAI,CAAC,iBAAiB,GAAG,MAAM,CAAC,iBAAiB,CAAC;SAClD,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;SAC9B,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;SAClC,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;SAClC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;SAC1C,IAAI,CAAC,eAAe,GAAG,MAAM,CAAC,eAAe,CAAC;SAC9C,IAAI,CAAC,iBAAiB,GAAG,MAAM,CAAC,iBAAiB,CAAC;SAClD,IAAI,CAAC,gBAAgB,GAAG,MAAM,CAAC,gBAAgB,CAAC;SAChD,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,YAAY,CAAC;SACxC,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,YAAY,CAAC;SACxC,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;SAChC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;SAC5B,IAAI,CAAC,eAAe,GAAG,MAAM,CAAC,eAAe,CAAC;SAC9C,IAAI,CAAC,eAAe,GAAG,MAAM,CAAC,eAAe,CAAC;SAC9C,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;SAClC,IAAI,CAAC,kBAAkB,GAAG,MAAM,CAAC,kBAAkB,CAAC;SACpD,IAAI,CAAC,gBAAgB,GAAG,MAAM,CAAC,gBAAgB,CAAC;SAChD,IAAI,CAAC,iBAAiB,GAAG,MAAM,CAAC,iBAAiB,CAAC;SAClD,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;SAChC,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,YAAY,CAAC;SACxC,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,YAAY,CAAC;SACxC,OAAO,IAAI,CAAC;MACb;KACH,2BAAC;CAAD,CAnFA,CAA0C,QAAQ;;;KCCTA,uCAAQ;KAS/C,6BAAY,UAA0C;SAAtD,YACE,iBAAO,SAyBR;SA3BQ,2BAAqB,GAAY,IAAI,CAAC;SAG7C,KAAI,CAAC,IAAI,GAAG,qBAAqB,CAAC;SAClC,KAAI,CAAC,KAAK,GAAG,IAAI,KAAK,CAAC,QAAQ,CAAC,CAAC;SACjC,KAAI,CAAC,GAAG,GAAG,IAAI,CAAC;SAChB,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;SACrB,KAAI,CAAC,iBAAiB,GAAG,GAAG,CAAC;SAC7B,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC;SAClB,KAAI,CAAC,cAAc,GAAG,GAAG,CAAC;SAC1B,KAAI,CAAC,QAAQ,GAAG,IAAI,KAAK,CAAC,QAAQ,CAAC,CAAC;SACpC,KAAI,CAAC,iBAAiB,GAAG,GAAG,CAAC;SAC7B,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC;SACxB,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC;SACxB,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;SACrB,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC;SACnB,KAAI,CAAC,OAAO,GAAGb,yBAAiB,CAAC,QAAQ,CAAC;SAC1C,KAAI,CAAC,YAAY,GAAG,CAAC,CAAC;SACtB,KAAI,CAAC,eAAe,GAAG,IAAI,CAAC;SAC5B,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;SACvB,KAAI,CAAC,kBAAkB,GAAG,CAAC,CAAC;SAC5B,KAAI,CAAC,gBAAgB,GAAG,OAAO,CAAC;SAChC,KAAI,CAAC,iBAAiB,GAAG,OAAO,CAAC;SACjC,KAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;SACtB,KAAI,CAAC,YAAY,GAAG,KAAK,CAAC;SAC1B,KAAI,CAAC,YAAY,GAAG,KAAK,CAAC;SAC1B,KAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;;MAC5B;KACD,kCAAI,GAAJ,UAAK,MAAY;SACf,iBAAM,IAAI,YAAC,MAAM,CAAC,CAAC;SACnB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;SAC9B,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC;SACtB,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;SAChC,IAAI,CAAC,iBAAiB,GAAG,MAAM,CAAC,iBAAiB,CAAC;SAClD,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;SAC1B,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC,cAAc,CAAC;SAC5C,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;SACpC,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC;SACtC,IAAI,CAAC,iBAAiB,GAAG,MAAM,CAAC,iBAAiB,CAAC;SAClD,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC;SACtC,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;SAChC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;SAC5B,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;SAC9B,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,YAAY,CAAC;SACxC,IAAI,CAAC,eAAe,GAAG,MAAM,CAAC,eAAe,CAAC;SAC9C,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;SAClC,IAAI,CAAC,kBAAkB,GAAG,MAAM,CAAC,kBAAkB,CAAC;SACpD,IAAI,CAAC,gBAAgB,GAAG,MAAM,CAAC,gBAAgB,CAAC;SAChD,IAAI,CAAC,iBAAiB,GAAG,MAAM,CAAC,iBAAiB,CAAC;SAClD,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;SAChC,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,YAAY,CAAC;SACxC,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,YAAY,CAAC;SACxC,OAAO,IAAI,CAAC;MACb;KACH,0BAAC;CAAD,CA9DA,CAAyC,QAAQ;;;KC9CPa,wCAAoB;KAI5D,8BAAY,UAA2C;SAAvD,YACE,kBAAM,UAAU,CAAC,SAOlB;SATQ,4BAAsB,GAAY,IAAI,CAAC;SAG9C,KAAI,CAAC,OAAO,GAAG,EAAE,UAAU,EAAE,EAAE,EAAE,CAAC;SAClC,KAAI,CAAC,IAAI,GAAG,sBAAsB,CAAC;SACnC,KAAI,CAAC,YAAY,GAAG,GAAG,CAAC;SACxB,KAAI,CAAC,SAAS,GAAG,GAAG,CAAC;SACrB,KAAI,CAAC,kBAAkB,GAAG,GAAG,CAAC;SAC9B,KAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;;MAC5B;KACD,mCAAI,GAAJ,UAAK,MAAY;SACf,iBAAM,IAAI,YAAC,MAAM,CAAC,CAAC;SACnB,IAAI,CAAC,OAAO,GAAG,EAAE,UAAU,EAAE,EAAE,EAAE,CAAC;SAClC,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,YAAY,CAAC;SACxC,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;SAClC,IAAI,CAAC,kBAAkB,GAAG,MAAM,CAAC,kBAAkB,CAAC;SACpD,OAAO,IAAI,CAAC;MACb;KACH,2BAAC;CAAD,CArBA,CAA0C,oBAAoB;;;KCGtBA,sCAAQ;KAE9C,4BAAY,UAAyC;SAArD,YACE,iBAAO,SAQR;SAVQ,0BAAoB,GAAY,IAAI,CAAC;SAG5C,KAAI,CAAC,IAAI,GAAG,oBAAoB,CAAC;SACjC,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;SACvB,KAAI,CAAC,kBAAkB,GAAG,CAAC,CAAC;SAC5B,KAAI,CAAC,GAAG,GAAG,KAAK,CAAC;SACjB,KAAI,CAAC,MAAM,GAAG,KAAK,CAAC;SACpB,KAAI,CAAC,YAAY,GAAG,KAAK,CAAC;SAC1B,KAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;;MAC5B;KACD,iCAAI,GAAJ,UAAK,MAAY;SACf,iBAAM,IAAI,YAAC,MAAM,CAAC,CAAC;SACnB,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;SAClC,IAAI,CAAC,kBAAkB,GAAG,MAAM,CAAC,kBAAkB,CAAC;SACpD,OAAO,IAAI,CAAC;MACb;KACH,yBAAC;CAAD,CAlBA,CAAwC,QAAQ;;;KCPTA,qCAAc;KAEnD,2BAAY,UAAwC;SAApD,YACE,kBAAM,UAAU,CAAC,SAElB;SAJQ,yBAAmB,GAAY,IAAI,CAAC;SAG3C,KAAI,CAAC,IAAI,GAAG,mBAAmB,CAAC;;MACjC;KACH,wBAAC;CAAD,CANA,CAAuC,cAAc;;;KCYbA,sCAAQ;KAM9C,4BAAY,UAAyC;SAArD,YACE,iBAAO,SASR;SAXQ,0BAAoB,GAAY,IAAI,CAAC;SAG5C,KAAI,CAAC,IAAI,GAAG,oBAAoB,CAAC;SACjC,KAAI,CAAC,KAAK,GAAG,IAAI,KAAK,CAAC,QAAQ,CAAC,CAAC;SACjC,KAAI,CAAC,SAAS,GAAG,CAAC,CAAC;SACnB,KAAI,CAAC,KAAK,GAAG,CAAC,CAAC;SACf,KAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;SAClB,KAAI,CAAC,OAAO,GAAG,CAAC,CAAC;SACjB,KAAI,CAAC,MAAM,GAAG,KAAK,CAAC;SACpB,KAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;;MAC5B;KACD,iCAAI,GAAJ,UAAK,MAAY;SACf,iBAAM,IAAI,YAAC,MAAM,CAAC,CAAC;SACnB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;SAC9B,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;SAClC,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;SAC1B,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;SAChC,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;SAC9B,OAAO,IAAI,CAAC;MACb;KACH,yBAAC;CAAD,CA1BA,CAAwC,QAAQ;;CClBhD;;;CAGA;KAOE,oCAAY,EAAyB,EAAE,UAAe,EAAE,UAAe;SACrE,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;SACb,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;SAC7B,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;MAC9B;KACD,4CAAO,GAAP,UAAQ,KAAa;SACnB,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;MACnB;KACD,6CAAQ,GAAR,UAAS,KAAK;SACZ,IAAI,KAAK,CAAC,KAAK,YAAY,WAAW,IAAI,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,wBAAwB,CAAC,EAAE;aACvF,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,YAAY,CAAC;aACjC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;UACf;cAAM;aACL,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,cAAc,CAAC;aACnC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;UACf;MACF;KACD,2CAAM,GAAN,UAAO,KAAa,EAAE,KAAa;SACjC,IAAI,CAAC,EAAE,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,IAAI,EAAE,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;SACrE,IAAI,CAAC,UAAU,CAAC,KAAK,EAAG,CAAC;SACzB,IAAI,CAAC,UAAU,CAAC,QAAQ,IAAI,KAAK,CAAC;SAClC,IAAI,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC,EAAE,CAAC,SAAS;aAAE,IAAI,CAAC,UAAU,CAAC,KAAK,IAAI,KAAK,GAAG,CAAC,CAAC;MACzE;KACD,oDAAe,GAAf,UAAgB,QAAa,EAAE,KAAa,EAAE,KAAa;SACzD,IAAM,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;SAChE,IAAI,SAAS,KAAK,IAAI,EAAE;aACtB,OAAO,CAAC,KAAK,CAAC,gIAAgI,CAAC,CAAC;aAChJ,OAAO;UACR;SACD,SAAS,CAAC,0BAA0B,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,IAAI,EAAE,KAAK,GAAG,IAAI,CAAC,IAAI,EAAE,QAAQ,CAAC,iBAAiB,CAAC,CAAC;SACjH,IAAI,CAAC,UAAU,CAAC,KAAK,EAAG,CAAC;SACzB,IAAI,CAAC,UAAU,CAAC,QAAQ,IAAI,KAAK,GAAG,QAAQ,CAAC,iBAAiB,CAAC;SAC/D,IAAI,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC,EAAE,CAAC,SAAS;aAAE,IAAI,CAAC,UAAU,CAAC,KAAK,IAAI,QAAQ,CAAC,iBAAiB,GAAG,KAAK,GAAG,CAAC,CAAC;MACtG;KACH,iCAAC;CAAD,CAAC,IAAA;;CCrCD;KAKE,6BAAY,EAAyB,EAAE,UAA2B,EAAE,UAAe;SACjF,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;SACb,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;SAC7B,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;MAC9B;KACD,qCAAO,GAAP,UAAQ,KAAa;SACnB,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;MACnB;KACD,oCAAM,GAAN,UAAO,KAAa,EAAE,KAAa;SACjC,IAAM,EAAE,GAA0B,IAAI,CAAC,EAAE,CAAC;SAC1C,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;SACvC,IAAI,CAAC,UAAU,CAAC,KAAK,EAAG,CAAC;SACzB,IAAI,CAAC,UAAU,CAAC,QAAQ,IAAI,KAAK,CAAC;SAClC,IAAI,IAAI,CAAC,IAAI,KAAK,EAAE,CAAC,SAAS;aAAE,IAAI,CAAC,UAAU,CAAC,KAAK,IAAI,KAAK,GAAG,CAAC,CAAC;MACpE;KACD,6CAAe,GAAf,UAAgB,QAAwB;SACtC,IAAM,EAAE,GAA0B,IAAI,CAAC,EAAE,CAAC;SAC1C,IAAM,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;SAChE,IAAI,SAAS,KAAK,IAAI,EAAE;aACtB,OAAO,CAAC,KAAK,CAAC,gIAAgI,CAAC,CAAC;aAChJ,OAAO;UACR;SACD,IAAM,QAAQ,GAAG,QAAQ,CAAC,UAAU,CAAC,QAAQ,CAAC;SAC9C,IAAI,KAAK,GAAG,CAAC,CAAC;SACd,KAAK,QAAQ,IAAI,QAAQ,YAAY,0BAA0B,GAAG;aAChE,KAAK,GAAG,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC;aAC5B,SAAS,CAAC,wBAAwB,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,QAAQ,CAAC,iBAAiB,CAAC,CAAC;UACrF;cAAM;aACL,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC;aACvB,SAAS,CAAC,wBAAwB,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,QAAQ,CAAC,iBAAiB,CAAC,CAAC;UACrF;SACD,IAAI,CAAC,UAAU,CAAC,KAAK,EAAG,CAAC;SACzB,IAAI,CAAC,UAAU,CAAC,QAAQ,IAAI,KAAK,GAAG,QAAQ,CAAC,iBAAiB,CAAC;SAC/D,IAAI,IAAI,CAAC,IAAI,KAAK,EAAE,CAAC,SAAS;aAAE,IAAI,CAAC,UAAU,CAAC,KAAK,IAAI,QAAQ,CAAC,iBAAiB,GAAG,KAAK,GAAG,CAAC,CAAC;MACjG;KACH,0BAAC;CAAD,CAAC,IAAA;;CC/CD;;;AAGA,CAIA;KAAA;SACE,WAAM,GAAQ,EAAE,CAAC;MAuDlB;KAtDC,yBAAG,GAAH,UAAI,KAAY;SACd,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,SAAS,EAAE;aACvC,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;UAC9B;SACD,IAAI,QAAQ,CAAC;SACb,QAAQ,KAAK,CAAC,IAAI;aAChB,KAAK,kBAAkB;iBACrB,QAAQ,GAAG;qBACT,SAAS,EAAE,IAAI,OAAO,EAAE;qBACxB,KAAK,EAAE,IAAI,KAAK,EAAE;qBAClB,MAAM,EAAE,KAAK;qBACb,UAAU,EAAE,CAAC;qBACb,YAAY,EAAE,CAAC;qBACf,aAAa,EAAE,IAAI,OAAO,EAAE;kBAC7B,CAAC;iBACF,MAAM;aACR,KAAK,WAAW;iBACd,QAAQ,GAAG;qBACT,QAAQ,EAAE,IAAI,OAAO,EAAE;qBACvB,SAAS,EAAE,IAAI,OAAO,EAAE;qBACxB,KAAK,EAAE,IAAI,KAAK,EAAE;qBAClB,QAAQ,EAAE,CAAC;qBACX,OAAO,EAAE,CAAC;qBACV,WAAW,EAAE,CAAC;qBACd,KAAK,EAAE,CAAC;qBACR,MAAM,EAAE,KAAK;qBACb,UAAU,EAAE,CAAC;qBACb,YAAY,EAAE,CAAC;qBACf,aAAa,EAAE,IAAI,OAAO,EAAE;kBAC7B,CAAC;iBACF,MAAM;aACR,KAAK,YAAY;iBACf,QAAQ,GAAG;qBACT,QAAQ,EAAE,IAAI,OAAO,EAAE;qBACvB,KAAK,EAAE,IAAI,KAAK,EAAE;qBAClB,QAAQ,EAAE,CAAC;qBACX,KAAK,EAAE,CAAC;qBACR,MAAM,EAAE,KAAK;qBACb,UAAU,EAAE,CAAC;qBACb,YAAY,EAAE,CAAC;qBACf,aAAa,EAAE,IAAI,OAAO,EAAE;kBAC7B,CAAC;iBACF,MAAM;aACR,KAAK,iBAAiB;iBACpB,QAAQ,GAAG;qBACT,SAAS,EAAE,IAAI,OAAO,EAAE;qBACxB,QAAQ,EAAE,IAAI,KAAK,EAAE;qBACrB,WAAW,EAAE,IAAI,KAAK,EAAE;kBACzB,CAAC;iBACF,MAAM;UACT;SACD,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC;SACjC,OAAO,QAAQ,CAAC;MACjB;KACH,kBAAC;CAAD,CAAC,IAAA;;CC/DD;;;CAGA,SAAS,cAAc,CAAC,IAAY;KAClC,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;KAC/B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAG,EAAE;SACtC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;MACtC;KACD,OAAO,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;CAC1B,CAAC;AACD,UAAgB,WAAW,CAAC,EAAyB,EAAE,IAAY,EAAE,IAAY;KAC/E,IAAM,MAAM,GAAG,EAAE,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;KACrC,EAAE,CAAC,YAAY,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;KAC9B,EAAE,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;KACzB,IAAI,EAAE,CAAC,kBAAkB,CAAC,MAAM,EAAE,EAAE,CAAC,cAAc,CAAC,KAAK,KAAK,EAAE;SAC9D,OAAO,CAAC,KAAK,CAAC,8CAA8C,CAAC,CAAC;MAC/D;KACD,IAAI,EAAE,CAAC,gBAAgB,CAAC,MAAM,CAAC,KAAK,EAAE,EAAE;SACtC,OAAO,CAAC,IAAI,CAAC,0CAA0C,EAAE,IAAI,KAAK,EAAE,CAAC,aAAa,GAAG,QAAQ,GAAG,UAAU,EAAE,EAAE,CAAC,gBAAgB,CAAC,MAAM,CAAC,EAAE,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC;MAChK;;;KAGD,OAAO,MAAM,CAAC;CAChB,CAAC;;CCZD,IAAI,cAAc,GAAW,CAAC,CAAC;CAC/B,SAAS,qBAAqB,CAAC,QAAgB;KAC7C,QAAQ,QAAQ;SACd,KAAKF,uBAAe,CAAC,MAAM;aACzB,OAAO,CAAE,QAAQ,EAAE,SAAS,CAAE,CAAC;SACjC,KAAKA,uBAAe,CAAC,IAAI;aACvB,OAAO,CAAE,MAAM,EAAE,SAAS,CAAE,CAAC;SAC/B,KAAKA,uBAAe,CAAC,IAAI;aACvB,OAAO,CAAE,MAAM,EAAE,SAAS,CAAE,CAAC;SAC/B,KAAKA,uBAAe,CAAC,KAAK;aACxB,OAAO,CAAE,MAAM,EAAE,cAAc,CAAE,CAAC;SACpC,KAAKA,uBAAe,CAAC,MAAM;aACzB,OAAO,CAAE,MAAM,EAAE,eAAe,CAAE,CAAC;SACrC,KAAKA,uBAAe,CAAC,IAAI;aACvB,OAAO,CAAE,MAAM,EAAE,gBAAgB,CAAE,CAAC;SACtC,KAAKA,uBAAe,CAAC,KAAK;aACxB,OAAO,CAAE,OAAO,EAAE,8BAA8B,CAAE,CAAC;SACrD;aACE,MAAM,IAAI,KAAK,CAAC,wBAAwB,GAAG,QAAQ,CAAC,CAAC;MACxD;CACH,CAAC;CACD,SAAS,wBAAwB,CAAC,YAAoB,EAAE,QAAyB;KAC/E,IAAM,UAAU,GAAG,qBAAqB,CAAC,QAAQ,CAAC,CAAC;KACnD,OAAO,OAAO,GAAG,YAAY,GAAG,wBAAwB,GAAG,UAAU,CAAC,CAAC,CAAC,GAAG,UAAU,GAAG,UAAU,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;CAChH,CAAC;CACD,SAAS,wBAAwB,CAAC,YAAoB,EAAE,QAAyB;KAC/E,IAAM,UAAU,GAAG,qBAAqB,CAAC,QAAQ,CAAC,CAAC;KACnD,OAAO,OAAO,GAAG,YAAY,GAAG,gCAAgC,GAAG,UAAU,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;CAC3G,CAAC;CACD,SAAS,sBAAsB,CAAC,YAAoB,EAAE,WAAwB;KAC5E,IAAI,eAAuB,CAAC;KAC5B,QAAQ,WAAW;SACjB,KAAKV,mBAAW,CAAC,MAAM;aACrB,eAAe,GAAG,QAAQ,CAAC;aAC3B,MAAM;SACR,KAAKA,mBAAW,CAAC,QAAQ;aACvB,eAAe,GAAG,UAAU,CAAC;aAC7B,MAAM;SACR,KAAKA,mBAAW,CAAC,UAAU;aACzB,eAAe,GAAG,YAAY,CAAC;aAC/B,MAAM;SACR,KAAKA,mBAAW,CAAC,MAAM;aACrB,eAAe,GAAG,iBAAiB,CAAC;aACpC,MAAM;SACR;aACE,MAAM,IAAI,KAAK,CAAC,2BAA2B,GAAG,WAAW,CAAC,CAAC;MAC9D;KACD,OAAO,OAAO,GAAG,YAAY,GAAG,wBAAwB,GAAG,eAAe,GAAG,uBAAuB,CAAC;CACvG,CAAC;CACD,SAAS,kBAAkB,CAAC,UAAe,EAAE,UAAe,EAAE,kBAAmC;KAC/F,UAAU,GAAG,UAAU,IAAI,EAAE,CAAC;KAC9B,IAAM,MAAM,GAAa;SACvB,CAAC,UAAU,CAAC,WAAW,IAAI,UAAU,CAAC,YAAY,IAAI,UAAU,CAAC,OAAO,IAAI,UAAU,CAAC,SAAS,IAAI,UAAU,CAAC,WAAW,IAAI,iDAAiD,GAAG,EAAE;SACpL,CAAC,UAAU,CAAC,SAAS,IAAI,UAAU,CAAC,sBAAsB,KAAK,kBAAkB,CAAC,GAAG,CAAC,gBAAgB,CAAC,GAAG,uCAAuC,GAAG,EAAE;SACtJ,CAAC,UAAU,CAAC,WAAW,KAAK,kBAAkB,CAAC,GAAG,CAAC,oBAAoB,CAAC,GAAG,0CAA0C,GAAG,EAAE;SAC1H,CAAC,UAAU,CAAC,gBAAgB,IAAI,UAAU,CAAC,MAAM,KAAK,kBAAkB,CAAC,GAAG,CAAC,wBAAwB,CAAC,GAAG,+CAA+C,GAAG,EAAE;MAC9J,CAAC;KACF,OAAO,MAAM,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;CACnD,CAAC;CACD,SAAS,eAAe,CAAC,OAAc;KACrC,IAAM,MAAM,GAAa,EAAE,CAAC;KAC5B,KAAK,IAAI,IAAI,IAAI,OAAO,EAAE;SACxB,IAAM,KAAK,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;SAC5B,IAAI,KAAK,KAAK,KAAK;aAAE,SAAS;SAC9B,MAAM,CAAC,IAAI,CAAC,UAAU,GAAG,IAAI,GAAG,GAAG,GAAG,KAAK,CAAC,CAAC;MAC9C;KACD,OAAO,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;CAC3B,CAAC;CACD,SAAS,uBAAuB,CAAC,EAAyB,EAAE,OAAqB,EAAE,WAAiB;KAClG,IAAM,UAAU,GAAG,EAAE,CAAC;KACtB,IAAM,CAAC,GAAW,EAAE,CAAC,mBAAmB,CAAC,OAAO,EAAE,EAAE,CAAC,iBAAiB,CAAC,CAAC;KACxE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAG,EAAE;SAC3B,IAAM,IAAI,GAAQ,EAAE,CAAC,eAAe,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;SACjD,IAAM,IAAI,GAAW,IAAI,CAAC,IAAI,CAAC;;SAE/B,UAAU,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,iBAAiB,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;MACxD;KACD,OAAO,UAAU,CAAC;CACpB,CAAC;CACD,SAAS,eAAe,CAAC,IAAY;KACnC,OAAO,IAAI,KAAK,EAAE,CAAC;CACrB,CAAC;CACD,SAAS,gBAAgB,CAAC,IAAY,EAAE,UAAe;KACrD,OAAO,IAAI;UACR,OAAO,CAAC,iBAAiB,EAAE,UAAU,CAAC,YAAY,CAAC;UACnD,OAAO,CAAC,kBAAkB,EAAE,UAAU,CAAC,aAAa,CAAC;UACrD,OAAO,CAAC,mBAAmB,EAAE,UAAU,CAAC,cAAc,CAAC;UACvD,OAAO,CAAC,kBAAkB,EAAE,UAAU,CAAC,aAAa,CAAC,CAAC;CAC3D,CAAC;CACD,SAAS,aAAa,CAAC,IAAY;KACjC,IAAM,OAAO,GAAG,yBAAyB,CAAC;KAC1C,SAAS,OAAO,CAAC,KAAU,EAAE,OAAe;SAC1C,IAAM,OAAO,GAAW,WAAW,CAAC,OAAO,CAAC,CAAC;SAC7C,IAAI,OAAO,KAAK,SAAS,EAAE;aACzB,MAAM,IAAI,KAAK,CAAC,4BAA4B,GAAG,OAAO,GAAG,GAAG,CAAC,CAAC;UAC/D;SACD,OAAO,aAAa,CAAC,OAAO,CAAC,CAAC;MAC/B;KACD,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;CACxC,CAAC;CACD,SAAS,WAAW,CAAC,IAAY;KAC/B,IAAM,OAAO,GAAG,oEAAoE,CAAC;KACrF,SAAS,OAAO,CAAC,KAAU,EAAE,KAAa,EAAE,GAAW,EAAE,OAAe;SACtE,IAAI,MAAM,GAAG,EAAE,CAAC;SAChB,KAAK,IAAI,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,GAAG,CAAC,EAAE,CAAC,EAAG,EAAE;aACrD,MAAM,IAAI,OAAO,CAAC,OAAO,CAAC,SAAS,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC;UACrD;SACD,OAAO,MAAM,CAAC;MACf;KACD,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;CACxC,CAAC;CACD;KAYE,sBAAY,QAAuB,EAAE,IAAY,EAAE,QAAa,EAAE,UAAe;SAC/E,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;SACzB,IAAM,EAAE,GAA0B,IAAI,CAAC,EAAE,GAAG,QAAQ,CAAC,OAAO,CAAC;SAC7D,IAAM,UAAU,GAAQ,QAAQ,CAAC,UAAU,CAAC;SAC5C,IAAM,OAAO,GAAQ,QAAQ,CAAC,OAAO,CAAC;SACtC,IAAI,YAAY,GAAG,QAAQ,CAAC,aAAa,CAAC,YAAY,CAAC;SACvD,IAAI,cAAc,GAAG,QAAQ,CAAC,aAAa,CAAC,cAAc,CAAC;SAC3D,IAAI,mBAAmB,GAAG,sBAAsB,CAAC;SACjD,IAAI,UAAU,CAAC,aAAa,KAAKT,iBAAS,CAAC,GAAG,EAAE;aAC9C,mBAAmB,GAAG,oBAAoB,CAAC;UAC5C;cAAM,IAAI,UAAU,CAAC,aAAa,KAAKA,iBAAS,CAAC,OAAO,EAAE;aACzD,mBAAmB,GAAG,yBAAyB,CAAC;UACjD;SACD,IAAI,gBAAgB,GAAG,kBAAkB,CAAC;SAC1C,IAAI,gBAAgB,GAAG,wBAAwB,CAAC;SAChD,IAAI,oBAAoB,GAAG,0BAA0B,CAAC;SACtD,IAAI,UAAU,CAAC,MAAM,EAAE;aACrB,QAAQ,QAAQ,CAAC,MAAM,CAAC,OAAO;iBAC7B,KAAKU,sBAAc,CAAC,cAAc,CAAC;iBACnC,KAAKA,sBAAc,CAAC,cAAc;qBAChC,gBAAgB,GAAG,kBAAkB,CAAC;qBACtC,MAAM;iBACR,KAAKA,sBAAc,CAAC,gBAAgB,CAAC;iBACrC,KAAKA,sBAAc,CAAC,gBAAgB;qBAClC,gBAAgB,GAAG,qBAAqB,CAAC;qBACzC,MAAM;iBACR,KAAKA,sBAAc,CAAC,yBAAyB,CAAC;iBAC9C,KAAKA,sBAAc,CAAC,yBAAyB;qBAC3C,gBAAgB,GAAG,qBAAqB,CAAC;qBACzC,MAAM;iBACR,KAAKA,sBAAc,CAAC,mBAAmB;qBACrC,gBAAgB,GAAG,oBAAoB,CAAC;qBACxC,MAAM;cACT;aACD,QAAQ,QAAQ,CAAC,MAAM,CAAC,OAAO;iBAC7B,KAAKA,sBAAc,CAAC,cAAc,CAAC;iBACnC,KAAKA,sBAAc,CAAC,yBAAyB;qBAC3C,gBAAgB,GAAG,wBAAwB,CAAC;qBAC5C,MAAM;cACT;aACD,QAAQ,QAAQ,CAAC,OAAO;iBACtB,KAAKF,yBAAiB,CAAC,QAAQ;qBAC7B,oBAAoB,GAAG,0BAA0B,CAAC;qBAClD,MAAM;iBACR,KAAKA,yBAAiB,CAAC,GAAG;qBACxB,oBAAoB,GAAG,qBAAqB,CAAC;qBAC7C,MAAM;iBACR,KAAKA,yBAAiB,CAAC,GAAG;qBACxB,oBAAoB,GAAG,qBAAqB,CAAC;qBAC7C,MAAM;cACT;UACF;SACD,IAAM,iBAAiB,GAAW,CAAC,QAAQ,CAAC,WAAW,GAAG,CAAC,IAAI,QAAQ,CAAC,WAAW,GAAG,GAAG,CAAC;;;SAG1F,IAAM,gBAAgB,GAAW,kBAAkB,CAAC,UAAU,EAAE,UAAU,EAAE,QAAQ,CAAC,UAAU,CAAC,CAAC;SACjG,IAAM,aAAa,GAAW,eAAe,CAAC,OAAO,CAAC,CAAC;;SAEvD,IAAM,OAAO,GAAyB,EAAE,CAAC,aAAa,EAAE,CAAC;SACzD,IAAI,YAAoB,EAAE,cAAsB,CAAC;SACjD,IAAI,QAAQ,YAAY,iBAAiB,EAAE;aACzC,YAAY,GAAG;iBACb,aAAa;iBACb,IAAI;cACL,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aACrC,cAAc,GAAG;iBACf,gBAAgB;iBAChB,aAAa;iBACb,IAAI;cACL,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;UACtC;cAAM;aACL,YAAY,GAAG;iBACb,YAAY,GAAG,UAAU,CAAC,SAAS,GAAG,SAAS;iBAC/C,YAAY,GAAG,UAAU,CAAC,SAAS,GAAG,OAAO;iBAC7C,sBAAsB,GAAG,QAAQ,CAAC,aAAa,CAAC,IAAI;iBACpD,aAAa;iBACb,UAAU,CAAC,sBAAsB,GAAG,yBAAyB,GAAG,EAAE;iBAClE,uBAAuB,GAAG,iBAAiB;iBAC3C,oBAAoB,GAAG,UAAU,CAAC,QAAQ;iBAC1C,UAAU,CAAC,GAAG,GAAG,iBAAiB,GAAG,EAAE;iBACvC,UAAU,CAAC,MAAM,GAAG,oBAAoB,GAAG,EAAE;iBAC7C,UAAU,CAAC,MAAM,GAAG,UAAU,GAAG,gBAAgB,GAAG,EAAE;iBACtD,UAAU,CAAC,QAAQ,GAAG,sBAAsB,GAAG,EAAE;iBACjD,UAAU,CAAC,KAAK,GAAG,mBAAmB,GAAG,EAAE;iBAC3C,UAAU,CAAC,WAAW,GAAG,yBAAyB,GAAG,EAAE;iBACvD,UAAU,CAAC,OAAO,GAAG,qBAAqB,GAAG,EAAE;iBAC/C,UAAU,CAAC,SAAS,GAAG,uBAAuB,GAAG,EAAE;iBACnD,UAAU,CAAC,eAAe,IAAI,UAAU,CAAC,sBAAsB,GAAG,6BAA6B,GAAG,EAAE;iBACpG,UAAU,CAAC,WAAW,GAAG,yBAAyB,GAAG,EAAE;iBACvD,UAAU,CAAC,YAAY,GAAG,0BAA0B,GAAG,EAAE;iBACzD,UAAU,CAAC,YAAY,GAAG,0BAA0B,GAAG,EAAE;iBACzD,UAAU,CAAC,QAAQ,GAAG,sBAAsB,GAAG,EAAE;iBACjD,UAAU,CAAC,YAAY,GAAG,mBAAmB,GAAG,EAAE;iBAClD,UAAU,CAAC,WAAW,GAAG,qBAAqB,GAAG,EAAE;iBACnD,UAAU,CAAC,QAAQ,GAAG,sBAAsB,GAAG,EAAE;iBACjD,UAAU,CAAC,gBAAgB,GAAG,sBAAsB,GAAG,EAAE;iBACzD,UAAU,CAAC,YAAY,GAAG,0BAA0B,GAAG,EAAE;iBACzD,UAAU,CAAC,YAAY,IAAI,UAAU,CAAC,WAAW,KAAK,KAAK,GAAG,0BAA0B,GAAG,EAAE;iBAC7F,UAAU,CAAC,WAAW,GAAG,sBAAsB,GAAG,EAAE;iBACpD,UAAU,CAAC,SAAS,GAAG,oBAAoB,GAAG,EAAE;iBAChD,8BAA8B,GAAG,UAAU,CAAC,iBAAiB;iBAC7D,UAAU,CAAC,gBAAgB,GAAG,uBAAuB,GAAG,EAAE;iBAC1D,UAAU,CAAC,gBAAgB,GAAG,UAAU,GAAG,mBAAmB,GAAG,EAAE;iBACnE,UAAU,CAAC,eAAe,GAAG,6BAA6B,GAAG,EAAE;iBAC/D,UAAU,CAAC,sBAAsB,GAAG,yBAAyB,GAAG,EAAE;iBAClE,UAAU,CAAC,sBAAsB,IAAI,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,gBAAgB,CAAC,GAAG,6BAA6B,GAAG,EAAE;iBACnH,2BAA2B;iBAC3B,+BAA+B;iBAC/B,gCAAgC;iBAChC,0BAA0B;iBAC1B,4BAA4B;iBAC5B,8BAA8B;iBAC9B,0BAA0B;iBAC1B,wBAAwB;iBACxB,oBAAoB;iBACpB,kBAAkB;iBAClB,yBAAyB;iBACzB,QAAQ;iBACR,yBAAyB;iBACzB,gCAAgC;iBAChC,gCAAgC;iBAChC,gCAAgC;iBAChC,gCAAgC;iBAChC,2BAA2B;iBAC3B,kCAAkC;iBAClC,kCAAkC;iBAClC,kCAAkC;iBAClC,kCAAkC;iBAClC,SAAS;iBACT,kCAAkC;iBAClC,kCAAkC;iBAClC,kCAAkC;iBAClC,kCAAkC;iBAClC,UAAU;iBACV,QAAQ;iBACR,qBAAqB;iBACrB,6BAA6B;iBAC7B,8BAA8B;iBAC9B,QAAQ;iBACR,IAAI;cACL,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aACrC,cAAc,GAAG;iBACf,gBAAgB;iBAChB,YAAY,GAAG,UAAU,CAAC,SAAS,GAAG,SAAS;iBAC/C,YAAY,GAAG,UAAU,CAAC,SAAS,GAAG,OAAO;iBAC7C,sBAAsB,GAAG,QAAQ,CAAC,aAAa,CAAC,IAAI;iBACpD,aAAa;iBACb,UAAU,CAAC,SAAS,GAAG,oBAAoB,GAAG,UAAU,CAAC,SAAS,GAAG,EAAE;iBACvE,uBAAuB,GAAG,iBAAiB;iBAC3C,CAAC,UAAU,CAAC,MAAM,IAAI,UAAU,CAAC,GAAG,IAAI,iBAAiB,GAAG,EAAE;iBAC9D,CAAC,UAAU,CAAC,MAAM,IAAI,UAAU,CAAC,MAAM,IAAI,kBAAkB,GAAG,EAAE;iBAClE,UAAU,CAAC,GAAG,GAAG,iBAAiB,GAAG,EAAE;iBACvC,UAAU,CAAC,MAAM,GAAG,oBAAoB,GAAG,EAAE;iBAC7C,UAAU,CAAC,MAAM,GAAG,UAAU,GAAG,gBAAgB,GAAG,EAAE;iBACtD,UAAU,CAAC,MAAM,GAAG,UAAU,GAAG,gBAAgB,GAAG,EAAE;iBACtD,UAAU,CAAC,MAAM,GAAG,UAAU,GAAG,oBAAoB,GAAG,EAAE;iBAC1D,UAAU,CAAC,QAAQ,GAAG,sBAAsB,GAAG,EAAE;iBACjD,UAAU,CAAC,KAAK,GAAG,mBAAmB,GAAG,EAAE;iBAC3C,UAAU,CAAC,WAAW,GAAG,yBAAyB,GAAG,EAAE;iBACvD,UAAU,CAAC,OAAO,GAAG,qBAAqB,GAAG,EAAE;iBAC/C,UAAU,CAAC,SAAS,GAAG,uBAAuB,GAAG,EAAE;iBACnD,UAAU,CAAC,WAAW,GAAG,yBAAyB,GAAG,EAAE;iBACvD,UAAU,CAAC,YAAY,GAAG,0BAA0B,GAAG,EAAE;iBACzD,UAAU,CAAC,YAAY,GAAG,0BAA0B,GAAG,EAAE;iBACzD,UAAU,CAAC,QAAQ,GAAG,sBAAsB,GAAG,EAAE;iBACjD,UAAU,CAAC,YAAY,GAAG,mBAAmB,GAAG,EAAE;iBAClD,UAAU,CAAC,WAAW,GAAG,qBAAqB,GAAG,EAAE;iBACnD,UAAU,CAAC,WAAW,GAAG,sBAAsB,GAAG,EAAE;iBACpD,UAAU,CAAC,SAAS,GAAG,oBAAoB,GAAG,EAAE;iBAChD,8BAA8B,GAAG,UAAU,CAAC,iBAAiB;iBAC7D,gCAAgC,IAAI,UAAU,CAAC,iBAAiB,GAAG,UAAU,CAAC,mBAAmB,CAAC;iBAClG,UAAU,CAAC,gBAAgB,GAAG,uBAAuB,GAAG,EAAE;iBAC1D,UAAU,CAAC,gBAAgB,GAAG,UAAU,GAAG,mBAAmB,GAAG,EAAE;iBACnE,UAAU,CAAC,kBAAkB,GAAG,6BAA6B,GAAG,EAAE;iBAClE,UAAU,CAAC,uBAAuB,GAAG,mCAAmC,GAAG,EAAE;iBAC7E,UAAU,CAAC,sBAAsB,GAAG,yBAAyB,GAAG,EAAE;iBAClE,UAAU,CAAC,sBAAsB,IAAI,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,gBAAgB,CAAC,GAAG,6BAA6B,GAAG,EAAE;iBACnH,UAAU,CAAC,MAAM,IAAI,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,wBAAwB,CAAC,GAAG,yBAAyB,GAAG,EAAE;iBACvG,0BAA0B;iBAC1B,8BAA8B;iBAC9B,CAAC,UAAU,CAAC,WAAW,KAAKC,mBAAW,CAAC,IAAI,IAAI,sBAAsB,GAAG,EAAE;iBAC3E,CAAC,UAAU,CAAC,WAAW,KAAKA,mBAAW,CAAC,IAAI,IAAI,WAAW,CAAC,2BAA2B,CAAC,GAAG,EAAE;iBAC7F,CAAC,UAAU,CAAC,WAAW,KAAKA,mBAAW,CAAC,IAAI,IAAI,sBAAsB,CAAC,aAAa,EAAE,UAAU,CAAC,WAAW,CAAC,GAAG,EAAE;iBAClH,CAAC,UAAU,CAAC,cAAc,IAAI,UAAU,CAAC,WAAW,IAAI,UAAU,CAAC,cAAc,IAAI,UAAU,CAAC,mBAAmB,IAAI,WAAW,CAAC,yBAAyB,CAAC,GAAG,EAAE;iBAClK,UAAU,CAAC,WAAW,GAAG,wBAAwB,CAAC,kBAAkB,EAAE,UAAU,CAAC,WAAW,CAAC,GAAG,EAAE;iBAClG,UAAU,CAAC,cAAc,GAAG,wBAAwB,CAAC,qBAAqB,EAAE,UAAU,CAAC,cAAc,CAAC,GAAG,EAAE;iBAC3G,UAAU,CAAC,mBAAmB,GAAG,wBAAwB,CAAC,0BAA0B,EAAE,UAAU,CAAC,mBAAmB,CAAC,GAAG,EAAE;iBAC1H,UAAU,CAAC,cAAc,GAAG,wBAAwB,CAAC,qBAAqB,EAAE,UAAU,CAAC,cAAc,CAAC,GAAG,EAAE;iBAC3G,UAAU,CAAC,YAAY,GAAG,wBAAwB,GAAG,QAAQ,CAAC,YAAY,GAAG,EAAE;iBAC/E,IAAI;cACL,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;UACtC;SACD,YAAY,GAAG,aAAa,CAAC,YAAY,kBAAiB,CAAC;SAC3D,YAAY,GAAG,gBAAgB,CAAC,YAAY,EAAE,UAAU,CAAC,CAAC;SAC1D,cAAc,GAAG,aAAa,CAAC,cAAc,kBAAiB,CAAC;SAC/D,cAAc,GAAG,gBAAgB,CAAC,cAAc,EAAE,UAAU,CAAC,CAAC;SAC9D,IAAI,EAAG,QAAQ,YAAY,cAAc,CAAC,EAAE;aAC1C,YAAY,GAAG,WAAW,CAAC,YAAY,CAAC,CAAC;aACzC,cAAc,GAAG,WAAW,CAAC,cAAc,CAAC,CAAC;UAC9C;SACD,IAAM,UAAU,GAAW,YAAY,GAAG,YAAY,CAAC;SACvD,IAAM,YAAY,GAAW,cAAc,GAAG,cAAc,CAAC;;;SAG7D,IAAM,cAAc,GAAgB,WAAW,CAAC,EAAE,EAAE,EAAE,CAAC,aAAa,EAAE,UAAU,CAAC,CAAC;SAClF,IAAM,gBAAgB,GAAgB,WAAW,CAAC,EAAE,EAAE,EAAE,CAAC,eAAe,EAAE,YAAY,CAAC,CAAC;SACxF,EAAE,CAAC,YAAY,CAAC,OAAO,EAAE,cAAc,CAAC,CAAC;SACzC,EAAE,CAAC,YAAY,CAAC,OAAO,EAAE,gBAAgB,CAAC,CAAC;;SAE3C,IAAI,QAAQ,CAAC,mBAAmB,KAAK,SAAS,EAAE;aAC9C,EAAE,CAAC,kBAAkB,CAAC,OAAO,EAAE,CAAC,EAAE,QAAQ,CAAC,mBAAmB,CAAC,CAAC;UACjE;cAAM,IAAI,UAAU,CAAC,YAAY,KAAK,IAAI,EAAE;;aAE3C,EAAE,CAAC,kBAAkB,CAAC,OAAO,EAAE,CAAC,EAAE,UAAU,CAAC,CAAC;UAC/C;SACD,EAAE,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;SACxB,IAAM,UAAU,GAAW,EAAE,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC;SACzD,IAAM,SAAS,GAAW,EAAE,CAAC,gBAAgB,CAAC,cAAc,CAAC,CAAC;SAC9D,IAAM,WAAW,GAAW,EAAE,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,CAAC;SAClE,IAAI,QAAQ,GAAY,IAAI,CAAC;SAC7B,IAAI,eAAe,GAAY,IAAI,CAAC;;;SAGpC,IAAI,EAAE,CAAC,mBAAmB,CAAC,OAAO,EAAE,EAAE,CAAC,WAAW,CAAC,KAAK,KAAK,EAAE;aAC7D,QAAQ,GAAG,KAAK,CAAC;aACjB,OAAO,CAAC,KAAK,CAAC,oCAAoC,EAAE,EAAE,CAAC,QAAQ,EAAE,EAAE,oBAAoB,EAAE,EAAE,CAAC,mBAAmB,CAAC,OAAO,EAAE,EAAE,CAAC,eAAe,CAAC,EAAE,sBAAsB,EAAE,UAAU,EAAE,SAAS,EAAE,WAAW,CAAC,CAAC;UAC3M;cAAM,IAAI,UAAU,KAAK,EAAE,EAAE;aAC5B,OAAO,CAAC,IAAI,CAAC,4CAA4C,EAAE,UAAU,CAAC,CAAC;UACxE;cAAM,IAAI,SAAS,KAAK,EAAE,IAAI,WAAW,KAAK,EAAE,EAAE;aACjD,eAAe,GAAG,KAAK,CAAC;UACzB;SACD,IAAI,eAAe,EAAE;aACnB,IAAI,CAAC,WAAW,GAAG;iBACjB,QAAQ,EAAE,QAAQ;iBAClB,QAAQ,EAAE,QAAQ;iBAClB,UAAU,EAAE,UAAU;iBACtB,YAAY,EAAE;qBACZ,GAAG,EAAE,SAAS;qBACd,MAAM,EAAE,YAAY;kBACrB;iBACD,cAAc,EAAE;qBACd,GAAG,EAAE,WAAW;qBAChB,MAAM,EAAE,cAAc;kBACvB;cACF,CAAC;UACH;;SAED,EAAE,CAAC,YAAY,CAAC,cAAc,CAAC,CAAC;SAChC,EAAE,CAAC,YAAY,CAAC,gBAAgB,CAAC,CAAC;;SAElC,IAAI,CAAC,EAAE,GAAG,cAAc,EAAG,CAAC;SAC5B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;SACjB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;SACnB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;SACvB,IAAI,CAAC,YAAY,GAAG,cAAc,CAAC;SACnC,IAAI,CAAC,cAAc,GAAG,gBAAgB,CAAC;MACxC;;KAED,kCAAW,GAAX;SACE,IAAM,EAAE,GAA0B,IAAI,CAAC,EAAE,CAAC;SAC1C,IAAI,IAAI,CAAC,cAAc,KAAK,SAAS,EAAE;aACrC,IAAI,CAAC,cAAc,GAAG,IAAI,aAAa,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;UAC1E;SACD,OAAO,IAAI,CAAC,cAAc,CAAC;MAC5B;;KAED,oCAAa,GAAb;SACE,IAAM,EAAE,GAA0B,IAAI,CAAC,EAAE,CAAC;SAC1C,IAAI,IAAI,CAAC,gBAAgB,KAAK,SAAS,EAAE;aACvC,IAAI,CAAC,gBAAgB,GAAG,uBAAuB,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;UACnE;SACD,OAAO,IAAI,CAAC,gBAAgB,CAAC;MAC9B;;KAED,8BAAO,GAAP;SACE,IAAM,EAAE,GAA0B,IAAI,CAAC,EAAE,CAAC;SAC1C,EAAE,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SAC/B,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC;MAC1B;KAED,sBAAI,kCAAQ;;cAAZ;aACE,OAAO,CAAC,IAAI,CAAC,sDAAsD,CAAC,CAAC;aACrE,OAAO,IAAI,CAAC,WAAW,EAAE,CAAC;UAC3B;;;QAAA;KACD,sBAAI,oCAAU;cAAd;aACE,OAAO,CAAC,IAAI,CAAC,0DAA0D,CAAC,CAAC;aACzE,OAAO,IAAI,CAAC,aAAa,EAAE,CAAC;UAC7B;;;QAAA;KACH,mBAAC;CAAD,CAAC,IAAA;;CCzZD;KAIE,uBAAY,QAAuB,EAAE,YAA+B;SAClE,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;SACzB,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;SACjC,IAAM,QAAQ,GAAQ,EAAE,CAAC;;SAEzB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;MAC1B;KACD,qCAAa,GAAb,UAAc,QAAa,EAAE,MAAW,EAAE,GAAkB,EAAE,WAAmB,EAAE,iBAAyB,EAAE,MAAgB;SAC5H,IAAM,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;SACvC,SAAS,aAAa,CAAC,MAAgB;aACrC,IAAI,YAAY,CAAC,mBAAmB,IAAI,MAAM,IAAI,MAAM,CAAC,QAAQ,IAAI,MAAM,CAAC,QAAQ,CAAC,gBAAgB,EAAE;iBACrG,OAAO,IAAI,CAAC;cACb;kBAAM;;;;;;;iBAOL,IAAM,eAAe,GAAG,YAAY,CAAC,iBAAiB,CAAC;iBACvD,IAAM,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,eAAe,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC;iBAC/D,IAAI,UAAQ,GAAG,eAAe,CAAC;iBAC/B,IAAI,MAAM,KAAK,SAAS,KAAK,MAAM,IAAI,MAAM,YAAY,WAAW,CAAC,EAAE;qBACrE,UAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,EAAE,UAAQ,CAAC,CAAC;qBAC5D,IAAI,UAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,EAAE;yBAC3C,OAAO,CAAC,IAAI,CAAC,kCAAkC,GAAG,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,GAAG,2BAA2B,GAAG,UAAQ,GAAG,gCAAgC,CAAC,CAAC;sBAC7J;kBACF;iBACD,OAAO,UAAQ,CAAC;cACjB;UACF;SACD,SAAS,yBAAyB,CAAC,GAAQ,EAAE,mBAA4B;aACvE,IAAI,QAAQ,CAAC;aACb,IAAI,CAAE,GAAG,EAAE;iBACT,QAAQ,GAAGU,uBAAe,CAAC,MAAM,CAAC;cACnC;kBAAM,KAAK,GAAG,IAAI,GAAG,YAAY,OAAO,GAAG;iBAC1C,QAAQ,GAAG,GAAG,CAAC,QAAQ,CAAC;cACzB;kBAAM,KAAK,GAAG,IAAI,GAAG,YAAY,iBAAiB,GAAG;iBACpD,OAAO,CAAC,IAAI,CAAC,2HAA2H,CAAC,CAAC;iBAC1I,QAAQ,GAAG,GAAG,CAAC,OAAO,CAAC,QAAQ,CAAC;cACjC;;aAED,IAAI,QAAQ,KAAKA,uBAAe,CAAC,MAAM,IAAI,mBAAmB,EAAE;iBAC9D,QAAQ,GAAGA,uBAAe,CAAC,KAAK,CAAC;cAClC;aACD,OAAO,QAAQ,CAAC;UACjB;SACD,IAAM,SAAS,GAAG;aAChB,iBAAiB,EAAE,OAAO;aAC1B,kBAAkB,EAAE,QAAQ;aAC5B,iBAAiB,EAAE,OAAO;aAC1B,mBAAmB,EAAE,SAAS;aAC9B,iBAAiB,EAAE,OAAO;aAC1B,oBAAoB,EAAE,UAAU;aAChC,oBAAoB,EAAE,UAAU;aAChC,iBAAiB,EAAE,OAAO;aAC1B,kBAAkB,EAAE,QAAQ;aAC5B,cAAc,EAAE,QAAQ;UACzB,CAAC;SACF,IAAM,QAAQ,GAAG,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;;;SAG1C,IAAM,QAAQ,GAAW,aAAa,CAAC,MAAM,CAAC,CAAC;SAC/C,IAAI,SAAS,GAAW,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,CAAC;SACrD,IAAI,QAAQ,CAAC,SAAS,KAAK,IAAI,EAAE;aAC/B,SAAS,GAAG,YAAY,CAAC,eAAe,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;aAC7D,IAAI,SAAS,KAAK,QAAQ,CAAC,SAAS,EAAE;iBACpC,OAAO,CAAC,IAAI,CAAC,mCAAmC,EAAE,QAAQ,CAAC,SAAS,EAAE,sBAAsB,EAAE,SAAS,EAAE,UAAU,CAAC,CAAC;cACtH;UACF;SACD,IAAM,mBAAmB,GAAG,IAAI,CAAC,QAAQ,CAAC,sBAAsB,EAAE,CAAC;SACnE,IAAM,UAAU,GAAG;aACjB,QAAQ,EAAE,QAAQ;aAClB,SAAS,EAAE,SAAS;aACpB,sBAAsB,EAAE,YAAY,CAAC,cAAc;aACnD,cAAc,EAAE,yBAAyB,CAAC,CAAC,CAAE,mBAAmB,IAAI,IAAI,GAAG,mBAAmB,CAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC;aAClI,GAAG,EAAE,CAAC,CAAE,QAAQ,CAAC,GAAG;aACpB,WAAW,EAAE,yBAAyB,CAAC,QAAQ,CAAC,GAAG,EAAE,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC;aAC9E,MAAM,EAAE,CAAC,CAAE,QAAQ,CAAC,MAAM;aAC1B,UAAU,EAAE,QAAQ,CAAC,MAAM,IAAI,QAAQ,CAAC,MAAM,CAAC,OAAO;aACtD,cAAc,EAAE,yBAAyB,CAAC,QAAQ,CAAC,MAAM,EAAE,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC;aACpF,YAAY,EAAE,CAAC,CAAC,CAAE,QAAQ,CAAC,MAAM,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,OAAO,KAAKT,sBAAc,CAAC,gBAAgB,MAAM,QAAQ,CAAC,MAAM,CAAC,OAAO,KAAKA,sBAAc,CAAC,gBAAgB,CAAC,CAAC;aACtK,QAAQ,EAAE,CAAC,CAAE,QAAQ,CAAC,QAAQ;aAC9B,KAAK,EAAE,CAAC,CAAE,QAAQ,CAAC,KAAK;aACxB,WAAW,EAAE,CAAC,CAAE,QAAQ,CAAC,WAAW;aACpC,mBAAmB,EAAE,yBAAyB,CAAC,QAAQ,CAAC,WAAW,EAAE,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC;aAC9F,OAAO,EAAE,CAAC,CAAE,QAAQ,CAAC,OAAO;aAC5B,SAAS,EAAE,CAAC,CAAE,QAAQ,CAAC,SAAS;aAChC,eAAe,EAAE,CAAC,CAAE,QAAQ,CAAC,eAAe;aAC5C,YAAY,EAAE,CAAC,CAAE,QAAQ,CAAC,YAAY;aACtC,YAAY,EAAE,CAAC,CAAE,QAAQ,CAAC,YAAY;aACtC,WAAW,EAAE,CAAC,CAAE,QAAQ,CAAC,WAAW;aACpC,QAAQ,EAAE,CAAC,CAAE,QAAQ,CAAC,QAAQ;aAC9B,OAAO,EAAE,QAAQ,CAAC,OAAO;aACzB,YAAY,EAAE,QAAQ,CAAC,YAAY;aACnC,GAAG,EAAE,CAAC,CAAE,GAAG;aACX,MAAM,EAAE,QAAQ,CAAC,GAAG;aACpB,MAAM,GAAG,GAAG,IAAI,GAAG,YAAY,OAAO,CAAC;aACvC,WAAW,EAAE,QAAQ,CAAC,OAAO,KAAKR,mBAAW,CAAC,IAAI;aAClD,eAAe,EAAE,QAAQ,CAAC,eAAe;aACzC,sBAAsB,EAAE,YAAY,CAAC,sBAAsB;aAC3D,QAAQ,EAAE,QAAQ,CAAC,QAAQ;aAC3B,QAAQ,EAAE,QAAQ;aAClB,gBAAgB,EAAE,YAAY,CAAC,mBAAmB,IAAI,MAAM,IAAI,MAAM,CAAC,QAAQ,IAAI,MAAM,CAAC,QAAQ,CAAC,gBAAgB;aACnH,YAAY,EAAE,QAAQ,CAAC,YAAY;aACnC,YAAY,EAAE,QAAQ,CAAC,YAAY;aACnC,eAAe,EAAE,IAAI,CAAC,QAAQ,CAAC,eAAe;aAC9C,eAAe,EAAE,IAAI,CAAC,QAAQ,CAAC,eAAe;aAC9C,YAAY,EAAE,MAAM,CAAC,WAAW,CAAC,MAAM;aACvC,cAAc,EAAE,MAAM,CAAC,KAAK,CAAC,MAAM;aACnC,aAAa,EAAE,MAAM,CAAC,IAAI,CAAC,MAAM;aACjC,aAAa,EAAE,MAAM,CAAC,IAAI,CAAC,MAAM;aACjC,iBAAiB,EAAE,WAAW;aAC9B,mBAAmB,EAAE,iBAAiB;aACtC,gBAAgB,EAAE,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,OAAO,IAAI,MAAM,CAAC,aAAa,IAAI,MAAM,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC;aACtG,aAAa,EAAE,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI;aAC3C,WAAW,EAAE,IAAI,CAAC,QAAQ,CAAC,WAAW;aACtC,uBAAuB,EAAE,IAAI,CAAC,QAAQ,CAAC,uBAAuB;aAC9D,kBAAkB,EAAE,QAAQ,CAAC,kBAAkB;aAC/C,SAAS,EAAE,QAAQ,CAAC,SAAS;aAC7B,WAAW,EAAE,QAAQ,CAAC,IAAI,KAAKD,gBAAQ,CAAC,MAAM;aAC9C,SAAS,EAAE,QAAQ,CAAC,IAAI,KAAKA,gBAAQ,CAAC,IAAI;aAC1C,YAAY,EAAE,CAAC,QAAQ,CAAC,YAAY,KAAK,SAAS,IAAI,QAAQ,CAAC,YAAY,GAAG,KAAK;UACpF,CAAC;SACF,OAAO,UAAU,CAAC;MACnB;KACD,sCAAc,GAAd,UAAe,QAAa,eAAe,UAAe;SACxD,IAAM,cAAc,GAAG;aACrB,WAAW,EAAE,wBAAwB,EAAE,KAAK,EAAE,aAAa,EAAE,QAAQ,EAAE,YAAY,EAAE,gBAAgB;aACrG,UAAU,EAAE,OAAO,EAAE,aAAa,EAAE,qBAAqB,EAAE,SAAS,EAAE,WAAW,EAAE,iBAAiB,EAAE,aAAa;aACnH,cAAc,EAAE,cAAc;aAC9B,UAAU,EAAE,SAAS,EAAE,cAAc,EAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ;aAChE,aAAa,EAAE,iBAAiB,EAAE,wBAAwB,EAAE,UAAU;aACtE,UAAU,EAAE,kBAAkB,EAAE,cAAc,EAAE,cAAc;aAC9D,iBAAiB,EAAE,iBAAiB,EAAE,oBAAoB;aAC1D,cAAc,EAAE,gBAAgB,EAAE,eAAe,EAAE,eAAe;aAClE,kBAAkB,EAAE,eAAe,EAAE,aAAa,EAAE,yBAAyB;aAC7E,WAAW,EAAE,aAAa,EAAE,WAAW,EAAE,mBAAmB,EAAE,qBAAqB,EAAE,cAAc;UACpG,CAAC;SACF,IAAM,KAAK,GAAG,EAAE,CAAC;SACjB,IAAI,UAAU,CAAC,QAAQ,EAAE;aACvB,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;UACjC;cAAM;aACL,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC;aACpC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;UACnC;SACD,IAAI,QAAQ,CAAC,OAAO,KAAK,SAAS,EAAE;aAClC,KAAK,IAAI,IAAI,IAAI,QAAQ,CAAC,OAAO,EAAE;iBACjC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;iBACjB,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;cACpC;UACF;SACD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,cAAc,CAAC,MAAM,EAAE,CAAC,EAAG,EAAE;aAC/C,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UAC3C;SACD,OAAO,KAAK,CAAC,IAAI,EAAE,CAAC;MACrB;KACD,sCAAc,GAAd,UAAe,QAAa,eAAe,UAAe,EAAE,IAAY;SACtE,IAAI,OAAO,CAAC;;SAEZ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAG,EAAE;aACvD,IAAM,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;aACrC,IAAI,WAAW,CAAC,IAAI,KAAK,IAAI,EAAE;iBAC7B,OAAO,GAAG,WAAW,CAAC;iBACtB,EAAG,OAAO,CAAC,SAAS,CAAC;iBACrB,MAAM;cACP;UACF;SACD,IAAI,OAAO,KAAK,SAAS,EAAE;aACzB,OAAO,GAAG,IAAI,YAAY,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,EAAE,QAAQ,EAAE,UAAU,CAAC,CAAC;aACtE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;UAC7B;SACD,OAAO,OAAO,CAAC;MAChB;KACD,sCAAc,GAAd,UAAe,OAAqB;SAClC,IAAI,EAAG,OAAO,CAAC,SAAS,KAAK,CAAC,EAAE;;aAE9B,IAAM,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;aACzC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;aAC3D,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC;;aAEpB,OAAO,CAAC,OAAO,EAAE,CAAC;UACnB;MACF;KACH,oBAAC;CAAD,CAAC,IAAA;;CCzMD;;;AAGA,CAIA;KAKE,yBAAY,EAAyB,EAAE,UAAe,EAAE,IAAS;SADjE,eAAU,GAAsC,EAAE,CAAC;SAEjD,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;SACb,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;SAC7B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;MAClB;KACD,6BAAG,GAAH,UAAI,MAAgB;SAClB,IAAM,EAAE,GAA0B,IAAI,CAAC,EAAE,CAAC;SAC1C,IAAM,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;SACnC,IAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;SACvB,IAAM,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;SACnC,IAAM,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;SACjC,IAAI,UAAU,CAAC,QAAQ,CAAC,EAAE,CAAC,KAAK,SAAS,EAAE;aACzC,OAAO,UAAU,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;UAChC;SACD,QAAQ,CAAC,gBAAgB,CAAC,SAAS,EAAE,iBAAiB,CAAC,CAAC;SACxD,SAAS,iBAAiB,CAAC,KAAU;aACnC,IAAM,QAAQ,GAAG,KAAK,CAAC,MAAM,CAAC;aAC9B,IAAM,cAAc,GAAG,UAAU,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;aAC/C,IAAI,cAAc,CAAC,KAAK,KAAK,IAAI,EAAE;iBACjC,eAAe,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;cACvC;aACD,gBAAgB,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC;aAC5C,QAAQ,CAAC,mBAAmB,CAAC,SAAS,EAAE,iBAAiB,CAAC,CAAC;aAC3D,OAAO,UAAU,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;;aAE/B,IAAM,QAAQ,GAAG,UAAU,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;aAC1C,IAAI,QAAQ,CAAC,SAAS,EAAE;iBACtB,eAAe,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;cACrC;aACD,UAAU,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;aAC5B,IAAM,cAAc,GAAG,UAAU,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;aACtD,IAAI,cAAc,CAAC,SAAS,EAAE;iBAC5B,eAAe,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC;cAC3C;aACD,UAAU,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;;aAElC,IAAI,CAAC,MAAM,CAAC,UAAU,EAAG,CAAC;UAC3B;SACD,SAAS,kBAAkB,CAAC,SAAc;aACxC,IAAI,SAAS,YAAY,0BAA0B,EAAE;iBACnD,OAAO,UAAU,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,aAAa,CAAC;cACrD;aACD,OAAO,UAAU,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,aAAa,CAAC;UAChD;SACD,SAAS,eAAe,CAAC,SAAc;aACrC,IAAM,MAAM,GAAG,kBAAkB,CAAC,SAAS,CAAC,CAAC;aAC7C,IAAI,MAAM,KAAK,SAAS,EAAE;iBACxB,EAAE,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;iBACxB,qBAAqB,CAAC,SAAS,CAAC,CAAC;cAClC;UACF;SACD,SAAS,gBAAgB,CAAC,UAAe;aACvC,KAAK,IAAI,IAAI,IAAI,UAAU,EAAE;iBAC3B,IAAM,SAAS,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC;iBACnC,IAAI,SAAS,KAAK,SAAS;qBAAE,SAAS;iBACtC,eAAe,CAAC,SAAS,CAAC,CAAC;cAC5B;UACF;SACD,SAAS,qBAAqB,CAAC,SAAc;aAC3C,IAAI,SAAS,YAAY,0BAA0B,EAAE;iBACnD,UAAU,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;cACnC;kBAAM;iBACL,UAAU,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;cAC9B;UACF;SACD,IAAI,cAAc,CAAC;SACnB,IAAI,QAAQ,YAAY,cAAc,EAAE;aACtC,cAAc,GAAG,QAAQ,CAAC;UAC3B;cAAM,IAAI,QAAQ,YAAY,QAAQ,EAAE;aACvC,IAAI,QAAQ,CAAC,eAAe,KAAK,SAAS,EAAE;iBAC1C,QAAQ,CAAC,eAAe,GAAG,IAAI,cAAc,EAAE,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;cACvE;aACD,cAAc,GAAG,QAAQ,CAAC,eAAe,CAAC;UAC3C;SACD,UAAU,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,cAAc,CAAC;SACzC,IAAI,CAAC,MAAM,CAAC,UAAU,EAAG,CAAC;SAC1B,OAAO,cAAc,CAAC;MACvB;KACH,sBAAC;CAAD,CAAC,IAAA;;CC1FD;;;AAGA,CAMA;KAKE,sBAAY,EAAyB,EAAE,UAAe,EAAE,IAAS;SAC/D,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;SACb,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;SAC7B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;SACjB,IAAI,CAAC,UAAU,GAAG,IAAI,eAAe,CAAC,EAAE,EAAE,UAAU,EAAE,IAAI,CAAC,CAAC;MAC7D;;KAED,6BAAM,GAAN,UAAO,MAAgB;SACrB,IAAM,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;;SAEnB,IAAM,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;SAC7C,IAAI,MAAM,CAAC,QAAQ,YAAY,QAAQ,EAAE;aACvC,QAAQ,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC;UACnC;SACD,IAAM,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC;SAC7B,IAAM,UAAU,GAAG,QAAQ,CAAC,UAAU,CAAC;SACvC,IAAI,KAAK,KAAK,IAAI,EAAE;aAClB,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,EAAE,CAAC,oBAAoB,CAAC,CAAC;UACtD;SACD,KAAK,IAAI,IAAI,IAAI,UAAU,EAAE;aAC3B,IAAM,SAAS,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC;aACnC,IAAI,SAAS,KAAK,SAAS;iBAAE,SAAS;aACtC,IAAI,CAAC,eAAe,CAAC,SAAS,EAAE,EAAE,CAAC,YAAY,CAAC,CAAC;UAClD;;SAED,IAAM,eAAe,GAAG,QAAQ,CAAC,eAAe,CAAC;SACjD,KAAK,IAAI,IAAI,IAAI,eAAe,EAAE;aAChC,IAAM,KAAK,GAAG,eAAe,CAAC,IAAI,CAAC,CAAC;aACpC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAG,EAAE;iBAC7C,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,YAAY,CAAC,CAAC;cACjD;UACF;SACD,OAAO,QAAQ,CAAC;MACjB;KACO,sCAAe,GAAvB,UAAwB,SAAc,EAAE,UAAe;SACrD,IAAI,CAAC,SAAS;aAAE,OAAO;SACvB,IAAM,IAAI,GAAG,CAAC,SAAS,YAAY,0BAA0B,IAAI,SAAS,CAAC,IAAI,GAAG,SAAS,CAAC;SAC5F,IAAM,mBAAmB,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;SACtD,IAAI,mBAAmB,CAAC,aAAa,KAAK,SAAS,EAAE;aACnD,IAAI,CAAC,YAAY,CAAC,mBAAmB,EAAE,IAAI,EAAE,UAAU,CAAC,CAAC;UAC1D;cAAM,IAAI,mBAAmB,CAAC,OAAO,KAAK,IAAI,CAAC,OAAO,EAAE;aACvD,IAAI,CAAC,YAAY,CAAC,mBAAmB,EAAE,IAAI,EAAE,UAAU,CAAC,CAAC;UAC1D;MACF;KACO,mCAAY,GAApB,UAAqB,mBAAwB,EAAE,IAAS,EAAE,UAAe;SACvE,IAAM,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;SACnB,mBAAmB,CAAC,aAAa,GAAG,EAAE,CAAC,YAAY,EAAE,CAAC;SACtD,EAAE,CAAC,UAAU,CAAC,UAAU,EAAE,mBAAmB,CAAC,aAAa,CAAC,CAAC;SAC7D,IAAM,KAAK,GAAG,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC,YAAY,GAAG,EAAE,CAAC,WAAW,CAAC;SAC9D,EAAE,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;SAC7C,mBAAmB,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;MAC5C;KACO,mCAAY,GAApB,UAAqB,mBAAwB,EAAE,IAAS,EAAE,UAAe;SACvE,IAAM,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;SACnB,EAAE,CAAC,UAAU,CAAC,UAAU,EAAE,mBAAmB,CAAC,aAAa,CAAC,CAAC;SAC7D,IAAI,IAAI,CAAC,OAAO,KAAK,KAAK,EAAE;aAC1B,EAAE,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC,KAAK,EAAE,EAAE,CAAC,WAAW,CAAC,CAAC;UACvD;cAAM,IAAI,IAAI,CAAC,WAAW,CAAC,KAAK,KAAK,CAAE,CAAC,EAAE;;aAEzC,EAAE,CAAC,aAAa,CAAC,UAAU,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;UAC7C;cAAM,IAAI,IAAI,CAAC,WAAW,CAAC,KAAK,KAAK,CAAC,EAAE;aACvC,OAAO,CAAC,KAAK,CAAC,yKAAyK,CAAC,CAAC;UAC1L;cAAM;aACL,EAAE,CAAC,aAAa,CAAC,UAAU,EAAE,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,iBAAiB,EACzE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC;aAC1G,IAAI,CAAC,WAAW,CAAC,KAAK,GAAG,CAAC,CAAC;UAC5B;SACD,mBAAmB,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;MAC5C;KACD,yCAAkB,GAAlB,UAAmB,SAAc;SAC/B,IAAI,SAAS,YAAY,0BAA0B,EAAE;aACnD,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,aAAa,CAAC;UAC1D;SACD,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,aAAa,CAAC;MACrD;KACD,4CAAqB,GAArB,UAAsB,QAAa;SACjC,IAAM,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;SACnB,IAAM,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;SAC/C,IAAI,QAAQ,CAAC,SAAS,KAAK,SAAS,EAAE;aACpC,OAAO,QAAQ,CAAC,SAAS,CAAC;UAC3B;SACD,IAAM,OAAO,GAAG,EAAE,CAAC;SACnB,IAAM,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC;SAC7B,IAAM,UAAU,GAAG,QAAQ,CAAC,UAAU,CAAC;SACvC,IAAM,QAAQ,GAAG,UAAU,CAAC,QAAQ,CAAC;;SAErC,IAAI,KAAK,KAAK,IAAI,EAAE;;aAElB,IAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;aAC1B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE;iBAC/C,IAAM,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;iBACvB,IAAM,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;iBACvB,IAAM,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;iBACvB,OAAO,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;cAChC;UACF;cAAM;aACL,IAAM,KAAK,GAAG,UAAU,CAAC,QAAQ,CAAC,KAAK,CAAC;aACxC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE;iBACzD,IAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;iBAChB,IAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;iBAChB,IAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;iBAChB,OAAO,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;cAChC;UACF;;SAED,IAAM,SAAS,GAAG,QAAQ,CAAC,KAAK,GAAG,KAAK,GAAG,WAAW,GAAG,WAAW,CAAC;SACrE,IAAM,SAAS,GAAG,IAAI,eAAe,CAAC,IAAI,SAAS,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC;SACjE,IAAI,CAAC,eAAe,CAAC,SAAS,EAAE,EAAE,CAAC,oBAAoB,CAAC,CAAC;SACzD,QAAQ,CAAC,SAAS,GAAG,SAAS,CAAC;SAC/B,OAAO,SAAS,CAAC;MAClB;KACH,mBAAC;CAAD,CAAC,IAAA;;CC3HD;;;;AAIA;KAAkCoB,gCAAO;KAEvC,sBAAY,KAAa,EAAE,MAAc,EAAE,IAAwC,EAAE,OAAuB,EAAE,KAAsB,EAAE,KAAsB,EAAE,SAAgD,EAAE,SAAgD,EAAE,UAAkB,EAAE,MAA2C;SAAtR,qBAAA,EAAA,OAAeR,mBAAW,CAAC,aAAa;SAA2E,0BAAA,EAAA,YAA2BD,qBAAa,CAAC,OAAO;SAAE,0BAAA,EAAA,YAA2BA,qBAAa,CAAC,OAAO;SAAsB,uBAAA,EAAA,SAAwBE,qBAAa,CAAC,KAAK;SAAjU,YACE,kBAAM,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,SAAS,EAAE,SAAS,EAAE,MAAM,EAAE,IAAI,EAAE,UAAU,CAAC,SAUnF;SAZQ,oBAAc,GAAY,IAAI,CAAC;SAGtC,IAAI,MAAM,KAAKA,qBAAa,CAAC,KAAK,IAAI,MAAM,KAAKA,qBAAa,CAAC,YAAY,EAAE;aAC3E,MAAM,IAAI,KAAK,CAAC,kGAAkG,CAAC,CAAC;UACrH;SACD,KAAI,CAAC,KAAK,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC;SAC9C,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC;SACjB,KAAI,CAAC,SAAS,GAAG,SAAS,CAAC;SAC3B,KAAI,CAAC,SAAS,GAAG,SAAS,CAAC;SAC3B,KAAI,CAAC,KAAK,GAAG,KAAK,CAAC;SACnB,KAAI,CAAC,eAAe,GAAI,KAAK,CAAC;;MAC/B;KACH,mBAAC;CAAD,CAdA,CAAkC,OAAO;;CCJzC;;;AAGA;KAAuCO,qCAAO;KAE5C,2BAAY,OAAe,EAAE,KAAc,EAAE,MAAe,EAAE,MAAsB,EAAE,IAAkB,EAAE,OAAwB,EAAE,KAAuB,EAAE,KAAuB,EAAE,SAAyB,EAAE,SAAyB,EAAE,UAAmB,EAAE,QAA0B;SAA3R,YACE,kBAAM,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,SAAS,EAAE,SAAS,EAAE,MAAM,EAAE,IAAI,EAAE,UAAU,EAAE,QAAQ,CAAC,SAS7F;SAXQ,yBAAmB,GAAY,IAAI,CAAC;SAG3C,KAAI,CAAC,KAAK,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC;SAC9C,KAAI,CAAC,OAAO,GAAG,OAAO,CAAC;;;SAGvB,KAAI,CAAC,KAAK,GAAG,KAAK,CAAC;;;SAGnB,KAAI,CAAC,eAAe,GAAG,KAAK,CAAC;;MAC9B;KACH,wBAAC;CAAD,CAbA,CAAuC,OAAO;;CCL9C;;;AAGA,CAOA;KAUE,uBAAY,GAAQ,EAAE,UAAe,EAAE,KAAU,EAAE,UAAe,EAAE,YAAiB,EAAE,cAAmB,EAAE,IAAS;SACnH,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;SACf,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;SAC7B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;SACnB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;SAC7B,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;SACjC,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;SACrC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;SACjB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC;SAC/B,IAAI,CAAC,SAAS,IAAI,OAAO,sBAAsB,KAAK,WAAW,IAAI,GAAG,YAAY,sBAAsB,CAAC,CAAC;MAC3G;;KAEc,4BAAc,GAA7B,UAA8B,KAAU,EAAE,OAAY;SACpD,IAAI,KAAK,CAAC,KAAK,GAAG,OAAO,IAAI,KAAK,CAAC,MAAM,GAAG,OAAO,EAAE;;;aAGnD,IAAM,KAAK,GAAG,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC;aAC5D,IAAM,MAAM,GAAuB,QAAQ,CAAC,eAAe,CAAC,8BAA8B,EAAE,QAAQ,CAAC,CAAC;aACtG,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,CAAC;aAC/C,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC;aACjD,IAAM,OAAO,GAAG,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;aACxC,OAAO,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC;aAC7F,OAAO,CAAC,IAAI,CAAC,yCAAyC,GAAG,KAAK,CAAC,KAAK,GAAG,GAAG,GAAG,KAAK,CAAC,MAAM,GAAG,gBAAgB,GAAG,MAAM,CAAC,KAAK,GAAG,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;aAC1J,OAAO,MAAM,CAAC;UACf;SACD,OAAO,KAAK,CAAC;MACd;KACc,0BAAY,GAA3B,UAA4B,KAAU;SACpC,OAAO,KAAK,CAAC,YAAY,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,YAAY,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;MAC5E;KACc,4BAAc,GAA7B,UAA8B,KAAU;SACtC,IAAI,KAAK,YAAY,gBAAgB,IAAI,KAAK,YAAY,iBAAiB,EAAE;aAC3E,IAAM,MAAM,GAAuB,QAAQ,CAAC,eAAe,CAAC,8BAA8B,EAAE,QAAQ,CAAC,CAAC;aACtG,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC,iBAAiB,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;aACpD,MAAM,CAAC,MAAM,GAAG,KAAK,CAAC,iBAAiB,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;aACtD,IAAM,OAAO,GAAG,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;aACxC,OAAO,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC;aAC5D,OAAO,CAAC,IAAI,CAAC,kDAAkD,GAAG,KAAK,CAAC,KAAK,GAAG,GAAG,GAAG,KAAK,CAAC,MAAM,GAAG,gBAAgB,GAAG,MAAM,CAAC,KAAK,GAAG,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;aACnK,OAAO,MAAM,CAAC;UACf;SACD,OAAO,KAAK,CAAC;MACd;KACc,oCAAsB,GAArC,UAAsC,OAAgB;SACpD,IAAI,OAAO,CAAC,KAAK,KAAKV,uBAAe,CAAC,WAAW,IAAI,OAAO,CAAC,KAAK,KAAKA,uBAAe,CAAC,WAAW;aAAE,OAAO,IAAI,CAAC;SAChH,IAAI,OAAO,CAAC,SAAS,KAAKC,qBAAa,CAAC,OAAO,IAAI,OAAO,CAAC,SAAS,KAAKA,qBAAa,CAAC,MAAM;aAAE,OAAO,IAAI,CAAC;SAC3G,OAAO,KAAK,CAAC;MACd;;KAEO,sCAAc,GAAtB,UAAuB,CAAS;SAC9B,IAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;SACrB,IAAI,CAAC,KAAKA,qBAAa,CAAC,OAAO,IAAI,CAAC,KAAKA,qBAAa,CAAC,oBAAoB,IAAI,CAAC,KAAKA,qBAAa,CAAC,mBAAmB,EAAE;aACtH,OAAO,GAAG,CAAC,OAAO,CAAC;UACpB;SACD,OAAO,GAAG,CAAC,MAAM,CAAC;MACnB;;KAEO,wCAAgB,GAAxB,UAAyB,KAAU;SACjC,IAAM,OAAO,GAAG,KAAK,CAAC,MAAM,CAAC;SAC7B,OAAO,CAAC,mBAAmB,CAAC,SAAS,EAAE,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;SACzE,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC;SAChC,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAG,CAAC;MAC9B;KACO,6CAAqB,GAA7B,UAA8B,KAAU;SACtC,IAAM,YAAY,GAAG,KAAK,CAAC,MAAM,CAAC;SAClC,YAAY,CAAC,mBAAmB,CAAC,SAAS,EAAE,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;SACnF,IAAI,CAAC,sBAAsB,CAAC,YAAY,CAAC,CAAC;SAC1C,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAG,CAAC;MAC9B;;KAEO,yCAAiB,GAAzB,UAA0B,OAAgB;SACxC,IAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;SACrB,IAAM,iBAAiB,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;SACvD,IAAI,OAAO,CAAC,KAAK,IAAI,iBAAiB,CAAC,yBAAyB,EAAE;;aAEhE,GAAG,CAAC,aAAa,CAAC,iBAAiB,CAAC,yBAAyB,CAAC,CAAC;UAChE;cAAM;;aAEL,IAAI,iBAAiB,CAAC,WAAW,KAAK,SAAS;iBAAE,OAAO;aACxD,GAAG,CAAC,aAAa,CAAC,iBAAiB,CAAC,cAAc,CAAC,CAAC;UACrD;;SAED,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;MACjC;KACO,8CAAsB,GAA9B,UAA+B,YAAiB;SAC9C,IAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;SACrB,IAAM,sBAAsB,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;SACjE,IAAM,iBAAiB,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;SACpE,IAAI,CAAE,YAAY;aAAE,OAAO;SAC3B,IAAI,iBAAiB,CAAC,cAAc,KAAK,SAAS,EAAE;aAClD,GAAG,CAAC,aAAa,CAAC,iBAAiB,CAAC,cAAc,CAAC,CAAC;UACrD;SACD,IAAI,YAAY,CAAC,YAAY,EAAE;aAC7B,YAAY,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC;UACrC;SACD,KAAK,YAAY,IAAI,YAAY,YAAY,qBAAqB,GAAG;aACnE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAG,EAAE;iBAC3B,GAAG,CAAC,iBAAiB,CAAC,sBAAsB,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,CAAC;iBACpE,IAAI,sBAAsB,CAAC,kBAAkB;qBAAE,GAAG,CAAC,kBAAkB,CAAC,sBAAsB,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,CAAC;cACrH;UACF;cAAM;aACL,GAAG,CAAC,iBAAiB,CAAC,sBAAsB,CAAC,kBAAkB,CAAC,CAAC;aACjE,IAAI,sBAAsB,CAAC,kBAAkB;iBAAE,GAAG,CAAC,kBAAkB,CAAC,sBAAsB,CAAC,kBAAkB,CAAC,CAAC;UAClH;SACD,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;SAC7C,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;MACtC;;KAED,oCAAY,GAAZ,UAAa,OAAgB,EAAE,IAAY;SACzC,IAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;SACrB,IAAM,iBAAiB,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;SACvD,IAAI,OAAO,CAAC,OAAO,GAAG,CAAC,IAAI,iBAAiB,CAAC,SAAS,KAAK,OAAO,CAAC,OAAO,EAAE;aAC1E,IAAM,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;aAC5B,IAAI,KAAK,KAAK,SAAS,EAAE;iBACvB,OAAO,CAAC,IAAI,CAAC,uEAAuE,EAAE,OAAO,CAAC,CAAC;cAChG;kBAAM,IAAI,KAAK,CAAC,QAAQ,KAAK,KAAK,EAAE;iBACnC,OAAO,CAAC,IAAI,CAAC,wEAAwE,EAAE,OAAO,CAAC,CAAC;cACjG;kBAAM;iBACL,IAAI,CAAC,aAAa,CAAC,iBAAiB,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC;iBACrD,OAAO;cACR;UACF;SACD,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,GAAG,CAAC,QAAQ,GAAG,IAAI,CAAC,CAAC;SAC9C,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC,UAAU,EAAE,iBAAiB,CAAC,cAAc,CAAC,CAAC;MAC1E;KACD,sCAAc,GAAd,UAAe,OAAgB,EAAE,IAAY;SAC3C,IAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;SACrB,IAAM,iBAAiB,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;SACvD,IAAI,OAAO,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;aAC9B,IAAI,OAAO,CAAC,OAAO,GAAG,CAAC,IAAI,iBAAiB,CAAC,SAAS,KAAK,OAAO,CAAC,OAAO,EAAE;iBAC1E,IAAI,CAAE,iBAAiB,CAAC,yBAAyB,EAAE;qBACjD,OAAO,CAAC,gBAAgB,CAAC,SAAS,EAAE,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;qBACtE,iBAAiB,CAAC,yBAAyB,GAAG,GAAG,CAAC,aAAa,EAAE,CAAC;qBAClE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAG,CAAC;kBAC9B;iBACD,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,GAAG,CAAC,QAAQ,GAAG,IAAI,CAAC,CAAC;iBAC9C,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC,gBAAgB,EAAE,iBAAiB,CAAC,yBAAyB,CAAC,CAAC;iBAC1F,GAAG,CAAC,WAAW,CAAC,GAAG,CAAC,mBAAmB,EAAE,OAAO,CAAC,KAAK,CAAC,CAAC;iBACxD,IAAM,YAAY,IAAI,OAAO,IAAI,OAAO,YAAY,iBAAiB,CAAC,CAAC;iBACvE,IAAM,aAAa,IAAI,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,YAAY,WAAW,CAAC,CAAC;iBACpF,IAAM,SAAS,GAAG,EAAE,CAAC;iBACrB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAG,EAAE;qBAC3B,IAAI,CAAE,YAAY,IAAI,CAAE,aAAa,EAAE;yBACrC,SAAS,CAAC,CAAC,CAAC,GAAG,aAAa,CAAC,cAAc,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,CAAC;sBACjG;0BAAM;yBACL,SAAS,CAAC,CAAC,CAAC,GAAG,aAAa,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;sBAC1E;kBACF;iBACD,IAAM,KAAK,GAAG,SAAS,CAAC,CAAC,CAAC,EAC1B,iBAAiB,GAAG,aAAa,CAAC,YAAY,CAAC,KAAK,CAAC,EACrD,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,MAAM,CAAC,EAC9C,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;iBAC3C,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,gBAAgB,EAAE,OAAO,EAAE,iBAAiB,CAAC,CAAC;iBAC5E,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAG,EAAE;qBAC3B,IAAI,CAAE,YAAY,EAAE;yBAClB,IAAI,aAAa,EAAE;6BACjB,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC,2BAA2B,GAAG,CAAC,EAAE,CAAC,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,QAAQ,EAAE,MAAM,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;0BAC1J;8BAAM;6BACL,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC,2BAA2B,GAAG,CAAC,EAAE,CAAC,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;0BACzG;sBACF;0BAAM;yBACL,IAAI,MAAM,SAAA,CAAC;yBACX,IAAM,OAAO,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;yBACrC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAG,EAAE;6BACjD,MAAM,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;6BACpB,IAAI,OAAO,CAAC,MAAM,KAAKE,qBAAa,CAAC,IAAI,IAAI,OAAO,CAAC,MAAM,KAAKA,qBAAa,CAAC,GAAG,EAAE;iCACjF,IAAI,IAAI,CAAC,KAAK,CAAC,2BAA2B,EAAE,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAE,CAAC,EAAE;qCACpE,IAAI,CAAC,KAAK,CAAC,oBAAoB,CAAC,GAAG,CAAC,2BAA2B,GAAG,CAAC,EAAE,CAAC,EAAE,QAAQ,EAAE,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;kCAChI;sCAAM;qCACL,OAAO,CAAC,IAAI,CAAC,iGAAiG,CAAC,CAAC;kCACjH;8BACF;kCAAM;iCACL,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC,2BAA2B,GAAG,CAAC,EAAE,CAAC,EAAE,QAAQ,EAAE,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;8BACxI;0BACF;sBACF;kBACF;iBACD,IAAI,OAAO,CAAC,eAAe,IAAI,iBAAiB,EAAE;qBAChD,GAAG,CAAC,cAAc,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;kBAC1C;iBACD,iBAAiB,CAAC,SAAS,GAAG,OAAO,CAAC,OAAO,CAAC;iBAC9C,IAAI,OAAO,CAAC,QAAQ;qBAAE,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;cACjD;kBAAM;iBACL,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,GAAG,CAAC,QAAQ,GAAG,IAAI,CAAC,CAAC;iBAC9C,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC,gBAAgB,EAAE,iBAAiB,CAAC,yBAAyB,CAAC,CAAC;cAC3F;UACF;MACF;KACD,6CAAqB,GAArB,UAAsB,OAAgB,EAAE,IAAY;SAClD,IAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;SACrB,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,GAAG,CAAC,QAAQ,GAAG,IAAI,CAAC,CAAC;SAC9C,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC,gBAAgB,EAAE,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,cAAc,CAAC,CAAC;MAC3F;KACO,4CAAoB,GAA5B,UAA6B,WAAmB,EAAE,OAAgB,EAAE,iBAA0B;SAC5F,IAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;SACrB,IAAI,SAAS,CAAC;SACd,IAAI,iBAAiB,EAAE;aACrB,GAAG,CAAC,aAAa,CAAC,WAAW,EAAE,GAAG,CAAC,cAAc,EAAE,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC;aACvF,GAAG,CAAC,aAAa,CAAC,WAAW,EAAE,GAAG,CAAC,cAAc,EAAE,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC;aACvF,GAAG,CAAC,aAAa,CAAC,WAAW,EAAE,GAAG,CAAC,kBAAkB,EAAE,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC;aAC/F,GAAG,CAAC,aAAa,CAAC,WAAW,EAAE,GAAG,CAAC,kBAAkB,EAAE,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC;UAChG;cAAM;aACL,GAAG,CAAC,aAAa,CAAC,WAAW,EAAE,GAAG,CAAC,cAAc,EAAE,GAAG,CAAC,aAAa,CAAC,CAAC;aACtE,GAAG,CAAC,aAAa,CAAC,WAAW,EAAE,GAAG,CAAC,cAAc,EAAE,GAAG,CAAC,aAAa,CAAC,CAAC;aACtE,IAAI,OAAO,CAAC,KAAK,KAAKH,uBAAe,CAAC,WAAW,IAAI,OAAO,CAAC,KAAK,KAAKA,uBAAe,CAAC,WAAW,EAAE;iBAClG,OAAO,CAAC,IAAI,CAAC,uIAAuI,EAAE,OAAO,CAAC,CAAC;cAChK;aACD,GAAG,CAAC,aAAa,CAAC,WAAW,EAAE,GAAG,CAAC,kBAAkB,EAAE,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC;aAC/F,GAAG,CAAC,aAAa,CAAC,WAAW,EAAE,GAAG,CAAC,kBAAkB,EAAE,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC;aAC/F,IAAI,OAAO,CAAC,SAAS,KAAKC,qBAAa,CAAC,OAAO,IAAI,OAAO,CAAC,SAAS,KAAKA,qBAAa,CAAC,MAAM,EAAE;iBAC7F,OAAO,CAAC,IAAI,CAAC,iJAAiJ,EAAE,OAAO,CAAC,CAAC;cAC1K;UACF;SACD,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,gCAAgC,CAAC,CAAC;SAClE,IAAI,SAAS,EAAE;aACb,IAAI,OAAO,CAAC,IAAI,KAAKC,mBAAW,CAAC,KAAK,IAAI,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,0BAA0B,CAAC,KAAK,IAAI;iBAAE,OAAO;aAC3G,IAAI,OAAO,CAAC,IAAI,KAAKA,mBAAW,CAAC,SAAS,IAAI,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,+BAA+B,CAAC,KAAK,IAAI;iBAAE,OAAO;aACpH,IAAI,OAAO,CAAC,UAAU,GAAG,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,mBAAmB,EAAE;iBAC9E,GAAG,CAAC,aAAa,CAAC,WAAW,EAAE,SAAS,CAAC,0BAA0B,EAAE,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,UAAU,EAAE,IAAI,CAAC,YAAY,CAAC,gBAAgB,EAAE,CAAC,CAAC,CAAC;iBACzI,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,mBAAmB,GAAG,OAAO,CAAC,UAAU,CAAC;cACvE;UACF;MACF;KACO,qCAAa,GAArB,UAAsB,iBAAsB,EAAE,OAAgB,EAAE,IAAY;SAC1E,IAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;SACrB,IAAI,iBAAiB,CAAC,WAAW,KAAK,SAAS,EAAE;aAC/C,iBAAiB,CAAC,WAAW,GAAG,IAAI,CAAC;aACrC,OAAO,CAAC,gBAAgB,CAAC,SAAS,EAAE,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;aACtE,iBAAiB,CAAC,cAAc,GAAG,GAAG,CAAC,aAAa,EAAE,CAAC;aACvD,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAG,CAAC;UAC9B;SACD,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,GAAG,CAAC,QAAQ,GAAG,IAAI,CAAC,CAAC;SAC9C,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC,UAAU,EAAE,iBAAiB,CAAC,cAAc,CAAC,CAAC;SACzE,GAAG,CAAC,WAAW,CAAC,GAAG,CAAC,mBAAmB,EAAE,OAAO,CAAC,KAAK,CAAC,CAAC;SACxD,GAAG,CAAC,WAAW,CAAC,GAAG,CAAC,8BAA8B,EAAE,OAAO,CAAC,gBAAgB,CAAC,CAAC;SAC9E,GAAG,CAAC,WAAW,CAAC,GAAG,CAAC,gBAAgB,EAAE,OAAO,CAAC,eAAe,CAAC,CAAC;SAC/D,IAAI,KAAK,GAAG,aAAa,CAAC,cAAc,CAAC,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,CAAC;SAC1F,IAAI,aAAa,CAAC,sBAAsB,CAAC,OAAO,CAAC,IAAI,aAAa,CAAC,YAAY,CAAC,KAAK,CAAC,KAAK,KAAK,EAAE;aAChG,KAAK,GAAG,aAAa,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;UAC7C;SACD,IAAM,iBAAiB,GAAG,aAAa,CAAC,YAAY,CAAC,KAAK,CAAC,EAC3D,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,MAAM,CAAC,EAC9C,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;SAC3C,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,UAAU,EAAE,OAAO,EAAE,iBAAiB,CAAC,CAAC;SACtE,IAAI,MAAM,CAAC;SACX,IAAM,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC;SAChC,KAAK,OAAO,IAAI,OAAO,YAAY,YAAY,GAAG;;aAEhD,IAAI,cAAc,GAAG,GAAG,CAAC,eAAe,CAAC;aACzC,IAAI,OAAO,CAAC,IAAI,KAAKA,mBAAW,CAAC,KAAK,EAAE;iBACtC,IAAI,CAAC,IAAI,CAAC,SAAS;qBAAE,MAAM,IAAI,KAAK,CAAC,gDAAgD,CAAC,CAAC;iBACvF,cAAc,GAAG,GAAG,CAAC,kBAAkB,CAAC;cACzC;kBAAM,IAAI,IAAI,CAAC,SAAS,EAAE;;iBAEzB,cAAc,GAAG,GAAG,CAAC,iBAAiB,CAAC;cACxC;;;aAGD,IAAI,OAAO,CAAC,MAAM,KAAKC,qBAAa,CAAC,YAAY,EAAE;iBACjD,cAAc,GAAG,GAAG,CAAC,aAAa,CAAC;cACpC;aACD,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC,UAAU,EAAE,CAAC,EAAE,cAAc,EAAE,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,QAAQ,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;UAChH;cAAM,KAAK,OAAO,IAAI,OAAO,YAAY,WAAW,GAAG;;;;aAItD,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,IAAI,iBAAiB,EAAE;iBAC3C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAG,EAAE;qBACjD,MAAM,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;qBACpB,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC,UAAU,EAAE,CAAC,EAAE,QAAQ,EAAE,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;kBACnH;iBACD,OAAO,CAAC,eAAe,GAAG,KAAK,CAAC;cACjC;kBAAM;iBACL,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC,UAAU,EAAE,CAAC,EAAE,QAAQ,EAAE,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,QAAQ,EAAE,MAAM,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC;cAChH;UACF;cAAM,KAAK,OAAO,IAAI,OAAO,YAAY,iBAAiB,GAAG;aAC5D,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAG,EAAE;iBACjD,MAAM,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;iBACpB,IAAI,OAAO,CAAC,MAAM,KAAKA,qBAAa,CAAC,IAAI,IAAI,OAAO,CAAC,MAAM,KAAKA,qBAAa,CAAC,GAAG,EAAE;qBACjF,IAAI,IAAI,CAAC,KAAK,CAAC,2BAA2B,EAAE,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAE,CAAC,EAAE;yBACpE,IAAI,CAAC,KAAK,CAAC,oBAAoB,CAAC,GAAG,CAAC,UAAU,EAAE,CAAC,EAAE,QAAQ,EAAE,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;sBAC3G;0BAAM;yBACL,OAAO,CAAC,IAAI,CAAC,gGAAgG,CAAC,CAAC;sBAChH;kBACF;sBAAM;qBACL,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC,UAAU,EAAE,CAAC,EAAE,QAAQ,EAAE,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;kBACnH;cACF;UACF;cAAM;;;;;aAKL,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,IAAI,iBAAiB,EAAE;iBAC3C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAG,EAAE;qBACjD,MAAM,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;qBACpB,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC,UAAU,EAAE,CAAC,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;kBAC9E;iBACD,OAAO,CAAC,eAAe,GAAG,KAAK,CAAC;cACjC;kBAAM;iBACL,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC,UAAU,EAAE,CAAC,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;cAC7E;UACF;SACD,IAAI,OAAO,CAAC,eAAe,IAAI,iBAAiB;aAAE,GAAG,CAAC,cAAc,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;SACrF,iBAAiB,CAAC,SAAS,GAAG,OAAO,CAAC,OAAO,CAAC;SAC9C,IAAI,OAAO,CAAC,QAAQ;aAAE,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;MACjD;;;KAGO,+CAAuB,GAA/B,UAAgC,WAAgB,EAAE,YAAiB,EAAE,UAAkB,EAAE,aAAqB;SAC5G,IAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;SACrB,IAAM,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;SAClE,IAAM,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;SAC9D,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,aAAa,EAAE,CAAC,EAAE,QAAQ,EAAE,YAAY,CAAC,KAAK,EAAE,YAAY,CAAC,MAAM,EAAE,CAAC,EAAE,QAAQ,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;SACtH,GAAG,CAAC,eAAe,CAAC,GAAG,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC;SAClD,GAAG,CAAC,oBAAoB,CAAC,GAAG,CAAC,WAAW,EAAE,UAAU,EAAE,aAAa,EAAE,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC;SAClI,GAAG,CAAC,eAAe,CAAC,GAAG,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;MAC5C;;KAEO,gDAAwB,GAAhC,UAAiC,YAAiB,EAAE,YAAiB;SACnE,IAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;SACrB,GAAG,CAAC,gBAAgB,CAAC,GAAG,CAAC,YAAY,EAAE,YAAY,CAAC,CAAC;SACrD,IAAI,YAAY,CAAC,WAAW,IAAI,CAAE,YAAY,CAAC,aAAa,EAAE;aAC5D,GAAG,CAAC,mBAAmB,CAAC,GAAG,CAAC,YAAY,EAAE,GAAG,CAAC,iBAAiB,EAAE,YAAY,CAAC,KAAK,EAAE,YAAY,CAAC,MAAM,CAAC,CAAC;aAC1G,GAAG,CAAC,uBAAuB,CAAC,GAAG,CAAC,WAAW,EAAE,GAAG,CAAC,gBAAgB,EAAE,GAAG,CAAC,YAAY,EAAE,YAAY,CAAC,CAAC;UACpG;cAAM,IAAI,YAAY,CAAC,WAAW,IAAI,YAAY,CAAC,aAAa,EAAE;aACjE,GAAG,CAAC,mBAAmB,CAAC,GAAG,CAAC,YAAY,EAAE,GAAG,CAAC,aAAa,EAAE,YAAY,CAAC,KAAK,EAAE,YAAY,CAAC,MAAM,CAAC,CAAC;aACtG,GAAG,CAAC,uBAAuB,CAAC,GAAG,CAAC,WAAW,EAAE,GAAG,CAAC,wBAAwB,EAAE,GAAG,CAAC,YAAY,EAAE,YAAY,CAAC,CAAC;UAC5G;cAAM;;aAEL,GAAG,CAAC,mBAAmB,CAAC,GAAG,CAAC,YAAY,EAAE,GAAG,CAAC,KAAK,EAAE,YAAY,CAAC,KAAK,EAAE,YAAY,CAAC,MAAM,CAAC,CAAC;UAC/F;SACD,GAAG,CAAC,gBAAgB,CAAC,GAAG,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;MAC9C;;KAEO,yCAAiB,GAAzB,UAA0B,WAAgB,EAAE,YAAiB;SAC3D,IAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;SACrB,IAAM,MAAM,KAAK,YAAY,IAAI,YAAY,YAAY,qBAAqB,EAAE,CAAC;SACjF,IAAI,MAAM;aAAE,MAAM,IAAI,KAAK,CAAC,0DAA0D,CAAC,CAAC;SACxF,GAAG,CAAC,eAAe,CAAC,GAAG,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC;SAClD,IAAI,GAAG,YAAY,CAAC,YAAY,IAAI,YAAY,CAAC,YAAY,YAAY,YAAY,EAAE,EAAE;aACvF,MAAM,IAAI,KAAK,CAAC,qEAAqE,CAAC,CAAC;UACxF;;SAED,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC,cAAc;aAC9D,YAAY,CAAC,YAAY,CAAC,KAAK,CAAC,KAAK,KAAK,YAAY,CAAC,KAAK;aAC5D,YAAY,CAAC,YAAY,CAAC,KAAK,CAAC,MAAM,KAAK,YAAY,CAAC,MAAM,EAAE;aAClE,YAAY,CAAC,YAAY,CAAC,KAAK,CAAC,KAAK,GAAG,YAAY,CAAC,KAAK,CAAC;aAC3D,YAAY,CAAC,YAAY,CAAC,KAAK,CAAC,MAAM,GAAG,YAAY,CAAC,MAAM,CAAC;aAC7D,YAAY,CAAC,YAAY,CAAC,WAAW,GAAG,IAAI,CAAC;UAC9C;SACD,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC;SAChD,IAAM,iBAAiB,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC,cAAc,CAAC;SACxF,IAAI,YAAY,CAAC,YAAY,CAAC,MAAM,KAAKA,qBAAa,CAAC,KAAK,EAAE;aAC5D,GAAG,CAAC,oBAAoB,CAAC,GAAG,CAAC,WAAW,EAAE,GAAG,CAAC,gBAAgB,EAAE,GAAG,CAAC,UAAU,EAAE,iBAAiB,EAAE,CAAC,CAAC,CAAC;UACvG;cAAM,IAAI,YAAY,CAAC,YAAY,CAAC,MAAM,KAAKA,qBAAa,CAAC,YAAY,EAAE;aAC1E,GAAG,CAAC,oBAAoB,CAAC,GAAG,CAAC,WAAW,EAAE,GAAG,CAAC,wBAAwB,EAAE,GAAG,CAAC,UAAU,EAAE,iBAAiB,EAAE,CAAC,CAAC,CAAC;UAC/G;cAAM;aACL,MAAM,IAAI,KAAK,CAAC,6BAA6B,CAAC,CAAC;UAChD;MACF;;KAEO,8CAAsB,GAA9B,UAA+B,YAAiB;SAC9C,IAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;SACrB,IAAM,sBAAsB,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;SACjE,IAAM,MAAM,KAAK,YAAY,IAAI,YAAY,YAAY,qBAAqB,EAAE,CAAC;SACjF,IAAI,YAAY,CAAC,YAAY,EAAE;aAC7B,IAAI,MAAM;iBAAE,MAAM,IAAI,KAAK,CAAC,0DAA0D,CAAC,CAAC;aACxF,IAAI,CAAC,iBAAiB,CAAC,sBAAsB,CAAC,kBAAkB,EAAE,YAAY,CAAC,CAAC;UACjF;cAAM;aACL,IAAI,MAAM,EAAE;iBACV,sBAAsB,CAAC,kBAAkB,GAAG,EAAE,CAAC;iBAC/C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAG,EAAE;qBAC3B,GAAG,CAAC,eAAe,CAAC,GAAG,CAAC,WAAW,EAAE,sBAAsB,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,CAAC;qBACnF,sBAAsB,CAAC,kBAAkB,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,kBAAkB,EAAE,CAAC;qBACxE,IAAI,CAAC,wBAAwB,CAAC,sBAAsB,CAAC,kBAAkB,CAAC,CAAC,CAAC,EAAE,YAAY,CAAC,CAAC;kBAC3F;cACF;kBAAM;iBACL,GAAG,CAAC,eAAe,CAAC,GAAG,CAAC,WAAW,EAAE,sBAAsB,CAAC,kBAAkB,CAAC,CAAC;iBAChF,sBAAsB,CAAC,kBAAkB,GAAG,GAAG,CAAC,kBAAkB,EAAE,CAAC;iBACrE,IAAI,CAAC,wBAAwB,CAAC,sBAAsB,CAAC,kBAAkB,EAAE,YAAY,CAAC,CAAC;cACxF;UACF;SACD,GAAG,CAAC,eAAe,CAAC,GAAG,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;MAC5C;;KAED,yCAAiB,GAAjB,UAAkB,YAAiB;SACjC,IAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;SACrB,IAAM,sBAAsB,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;SACjE,IAAM,iBAAiB,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;SACpE,YAAY,CAAC,gBAAgB,CAAC,SAAS,EAAE,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;SAChF,iBAAiB,CAAC,cAAc,GAAG,GAAG,CAAC,aAAa,EAAE,CAAC;SACvD,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAG,CAAC;SAC7B,IAAM,MAAM,KAAK,YAAY,IAAI,YAAY,YAAY,qBAAqB,EAAE,CAAC;SACjF,IAAM,kBAAkB,GAAG,aAAa,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC;;SAEpE,IAAI,MAAM,EAAE;aACV,sBAAsB,CAAC,kBAAkB,GAAG,EAAE,CAAC;aAC/C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAG,EAAE;iBAC3B,sBAAsB,CAAC,kBAAkB,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,iBAAiB,EAAE,CAAC;cACxE;UACF;cAAM;aACL,sBAAsB,CAAC,kBAAkB,GAAG,GAAG,CAAC,iBAAiB,EAAE,CAAC;UACrE;;SAED,IAAI,MAAM,EAAE;aACV,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC,gBAAgB,EAAE,iBAAiB,CAAC,cAAc,CAAC,CAAC;aAC/E,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,gBAAgB,EAAE,YAAY,CAAC,OAAO,EAAE,kBAAkB,CAAC,CAAC;aAC1F,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAG,EAAE;iBAC3B,IAAI,CAAC,uBAAuB,CAAC,sBAAsB,CAAC,kBAAkB,CAAC,CAAC,CAAC,EAAE,YAAY,EAAE,GAAG,CAAC,iBAAiB,EAAE,GAAG,CAAC,2BAA2B,GAAG,CAAC,CAAC,CAAC;cACtJ;aACD,IAAI,YAAY,CAAC,OAAO,CAAC,eAAe,IAAI,kBAAkB;iBAAE,GAAG,CAAC,cAAc,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;aACzG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC,gBAAgB,EAAE,IAAI,CAAC,CAAC;UACpD;cAAM;aACL,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC,UAAU,EAAE,iBAAiB,CAAC,cAAc,CAAC,CAAC;aACzE,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,UAAU,EAAE,YAAY,CAAC,OAAO,EAAE,kBAAkB,CAAC,CAAC;aACpF,IAAI,CAAC,uBAAuB,CAAC,sBAAsB,CAAC,kBAAkB,EAAE,YAAY,EAAE,GAAG,CAAC,iBAAiB,EAAE,GAAG,CAAC,UAAU,CAAC,CAAC;aAC7H,IAAI,YAAY,CAAC,OAAO,CAAC,eAAe,IAAI,kBAAkB;iBAAE,GAAG,CAAC,cAAc,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;aACnG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;UAC9C;;SAED,IAAI,YAAY,CAAC,WAAW,EAAE;aAC5B,IAAI,CAAC,sBAAsB,CAAC,YAAY,CAAC,CAAC;UAC3C;MACF;KACD,gDAAwB,GAAxB,UAAyB,YAAiB;SACxC,IAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;SACrB,IAAM,OAAO,GAAG,YAAY,CAAC,OAAO,CAAC;SACrC,IAAI,OAAO,CAAC,eAAe,IAAI,aAAa,CAAC,YAAY,CAAC,YAAY,CAAC;aACnE,OAAO,CAAC,SAAS,KAAKF,qBAAa,CAAC,OAAO;aAC3C,OAAO,CAAC,SAAS,KAAKA,qBAAa,CAAC,MAAM,EAAE;aAC9C,IAAM,MAAM,GAAG,CAAC,YAAY,IAAI,YAAY,YAAY,qBAAqB,IAAI,GAAG,CAAC,gBAAgB,GAAG,GAAG,CAAC,UAAU,CAAC;aACvH,IAAM,YAAY,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,cAAc,CAAC;aACjE,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;aAC7C,GAAG,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;aAC3B,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;UACtC;MACF;KACH,oBAAC;CAAD,CAAC,IAAA;;CCzcD;;;CAGA;KAAA;SACE,eAAU,GAAQ,EAAE,CAAC;MAgBtB;KAfC,6BAAG,GAAH,UAAI,MAAW;SACb,IAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;SACzB,IAAI,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;SAChC,IAAI,GAAG,KAAK,SAAS,EAAE;aACrB,GAAG,GAAG,EAAE,CAAC;aACT,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC;UAC7B;SACD,OAAO,GAAG,CAAC;MACZ;KACD,gCAAM,GAAN,UAAO,MAAW;SAChB,OAAO,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;MACrC;KACD,+BAAK,GAAL;SACE,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;MACtB;KACH,sBAAC;CAAD,CAAC,IAAA;;CCpBD;;;AAGA,CAGA;KAME,qBAAY,KAAU;SAJtB,WAAM,GAAY,KAAK,CAAC;SACxB,UAAK,GAAY,IAAI,OAAO,EAAE,CAAC;SAC/B,qBAAgB,GAAW,IAAI,CAAC;SAChC,sBAAiB,GAAY,IAAI,OAAO,EAAE,CAAC;SAEzC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;MACpB;KACD,6BAAO,GAAP,UAAQ,SAAiB;SACvB,IAAI,IAAI,CAAC,gBAAgB,KAAK,SAAS,IAAI,CAAE,IAAI,CAAC,MAAM,EAAE;aACxD,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,SAAS,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;aACpE,IAAI,CAAC,gBAAgB,GAAG,SAAS,CAAC;UACnC;MACF;KACD,+BAAS,GAAT,UAAU,IAAa;SACrB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;MACpB;KACD,8BAAQ,GAAR,UAAS,CAAS,EAAE,CAAS,EAAE,CAAS,EAAE,CAAS;SACjD,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;SAC3B,IAAI,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,KAAK,EAAE;aACvD,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;aACrC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;UACzC;MACF;KACD,2BAAK,GAAL;SACE,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;SACpB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;SAC7B,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;MACxC;KACH,kBAAC;CAAD,CAAC,IAAA;CACD;KAME,qBAAY,KAAU;SAJtB,WAAM,GAAY,KAAK,CAAC;SACxB,qBAAgB,GAAW,IAAI,CAAC;SAChC,qBAAgB,GAAW,IAAI,CAAC;SAChC,sBAAiB,GAAW,IAAI,CAAC;SAE/B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;MACpB;KACD,6BAAO,GAAP,UAAQ,SAAkB;SACxB,IAAM,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC;SACzB,IAAI,SAAS,EAAE;aACb,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC;UAClC;cAAM;aACL,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC;UACnC;MACF;KACD,6BAAO,GAAP,UAAQ,SAAiB;SACvB,IAAM,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC;SACzB,IAAI,IAAI,CAAC,gBAAgB,KAAK,SAAS,IAAI,CAAE,IAAI,CAAC,MAAM,EAAE;aACxD,EAAE,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;aACxB,IAAI,CAAC,gBAAgB,GAAG,SAAS,CAAC;UACnC;MACF;KACD,6BAAO,GAAP,UAAQ,SAAiB;SACvB,IAAM,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC;SACzB,IAAI,IAAI,CAAC,gBAAgB,KAAK,SAAS,EAAE;aACvC,IAAI,SAAS,EAAE;iBACb,QAAQ,SAAS;qBACf,KAAKL,qBAAa,CAAC,KAAK;yBACtB,EAAE,CAAC,SAAS,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;yBACvB,MAAM;qBACR,KAAKA,qBAAa,CAAC,MAAM;yBACvB,EAAE,CAAC,SAAS,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;yBACxB,MAAM;qBACR,KAAKA,qBAAa,CAAC,IAAI;yBACrB,EAAE,CAAC,SAAS,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;yBACtB,MAAM;qBACR,KAAKA,qBAAa,CAAC,SAAS;yBAC1B,EAAE,CAAC,SAAS,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;yBACxB,MAAM;qBACR,KAAKA,qBAAa,CAAC,KAAK;yBACtB,EAAE,CAAC,SAAS,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;yBACvB,MAAM;qBACR,KAAKA,qBAAa,CAAC,YAAY;yBAC7B,EAAE,CAAC,SAAS,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;yBACxB,MAAM;qBACR,KAAKA,qBAAa,CAAC,OAAO;yBACxB,EAAE,CAAC,SAAS,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC;yBACzB,MAAM;qBACR,KAAKA,qBAAa,CAAC,QAAQ;yBACzB,EAAE,CAAC,SAAS,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC;yBAC1B,MAAM;qBACR;yBACE,EAAE,CAAC,SAAS,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;kBAC3B;cACF;kBAAM;iBACL,EAAE,CAAC,SAAS,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;cACzB;aACD,IAAI,CAAC,gBAAgB,GAAG,SAAS,CAAC;UACnC;MACF;KACD,+BAAS,GAAT,UAAU,IAAa;SACrB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;MACpB;KACD,8BAAQ,GAAR,UAAS,KAAa;SACpB,IAAM,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC;SACzB,IAAI,IAAI,CAAC,iBAAiB,KAAK,KAAK,EAAE;aACpC,EAAE,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;aACrB,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;UAChC;MACF;KACD,2BAAK,GAAL;SACE,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;SACpB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;SAC7B,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;SAC7B,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;MAC/B;KACH,kBAAC;CAAD,CAAC,IAAA;CACD;KAWE,uBAAY,KAAU;SATtB,WAAM,GAAY,KAAK,CAAC;SACxB,uBAAkB,GAAW,IAAI,CAAC;SAClC,uBAAkB,GAAW,IAAI,CAAC;SAClC,sBAAiB,GAAW,IAAI,CAAC;SACjC,2BAAsB,GAAW,IAAI,CAAC;SACtC,uBAAkB,GAAY,IAAI,CAAC;SACnC,wBAAmB,GAAW,IAAI,CAAC;SACnC,wBAAmB,GAAW,IAAI,CAAC;SACnC,wBAAmB,GAAW,IAAI,CAAC;SAEjC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;MACpB;KACD,+BAAO,GAAP,UAAQ,WAAmB;SACzB,IAAM,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC;SACzB,IAAI,WAAW,EAAE;aACf,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,CAAC,YAAY,CAAC,CAAC;UACpC;cAAM;aACL,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE,CAAC,YAAY,CAAC,CAAC;UACrC;MACF;KACD,+BAAO,GAAP,UAAQ,WAAmB;SACzB,IAAM,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC;SACzB,IAAI,IAAI,CAAC,kBAAkB,KAAK,WAAW,IAAI,CAAE,IAAI,CAAC,MAAM,EAAE;aAC5D,EAAE,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;aAC5B,IAAI,CAAC,kBAAkB,GAAG,WAAW,CAAC;UACvC;MACF;KACD,+BAAO,GAAP,UAAQ,WAAmB,EAAE,UAAkB,EAAE,WAAmB;SAClE,IAAM,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC;SACzB,IAAI,IAAI,CAAC,kBAAkB,KAAK,WAAW;aACvC,IAAI,CAAC,iBAAiB,KAAO,UAAU;aACvC,IAAI,CAAC,sBAAsB,KAAK,WAAW,EAAE;aAC/C,EAAE,CAAC,WAAW,CAAC,WAAW,EAAG,UAAU,EAAE,WAAW,CAAC,CAAC;aACtD,IAAI,CAAC,kBAAkB,GAAG,WAAW,CAAC;aACtC,IAAI,CAAC,iBAAiB,GAAI,UAAU,CAAC;aACrC,IAAI,CAAC,sBAAsB,GAAG,WAAW,CAAC;UAC3C;MACF;KACD,6BAAK,GAAL,UAAM,WAAmB,EAAE,YAAoB,EAAE,YAAoB;SACnE,IAAM,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC;SACzB,IAAI,IAAI,CAAC,kBAAkB,KAAO,WAAW;aACzC,IAAI,CAAC,mBAAmB,KAAK,YAAY;aACzC,IAAI,CAAC,mBAAmB,KAAK,YAAY,EAAE;aAC7C,EAAE,CAAC,SAAS,CAAC,WAAW,EAAG,YAAY,EAAE,YAAY,CAAC,CAAC;aACvD,IAAI,CAAC,kBAAkB,GAAI,WAAW,CAAC;aACvC,IAAI,CAAC,mBAAmB,GAAG,YAAY,CAAC;aACxC,IAAI,CAAC,mBAAmB,GAAG,YAAY,CAAC;UACzC;MACF;KACD,iCAAS,GAAT,UAAU,IAAa;SACrB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;MACpB;KACD,gCAAQ,GAAR,UAAS,OAAe;SACtB,IAAM,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC;SACzB,IAAI,IAAI,CAAC,mBAAmB,KAAK,OAAO,EAAE;aACxC,EAAE,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;aACzB,IAAI,CAAC,mBAAmB,GAAG,OAAO,CAAC;UACpC;MACF;KACD,6BAAK,GAAL;SACE,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;SACpB,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;SAC/B,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;SAC/B,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;SAC9B,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC;SACnC,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;SAC/B,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;SAChC,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;SAChC,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;MACjC;KACH,oBAAC;CAAD,CAAC,IAAA;CACD;KAmCE,oBAAY,EAAO,EAAE,UAAe,EAAE,cAAmB;SAvBzD,iBAAY,GAAQ,EAAE,CAAC;SACvB,6BAAwB,GAAQ,IAAI,CAAC;SACrC,oBAAe,GAAQ,IAAI,CAAC;SAC5B,yBAAoB,GAAQ,IAAI,CAAC;SACjC,oBAAe,GAAQ,IAAI,CAAC;SAC5B,oBAAe,GAAQ,IAAI,CAAC;SAC5B,8BAAyB,GAAQ,IAAI,CAAC;SACtC,yBAAoB,GAAQ,IAAI,CAAC;SACjC,yBAAoB,GAAQ,IAAI,CAAC;SACjC,6BAAwB,GAAQ,KAAK,CAAC;SACtC,qBAAgB,GAAQ,IAAI,CAAC;SAC7B,oBAAe,GAAQ,IAAI,CAAC;SAC5B,qBAAgB,GAAQ,IAAI,CAAC;SAC7B,+BAA0B,GAAQ,IAAI,CAAC;SACvC,8BAAyB,GAAQ,IAAI,CAAC;SACtC,uBAAkB,GAAQ,IAAI,CAAC;SAE/B,uBAAkB,GAAQ,IAAI,CAAC;SAC/B,yBAAoB,GAAQ,EAAE,CAAC;SAC/B,mBAAc,GAAG,IAAI,OAAO,EAAE,CAAC;SAC/B,oBAAe,GAAG,IAAI,OAAO,EAAE,CAAC;SAChC,kBAAa,GAAG,EAAE,CAAC;SAGjB,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;SACb,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;SAC7B,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;SACrC,IAAI,CAAC,WAAW,GAAG,IAAI,WAAW,CAAC,IAAI,CAAC,CAAC;SACzC,IAAI,CAAC,WAAW,GAAG,IAAI,WAAW,CAAC,IAAI,CAAC,CAAC;SACzC,IAAI,CAAC,aAAa,GAAG,IAAI,aAAa,CAAC,IAAI,CAAC,CAAC;SAC7C,IAAI,CAAC,mBAAmB,GAAG,EAAE,CAAC,YAAY,CAAC,EAAE,CAAC,kBAAkB,CAAC,CAAC;SAClE,IAAI,CAAC,aAAa,GAAG,IAAI,UAAU,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;SAC9D,IAAI,CAAC,iBAAiB,GAAG,IAAI,UAAU,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;SAClE,IAAI,CAAC,iBAAiB,GAAG,IAAI,UAAU,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;SAClE,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC,YAAY,CAAC,EAAE,CAAC,uBAAuB,CAAC,CAAC;SAC/D,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,UAAU,EAAE,EAAE,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;SACxF,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,gBAAgB,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,gBAAgB,EAAE,EAAE,CAAC,2BAA2B,EAAE,CAAC,CAAC,CAAC;SACrH,IAAI,CAAC,OAAO,GAAG;aACb,KAAK,EAAE,IAAI,CAAC,WAAW;aACvB,KAAK,EAAE,IAAI,CAAC,WAAW;aACvB,OAAO,EAAE,IAAI,CAAC,aAAa;UAC5B,CAAC;MACH;KACD,kCAAa,GAAb,UAAc,IAAY,EAAE,MAAc,EAAE,KAAa;SACvD,IAAM,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;SACnB,IAAM,IAAI,GAAG,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC;SAC/B,IAAM,OAAO,GAAG,EAAE,CAAC,aAAa,EAAE,CAAC;SACnC,EAAE,CAAC,WAAW,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;SAC9B,EAAE,CAAC,aAAa,CAAC,IAAI,EAAE,EAAE,CAAC,kBAAkB,EAAE,EAAE,CAAC,OAAO,CAAC,CAAC;SAC1D,EAAE,CAAC,aAAa,CAAC,IAAI,EAAE,EAAE,CAAC,kBAAkB,EAAE,EAAE,CAAC,OAAO,CAAC,CAAC;SAC1D,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,EAAG,EAAE;aAC/B,EAAE,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC;UACjF;SACD,OAAO,OAAO,CAAC;MAChB;;KAED,yBAAI,GAAJ;SACE,IAAM,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;SACnB,IAAI,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;SAC5B,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;SACnB,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;SACrB,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC;SAC3B,IAAI,CAAC,YAAY,CAACA,qBAAa,CAAC,SAAS,CAAC,CAAC;SAC3C,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;SACzB,IAAI,CAAC,WAAW,CAACT,gBAAQ,CAAC,IAAI,CAAC,CAAC;SAChC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC;SAC1B,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;SACtB,IAAI,CAAC,WAAW,CAACM,oBAAY,CAAC,MAAM,CAAC,CAAC;MACvC;KACD,mCAAc,GAAd;SACE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAG,EAAE;aAC1D,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;UAC3B;MACF;KACD,oCAAe,GAAf,UAAgB,SAAc;SAC5B,IAAM,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;SACnB,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;SAClC,IAAI,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE;aAC3C,EAAE,CAAC,uBAAuB,CAAC,SAAS,CAAC,CAAC;aACtC,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;UACvC;SACD,IAAI,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE;aAC3C,IAAM,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;aAChE,SAAS,CAAC,wBAAwB,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;aACjD,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;UACvC;MACF;KACD,8CAAyB,GAAzB,UAA0B,SAAc,EAAE,gBAAqB,EAAE,SAAc;SAC7E,IAAM,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;SACnB,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;SAClC,IAAI,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE;aAC3C,EAAE,CAAC,uBAAuB,CAAC,SAAS,CAAC,CAAC;aACtC,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;UACvC;SACD,IAAI,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,KAAK,gBAAgB,EAAE;aAC1D,SAAS,CAAC,wBAAwB,CAAC,SAAS,EAAE,gBAAgB,CAAC,CAAC;aAChE,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,GAAG,gBAAgB,CAAC;UACtD;MACF;KACD,4CAAuB,GAAvB;SACE,IAAM,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;SACnB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,iBAAiB,CAAC,MAAM,EAAE,CAAC,KAAK,CAAC,EAAE,EAAG,CAAC,EAAE;aAChE,IAAI,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,EAAE;iBACvD,EAAE,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC;iBAC/B,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;cAC/B;UACF;MACF;KACD,2BAAM,GAAN,UAAO,EAAO;SACZ,IAAM,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;SACnB,IAAI,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,KAAK,IAAI,EAAE;aAClC,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;aACd,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC;UAC9B;MACF;KACD,4BAAO,GAAP,UAAQ,EAAO;SACb,IAAM,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;SACnB,IAAI,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,KAAK,KAAK,EAAE;aACnC,EAAE,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;aACf,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC;UAC/B;MACF;KACD,gDAA2B,GAA3B;SACE,IAAM,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;SACnB,IAAI,IAAI,CAAC,wBAAwB,KAAK,IAAI,EAAE;aAC1C,IAAI,CAAC,wBAAwB,GAAG,EAAE,CAAC;aACnC,IAAI,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,gCAAgC,CAAC;iBACvD,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,+BAA+B,CAAC;iBACpD,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,+BAA+B,CAAC,EAAE;iBACtD,IAAM,OAAO,GAAG,EAAE,CAAC,YAAY,CAAC,EAAE,CAAC,0BAA0B,CAAC,CAAC;iBAC/D,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAG,EAAE;qBACxC,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;kBAChD;cACF;UACF;SACD,OAAO,IAAI,CAAC,wBAAwB,CAAC;MACtC;KACD,gCAAW,GAAX,UAAY,QAAgB,EAAE,aAAsB,EAAE,QAAiB,EAAE,QAAiB,EAAE,kBAA2B,EAAE,aAAsB,EAAE,aAAsB,EAAE,kBAA4B;SACnM,IAAM,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;SACnB,IAAI,QAAQ,KAAKA,oBAAY,CAAC,IAAI,EAAE;aAClC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;UACvB;cAAM;aACL,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;UACxB;SACD,IAAI,QAAQ,KAAK,IAAI,CAAC,eAAe,IAAI,kBAAkB,KAAK,IAAI,CAAC,wBAAwB,EAAE;aAC7F,IAAI,QAAQ,KAAKA,oBAAY,CAAC,QAAQ,EAAE;iBACtC,IAAI,kBAAkB,EAAE;qBACtB,EAAE,CAAC,qBAAqB,CAAC,EAAE,CAAC,QAAQ,EAAE,EAAE,CAAC,QAAQ,CAAC,CAAC;qBACnD,EAAE,CAAC,iBAAiB,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC;kBACtD;sBAAM;qBACL,EAAE,CAAC,aAAa,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC;qBAC9B,EAAE,CAAC,SAAS,CAAC,EAAE,CAAC,SAAS,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC;kBACpC;cACF;kBAAM,IAAI,QAAQ,KAAKA,oBAAY,CAAC,WAAW,EAAE;iBAChD,IAAI,kBAAkB,EAAE;qBACtB,EAAE,CAAC,qBAAqB,CAAC,EAAE,CAAC,QAAQ,EAAE,EAAE,CAAC,QAAQ,CAAC,CAAC;qBACnD,EAAE,CAAC,iBAAiB,CAAC,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,mBAAmB,EAAE,EAAE,CAAC,mBAAmB,CAAC,CAAC;kBACxF;sBAAM;qBACL,EAAE,CAAC,aAAa,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC;qBAC9B,EAAE,CAAC,SAAS,CAAC,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,mBAAmB,CAAC,CAAC;kBAC/C;cACF;kBAAM,IAAI,QAAQ,KAAKA,oBAAY,CAAC,QAAQ,EAAE;iBAC7C,IAAI,kBAAkB,EAAE;qBACtB,EAAE,CAAC,qBAAqB,CAAC,EAAE,CAAC,QAAQ,EAAE,EAAE,CAAC,QAAQ,CAAC,CAAC;qBACnD,EAAE,CAAC,iBAAiB,CAAC,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,SAAS,EAAE,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,SAAS,CAAC,CAAC;kBACpE;sBAAM;qBACL,EAAE,CAAC,aAAa,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC;qBAC9B,EAAE,CAAC,SAAS,CAAC,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,SAAS,CAAC,CAAC;kBACrC;cACF;kBAAM;iBACL,IAAI,kBAAkB,EAAE;qBACtB,EAAE,CAAC,qBAAqB,CAAC,EAAE,CAAC,QAAQ,EAAE,EAAE,CAAC,QAAQ,CAAC,CAAC;qBACnD,EAAE,CAAC,iBAAiB,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,mBAAmB,EAAE,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,mBAAmB,CAAC,CAAC;kBACtF;sBAAM;qBACL,EAAE,CAAC,qBAAqB,CAAC,EAAE,CAAC,QAAQ,EAAE,EAAE,CAAC,QAAQ,CAAC,CAAC;qBACnD,EAAE,CAAC,iBAAiB,CAAC,EAAE,CAAC,SAAS,EAAE,EAAE,CAAC,mBAAmB,EAAE,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,mBAAmB,CAAC,CAAC;kBAC5F;cACF;aACD,IAAI,CAAC,eAAe,GAAG,QAAQ,CAAC;aAChC,IAAI,CAAC,wBAAwB,GAAG,kBAAkB,CAAC;UACpD;SACD,IAAI,QAAQ,KAAKA,oBAAY,CAAC,MAAM,EAAE;aACpC,kBAAkB,GAAG,kBAAkB,IAAI,aAAa,CAAC;aACzD,aAAa,GAAG,aAAa,IAAI,QAAQ,CAAC;aAC1C,aAAa,GAAG,aAAa,IAAI,QAAQ,CAAC;aAC1C,IAAI,aAAa,KAAK,IAAI,CAAC,oBAAoB,IAAI,kBAAkB,KAAK,IAAI,CAAC,yBAAyB,EAAE;iBACxG,EAAE,CAAC,qBAAqB,CAAC,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,EAAE,IAAI,CAAC,cAAc,CAAC,kBAAkB,CAAC,CAAC,CAAC;iBACtG,IAAI,CAAC,oBAAoB,GAAG,aAAa,CAAC;iBAC1C,IAAI,CAAC,yBAAyB,GAAG,kBAAkB,CAAC;cACrD;aACD,IAAI,QAAQ,KAAK,IAAI,CAAC,eAAe,IAAI,QAAQ,KAAK,IAAI,CAAC,eAAe,IAAI,aAAa,KAAK,IAAI,CAAC,oBAAoB,IAAI,aAAa,KAAK,IAAI,CAAC,oBAAoB,EAAE;iBACxK,EAAE,CAAC,iBAAiB,CAAC,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,EAAE,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,EAAE,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,EAAE,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,CAAC,CAAC;iBAC3J,IAAI,CAAC,eAAe,GAAG,QAAQ,CAAC;iBAChC,IAAI,CAAC,eAAe,GAAG,QAAQ,CAAC;iBAChC,IAAI,CAAC,oBAAoB,GAAG,aAAa,CAAC;iBAC1C,IAAI,CAAC,oBAAoB,GAAG,aAAa,CAAC;cAC3C;UACF;cAAM;aACL,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;aACjC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;aAC5B,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;aAC5B,IAAI,CAAC,yBAAyB,GAAG,IAAI,CAAC;aACtC,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;aACjC,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;UAClC;MACF;;KAED,kCAAa,GAAb,UAAc,UAAmB;SAC/B,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;MACtC;KACD,iCAAY,GAAZ,UAAa,SAAkB;SAC7B,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;MACrC;KACD,kCAAa,GAAb,UAAc,UAAmB;SAC/B,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;MACtC;KACD,iCAAY,GAAZ,UAAa,SAAiB;SAC5B,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;MACrC;KACD,mCAAc,GAAd,UAAe,WAAmB;SAChC,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;MACzC;KACD,oCAAe,GAAf,UAAgB,YAAoB;SAClC,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;MAC1C;KACD,mCAAc,GAAd,UAAe,WAAmB,EAAE,UAAkB,EAAE,WAAmB;SACzE,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,WAAW,EAAE,UAAU,EAAE,WAAW,CAAC,CAAC;MAClE;KACD,iCAAY,GAAZ,UAAa,WAAmB,EAAE,YAAoB,EAAE,YAAoB;SAC1E,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,WAAW,EAAE,YAAY,EAAE,YAAY,CAAC,CAAC;MACnE;;KAED,iCAAY,GAAZ,UAAa,SAAkB;SAC7B,IAAM,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;SACnB,IAAI,IAAI,CAAC,gBAAgB,KAAK,SAAS,EAAE;aACvC,IAAI,SAAS,EAAE;iBACb,EAAE,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;cACrB;kBAAM;iBACL,EAAE,CAAC,SAAS,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;cACtB;aACD,IAAI,CAAC,gBAAgB,GAAG,SAAS,CAAC;UACnC;MACF;KACD,gCAAW,GAAX,UAAY,QAAkB;SAC5B,IAAM,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;SACnB,IAAI,QAAQ,KAAKN,gBAAQ,CAAC,IAAI,EAAE;aAC9B,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC;aACxB,IAAI,QAAQ,KAAK,IAAI,CAAC,eAAe,EAAE;iBACrC,IAAI,QAAQ,KAAKA,gBAAQ,CAAC,IAAI,EAAE;qBAC9B,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;kBACtB;sBAAM,IAAI,QAAQ,KAAKA,gBAAQ,CAAC,KAAK,EAAE;qBACtC,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;kBACvB;sBAAM;qBACL,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,cAAc,CAAC,CAAC;kBAChC;cACF;UACF;cAAM;aACL,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC;UAC5B;SACD,IAAI,CAAC,eAAe,GAAG,QAAQ,CAAC;MACjC;KACD,iCAAY,GAAZ,UAAa,KAAa;SACxB,IAAM,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;SACnB,IAAI,KAAK,KAAK,IAAI,CAAC,gBAAgB,EAAE;aACnC,EAAE,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;aACpB,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;UAC/B;MACF;KACD,qCAAgB,GAAhB,UAAiB,aAAsB,EAAE,MAAc,EAAE,KAAa;SACpE,IAAM,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;SACnB,IAAI,aAAa,EAAE;aACjB,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,mBAAmB,CAAC,CAAC;aACpC,IAAI,IAAI,CAAC,0BAA0B,KAAK,MAAM,IAAI,IAAI,CAAC,yBAAyB,KAAK,KAAK,EAAE;iBAC1F,EAAE,CAAC,aAAa,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;iBAChC,IAAI,CAAC,0BAA0B,GAAG,MAAM,CAAC;iBACzC,IAAI,CAAC,yBAAyB,GAAG,KAAK,CAAC;cACxC;UACF;cAAM;aACL,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,mBAAmB,CAAC,CAAC;UACtC;MACF;KACD,mCAAc,GAAd;SACE,OAAO,IAAI,CAAC,kBAAkB,CAAC;MAChC;KACD,mCAAc,GAAd,UAAe,WAAoB;SACjC,IAAM,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;SACnB,IAAI,CAAC,kBAAkB,GAAG,WAAW,CAAC;SACtC,IAAI,WAAW,EAAE;aACf,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,YAAY,CAAC,CAAC;UAC9B;cAAM;aACL,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,YAAY,CAAC,CAAC;UAC/B;MACF;;KAED,kCAAa,GAAb,UAAc,SAAkB;SAC9B,IAAM,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;SACnB,IAAI,SAAS,KAAK,SAAS;aAAE,SAAS,GAAG,EAAE,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;SAC5E,IAAI,IAAI,CAAC,kBAAkB,KAAK,SAAS,EAAE;aACzC,EAAE,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;aAC5B,IAAI,CAAC,kBAAkB,GAAG,SAAS,CAAC;UACrC;MACF;KACD,gCAAW,GAAX,UAAY,SAAiB,EAAE,YAAoB;SACjD,IAAM,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;SACnB,IAAI,IAAI,CAAC,kBAAkB,KAAK,IAAI,EAAE;aACpC,IAAI,CAAC,aAAa,EAAE,CAAC;UACtB;SACD,IAAI,YAAY,GAAG,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;SACtE,IAAI,YAAY,KAAK,SAAS,EAAE;aAC9B,YAAY,GAAG,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,SAAS,EAAE,CAAC;aACvD,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,kBAAkB,CAAC,GAAG,YAAY,CAAC;UACnE;SACD,IAAI,YAAY,CAAC,IAAI,KAAK,SAAS,IAAI,YAAY,CAAC,OAAO,KAAK,YAAY,EAAE;aAC5E,EAAE,CAAC,WAAW,CAAC,SAAS,EAAE,YAAY,IAAI,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC,CAAC;aACzE,YAAY,CAAC,IAAI,GAAG,SAAS,CAAC;aAC9B,YAAY,CAAC,OAAO,GAAG,YAAY,CAAC;UACrC;MACF;KACD,yCAAoB,GAApB;SACE,IAAM,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;SACnB,IAAI;aACF,EAAE,CAAC,oBAAoB,CAAC,KAAK,CAAC,EAAE,EAAE,SAAS,CAAC,CAAC;UAC9C;SAAC,OAAO,KAAK,EAAE;aACd,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;UACtB;MACF;KACD,+BAAU,GAAV;SACE,IAAM,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;SACnB,IAAI;aACF,EAAE,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE,EAAE,SAAS,CAAC,CAAC;UACpC;SAAC,OAAO,KAAK,EAAE;aACd,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;UACtB;MACF;;KAED,+BAAU,GAAV,UAAW,CAAS,EAAE,CAAS,EAAE,CAAS,EAAE,CAAS;SACnD,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;MACvC;KACD,+BAAU,GAAV,UAAW,KAAa;SACtB,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;MAClC;KACD,iCAAY,GAAZ,UAAa,OAAe;SAC1B,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;MACtC;;KAED,4BAAO,GAAP,UAAQ,OAAgB;SACtB,IAAM,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;SACnB,IAAI,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,KAAK,EAAE;aACjD,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC;aACvD,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;UACnC;MACF;KACD,6BAAQ,GAAR,UAAS,QAAiB;SACxB,IAAM,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;SACnB,IAAI,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,KAAK,EAAE;aACnD,EAAE,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC;aAC5D,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;UACrC;MACF;;KAED,0BAAK,GAAL;SACE,IAAM,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;SACnB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,iBAAiB,CAAC,MAAM,EAAE,CAAC,EAAG,EAAE;aACvD,IAAI,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;iBACnC,EAAE,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC;iBAC/B,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;cAC/B;UACF;SACD,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;SACvB,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC;SACrC,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;SAC/B,IAAI,CAAC,oBAAoB,GAAG,EAAE,CAAC;SAC/B,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;SAC5B,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;SAC7B,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;SAC5B,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;SACzB,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;SACzB,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;MAC5B;KACH,iBAAC;CAAD,CAAC,IAAA;;CC/jBD;KAmBE,2BAAY,EAAyB,EAAE,UAA2B,EAAE,UAAmC;SACrG,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;SACb,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;SAC7B,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;SAC7B,IAAI,CAAC,SAAS,GAAG,UAAU,CAAC,SAAS,KAAK,SAAS,GAAG,UAAU,CAAC,SAAS,GAAG,OAAO,CAAC;SACrF,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;SACzD,IAAI,IAAI,CAAC,YAAY,KAAK,IAAI,CAAC,SAAS,EAAE;aACxC,OAAO,CAAC,IAAI,CAAC,sBAAsB,EAAE,IAAI,CAAC,SAAS,EAAE,sBAAsB,EAAE,IAAI,CAAC,YAAY,EAAE,UAAU,CAAC,CAAC;aAC5G,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC;UACpC;SACD,IAAI,CAAC,sBAAsB,GAAG,UAAU,CAAC,sBAAsB,KAAK,IAAI,IAAI,CAAC,CAAE,UAAU,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;SAChH,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC,YAAY,CAAC,EAAE,CAAC,uBAAuB,CAAC,CAAC;SAC/D,IAAI,CAAC,iBAAiB,GAAG,EAAE,CAAC,YAAY,CAAC,EAAE,CAAC,8BAA8B,CAAC,CAAC;SAC5E,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC,YAAY,CAAC,EAAE,CAAC,gBAAgB,CAAC,CAAC;SAC3D,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC,YAAY,CAAC,EAAE,CAAC,yBAAyB,CAAC,CAAC;SACpE,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC,YAAY,CAAC,EAAE,CAAC,kBAAkB,CAAC,CAAC;SAC5D,IAAI,CAAC,iBAAiB,GAAG,EAAE,CAAC,YAAY,CAAC,EAAE,CAAC,0BAA0B,CAAC,CAAC;SACxE,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC,YAAY,CAAC,EAAE,CAAC,mBAAmB,CAAC,CAAC;SAC3D,IAAI,CAAC,mBAAmB,GAAG,EAAE,CAAC,YAAY,CAAC,EAAE,CAAC,4BAA4B,CAAC,CAAC;SAC5E,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,iBAAiB,GAAG,CAAC,CAAC;SACjD,IAAI,CAAC,qBAAqB,GAAG,CAAC,CAAE,UAAU,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;SACpE,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,qBAAqB,CAAC;MAC9E;KACD,4CAAgB,GAAhB;SACE,IAAM,EAAE,GAA0B,IAAI,CAAC,EAAE,CAAC;SAC1C,IAAI,IAAI,CAAC,aAAa,KAAK,SAAS;aAAE,OAAO,IAAI,CAAC,aAAa,CAAC;SAChE,IAAM,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,gCAAgC,CAAC,CAAC;SACxE,IAAI,SAAS,KAAK,IAAI,EAAE;aACtB,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC,YAAY,CAAC,SAAS,CAAC,8BAA8B,CAAC,CAAC;UAChF;cAAM;aACL,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;UACxB;SACD,OAAO,IAAI,CAAC,aAAa,CAAC;MAC3B;KACD,2CAAe,GAAf,UAAgB,SAAiB;SAC/B,IAAM,EAAE,GAA0B,IAAI,CAAC,EAAE,CAAC;SAC1C,IAAI,SAAS,KAAK,OAAO,EAAE;aACzB,IAAI,EAAE,CAAC,wBAAwB,CAAC,EAAE,CAAC,aAAa,EAAE,EAAE,CAAC,UAAU,CAAC,CAAC,SAAS,GAAG,CAAC;iBACzE,EAAE,CAAC,wBAAwB,CAAC,EAAE,CAAC,eAAe,EAAE,EAAE,CAAC,UAAU,CAAC,CAAC,SAAS,GAAG,CAAC,EAAE;iBACjF,OAAO,OAAO,CAAC;cAChB;aACD,SAAS,GAAG,SAAS,CAAC;UACvB;SACD,IAAI,SAAS,KAAK,SAAS,EAAE;aAC3B,IAAI,EAAE,CAAC,wBAAwB,CAAC,EAAE,CAAC,aAAa,EAAE,EAAE,CAAC,YAAY,CAAC,CAAC,SAAS,GAAG,CAAC;iBAC3E,EAAE,CAAC,wBAAwB,CAAC,EAAE,CAAC,eAAe,EAAE,EAAE,CAAC,YAAY,CAAC,CAAC,SAAS,GAAG,CAAC,EAAE;iBACnF,OAAO,SAAS,CAAC;cAClB;UACF;SACD,OAAO,MAAM,CAAC;MACf;KACH,wBAAC;CAAD,CAAC,IAAA;;CC3ED;;;CAGA;KAGE,yBAAY,EAAyB;SADrC,eAAU,GAAG,EAAE,CAAC;SAEd,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;MACd;KACD,6BAAG,GAAH,UAAI,IAAY;SACd,IAAM,EAAE,GAA0B,IAAI,CAAC,EAAE,CAAC;SAC1C,IAAM,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;SACnC,IAAI,UAAU,CAAC,IAAI,CAAC,KAAK,SAAS,EAAE;aAClC,OAAO,UAAU,CAAC,IAAI,CAAC,CAAC;UACzB;SACD,IAAI,SAAS,CAAC;SACd,QAAQ,IAAI;aACV,KAAK,qBAAqB;iBACxB,SAAS,GAAG,EAAE,CAAC,YAAY,CAAC,qBAAqB,CAAC,IAAI,EAAE,CAAC,YAAY,CAAC,yBAAyB,CAAC,IAAI,EAAE,CAAC,YAAY,CAAC,4BAA4B,CAAC,CAAC;iBAClJ,MAAM;aACR,KAAK,gCAAgC;iBACnC,SAAS,GAAG,EAAE,CAAC,YAAY,CAAC,gCAAgC,CAAC,IAAI,EAAE,CAAC,YAAY,CAAC,oCAAoC,CAAC,IAAI,EAAE,CAAC,YAAY,CAAC,uCAAuC,CAAC,CAAC;iBACnL,MAAM;aACR,KAAK,+BAA+B;iBAClC,SAAS,GAAG,EAAE,CAAC,YAAY,CAAC,+BAA+B,CAAC,IAAI,EAAE,CAAC,YAAY,CAAC,mCAAmC,CAAC,IAAI,EAAE,CAAC,YAAY,CAAC,sCAAsC,CAAC,CAAC;iBAChL,MAAM;aACR,KAAK,gCAAgC;iBACnC,SAAS,GAAG,EAAE,CAAC,YAAY,CAAC,gCAAgC,CAAC,IAAI,EAAE,CAAC,YAAY,CAAC,uCAAuC,CAAC,CAAC;iBAC1H,MAAM;aACR,KAAK,+BAA+B;iBAClC,SAAS,GAAG,EAAE,CAAC,YAAY,CAAC,+BAA+B,CAAC,CAAC;iBAC7D,MAAM;aACR;iBACE,SAAS,GAAG,EAAE,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;UACrC;SACD,IAAI,SAAS,KAAK,IAAI,EAAE;aACtB,OAAO,CAAC,IAAI,CAAC,uBAAuB,GAAG,IAAI,GAAG,2BAA2B,CAAC,CAAC;UAC5E;SACD,UAAU,CAAC,IAAI,CAAC,GAAG,SAAS,CAAC;SAC7B,OAAO,SAAS,CAAC;MAClB;KACH,sBAAC;CAAD,CAAC,IAAA;;CCzCD;;;AAGA,CAGA;KAAA;SACE,gBAAW,GAAa,IAAI,CAAC;SAC7B,oBAAe,GAAW,CAAC,CAAC;SAC5B,yBAAoB,GAAY,KAAK,CAAC;SACtC,qBAAgB,GAAY,KAAK,CAAC;SAClC,UAAK,GAAU,IAAI,KAAK,EAAE,CAAC;SAC3B,qBAAgB,GAAY,IAAI,OAAO,EAAE,CAAC;SAC1C,YAAO,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,WAAW,EAAE,KAAK,EAAE,CAAC;SAC9C,cAAS,GAAW,CAAC,CAAC;SACtB,oBAAe,GAAW,CAAC,CAAC;MAiF7B;KAhFC,4BAAI,GAAJ,UAAK,MAAe,EAAE,mBAA4B,EAAE,MAAc;SAChE,IAAM,OAAO,GACX,MAAM,CAAC,MAAM,KAAK,CAAC;aACnB,mBAAmB;;;aAGnB,IAAI,CAAC,eAAe,KAAK,CAAC;aAC1B,IAAI,CAAC,oBAAoB,CAAC;SAC5B,IAAI,CAAC,oBAAoB,GAAG,mBAAmB,CAAC;SAChD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC,CAAC;SACzD,IAAI,CAAC,eAAe,GAAG,MAAM,CAAC,MAAM,CAAC;SACrC,OAAO,OAAO,CAAC;MAChB;KACD,oCAAY,GAAZ;SACE,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;SAC7B,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;MAC1B;KACD,kCAAU,GAAV;SACE,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;SAC9B,IAAI,CAAC,gBAAgB,EAAE,CAAC;MACzB;KACD,gCAAQ,GAAR,UAAS,MAAe,EAAE,gBAAyB,EAAE,WAAoB,EAAE,MAAc,EAAE,KAAU,EAAE,SAAkB;SACvH,IAAI,CAAE,IAAI,CAAC,oBAAoB;aAC3B,MAAM,KAAK,IAAI,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC;aACtC,IAAI,CAAC,gBAAgB,IAAI,CAAE,WAAW,EAAE;;aAE1C,IAAI,IAAI,CAAC,gBAAgB,EAAE;;iBAEzB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;cAC1B;kBAAM;iBACL,IAAI,CAAC,gBAAgB,EAAE,CAAC;cACzB;UACF;cAAM;aACL,IAAM,OAAO,GAAG,IAAI,CAAC,gBAAgB,GAAG,CAAC,GAAG,IAAI,CAAC,eAAe,CAAC;aACjE,IAAM,OAAO,GAAG,OAAO,GAAG,CAAC,CAAC;aAC5B,IAAI,QAAQ,GAAG,KAAK,CAAC,aAAa,IAAI,IAAI,CAAC;aAC3C,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,QAAQ,CAAC;aAC9B,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,SAAS,CAAC,CAAC;aAClE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,KAAK,OAAO,EAAE,EAAG,CAAC,EAAE;iBACnC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;cACnC;aACD,KAAK,CAAC,aAAa,GAAG,QAAQ,CAAC;aAC/B,IAAI,CAAC,eAAe,GAAG,gBAAgB,GAAG,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;aAC7D,IAAI,CAAC,SAAS,IAAI,OAAO,CAAC;UAC3B;MACF;KACO,wCAAgB,GAAxB;SACE,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,KAAK,IAAI,CAAC,WAAW,EAAE;aAC3C,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC;aACtC,IAAI,CAAC,OAAO,CAAC,WAAW,GAAG,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC;UACrD;SACD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,eAAe,CAAC;SACtC,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC;MAC1B;KACO,qCAAa,GAArB,UAAsB,MAAe,EAAE,MAAe,EAAE,SAAkB,EAAE,aAAuB;SACjG,IAAM,OAAO,GAAG,MAAM,KAAK,IAAI,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;SACpD,IAAI,QAAQ,GAAG,IAAI,CAAC;SACpB,IAAI,OAAO,KAAK,CAAC,EAAE;aACjB,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;aAC9B,IAAI,aAAa,KAAK,IAAI,IAAI,QAAQ,KAAK,IAAI,EAAE;iBAC/C,IAAM,QAAQ,GAAG,SAAS,GAAG,OAAO,GAAG,CAAC,EACtC,UAAU,GAAG,MAAM,CAAC,kBAAkB,CAAC;iBACzC,IAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;iBAClD,IAAI,QAAQ,KAAK,IAAI,IAAI,QAAQ,CAAC,MAAM,GAAG,QAAQ,EAAE;qBACnD,QAAQ,GAAG,IAAI,YAAY,CAAC,QAAQ,CAAC,CAAC;kBACvC;iBACD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,SAAS,EACpB,CAAC,KAAK,OAAO,EAAE,EAAG,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE;qBACtC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;yBACtB,YAAY,CAAC,UAAU,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;qBACpD,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;qBACxC,QAAQ,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;kBACxC;cACF;aACD,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,QAAQ,CAAC;aAC9B,IAAI,CAAC,OAAO,CAAC,WAAW,GAAG,IAAI,CAAC;UACjC;SACD,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC;SACzB,OAAO,QAAQ,CAAC;MACjB;KACH,oBAAC;CAAD,CAAC,IAAA;;CC/FD;;;AAGA;KAAkCuB,gCAAK;KAErC,sBAAY,KAAa,EAAE,SAAkB;SAA7C,YACE,kBAAM,KAAK,EAAE,SAAS,CAAC,SAGxB;SALQ,oBAAc,GAAY,IAAI,CAAC;SAGtC,KAAI,CAAC,IAAI,GAAG,cAAc,CAAC;SAC3B,KAAI,CAAC,UAAU,GAAG,SAAS,CAAC;;MAC7B;KACH,mBAAC;CAAD,CAPA,CAAkC,KAAK;;CCFvC;;;AAGA;KAA4CA,0CAAW;KACrD,gCAAY,KAAW;gBACrB,kBAAM,IAAI,kBAAkB,CAAC,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;MACxD;KACH,6BAAC;CAAD,CAJA,CAA4C,WAAW;;CCFvD;;;;AAIA;KAAsCA,oCAAK;KAGzC,0BAAY,KAAa,EAAE,SAAkB;SAA7C,YACE,kBAAM,KAAK,EAAE,SAAS,CAAC,SAKxB;SARD,YAAM,GAAa,IAAI,QAAQ,EAAE,CAAC;SACzB,wBAAkB,GAAY,IAAI,CAAC;SAG1C,KAAI,CAAC,IAAI,GAAG,kBAAkB,CAAC;SAC/B,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;SACvC,KAAI,CAAC,YAAY,EAAE,CAAC;SACpB,KAAI,CAAC,MAAM,GAAG,IAAI,sBAAsB,EAAE,CAAC;;MAC5C;KACD,+BAAI,GAAJ,UAAK,MAAY;SACf,iBAAM,IAAI,YAAC,MAAM,CAAC,CAAC;SACnB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;SACpC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;SACpC,OAAO,IAAI,CAAC;MACb;KACH,uBAAC;CAAD,CAhBA,CAAsC,KAAK;;CCJ3C;;;AAGA;KAAqCA,mCAAK;KAExC,yBAAY,QAAgB,EAAE,WAAmB,EAAE,SAAkB;SAArE,YACE,kBAAM,QAAQ,EAAE,SAAS,CAAC,SAM3B;SARQ,uBAAiB,GAAY,IAAI,CAAC;SAGzC,KAAI,CAAC,IAAI,GAAG,iBAAiB,CAAC;SAC9B,KAAI,CAAC,UAAU,GAAG,SAAS,CAAC;SAC5B,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;SACvC,KAAI,CAAC,YAAY,EAAE,CAAC;SACpB,KAAI,CAAC,WAAW,GAAG,IAAI,KAAK,CAAC,WAAW,CAAC,CAAC;;MAC3C;KACD,8BAAI,GAAJ,UAAK,MAAY;SACf,iBAAM,IAAI,YAAC,MAAM,CAAC,CAAC;SACnB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;SAC1C,OAAO,IAAI,CAAC;MACb;KACH,sBAAC;CAAD,CAfA,CAAqC,KAAK;;CCH1C;;;AAGA;KAA+BA,6BAAK;KAGlC,mBAAY,KAAa,EAAE,SAAkB,EAAE,QAAoB,EAAE,KAA2B,EAAE,QAAoB,EAAE,KAAiB;SAA1F,yBAAA,EAAA,YAAoB;SAAE,sBAAA,EAAA,QAAgB,IAAI,CAAC,EAAE,GAAG,CAAC;SAAE,yBAAA,EAAA,YAAoB;SAAE,sBAAA,EAAA,SAAiB;SAAzI,YACE,kBAAM,KAAK,EAAE,SAAS,CAAC,SASxB;SAZD,YAAM,GAAa,IAAI,QAAQ,EAAE,CAAC;SACzB,iBAAW,GAAY,IAAI,CAAC;SAGnC,KAAI,CAAC,IAAI,GAAG,WAAW,CAAC;SACxB,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;SACvC,KAAI,CAAC,YAAY,EAAE,CAAC;SACpB,KAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;SACzB,KAAI,CAAC,KAAK,GAAG,KAAK,CAAC;SACnB,KAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;SACzB,KAAI,CAAC,KAAK,GAAG,KAAK,CAAC;SACnB,KAAI,CAAC,MAAM,GAAG,IAAI,eAAe,EAAE,CAAC;;MACrC;KACD,sBAAI,4BAAK;cAAT;;;aAGE,OAAO,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,EAAE,CAAC;UACjC;cACD,UAAW,KAAa;;;aAGtB,IAAI,CAAC,SAAS,GAAG,KAAK,GAAG,IAAI,CAAC,EAAE,CAAC;UAClC;;;QALA;KAMD,wBAAI,GAAJ,UAAK,MAAY;SACf,iBAAM,IAAI,YAAC,MAAM,CAAC,CAAC;SACnB,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;SAChC,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;SAC1B,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;SAChC,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;SAC1B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;SACpC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;SACpC,OAAO,IAAI,CAAC;MACb;KACH,gBAAC;CAAD,CAlCA,CAA+B,KAAK;;;KCkBAA,kCAAQ;KAG1C,wBAAY,UAAqC;SAAjD,YACE,iBAAO,SAQR;SAVQ,sBAAgB,GAAY,IAAI,CAAC;SAGxC,KAAI,CAAC,IAAI,GAAG,gBAAgB,CAAC;SAC7B,KAAI,CAAC,KAAK,GAAG,IAAI,KAAK,CAAC,QAAQ,CAAC,CAAC;SACjC,KAAI,CAAC,GAAG,GAAG,IAAI,CAAC;SAChB,KAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;SAClB,KAAI,CAAC,GAAG,GAAG,KAAK,CAAC;SACjB,KAAI,CAAC,MAAM,GAAG,KAAK,CAAC;SACpB,KAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;;MAC5B;KACD,6BAAI,GAAJ,UAAK,MAAY;SACf,iBAAM,IAAI,YAAC,MAAM,CAAC,CAAC;SACnB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;SAC9B,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC;SACtB,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;SAChC,OAAO,IAAI,CAAC;MACb;KACH,qBAAC;CAAD,CApBA,CAAoC,QAAQ;;CCnB5C;;;;AAIA;KAA4BA,0BAAQ;KAElC,gBAAY,QAAyC;SAAzC,yBAAA,EAAA,eAAyB,cAAc,EAAE;SAArD,YACE,iBAAO,SAGR;SALQ,cAAQ,GAAY,IAAI,CAAC;SAGhC,KAAI,CAAC,IAAI,GAAG,QAAQ,CAAC;SACrB,KAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;;MAC1B;KAED,wBAAO,GAAP,UAAQ,SAAoB,EAAE,UAAuB;SACnD,IAAI,cAAc,GAAG,MAAM,CAAC,sBAAsB,CAAC;;SAEjD,cAAc,CAAC,qBAAqB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;SACvD,IAAI,UAAU,GAAG,SAAS,CAAC,GAAG,CAAC,iBAAiB,CAAC,cAAc,CAAC,CAAC;SACjE,IAAI,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC;SAClD,IAAI,UAAU,GAAG,WAAW,EAAE;aAC5B,OAAO,UAAU,CAAC;UACnB;SACD,UAAU,CAAC,IAAI,CAAC;aACd,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;aAC/B,KAAK,EAAE,IAAI,CAAC,QAAQ;aACpB,KAAK,EAAE,CAAC;aACR,IAAI,EAAE,IAAI;aACV,SAAS,EAAE,CAAC;aACZ,EAAE,EAAE,IAAI;aACR,MAAM,EAAE,IAAI;UACb,CAAC,CAAC;SACH,OAAO,UAAU,CAAC;;MAErB;KACD,sBAAK,GAAL;SACE,OAAO,IAAK,IAAI,CAAC,WAAmB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;MAChE;KAxBc,6BAAsB,GAAG,IAAI,OAAO,EAAE,CAAC;KAyBxD,aAAC;EAAA,CAhC2B,QAAQ;;CCJpC;;;;AAIA;KAA+BA,6BAAQ;KAKrC,mBAAY,OAAgB,EAAE,IAAY,EAAE,QAAgB,EAAE,QAAsB,EAAE,KAAY;SAAlG,YACE,iBAAO,SAIR;SATD,gBAAU,GAAU,EAAE,CAAC;SACvB,oBAAc,GAAY,IAAI,OAAO,EAAE,CAAC;SAE/B,iBAAW,GAAY,IAAI,CAAC;SAGnC,IAAI,OAAO,KAAK,SAAS,EAAE;aACzB,KAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;UACzD;;MACF;KACD,wBAAI,GAAJ,UAAK,MAAY;SACf,iBAAM,IAAI,YAAC,MAAM,CAAC,CAAC;SACnB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;SAChD,IAAI,CAAC,oBAAoB,GAAG,MAAM,CAAC,oBAAoB,CAAC;SACxD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAG,EAAE;aACzD,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;UAC5C;SACD,OAAO,IAAI,CAAC;MACb;KACD,uBAAG,GAAH,UAAI,MAAgB;SAClB,IAAI,MAAM,YAAY,OAAO,EAAE;aAC7B,OAAO,CAAC,IAAI,CAAC,yCAAyC,CAAC,CAAC;aACxD,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;UAC5C;SACD,OAAO,iBAAM,GAAG,YAAC,MAAM,CAAC,CAAC;MAC1B;KACD,4BAAQ,GAAR,UAAS,OAAgB,EAAE,IAAiB,EAAE,QAAoB,EAAE,QAA4C,EAAE,KAAkC,EAAE,OAAmB;SAA9I,qBAAA,EAAA,QAAgB,CAAC;SAAE,yBAAA,EAAA,YAAoB;SAAE,yBAAA,EAAA,WAAyBjB,oBAAY,CAAC,MAAM;SAAE,sBAAA,EAAA,YAAmB,KAAK,CAAC,QAAQ,CAAC;SAAE,wBAAA,EAAA,WAAmB;SACvK,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC;SACrD,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC;aACnB,OAAO,EAAE,OAAO;aAChB,IAAI,EAAE,IAAI;aACV,QAAQ,EAAE,QAAQ;aAClB,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;aAChB,KAAK,EAAE,CAAC;aACR,QAAQ,EAAE,CAAC;aACX,OAAO,EAAE,OAAO;aAChB,KAAK,EAAE,KAAK;aACZ,QAAQ,EAAE,QAAQ;UACnB,CAAC,CAAC;MACJ;;;;;KAKD,oCAAgB,GAAhB;SACE,IAAI,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC;SACnC,IAAI,KAAK,CAAC;SACV,IAAI,IAAI,GAAG,CAAE,IAAI,CAAC,cAAc,CAAC,CAAC,GAAG,CAAC,CAAC;SACvC,IAAI,IAAI,GAAG,CAAE,IAAI,CAAC,cAAc,CAAC,CAAC,GAAG,CAAC,CAAC;SACvC,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAG,EAAE;aACxB,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;aAC3B,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,CAAC,GAAG,IAAI,GAAG,KAAK,CAAC,QAAQ,CAAC;aACxD,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,CAAC,GAAG,IAAI,GAAG,KAAK,CAAC,QAAQ,CAAC;aACxD,KAAK,CAAC,cAAc,GAAG,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC;aAChD,KAAK,CAAC,QAAQ,IAAI,CAAC,KAAK,CAAC,cAAc,GAAG,KAAK,CAAC,QAAQ,IAAI,IAAI,CAAC;UAClE;MACF;KACH,gBAAC;CAAD,CA1DA,CAA+B,QAAQ;;CCPvC;;;AAGA;KAA2CiB,yCAAQ;KAEjD,+BAAY,QAAkB;SAA9B,YACE,iBAAO,SAER;SAJQ,6BAAuB,GAAY,IAAI,CAAC;SAG/C,KAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;;MAC1B;KACD,sCAAM,GAAN,UAAO,cAAmB;MACzB;KACH,4BAAC;CAAD,CARA,CAA2C,QAAQ;;CCDnD;;;AAGA;KAAkCA,gCAAI;KAEpC,sBAAY,QAAmC,EAAE,QAAkB;SAAnE,YACE,kBAAM,QAAQ,EAAE,QAAQ,CAAC,SAG1B;SALQ,oBAAc,GAAY,IAAI,CAAC;SAGtC,KAAI,CAAC,IAAI,GAAG,cAAc,CAAC;SAC3B,KAAI,CAAC,KAAK,GAAG,CAAC,CAAC;;MAChB;KACH,mBAAC;CAAD,CAPA,CAAkC,IAAI;;CCNtC;;;AAGA;KAA6CA,2CAAc;KAIzD;SAAA,YACE,iBAAO,SACR;SALD,UAAI,GAAW,yBAAyB,CAAC;SACzC,uBAAiB,GAAW,SAAS,CAAC;SAC7B,+BAAyB,GAAY,IAAI,CAAC;;MAGlD;KACD,0CAAQ,GAAR,UAAS,KAAa,EAAE,KAAa,EAAE,aAAqB;SAC1D,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;aACf,KAAK,EAAE,KAAK;aACZ,KAAK,EAAE,KAAK;aACZ,aAAa,EAAE,aAAa;UAC7B,CAAC,CAAC;MACJ;KACD,sCAAI,GAAJ,UAAK,MAAY;SACf,IAAM,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;SAC3B,IAAI,KAAK,KAAK,IAAI,EAAE;aAClB,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC;UAC9B;SACD,IAAM,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC;SACrC,KAAK,IAAI,IAAI,IAAI,UAAU,EAAE;aAC3B,IAAM,SAAS,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC;aACnC,IAAI,SAAS,KAAK,SAAS;iBAAE,SAAS;aACtC,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,SAAS,CAAC,KAAK,EAAE,CAAC,CAAC;UAC5C;SACD,IAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;SAC7B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAG,EAAE;aAC9C,IAAM,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;aACxB,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,aAAa,CAAC,CAAC;UAC9D;SACD,OAAO,IAAI,CAAC;MACb;KACH,8BAAC;CAAD,CAhCA,CAA6C,cAAc;;CCH3D;;;AAGA;KAA8CA,4CAAe;KAG3D,kCAAY,KAAU,EAAE,QAAgB,EAAE,gBAA4B;SAA5B,iCAAA,EAAA,oBAA4B;SAAtE,YACE,kBAAM,KAAK,EAAE,QAAQ,CAAC,SAEvB;SAJQ,gCAA0B,GAAY,IAAI,CAAC;SAGlD,KAAI,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;;MAC1C;KACD,uCAAI,GAAJ,UAAK,MAAY;SACf,iBAAM,IAAI,YAAC,MAAM,CAAC,CAAC;SACnB,IAAI,CAAC,gBAAgB,GAAG,MAAM,CAAC,gBAAgB,CAAC;SAChD,OAAO,IAAI,CAAC;MACb;KACH,+BAAC;CAAD,CAZA,CAA8C,eAAe;;CCH7D;;;AAGA;KASE,2BAAY,KAAW,EAAE,MAAe;SARxC,SAAI,GAAG,KAAK,CAAC,YAAY,EAAE,CAAC;SAOnB,wBAAmB,GAAY,IAAI,CAAC;SAE3C,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;SACnB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;SACrB,IAAI,CAAC,KAAK,GAAG,KAAK,KAAK,SAAS,GAAG,KAAK,CAAC,MAAM,GAAG,MAAM,GAAG,CAAC,CAAC;SAC7D,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;SACrB,IAAI,CAAC,WAAW,GAAG,EAAE,MAAM,EAAE,CAAC,EAAE,KAAK,EAAE,CAAE,CAAC,EAAE,CAAC;SAC7C,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;MAClB;KACD,sBAAI,0CAAW;cAAf,UAAgB,KAAc;aAC5B,IAAI,KAAK,KAAK,IAAI;iBAAE,IAAI,CAAC,OAAO,EAAG,CAAC;UACrC;;;QAAA;KACD,oCAAQ,GAAR,UAAS,KAAK;SACZ,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;aACxB,MAAM,IAAI,SAAS,CAAC,uDAAuD,CAAC,CAAC;UAC9E;SACD,IAAI,CAAC,KAAK,GAAG,KAAK,KAAK,SAAS,GAAG,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;SAClE,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;MACpB;KACD,sCAAU,GAAV,UAAW,KAAc;SACvB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;SACrB,OAAO,IAAI,CAAC;MACb;KACD,gCAAI,GAAJ,UAAK,MAAY;SACf,IAAI,CAAC,KAAK,GAAG,IAAK,MAAM,CAAC,KAAK,CAAC,WAAmB,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;SACjE,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;SAC1B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;SAC5B,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;SAC9B,OAAO,IAAI,CAAC;MACb;KACD,kCAAM,GAAN,UAAO,MAAc,EAAE,SAAc,EAAE,MAAc;SACnD,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC;SACtB,MAAM,IAAI,SAAS,CAAC,MAAM,CAAC;SAC3B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAG,EAAE;aAC5C,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,SAAS,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;UACtD;SACD,OAAO,IAAI,CAAC;MACb;KACD,+BAAG,GAAH,UAAI,KAAa,EAAE,MAAkB;SAAlB,uBAAA,EAAA,UAAkB;SACnC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;SAC9B,OAAO,IAAI,CAAC;MACb;KACD,iCAAK,GAAL;SACE,OAAO,IAAK,IAAI,CAAC,WAAmB,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;MACnD;KACH,wBAAC;CAAD,CAAC;;CCxDD;;;AAGA;KAAgDA,8CAAiB;KAG/D,oCAAY,KAAU,EAAE,MAAc,EAAE,gBAA4B;SAA5B,iCAAA,EAAA,oBAA4B;SAApE,YACE,kBAAM,KAAK,EAAE,MAAM,CAAC,SAErB;SAJQ,kCAA4B,GAAY,IAAI,CAAC;SAGpD,KAAI,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;;MAC1C;KACD,yCAAI,GAAJ,UAAK,MAAY;SACf,iBAAM,IAAI,YAAC,MAAM,CAAC,CAAC;SACnB,IAAI,CAAC,gBAAgB,GAAG,MAAM,CAAC,gBAAgB,CAAC;SAChD,OAAO,IAAI,CAAC;MACb;KACH,iCAAC;CAAD,CAZA,CAAgD,iBAAiB;;CCJjE;;;;;;;AAOA;KA4NE,uBAAY,UAAoC;SAtHhD,WAAM,GAAY,EAAE,CAAC;SACrB,kBAAa,GAAiB,EAAE,CAAC;SACjC,2BAAsB,GAAW,CAAE,CAAC,CAAC;SACrC,uBAAkB,GAAiB,EAAE,CAAC;SACtC,gCAA2B,GAAW,CAAE,CAAC,CAAC;SAC1C,oBAAe,GAAG,IAAI,YAAY,CAAC,CAAC,CAAC,CAAC;SACtC,YAAO,GAAa,EAAE,CAAC;SACvB,eAAU,GAAgB,EAAE,CAAC;SAG7B,YAAO,GAA0B,IAAI,CAAC;;SAEtC,cAAS,GAAY,IAAI,CAAC;SAC1B,mBAAc,GAAY,IAAI,CAAC;SAC/B,mBAAc,GAAY,IAAI,CAAC;SAC/B,qBAAgB,GAAY,IAAI,CAAC;;SAEjC,gBAAW,GAAY,IAAI,CAAC;;SAE5B,mBAAc,GAAY,EAAE,CAAC;SAC7B,yBAAoB,GAAY,KAAK,CAAC;;SAEtC,gBAAW,GAAW,GAAG,CAAC;SAC1B,eAAU,GAAY,KAAK,CAAC;SAC5B,gBAAW,GAAY,KAAK,CAAC;;SAE7B,4BAAuB,GAAY,KAAK,CAAC;;SAEzC,gBAAW,GAAgBZ,mBAAW,CAAC,MAAM,CAAC;SAC9C,wBAAmB,GAAW,GAAG,CAAC;SAClC,0BAAqB,GAAW,GAAG,CAAC;;SAEpC,oBAAe,GAAW,CAAC,CAAC;SAC5B,oBAAe,GAAW,CAAC,CAAC;;SAE5B,oBAAe,GAAW,IAAI,CAAC;SAC/B,yBAAoB,GAAsB,IAAI,CAAC;SAC/C,wBAAmB,GAAqB,IAAI,CAAC;SAC7C,uBAAkB,GAAW,CAAE,CAAC,CAAC;SACjC,4BAAuB,GAAW,EAAE,CAAC;SACrC,mBAAc,GAAW,IAAI,CAAC;SAC9B,oBAAe,GAAY,IAAI,OAAO,EAAE,CAAC;SACzC,wBAAmB,GAAY,IAAI,CAAC;SACpC,qBAAgB,GAAY,IAAI,OAAO,EAAE,CAAC;;SAE1C,sBAAiB,GAAW,CAAC,CAAC;;SAE9B,gBAAW,GAAU,IAAI,KAAK,CAAC,QAAQ,CAAC,CAAC;SACzC,gBAAW,GAAW,CAAC,CAAC;SAGxB,gBAAW,GAAW,CAAC,CAAC;SAExB,iBAAY,GAAY,KAAK,CAAC;;SAG9B,aAAQ,GAAY,IAAI,OAAO,EAAE,CAAC;;SAElC,cAAS,GAAkB,IAAI,aAAa,EAAE,CAAC;SAC/C,qBAAgB,GAAY,KAAK,CAAC;SAClC,0BAAqB,GAAY,KAAK,CAAC;SACvC,YAAO,GAAW,IAAI,MAAM,EAAE,CAAC;;SAE/B,sBAAiB,GAAY,IAAI,OAAO,EAAE,CAAC;SAC3C,aAAQ,GAAY,IAAI,OAAO,EAAE,CAAC;;SAElC,YAAO,GAAG;aACR,IAAI,EAAE,EAAE;aACR,OAAO,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;aAClB,WAAW,EAAE,EAAE;aACf,oBAAoB,EAAE,EAAE;aACxB,uBAAuB,EAAE,EAAE;aAC3B,IAAI,EAAE,EAAE;aACR,aAAa,EAAE,EAAE;aACjB,gBAAgB,EAAE,EAAE;aACpB,KAAK,EAAE,EAAE;aACT,cAAc,EAAE,EAAE;aAClB,iBAAiB,EAAE,EAAE;aACrB,IAAI,EAAE,EAAE;aACR,OAAO,EAAE,EAAE;UACZ,CAAC;;SAEF,SAAI,GAAG;aACL,MAAM,EAAE;iBACN,KAAK,EAAE,CAAC;iBACR,QAAQ,EAAE,CAAC;iBACX,KAAK,EAAE,CAAC;iBACR,MAAM,EAAE,CAAC;cACV;aACD,MAAM,EAAE;iBACN,UAAU,EAAE,CAAC;iBACb,QAAQ,EAAE,CAAC;cACZ;aACD,QAAQ,EAAE,IAAI;UACf,CAAC;SACF,gBAAW,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;SAwB7B,OAAO,CAAC,GAAG,CAAC,qBAAqB,EAAE,QAAQ,CAAC,CAAC;SAC7C,UAAU,GAAG,UAAU,IAAI,EAAE,CAAC;SAC9B,IAAI,CAAC,OAAO,GAAG,UAAU,CAAC,MAAM,KAAK,SAAS,GAAG,UAAU,CAAC,MAAM,GAAuB,QAAQ,CAAC,eAAe,CAAC,8BAA8B,EAAE,QAAQ,CAAC,CAAC;SAC5J,IAAI,CAAC,QAAQ,GAAG,UAAU,CAAC,OAAO,KAAK,SAAS,GAAG,UAAU,CAAC,OAAO,GAAG,IAAI,CAAC;SAC7E,IAAI,CAAC,MAAM,GAAG,UAAU,CAAC,KAAK,KAAK,SAAS,GAAG,UAAU,CAAC,KAAK,GAAG,KAAK;aACvE,IAAI,CAAC,MAAM,GAAG,UAAU,CAAC,KAAK,KAAK,SAAS,GAAG,UAAU,CAAC,KAAK,GAAG,IAAI;aACtE,IAAI,CAAC,QAAQ,GAAG,UAAU,CAAC,OAAO,KAAK,SAAS,GAAG,UAAU,CAAC,OAAO,GAAG,IAAI;aAC5E,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC,SAAS,KAAK,SAAS,GAAG,UAAU,CAAC,SAAS,GAAG,KAAK;aACnF,IAAI,CAAC,mBAAmB,GAAG,UAAU,CAAC,kBAAkB,KAAK,SAAS,GAAG,UAAU,CAAC,kBAAkB,GAAG,IAAI;aAC7G,IAAI,CAAC,sBAAsB,GAAG,UAAU,CAAC,qBAAqB,KAAK,SAAS,GAAG,UAAU,CAAC,qBAAqB,GAAG,KAAK,CAAC;SACxH,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC;SAC/B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;SACjC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;SACnC,IAAI,CAAC,QAAQ,GAAG,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;SAC7D,IAAI,CAAC,SAAS,GAAG,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;;;SAG9D,IAAI;aACF,IAAM,UAAU,GAAG;iBACjB,KAAK,EAAE,IAAI,CAAC,MAAM;iBAClB,KAAK,EAAE,IAAI,CAAC,MAAM;iBAClB,OAAO,EAAE,IAAI,CAAC,QAAQ;iBACtB,SAAS,EAAE,IAAI,CAAC,UAAU;iBAC1B,kBAAkB,EAAE,IAAI,CAAC,mBAAmB;iBAC5C,qBAAqB,EAAE,IAAI,CAAC,sBAAsB;cACnD,CAAC;aACF,IAAI,CAAC,GAAG,IAA2B,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,OAAO,EAAE,UAAU,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,oBAAoB,EAAE,UAAU,CAAC,CAAC,CAAC;aAC/J,IAAI,IAAI,CAAC,GAAG,KAAK,IAAI,EAAE;iBACrB,IAAI,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,OAAO,CAAC,KAAK,IAAI,EAAE;qBAC7C,MAAM,6DAA6D,CAAC;kBACrE;sBAAM;qBACL,MAAM,+BAA+B,CAAC;kBACvC;cACF;;aAED,IAAI,IAAI,CAAC,GAAG,CAAC,wBAAwB,KAAK,SAAS,EAAE;iBACnD,IAAI,CAAC,GAAG,CAAC,wBAAwB,GAAG;qBAClC,OAAO,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,WAAW,EAAE,CAAC,EAAE,CAAC;kBACzD,CAAC;cACH;aACD,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,kBAAkB,EAAE,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,CAAC,CAAC;UACzF;SAAC,OAAO,KAAK,EAAE;aACd,OAAO,CAAC,KAAK,CAAC,uBAAuB,GAAG,KAAK,CAAC,CAAC;UAChD;SACD,IAAI,CAAC,UAAU,GAAG,IAAI,eAAe,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SAChD,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;SAC3C,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;SACzC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,0BAA0B,CAAC,CAAC;SAChD,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;SAC9C,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,+BAA+B,CAAC,CAAC;SACrD,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,0BAA0B,CAAC,CAAC;SAChD,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;SAC9C,IAAI,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,wBAAwB,CAAC,EAAE;aACjD,cAAc,CAAC,QAAQ,GAAG,UAAU,CAAC;UACtC;SACD,IAAI,CAAC,YAAY,GAAG,IAAI,iBAAiB,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,UAAU,EAAE,UAAU,CAAC,CAAC;SACjF,IAAI,CAAC,KAAK,GAAG,IAAI,UAAU,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;SACvF,IAAI,CAAC,UAAU,GAAG,IAAI,eAAe,EAAE,CAAC;SACxC,IAAI,CAAC,QAAQ,GAAG,IAAI,aAAa,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;SACxJ,IAAI,CAAC,OAAO,GAAG,IAAI,YAAY,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;SACtE,IAAI,CAAC,YAAY,GAAG,IAAI,aAAa,CAAC,IAAI,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;SAC/D,IAAI,CAAC,UAAU,GAAG,IAAI,WAAW,EAAE,CAAC;SACpC,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC;SAChD,IAAI,CAAC,cAAc,GAAG,IAAI,mBAAmB,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;SAC3F,IAAI,CAAC,qBAAqB,GAAG,IAAI,0BAA0B,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;;SAEzG,IAAI,CAAC,gBAAgB,GAAG,IAAI,kBAAkB,CAAC,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;SACrE,IAAI,CAAC,iBAAiB,GAAG,IAAI,iBAAiB,EAAE,CAAC;SACjD,IAAI,CAAC,mBAAmB,GAAG,IAAI,IAAI,CACjC,IAAI,mBAAmB,CAAC,CAAC,EAAE,CAAC,CAAC,EAC7B,IAAI,iBAAiB,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC,CAC3E,CAAC;SACF,IAAI,CAAC,mBAAmB,GAAG,SAAS,CAAC,MAAM,CAAC,CAAC;SAC7C,IAAI,CAAC,iBAAiB,GAAG,IAAI,IAAI,CAC/B,IAAI,iBAAiB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC9B,IAAI,cAAc,CAAC;aACjB,QAAQ,EAAE,IAAI,CAAC,mBAAmB,CAAC,QAAQ;aAC3C,YAAY,EAAE,IAAI,CAAC,mBAAmB,CAAC,YAAY;aACnD,cAAc,EAAE,IAAI,CAAC,mBAAmB,CAAC,cAAc;aACvD,IAAI,EAAER,gBAAQ,CAAC,IAAI;aACnB,SAAS,EAAE,KAAK;aAChB,UAAU,EAAE,KAAK;aACjB,GAAG,EAAE,KAAK;UACX,CAAC,CACH,CAAC;SACF,IAAI,CAAC,iBAAiB,EAAE,CAAC;SACzB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC;;SAExB,IAAI,CAAC,SAAS,GAAG,IAAI,cAAc,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;;SAEzF,IAAI,CAAC,YAAY,GAAG,IAAI,YAAY,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;SACzD,IAAI,CAAC,eAAe,GAAG,IAAI,eAAe,CAAC,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;MACnE;KACD,2CAAmB,GAAnB;SACE,OAAO,IAAI,CAAC,oBAAoB,KAAK,IAAI,GAAG,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;MAClE;KACD,oCAAY,GAAZ,UAAa,CAAS,EAAE,CAAS,EAAE,CAAS,EAAE,CAAS;SACrD,IAAI,IAAI,CAAC,mBAAmB,KAAK,IAAI,EAAE;aACrC,CAAC,IAAI,CAAC,CAAC;aAAC,CAAC,IAAI,CAAC,CAAC;aAAC,CAAC,IAAI,CAAC,CAAC;UACxB;SACD,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;MACnC;KACD,yCAAiB,GAAjB;SACE,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;SAClB,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;SAC9F,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,cAAc,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;SACjG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;MACjG;KACD,oCAAY,GAAZ;SACE,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;SAC5B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;SAC3B,IAAI,CAAC,uBAAuB,GAAG,EAAE,CAAC;SAClC,IAAI,CAAC,kBAAkB,GAAG,CAAE,CAAC,CAAC;SAC9B,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;MACpB;;KAED,kCAAU,GAAV;SACE,OAAO,IAAI,CAAC,GAAG,CAAC;MACjB;KACD,4CAAoB,GAApB;SACE,OAAO,IAAI,CAAC,GAAG,CAAC,oBAAoB,EAAE,CAAC;MACxC;KACD,wCAAgB,GAAhB;SACE,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC,WAAW,EAAE,CAAC;MACzD;KACD,wCAAgB,GAAhB;SACE,OAAO,IAAI,CAAC,YAAY,CAAC,gBAAgB,EAAE,CAAC;MAC7C;KACD,oCAAY,GAAZ;SACE,OAAO,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC;MACpC;KACD,qCAAa,GAAb;SACE,OAAO,IAAI,CAAC,WAAW,CAAC;MACzB;KACD,qCAAa,GAAb,UAAc,KAAa;SACzB,IAAI,KAAK,KAAK,SAAS;aAAE,OAAO;SAChC,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;SACzB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;MACzD;KACD,+BAAO,GAAP;SACE,OAAO;aACL,KAAK,EAAE,IAAI,CAAC,MAAM;aAClB,MAAM,EAAE,IAAI,CAAC,OAAO;UACrB,CAAC;MACH;KACD,+BAAO,GAAP,UAAQ,KAAa,EAAE,MAAc,EAAE,WAAqB;SAC1D,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;SACpB,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;SACtB,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC;SAC9C,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC;SAChD,IAAI,WAAW,KAAK,KAAK,EAAE;aACzB,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,GAAG,KAAK,GAAG,IAAI,CAAC;aACxC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,GAAG,MAAM,GAAG,IAAI,CAAC;UAC3C;SACD,IAAI,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;MACvC;KACD,mCAAW,GAAX,UAAY,CAAS,EAAE,CAAS,EAAE,KAAa,EAAE,MAAc;SAC7D,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC;MAC9D;KACD,kCAAU,GAAV,UAAW,CAAS,EAAE,CAAS,EAAE,KAAa,EAAE,MAAc;SAC5D,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC;MAC5D;KACD,sCAAc,GAAd,UAAe,IAAa;SAC1B,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,CAAC;MACrD;;KAED,qCAAa,GAAb;SACE,OAAO,IAAI,CAAC,WAAW,CAAC;MACzB;KACD,qCAAa,GAAb,UAAc,KAA8B,EAAE,KAAiB;SAAjB,sBAAA,EAAA,SAAiB;SAC7D,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;SAC5B,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;SACzB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;MACjG;KACD,qCAAa,GAAb;SACE,OAAO,IAAI,CAAC,WAAW,CAAC;MACzB;KACD,qCAAa,GAAb,UAAc,KAAa;SACzB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;SACzB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;MACjG;KACD,6BAAK,GAAL,UAAM,KAAc,EAAE,KAAc,EAAE,OAAgB;SACpD,IAAI,IAAI,GAAG,CAAC,CAAC;SACb,IAAI,KAAK,KAAK,SAAS,IAAI,KAAK;aAAE,IAAI,IAAI,IAAI,CAAC,GAAG,CAAC,gBAAgB,CAAC;SACpE,IAAI,KAAK,KAAK,SAAS,IAAI,KAAK;aAAE,IAAI,IAAI,IAAI,CAAC,GAAG,CAAC,gBAAgB,CAAC;SACpE,IAAI,OAAO,KAAK,SAAS,IAAI,OAAO;aAAE,IAAI,IAAI,IAAI,CAAC,GAAG,CAAC,kBAAkB,CAAC;SAC1E,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;MACtB;KACD,kCAAU,GAAV;SACE,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;MAChC;KACD,kCAAU,GAAV;SACE,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;MAChC;KACD,oCAAY,GAAZ;SACE,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;MAChC;KACD,mCAAW,GAAX,UAAY,YAA+B,EAAE,KAAc,EAAE,KAAc,EAAE,OAAgB;SAC3F,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,CAAC;SACnC,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;MACnC;;;KAGD,+BAAO,GAAP;SACE,IAAI,CAAC,kBAAkB,GAAG,EAAE,CAAC;SAC7B,IAAI,CAAC,2BAA2B,GAAG,CAAC,CAAC,CAAC;SACtC,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;SACxB,IAAI,CAAC,sBAAsB,GAAG,CAAC,CAAC,CAAC;SACjC,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,kBAAkB,EAAE,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,CAAC,CAAC;MAC5F;;KAED,qCAAa,GAAb,UAAc,KAAwB;SACpC,KAAK,CAAC,cAAc,EAAE,CAAC;SACvB,IAAI,CAAC,YAAY,EAAE,CAAC;SACpB,IAAI,CAAC,iBAAiB,EAAE,CAAC;SACzB,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;MACzB;KACD,yCAAiB,GAAjB,UAAkB,KAAU;SAC1B,IAAM,QAAQ,GAAG,KAAK,CAAC,MAAM,CAAC;SAC9B,QAAQ,CAAC,mBAAmB,CAAC,SAAS,EAAE,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;SAC3E,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC;MACnC;;KAED,0CAAkB,GAAlB,UAAmB,QAAkB;SACnC,IAAI,CAAC,+BAA+B,CAAC,QAAQ,CAAC,CAAC;SAC/C,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;MAClC;KACD,uDAA+B,GAA/B,UAAgC,QAAkB;SAChD,IAAM,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC;SAC1D,QAAQ,CAAC,OAAO,GAAG,SAAS,CAAC;SAC7B,IAAI,WAAW,KAAK,SAAS,EAAE;aAC7B,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC;UAC/C;MACF;;KAED,6CAAqB,GAArB,UAAsB,MAAgB,EAAE,OAAqB,EAAE,QAAkB;SAC/E,IAAI,CAAC,KAAK,CAAC,cAAc,EAAE,CAAC;SAC5B,IAAM,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;SAC5C,IAAI,MAAM,CAAC,YAAY,IAAI,CAAE,OAAO,CAAC,QAAQ;aAAE,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC;SAC1F,IAAI,MAAM,CAAC,UAAU,IAAI,CAAE,OAAO,CAAC,MAAM;aAAE,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC;SACpF,IAAI,MAAM,CAAC,MAAM,IAAI,CAAE,OAAO,CAAC,EAAE;aAAE,OAAO,CAAC,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC;SACxE,IAAI,MAAM,CAAC,SAAS,IAAI,CAAE,OAAO,CAAC,KAAK;aAAE,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC;SACjF,IAAM,UAAU,GAAG,OAAO,CAAC,aAAa,EAAE,CAAC;SAC3C,IAAI,MAAM,CAAC,YAAY,EAAE;aACvB,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,OAAO,CAAC,QAAQ,CAAC,CAAC;aAC7D,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,MAAM,CAAC,aAAa,EAAE,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;aACxF,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;aAChD,IAAI,CAAC,GAAG,CAAC,mBAAmB,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;UACnF;SACD,IAAI,MAAM,CAAC,UAAU,EAAE;aACrB,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC;aAC3D,IAAI,EAAG,QAAQ,YAAY,iBAAiB,CAAC,IAAI,EAAG,QAAQ,YAAY,oBAAoB,CAAC,IAAI,QAAQ,CAAC,OAAO,KAAKC,mBAAW,CAAC,IAAI,EAAE;iBACtI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE;qBACnD,IAAM,KAAK,GAAG,MAAM,CAAC,WAAW,CAAC;qBACjC,IAAM,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC;qBAC5D,IAAM,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC;qBAC5D,IAAM,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC;qBAC5D,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;qBAClB,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;qBAClB,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;qBAClB,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;qBAClB,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;qBAClB,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;qBAClB,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;qBAClB,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;qBAClB,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;kBACnB;cACF;aACD,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,MAAM,CAAC,WAAW,EAAE,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;aACtF,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;aAC9C,IAAI,CAAC,GAAG,CAAC,mBAAmB,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;UACjF;SACD,IAAI,MAAM,CAAC,MAAM,IAAI,QAAQ,CAAC,GAAG,EAAE;aACjC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,OAAO,CAAC,EAAE,CAAC,CAAC;aACvD,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;aAClF,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;aAC1C,IAAI,CAAC,GAAG,CAAC,mBAAmB,CAAC,UAAU,CAAC,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;UAC7E;SACD,IAAI,MAAM,CAAC,SAAS,IAAI,QAAQ,CAAC,YAAY,KAAKC,kBAAU,CAAC,IAAI,EAAE;aACjE,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,OAAO,CAAC,KAAK,CAAC,CAAC;aAC1D,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,MAAM,CAAC,UAAU,EAAE,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;aACrF,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;aAC7C,IAAI,CAAC,GAAG,CAAC,mBAAmB,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;UAChF;SACD,IAAI,CAAC,KAAK,CAAC,uBAAuB,EAAE,CAAC;SACrC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC;SACzD,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC;MAClB;KACD,0CAAkB,GAAlB,UAAmB,MAAc,EAAE,GAAkB,EAAE,QAAwB,EAAE,QAAkB,EAAE,MAAgB,EAAE,KAA0B;SAC/I,IAAM,GAAG,GAA0B,IAAI,CAAC,GAAG,CAAC;SAC5C,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;SAC3B,IAAM,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,GAAG,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAC;SAC/D,IAAI,aAAa,GAAY,KAAK,CAAC;SACnC,IAAM,eAAe,GAAW,QAAQ,CAAC,EAAE,GAAG,GAAG,GAAG,OAAO,CAAC,EAAE,GAAG,GAAG,GAAG,QAAQ,CAAC,SAAS,CAAC;SAC1F,IAAI,eAAe,KAAK,IAAI,CAAC,uBAAuB,EAAE;aACpD,IAAI,CAAC,uBAAuB,GAAG,eAAe,CAAC;aAC/C,aAAa,GAAG,IAAI,CAAC;UACtB;;SAED,IAAM,qBAAqB,GAAG,MAAM,CAAC,qBAAqB,CAAC;SAC3D,IAAI,qBAAqB,KAAK,SAAS,EAAE;aACvC,IAAM,gBAAgB,GAAG,EAAE,CAAC;aAC5B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,qBAAqB,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAG,EAAE;iBAC7D,IAAM,SAAS,GAAG,qBAAqB,CAAC,CAAC,CAAC,CAAC;iBAC3C,gBAAgB,CAAC,IAAI,CAAC,CAAE,SAAS,EAAE,CAAC,CAAE,CAAC,CAAC;cACzC;aACD,gBAAgB,CAAC,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,CAAC;aACtD,IAAI,gBAAgB,CAAC,MAAM,GAAG,CAAC,EAAE;iBAC/B,gBAAgB,CAAC,MAAM,GAAG,CAAC,CAAC;cAC7B;aACD,IAAM,eAAe,GAAG,QAAQ,CAAC,eAAe,CAAC;aACjD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,gBAAgB,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAG,EAAE;iBACxD,IAAM,SAAS,GAAG,gBAAgB,CAAC,CAAC,CAAC,CAAC;iBACtC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;iBACvC,IAAI,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;qBACtB,IAAM,OAAK,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;qBAC3B,IAAI,QAAQ,CAAC,YAAY,KAAK,IAAI,IAAI,eAAe,CAAC,QAAQ;yBAAE,QAAQ,CAAC,YAAY,CAAC,aAAa,GAAG,CAAC,EAAE,eAAe,CAAC,QAAQ,CAAC,OAAK,CAAC,CAAC,CAAC;qBAC1I,IAAI,QAAQ,CAAC,YAAY,KAAK,IAAI,IAAI,eAAe,CAAC,MAAM;yBAAE,QAAQ,CAAC,YAAY,CAAC,aAAa,GAAG,CAAC,EAAE,eAAe,CAAC,MAAM,CAAC,OAAK,CAAC,CAAC,CAAC;kBACvI;sBAAM;qBACL,IAAI,QAAQ,CAAC,YAAY,KAAK,IAAI;yBAAE,QAAQ,CAAC,eAAe,CAAC,aAAa,GAAG,CAAC,CAAC,CAAC;qBAChF,IAAI,QAAQ,CAAC,YAAY,KAAK,IAAI;yBAAE,QAAQ,CAAC,eAAe,CAAC,aAAa,GAAG,CAAC,CAAC,CAAC;kBACjF;cACF;aACD,KAAK,IAAI,CAAC,GAAG,gBAAgB,CAAC,MAAM,EAAE,EAAE,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAG,EAAE;iBACpF,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;cAC/B;aACD,OAAO,CAAC,WAAW,EAAE,CAAC,QAAQ,CAC1B,IAAI,CAAC,GAAG,EAAE,uBAAuB,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;aAC7D,aAAa,GAAG,IAAI,CAAC;UACtB;;SAED,IAAI,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC;SAC3B,IAAM,QAAQ,GAAG,QAAQ,CAAC,UAAU,CAAC,QAAQ,CAAC;SAC9C,IAAI,WAAW,GAAG,CAAC,CAAC;SACpB,IAAI,QAAQ,CAAC,SAAS,KAAK,IAAI,EAAE;aAC/B,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,qBAAqB,CAAC,QAAQ,CAAC,CAAC;aACrD,WAAW,GAAG,CAAC,CAAC;UACjB;SACD,IAAI,QAAQ,CAAC;SACb,IAAI,KAAK,KAAK,IAAI,EAAE;aAClB,QAAQ,GAAG,IAAI,CAAC,qBAAqB,CAAC;aACtC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;UAC1B;cAAM;aACL,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC;UAChC;SACD,IAAI,aAAa,EAAE;aACjB,IAAI,CAAC,qBAAqB,CAAC,QAAQ,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAC;aACxD,IAAI,KAAK,KAAK,IAAI,EAAE;iBAClB,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,oBAAoB,EAAE,IAAI,CAAC,OAAO,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC,CAAC;cAC5F;UACF;;SAED,IAAI,SAAS,GAAG,CAAC,CAAC;SAClB,IAAI,KAAK,KAAK,IAAI,EAAE;aAClB,SAAS,GAAG,KAAK,CAAC,KAAK,CAAC;UACzB;cAAM,IAAI,QAAQ,KAAK,SAAS,EAAE;aACjC,SAAS,GAAG,QAAQ,CAAC,KAAK,CAAC;UAC5B;SACD,IAAM,UAAU,GAAG,QAAQ,CAAC,SAAS,CAAC,KAAK,GAAG,WAAW,CAAC;SAC1D,IAAM,UAAU,GAAG,QAAQ,CAAC,SAAS,CAAC,KAAK,GAAG,WAAW,CAAC;SAC1D,IAAM,UAAU,GAAG,KAAK,KAAK,IAAI,GAAG,KAAK,CAAC,KAAK,GAAG,WAAW,GAAG,CAAC,CAAC;SAClE,IAAM,UAAU,GAAG,KAAK,KAAK,IAAI,GAAG,KAAK,CAAC,KAAK,GAAG,WAAW,GAAG,QAAQ,CAAC;SACzE,IAAM,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,EAAE,UAAU,CAAC,CAAC;SACnD,IAAM,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,UAAU,GAAG,UAAU,EAAE,UAAU,GAAG,UAAU,CAAC,GAAG,CAAC,CAAC;SAC1F,IAAM,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,OAAO,GAAG,SAAS,GAAG,CAAC,CAAC,CAAC;SACvD,IAAI,SAAS,KAAK,CAAC;aAAE,OAAO;;SAE5B,IAAI,MAAM,YAAY,IAAI,EAAE;aAC1B,IAAI,QAAQ,CAAC,SAAS,KAAK,IAAI,EAAE;iBAC/B,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,QAAQ,CAAC,kBAAkB,GAAG,IAAI,CAAC,mBAAmB,EAAE,CAAC,CAAC;iBAClF,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;cAC7B;kBAAM;iBACL,QAAQ,MAAM,CAAC,QAAQ;qBACrB,KAAKe,gBAAQ,CAAC,SAAS;yBACrB,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;yBAChC,MAAM;qBACR,KAAKA,gBAAQ,CAAC,aAAa;yBACzB,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;yBACrC,MAAM;qBACR,KAAKA,gBAAQ,CAAC,WAAW;yBACvB,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;yBACnC,MAAM;kBACT;cACF;UACF;cAAM,IAAI,MAAM,YAAY,IAAI,EAAE;aACjC,IAAI,SAAS,GAAG,QAAQ,CAAC,SAAS,CAAC;aACnC,IAAI,SAAS,KAAK,SAAS;iBAAE,SAAS,GAAG,CAAC,CAAC;aAC3C,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,SAAS,GAAG,IAAI,CAAC,mBAAmB,EAAE,CAAC,CAAC;aAChE,IAAI,MAAM,YAAY,YAAY,EAAE;iBAClC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;cAC7B;kBAAM;iBACL,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;cAClC;UACF;cAAM,IAAI,MAAM,YAAY,MAAM,EAAE;aACnC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;UAC9B;SACD,IAAI,QAAQ,IAAI,QAAQ,YAAY,uBAAuB,EAAE;aAC3D,IAAI,QAAQ,CAAC,iBAAiB,GAAG,CAAC,EAAE;iBACjC,QAAuC,CAAC,eAAe,CAAC,QAAQ,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;cAC1F;UACF;cAAM;aACL,QAAQ,CAAC,MAAM,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;UACvC;MACF;KACD,6CAAqB,GAArB,UAAsB,QAAkB,EAAE,OAAqB,EAAE,QAAwB,EAAE,UAAsB;SAAtB,2BAAA,EAAA,cAAsB;SAC/G,IAAM,GAAG,GAA0B,IAAI,CAAC,GAAG,CAAC;SAC5C,IAAI,SAAS,CAAC;SACd,IAAI,QAAQ,IAAI,QAAQ,YAAY,uBAAuB,EAAE;aAC3D,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;aAC1D,IAAI,SAAS,KAAK,IAAI,EAAE;iBACtB,OAAO,CAAC,KAAK,CAAC,gJAAgJ,CAAC,CAAC;iBAChK,OAAO;cACR;UACF;SACD,IAAI,CAAC,KAAK,CAAC,cAAc,EAAE,CAAC;SAC5B,IAAM,kBAAkB,GAAG,QAAQ,CAAC,UAAU,CAAC;SAC/C,IAAM,iBAAiB,GAAG,OAAO,CAAC,aAAa,EAAE,CAAC;SAClD,IAAM,8BAA8B,GAAG,QAAQ,CAAC,sBAAsB,CAAC;SACvE,KAAK,IAAI,IAAI,IAAI,iBAAiB,EAAE;aAClC,IAAM,gBAAgB,GAAG,iBAAiB,CAAC,IAAI,CAAC,CAAC;aACjD,IAAI,gBAAgB,IAAI,CAAC,EAAE;iBACzB,IAAM,iBAAiB,GAAG,kBAAkB,CAAC,IAAI,CAAC,CAAC;iBACnD,IAAI,iBAAiB,KAAK,SAAS,EAAE;qBACnC,IAAI,IAAI,GAAG,GAAG,CAAC,KAAK,CAAC;qBACrB,IAAM,KAAK,GAAG,iBAAiB,CAAC,KAAK,CAAC;qBACtC,IAAM,UAAU,GAAG,iBAAiB,CAAC,UAAU,CAAC;qBAChD,IAAI,KAAK,YAAY,YAAY,EAAE;yBACjC,IAAI,GAAG,GAAG,CAAC,KAAK,CAAC;sBAClB;0BAAM,IAAI,KAAK,YAAY,YAAY,EAAE;yBACxC,OAAO,CAAC,IAAI,CAAC,8CAA8C,CAAC,CAAC;sBAC9D;0BAAM,IAAI,KAAK,YAAY,WAAW,EAAE;yBACvC,IAAI,GAAG,GAAG,CAAC,cAAc,CAAC;sBAC3B;0BAAM,IAAI,KAAK,YAAY,UAAU,EAAE;yBACtC,IAAI,GAAG,GAAG,CAAC,KAAK,CAAC;sBAClB;0BAAM,IAAI,KAAK,YAAY,WAAW,EAAE;yBACvC,IAAI,GAAG,GAAG,CAAC,YAAY,CAAC;sBACzB;0BAAM,IAAI,KAAK,YAAY,UAAU,EAAE;yBACtC,IAAI,GAAG,GAAG,CAAC,GAAG,CAAC;sBAChB;0BAAM,IAAI,KAAK,YAAY,SAAS,EAAE;yBACrC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC;sBACjB;0BAAM,IAAI,KAAK,YAAY,UAAU,EAAE;yBACtC,IAAI,GAAG,GAAG,CAAC,aAAa,CAAC;sBAC1B;qBACD,IAAM,IAAI,GAAG,iBAAiB,CAAC,QAAQ,CAAC;qBACxC,IAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;qBAClE,IAAI,iBAAiB,YAAY,0BAA0B,EAAE;yBAC3D,IAAM,IAAI,GAAG,iBAAiB,CAAC,IAAI,CAAC;yBACpC,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;yBAC3B,IAAM,MAAM,GAAG,iBAAiB,CAAC,MAAM,CAAC;yBACxC,IAAI,IAAI,IAAI,IAAI,YAAY,0BAA0B,EAAE;6BACtD,IAAI,CAAC,KAAK,CAAC,yBAAyB,CAAC,gBAAgB,EAAE,IAAI,CAAC,gBAAgB,EAAE,SAAS,CAAC,CAAC;6BACzF,IAAI,QAAQ,CAAC,iBAAiB,KAAK,SAAS,EAAE;iCAC5C,QAAQ,CAAC,iBAAiB,GAAG,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,KAAK,CAAC;8BACjE;0BACF;8BAAM;6BACL,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,gBAAgB,CAAC,CAAC;0BAC9C;yBACD,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,YAAY,EAAE,MAAM,CAAC,CAAC;yBACzC,GAAG,CAAC,mBAAmB,CAAC,gBAAgB,EAAE,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,iBAAiB,EAAE,CAAC,UAAU,GAAG,MAAM,GAAG,MAAM,IAAI,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC;sBACzK;0BAAM;yBACL,IAAI,iBAAiB,YAAY,wBAAwB,EAAE;6BACzD,IAAI,CAAC,KAAK,CAAC,yBAAyB,CAAC,gBAAgB,EAAE,iBAAiB,CAAC,gBAAgB,EAAE,SAAS,CAAC,CAAC;6BACtG,IAAI,QAAQ,CAAC,iBAAiB,KAAK,SAAS,EAAE;iCAC5C,QAAQ,CAAC,iBAAiB,GAAG,iBAAiB,CAAC,gBAAgB,GAAG,iBAAiB,CAAC,KAAK,CAAC;8BAC3F;0BACF;8BAAM;6BACL,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,gBAAgB,CAAC,CAAC;0BAC9C;yBACD,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,YAAY,EAAE,MAAM,CAAC,CAAC;yBACzC,GAAG,CAAC,mBAAmB,CAAC,gBAAgB,EAAE,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,GAAG,IAAI,GAAG,iBAAiB,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC;sBACrI;kBACF;sBAAM,IAAI,8BAA8B,KAAK,SAAS,EAAE;qBACvD,IAAM,KAAK,GAAG,8BAA8B,CAAC,IAAI,CAAC,CAAC;qBACnD,IAAI,KAAK,KAAK,SAAS,EAAE;yBACvB,QAAQ,KAAK,CAAC,MAAM;6BAClB,KAAK,CAAC;iCACJ,GAAG,CAAC,eAAe,CAAC,gBAAgB,EAAE,KAAK,CAAC,CAAC;iCAC7C,MAAM;6BACR,KAAK,CAAC;iCACJ,GAAG,CAAC,eAAe,CAAC,gBAAgB,EAAE,KAAK,CAAC,CAAC;iCAC7C,MAAM;6BACR,KAAK,CAAC;iCACJ,GAAG,CAAC,eAAe,CAAC,gBAAgB,EAAE,KAAK,CAAC,CAAC;iCAC7C,MAAM;6BACR;iCACE,GAAG,CAAC,eAAe,CAAC,gBAAgB,EAAE,KAAK,CAAC,CAAC;0BAChD;sBACF;kBACF;cACF;UACF;SACD,IAAI,CAAC,KAAK,CAAC,uBAAuB,EAAE,CAAC;MACtC;;KAEM,8BAAgB,GAAvB,UAAwB,CAAW,EAAE,CAAW;SAC9C,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACxC;KACM,+BAAiB,GAAxB,UAAyB,CAAa,EAAE,CAAa;SACnD,IAAI,CAAC,CAAC,MAAM,CAAC,WAAW,KAAK,CAAC,CAAC,MAAM,CAAC,WAAW,EAAE;aACjD,OAAO,CAAC,CAAC,MAAM,CAAC,WAAW,GAAG,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC;UACpD;cAAM,IAAI,CAAC,CAAC,QAAQ,CAAC,OAAO,IAAI,CAAC,CAAC,QAAQ,CAAC,OAAO,IAAI,CAAC,CAAC,QAAQ,CAAC,OAAO,KAAK,CAAC,CAAC,QAAQ,CAAC,OAAO,EAAE;aAChG,OAAO,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,GAAG,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,CAAC;UACtD;cAAM,IAAI,CAAC,CAAC,QAAQ,CAAC,EAAE,KAAK,CAAC,CAAC,QAAQ,CAAC,EAAE,EAAE;aAC1C,OAAO,CAAC,CAAC,QAAQ,CAAC,EAAE,GAAG,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC;UACtC;cAAM,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE;aACtB,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;UAClB;cAAM;aACL,OAAO,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC;UACpB;MACF;KACM,sCAAwB,GAA/B,UAAgC,CAAa,EAAE,CAAa;SAC1D,IAAI,CAAC,CAAC,MAAM,CAAC,WAAW,KAAK,CAAC,CAAC,MAAM,CAAC,WAAW,EAAE;aACjD,OAAO,CAAC,CAAC,MAAM,CAAC,WAAW,GAAG,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC;UACpD;SAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE;aACjB,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;UAClB;cAAM;aACL,OAAO,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC;UACpB;MACF;;KAED,8BAAM,GAAN,UAAO,KAAY,EAAE,MAAc,EAAE,YAAgC,EAAE,UAAoB;SACzF,IAAI,MAAM,KAAK,SAAS,IAAI,MAAM,YAAY,MAAM,KAAK,IAAI,EAAE;aAC7D,OAAO,CAAC,KAAK,CAAC,wEAAwE,CAAC,CAAC;aACxF,OAAO;UACR;;SAED,IAAI,CAAC,uBAAuB,GAAG,EAAE,CAAC;SAClC,IAAI,CAAC,kBAAkB,GAAG,CAAE,CAAC,CAAC;SAC9B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;;SAE3B,IAAI,KAAK,CAAC,UAAU,KAAK,IAAI;aAAE,KAAK,CAAC,iBAAiB,EAAE,CAAC;;SAEzD,IAAI,MAAM,CAAC,MAAM,KAAK,IAAI;aAAE,MAAM,CAAC,iBAAiB,EAAE,CAAC;SACvD,MAAM,CAAC,kBAAkB,CAAC,UAAU,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;SACzD,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,MAAM,CAAC,gBAAgB,EAAE,MAAM,CAAC,kBAAkB,CAAC,CAAC;SAC5F,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;SACpD,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;SACvB,IAAI,CAAC,sBAAsB,GAAG,CAAE,CAAC,CAAC;SAClC,IAAI,CAAC,2BAA2B,GAAG,CAAE,CAAC,CAAC;SACvC,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC;SACxB,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC;SAC3B,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,oBAAoB,CAAC;SACvD,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,qBAAqB,EAAE,MAAM,CAAC,CAAC;SACrG,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;SAClC,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,IAAI,CAAC,sBAAsB,GAAG,CAAC,CAAC;SAC5D,IAAI,CAAC,kBAAkB,CAAC,MAAM,GAAG,IAAI,CAAC,2BAA2B,GAAG,CAAC,CAAC;SACtE,IAAI,IAAI,CAAC,WAAW,KAAK,IAAI,EAAE;aAC7B,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,CAAC;aACzD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,aAAa,CAAC,wBAAwB,CAAC,CAAC;UACtE;;SAED,IAAI,IAAI,CAAC,gBAAgB;aAAE,IAAI,CAAC,SAAS,CAAC,YAAY,EAAE,CAAC;SACzD,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SAC/B,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;SACrC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;SACtC,IAAI,IAAI,CAAC,gBAAgB;aAAE,IAAI,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC;;SAEvD,IAAI,CAAC,WAAW,CAAC,KAAK,GAAG,CAAC,CAAC;SAC3B,IAAI,CAAC,WAAW,CAAC,QAAQ,GAAG,CAAC,CAAC;SAC9B,IAAI,CAAC,WAAW,CAAC,KAAK,GAAG,CAAC,CAAC;SAC3B,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC;SAC5B,IAAI,YAAY,KAAK,SAAS,EAAE;aAC9B,YAAY,GAAG,IAAI,CAAC;UACrB;SACD,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,CAAC;;SAEnC,IAAM,UAAU,GAAG,KAAK,CAAC,UAAU,CAAC;SACpC,IAAI,UAAU,KAAK,IAAI,EAAE;aACvB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;UACjG;cAAM,IAAI,UAAU,IAAI,UAAU,YAAY,KAAK,EAAE;aACpD,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;aAC/D,UAAU,GAAG,IAAI,CAAC;UACnB;SACD,IAAI,IAAI,CAAC,SAAS,IAAI,UAAU,EAAE;aAChC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;UAC7E;SACD,IAAI,UAAU,IAAI,UAAU,YAAY,WAAW,EAAE;aACnD,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC;aACtE,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,eAAe,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;aACvE,IAAI,CAAC,iBAAiB,CAAC,kBAAkB,CAAC,UAAU,CAAC,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,CAAC;aACxF,IAAI,CAAC,iBAAiB,CAAC,QAA2B,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,KAAK,GAAG,UAAU,CAAC;aACzF,IAAI,CAAC,iBAAiB,CAAC,eAAe,CAAC,gBAAgB,CAAC,IAAI,CAAC,iBAAiB,CAAC,kBAAkB,EAAE,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,CAAC;aACvI,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;aAC5C,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,iBAAiB,EAAE,IAAI,EAAE,IAAI,CAAC,iBAAiB,CAAC,QAA0B,EAAE,IAAI,CAAC,iBAAiB,CAAC,QAAoB,EAAE,IAAI,CAAC,iBAAiB,EAAE,IAAI,CAAC,CAAC;UACrL;cAAM,IAAI,UAAU,IAAI,UAAU,YAAY,OAAO,EAAE;aACtD,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,GAAG,GAAG,UAAU,CAAC;aACnD,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;aAC9C,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,gBAAgB,EAAE,IAAI,EAAE,IAAI,CAAC,mBAAmB,CAAC,QAA0B,EAAE,IAAI,CAAC,mBAAmB,CAAC,QAAoB,EAAE,IAAI,CAAC,mBAAmB,EAAE,IAAI,CAAC,CAAC;UAC1L;;SAED,IAAI,KAAK,CAAC,gBAAgB,EAAE;aAC1B,IAAM,gBAAgB,GAAG,KAAK,CAAC,gBAAgB,CAAC;aAChD,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,aAAa,EAAE,MAAM,EAAE,KAAK,EAAE,gBAAgB,CAAC,CAAC;aACxE,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,kBAAkB,EAAE,MAAM,EAAE,KAAK,EAAE,gBAAgB,CAAC,CAAC;UAC9E;cAAM;;aAEL,IAAI,CAAC,KAAK,CAAC,WAAW,CAACd,oBAAY,CAAC,IAAI,CAAC,CAAC;aAC1C,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,aAAa,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;;aAEtD,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,kBAAkB,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;UAC5D;;SAED,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;SACxC,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;;SAElE,IAAI,YAAY,EAAE;aAChB,IAAI,CAAC,QAAQ,CAAC,wBAAwB,CAAC,YAAY,CAAC,CAAC;UACtD;;SAED,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;SAC9B,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;SAC/B,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;;MAEhC;KACD,sCAAc,GAAd,UAAe,MAAgB,EAAE,QAAwB,EAAE,QAAkB,EAAE,CAAS,EAAE,KAA0B;SAClH,IAAI,KAAK,EAAE,KAAK,CAAC;;SAEjB,IAAI,QAAQ,CAAC,WAAW,EAAE;aACxB,KAAK,GAAG,IAAI,CAAC,kBAAkB,CAAC;aAChC,KAAK,GAAG,EAAG,IAAI,CAAC,2BAA2B,CAAC;UAC7C;cAAM;aACL,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC;aAC3B,KAAK,GAAG,EAAG,IAAI,CAAC,sBAAsB,CAAC;UACxC;;SAED,IAAI,UAAU,GAAe,KAAK,CAAC,KAAK,CAAC,CAAC;SAC1C,IAAI,UAAU,KAAK,SAAS,EAAE;aAC5B,UAAU,CAAC,EAAE,GAAG,MAAM,CAAC,EAAE,CAAC;aAC1B,UAAU,CAAC,MAAM,GAAG,MAAM,CAAC;aAC3B,UAAU,CAAC,QAAQ,GAAG,QAAQ,CAAC;aAC/B,UAAU,CAAC,QAAQ,GAAG,QAAQ,CAAC;aAC/B,UAAU,CAAC,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;aAC/B,UAAU,CAAC,KAAK,GAAG,KAAK,CAAC;UAC1B;cAAM;aACL,UAAU,GAAG;iBACX,EAAE,EAAE,MAAM,CAAC,EAAE;iBACb,MAAM,EAAE,MAAM;iBACd,QAAQ,EAAE,QAAQ;iBAClB,QAAQ,EAAE,QAAQ;iBAClB,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;iBAClB,KAAK,EAAE,KAAK;cACb,CAAC;;aAEF,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;UACxB;MACF;;KAED,wCAAgB,GAAhB,UAAiB,MAAgB;SAC/B,IAAM,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;SACjC,IAAI,QAAQ,CAAC,cAAc,KAAK,IAAI;aAClC,QAAQ,CAAC,qBAAqB,EAAE,CAAC;SACnC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC;aACxC,YAAY,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;SACnC,OAAO,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;MAC5C;KACD,wCAAgB,GAAhB,UAAiB,MAAc;SAC7B,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;SACjC,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,kBAAkB,CAAC;SACzC,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;SAC9C,OAAO,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;MAC5C;KACD,wCAAgB,GAAhB,UAAiB,MAAc;SAC7B,IAAI,CAAE,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,MAAM,CAAC;aAAE,OAAO,KAAK,CAAC;SAC3D,IAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC;SAC3C,IAAI,SAAS,KAAK,CAAC;aAAE,OAAO,IAAI,CAAC;SACjC,IAAM,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC;SACnC,IAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;SAC7B,IAAM,MAAM,GAAG,CAAE,MAAM,CAAC,MAAM,CAAC;SAC/B,IAAI,CAAC,GAAG,CAAC,CAAC;SACV,GAAG;;aAED,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,MAAM,CAAC,GAAG,MAAM;iBAAE,OAAO,KAAK,CAAC;UAC9D,QAAQ,EAAG,CAAC,KAAK,SAAS,EAAE;SAC7B,OAAO,IAAI,CAAC;MACb;KACD,qCAAa,GAAb,UAAc,MAAgB,EAAE,MAAc;SAC5C,IAAI,MAAM,CAAC,OAAO,KAAK,KAAK;aAAE,OAAO;SACrC,IAAM,OAAO,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,MAAM,CAAC,CAAC;SAChE,IAAI,OAAO,EAAE;aACX,IAAI,MAAM,YAAY,KAAK,EAAE;iBAC3B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;cAC1B;kBAAM,IAAI,MAAM,YAAY,MAAM,EAAE;iBACnC,IAAI,MAAM,CAAC,aAAa,KAAK,KAAK,IAAI,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,KAAK,IAAI,EAAE;qBAC5E,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;kBAC3B;cACF;kBAAM,IAAI,MAAM,YAAY,SAAS,EAAE;iBACtC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;cAC9B;kBAAM,IAAI,MAAM,YAAY,qBAAqB,EAAE;iBAClD,IAAI,IAAI,CAAC,WAAW,KAAK,IAAI,EAAE;qBAC7B,IAAI,CAAC,QAAQ,CAAC,qBAAqB,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;qBACxD,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;kBACvD;iBACD,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,IAAI,EAAE,MAAM,CAAC,QAAoB,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;cACvF;kBAAM,IAAI,MAAM,YAAY,IAAI,IAAI,MAAM,YAAY,IAAI,IAAI,MAAM,YAAY,MAAM,EAAE;iBACvF,IAAI,MAAM,YAAY,WAAW,EAAE;qBACjC,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;kBAC1B;iBACD,IAAI,MAAM,CAAC,aAAa,KAAK,KAAK,IAAI,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,KAAK,IAAI,EAAE;qBAC5E,IAAM,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;qBACjC,IAAI,QAAQ,CAAC,OAAO,KAAK,IAAI,EAAE;yBAC7B,IAAI,IAAI,CAAC,WAAW,KAAK,IAAI,EAAE;6BAC7B,IAAI,CAAC,QAAQ,CAAC,qBAAqB,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;6BACxD,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;0BACvD;yBACD,IAAM,QAAQ,GAAmB,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;yBAC7D,IAAI,QAAQ,YAAY,aAAa,EAAE;6BACrC,IAAM,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC;6BAC/B,IAAM,SAAS,GAAG,QAAQ,CAAC,SAAS,CAAC;6BACrC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAG,EAAE;iCAC9C,IAAM,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;iCACxB,IAAM,aAAa,GAAG,SAAS,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC;iCACrD,IAAI,CAAC,aAAa;qCAAE,SAAS;iCAC7B,IAAI,aAAa,CAAC,OAAO,KAAK,IAAI,EAAE;qCAClC,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,QAAQ,EAAE,aAAa,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;kCAC9E;8BACF;0BACF;8BAAM;6BACL,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;0BACxE;sBACF;kBACF;cACF;UACF;SACD,IAAM,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;SACjC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAG,EAAE;aAChD,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;UACzC;MACF;KACD,qCAAa,GAAb,UAAc,UAAwB,EAAE,MAAc,EAAE,KAAY,EAAE,gBAA2B;iCACtF,CAAC,EAAM,CAAC;aACf,IAAM,UAAU,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;aACjC,IAAM,MAAM,GAAG,UAAU,CAAC,MAAM,CAAC;aACjC,IAAM,QAAQ,GAAG,UAAU,CAAC,QAAQ,CAAC;aACrC,IAAM,QAAQ,GAAG,gBAAgB,KAAK,SAAS,GAAG,UAAU,CAAC,QAAQ,GAAG,gBAAgB,CAAC;aACzF,IAAM,KAAK,GAAG,UAAU,CAAC,KAAK,CAAC;aAC/B,MAAM,CAAC,eAAe,CAAC,gBAAgB,CAAC,MAAM,CAAC,kBAAkB,EAAE,MAAM,CAAC,WAAW,CAAC,CAAC;aACvF,MAAM,CAAC,YAAY,CAAC,eAAe,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;aAC5D,MAAM,CAAC,cAAc,SAAO,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;aACtE,IAAI,MAAM,YAAY,qBAAqB,EAAE;iBAC3C,OAAK,WAAW,CAAC,QAAQ,CAAC,CAAC;iBAC3B,IAAM,SAAO,GAAG,OAAK,UAAU,CAAC,MAAM,EAAE,KAAK,CAAC,GAAG,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAC;iBACrE,OAAK,uBAAuB,GAAG,EAAE,CAAC;iBAClC,IAAM,MAAI,SAAO,CAAC;iBAClB,MAAM,CAAC,MAAM,CAAC,UAAS,MAAgB;qBACrC,MAAI,CAAC,qBAAqB,CAAC,MAAM,EAAE,SAAO,EAAE,QAAQ,CAAC,CAAC;kBACvD,CAAC,CAAC;cACJ;kBAAM;iBACL,OAAK,kBAAkB,CAAC,MAAM,EAAE,KAAK,CAAC,GAAG,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;cAC/E;aACD,MAAM,CAAC,aAAa,SAAO,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;;;SApBvE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAG;qBAAzC,CAAC,EAAM,CAAC;UAqBhB;MACF;KACD,oCAAY,GAAZ,UAAa,QAAwB,EAAE,GAAkB,EAAE,MAAgB;SACzE,IAAM,kBAAkB,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;SACzD,IAAM,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,aAAa,CAC9C,QAAQ,EAAE,IAAI,CAAC,OAAO,EAAE,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,eAAe,EAAE,MAAM,CAAC,CAAC;SACnG,IAAM,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;SACpE,IAAI,OAAO,GAAG,kBAAkB,CAAC,OAAO,CAAC;SACzC,IAAI,aAAa,GAAG,IAAI,CAAC;SACzB,IAAI,OAAO,KAAK,SAAS,EAAE;;aAEzB,QAAQ,CAAC,gBAAgB,CAAC,SAAS,EAAE,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;UACzE;cAAM,IAAI,OAAO,CAAC,IAAI,KAAK,IAAI,EAAE;;aAEhC,IAAI,CAAC,+BAA+B,CAAC,QAAQ,CAAC,CAAC;UAChD;cAAM,IAAI,UAAU,CAAC,QAAQ,KAAK,SAAS,EAAE;;aAE5C,OAAO;UACR;cAAM;;aAEL,aAAa,GAAG,KAAK,CAAC;UACvB;SACD,IAAI,aAAa,EAAE;aACjB,IAAI,UAAU,CAAC,QAAQ,EAAE;iBACvB,IAAM,MAAM,GAAG,SAAS,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;iBAC9C,kBAAkB,CAAC,aAAa,GAAG;qBACjC,IAAI,EAAE,QAAQ,CAAC,IAAI;qBACnB,QAAQ,EAAE,aAAa,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC;qBAC9C,YAAY,EAAE,MAAM,CAAC,YAAY;qBACjC,cAAc,EAAE,MAAM,CAAC,cAAc;kBACtC,CAAC;cACH;kBAAM;iBACL,kBAAkB,CAAC,aAAa,GAAG;qBACjC,IAAI,EAAE,QAAQ,CAAC,IAAI;qBACnB,QAAQ,EAAE,QAAQ,CAAC,QAAQ;qBAC3B,YAAY,EAAE,QAAQ,CAAC,YAAY;qBACnC,cAAc,EAAE,QAAQ,CAAC,cAAc;kBACxC,CAAC;cACH;aACD,QAAQ,CAAC,aAAa,GAAG,kBAAkB,CAAC,aAAa,CAAC;aAC1D,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,QAAQ,EAAE,UAAU,EAAE,IAAI,CAAC,CAAC;aACvE,kBAAkB,CAAC,OAAO,GAAG,OAAO,CAAC;aACrC,QAAQ,CAAC,OAAO,GAAG,OAAO,CAAC;UAC5B;SACD,IAAM,UAAU,GAAG,OAAO,CAAC,aAAa,EAAE,CAAC;SAC3C,IAAI,QAAQ,CAAC,YAAY,EAAE;aACzB,QAAQ,CAAC,wBAAwB,GAAG,CAAC,CAAC;aACtC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC,EAAG,EAAE;iBAC9C,IAAI,UAAU,CAAC,aAAa,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE;qBACtC,QAAQ,CAAC,wBAAwB,EAAG,CAAC;kBACtC;cACF;UACF;SACD,IAAI,QAAQ,CAAC,YAAY,EAAE;aACzB,QAAQ,CAAC,wBAAwB,GAAG,CAAC,CAAC;aACtC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC,EAAG,EAAE;iBAC9C,IAAI,UAAU,CAAC,aAAa,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE;qBACtC,QAAQ,CAAC,wBAAwB,EAAG,CAAC;kBACtC;cACF;UACF;SACD,IAAM,QAAQ,GAAG,kBAAkB,CAAC,aAAa,CAAC,QAAQ,CAAC;SAC3D,IAAI,EAAG,QAAQ,YAAY,cAAc,CAAC;aACrC,EAAI,QAAgB,YAAY,iBAAiB,CAAC;aAChD,QAAQ,CAAC,QAAQ,KAAK,IAAI,EAAE;aACjC,kBAAkB,CAAC,iBAAiB,GAAG,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC;aAChE,kBAAkB,CAAC,eAAe,GAAG,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC;aACpE,QAAQ,CAAC,cAAc,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC;UAClD;SACD,kBAAkB,CAAC,GAAG,GAAG,GAAG,CAAC;;SAE7B,kBAAkB,CAAC,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;SAClD,IAAI,QAAQ,CAAC,MAAM,EAAE;;aAEnB,QAAQ,CAAC,iBAAiB,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC;aACxD,QAAQ,CAAC,iBAAiB,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC;aAC5D,QAAQ,CAAC,UAAU,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;aAC9C,QAAQ,CAAC,WAAW,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;aAChD,QAAQ,CAAC,gBAAgB,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;aACpD,QAAQ,CAAC,oBAAoB,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,oBAAoB,CAAC;aACxE,QAAQ,CAAC,uBAAuB,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,uBAAuB,CAAC;aAC9E,QAAQ,CAAC,aAAa,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC;aAC1D,QAAQ,CAAC,gBAAgB,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC;aAChE,QAAQ,CAAC,cAAc,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC;aAC5D,QAAQ,CAAC,iBAAiB,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC;UACnE;SACD,IAAM,YAAY,GAAG,kBAAkB,CAAC,OAAO,CAAC,WAAW,EAAE,EAC3D,YAAY,GACR,aAAa,CAAC,YAAY,CAAC,YAAY,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;SAC7D,kBAAkB,CAAC,YAAY,GAAG,YAAY,CAAC;MAChD;KACD,mCAAW,GAAX,UAAY,QAAkB;SAC5B,QAAQ,CAAC,IAAI,KAAKH,gBAAQ,CAAC,MAAM;eAC7B,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC;eACtC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;SAC1C,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,KAAKA,gBAAQ,CAAC,IAAI,CAAC,CAAC;SACzD,QAAQ,CAAC,WAAW,KAAK,IAAI;eACzB,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,QAAQ,CAAC,QAAQ,EAAE,QAAQ,CAAC,aAAa,EAAE,QAAQ,CAAC,QAAQ,EAAE,QAAQ,CAAC,QAAQ,EAAE,QAAQ,CAAC,kBAAkB,EAAE,QAAQ,CAAC,aAAa,EAAE,QAAQ,CAAC,aAAa,EAAE,QAAQ,CAAC,kBAAkB,CAAC;eACjN,IAAI,CAAC,KAAK,CAAC,WAAW,CAACG,oBAAY,CAAC,IAAI,CAAC,CAAC;SAC9C,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;SAC5C,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;SAC5C,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;SAC9C,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;SAC9C,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,QAAQ,CAAC,aAAa,EAAE,QAAQ,CAAC,mBAAmB,EAAE,QAAQ,CAAC,kBAAkB,CAAC,CAAC;MAChH;KACD,kCAAU,GAAV,UAAW,MAAc,EAAE,GAAkB,EAAE,QAAkB,EAAE,MAAgB;SACjF,IAAI,CAAC,iBAAiB,GAAG,CAAC,CAAC;SAC3B,IAAM,kBAAkB,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;SACzD,IAAI,IAAI,CAAC,gBAAgB,EAAE;aACzB,IAAI,IAAI,CAAC,qBAAqB,IAAI,MAAM,KAAK,IAAI,CAAC,cAAc,EAAE;iBAChE,IAAM,QAAQ,GACV,MAAM,KAAK,IAAI,CAAC,cAAc;qBAC9B,QAAQ,CAAC,EAAE,KAAK,IAAI,CAAC,kBAAkB,CAAC;;;;iBAI5C,IAAI,CAAC,SAAS,CAAC,QAAQ,CACnB,QAAQ,CAAC,cAAc,EAAE,QAAQ,CAAC,gBAAgB,EAAE,QAAQ,CAAC,WAAW,EACxE,MAAM,EAAE,kBAAkB,EAAE,QAAQ,CAAC,CAAC;cAC3C;UACF;SACD,IAAI,QAAQ,CAAC,WAAW,KAAK,KAAK,EAAE;aAClC,IAAI,kBAAkB,CAAC,OAAO,KAAK,SAAS,EAAE;iBAC5C,QAAQ,CAAC,WAAW,GAAG,IAAI,CAAC;cAC7B;kBAAM,IAAI,QAAQ,CAAC,GAAG,IAAI,kBAAkB,CAAC,GAAG,KAAK,GAAG,EAAE;iBACzD,QAAQ,CAAC,WAAW,GAAG,IAAI,CAAC;cAC7B;kBAAM,IAAI,QAAQ,CAAC,MAAM,IAAI,kBAAkB,CAAC,UAAU,KAAK,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE;iBACjF,QAAQ,CAAC,WAAW,GAAG,IAAI,CAAC;cAC7B;kBAAM,IAAI,kBAAkB,CAAC,iBAAiB,KAAK,SAAS;kBAC1D,kBAAkB,CAAC,iBAAiB,KAAK,IAAI,CAAC,SAAS,CAAC,SAAS;qBAC/D,kBAAkB,CAAC,eAAe,KAAM,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,EAAE;iBAC5E,QAAQ,CAAC,WAAW,GAAG,IAAI,CAAC;cAC7B;UACF;SACD,IAAI,QAAQ,CAAC,WAAW,EAAE;aACxB,IAAI,CAAC,YAAY,CAAC,QAA0B,EAAE,GAAG,EAAE,MAAM,CAAC,CAAC;aAC3D,QAAQ,CAAC,WAAW,GAAG,KAAK,CAAC;UAC9B;SACD,IAAI,cAAc,GAAG,KAAK,CAAC;SAC3B,IAAI,eAAe,GAAG,KAAK,CAAC;SAC5B,IAAI,aAAa,GAAG,KAAK,CAAC;SAC1B,IAAM,OAAO,GAAG,kBAAkB,CAAC,OAAO,CAAC;SAC3C,IAAM,UAAU,GAAG,OAAO,CAAC,WAAW,EAAE,CAAC;SACzC,IAAM,UAAU,GAAG,kBAAkB,CAAC,aAAa,CAAC,QAAQ,CAAC;SAC7D,IAAI,OAAO,CAAC,EAAE,KAAK,IAAI,CAAC,eAAe,EAAE;aACvC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;aACrC,IAAI,CAAC,eAAe,GAAG,OAAO,CAAC,EAAE,CAAC;aAClC,cAAc,GAAG,IAAI,CAAC;aACtB,eAAe,GAAG,IAAI,CAAC;aACvB,aAAa,GAAG,IAAI,CAAC;UACtB;SACD,IAAI,QAAQ,CAAC,EAAE,KAAK,IAAI,CAAC,kBAAkB,EAAE;aAC3C,IAAI,CAAC,kBAAkB,GAAG,QAAQ,CAAC,EAAE,CAAC;aACtC,eAAe,GAAG,IAAI,CAAC;UACxB;SACD,IAAI,cAAc,IAAI,MAAM,KAAK,IAAI,CAAC,cAAc,EAAE;aACpD,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,MAAM,EAAE,kBAAkB,CAAC,CAAC;aACrD,IAAI,IAAI,CAAC,YAAY,CAAC,sBAAsB,EAAE;iBAC5C,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,EAAE,eAAe,EACzC,GAAG,IAAI,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;cACpD;aACD,IAAI,MAAM,KAAK,IAAI,CAAC,cAAc,EAAE;iBAClC,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC;;;;iBAI7B,eAAe,GAAG,IAAI,CAAC;iBACvB,aAAa,GAAG,IAAI,CAAC;cACtB;;;aAGD,IAAI,QAAQ,YAAY,cAAc;iBACpC,QAAQ,YAAY,iBAAiB;iBACrC,QAAQ,YAAY,oBAAoB;iBACxC,QAAQ,CAAC,MAAM,EAAE;iBACjB,IAAM,OAAO,GAAG,UAAU,CAAC,GAAG,CAAC,cAAc,CAAC;iBAC9C,IAAI,OAAO,KAAK,SAAS,EAAE;qBACzB,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,EACrB,IAAI,CAAC,QAAQ,CAAC,qBAAqB,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC;kBAC9D;cACF;aACD,IAAI,QAAQ,YAAY,iBAAiB;iBACvC,QAAQ,YAAY,mBAAmB;iBACvC,QAAQ,YAAY,iBAAiB;iBACrC,QAAQ,YAAY,oBAAoB;iBACxC,QAAQ,YAAY,cAAc;iBAClC,QAAQ,CAAC,QAAQ,EAAE;iBACnB,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,EAAE,YAAY,EAAE,MAAM,CAAC,kBAAkB,CAAC,CAAC;cACxE;aACD,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,EAAE,qBAAqB,CAAC,CAAC;aACtD,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,EAAE,uBAAuB,CAAC,CAAC;UACzD;;;;SAID,IAAI,QAAQ,CAAC,QAAQ,EAAE;aACrB,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,EAAE,MAAM,EAAE,YAAY,CAAC,CAAC;aACvD,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,EAAE,MAAM,EAAE,mBAAmB,CAAC,CAAC;aAC9D,IAAM,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;aACjC,IAAI,QAAQ,EAAE;iBACZ,IAAI,IAAI,CAAC,YAAY,CAAC,mBAAmB,IAAI,QAAQ,CAAC,gBAAgB,EAAE;qBACtE,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,QAAQ,EAAE,aAAa,CAAC,CAAC;qBAClD,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,QAAQ,EAAE,kBAAkB,CAAC,CAAC;qBACvD,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,QAAQ,EAAE,mBAAmB,CAAC,CAAC;kBACzD;sBAAM;qBACL,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,EAAE,QAAQ,EAAE,cAAc,CAAC,CAAC;kBAC5D;cACF;UACF;SACD,IAAI,eAAe,EAAE;aACnB,IAAI,QAAQ,CAAC,MAAM,EAAE;;;;;;;;iBAQnB,IAAI,CAAC,6BAA6B,CAAC,UAAU,EAAE,aAAa,CAAC,CAAC;cAC/D;;aAED,IAAI,GAAG,IAAI,QAAQ,CAAC,GAAG,EAAE;iBACvB,IAAI,CAAC,kBAAkB,CAAC,UAAU,EAAE,GAAG,CAAC,CAAC;cAC1C;aACD,IAAI,QAAQ,YAAY,iBAAiB,IAAI,QAAQ,YAAY,mBAAmB,IAAI,QAAQ,YAAY,iBAAiB,IAAI,QAAQ,YAAY,oBAAoB,IAAI,QAAQ,YAAY,iBAAiB,EAAE;iBAClN,IAAI,CAAC,qBAAqB,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;cAClD;;aAED,IAAI,QAAQ,YAAY,iBAAiB,EAAE;iBACzC,IAAI,CAAC,mBAAmB,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;cAChD;kBAAM,IAAI,QAAQ,YAAY,kBAAkB,EAAE;iBACjD,IAAI,CAAC,mBAAmB,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;iBAC/C,IAAI,CAAC,mBAAmB,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;cAChD;kBAAM,IAAI,QAAQ,YAAY,cAAc,EAAE;iBAC7C,IAAI,CAAC,qBAAqB,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;cAClD;kBAAM,IAAI,QAAQ,YAAY,mBAAmB,EAAE;iBAClD,IAAI,CAAC,sBAAsB,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;cACnD;kBAAM,IAAI,QAAQ,YAAY,iBAAiB,EAAE;iBAChD,IAAI,CAAC,oBAAoB,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;cACjD;kBAAM,IAAI,QAAQ,YAAY,oBAAoB,EAAE;iBACnD,IAAI,CAAC,uBAAuB,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;cACpD;kBAAM,IAAI,QAAQ,YAAY,oBAAoB,EAAE;iBACnD,IAAI,CAAC,uBAAuB,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;cACpD;kBAAM,IAAI,QAAQ,YAAY,iBAAiB,EAAE;iBAChD,IAAI,QAAQ,CAAC,eAAe,EAAE;qBAC5B,UAAU,CAAC,eAAe,CAAC,KAAK,GAAG,QAAQ,CAAC,eAAe,CAAC;qBAC5D,UAAU,CAAC,iBAAiB,CAAC,KAAK,GAAG,QAAQ,CAAC,iBAAiB,CAAC;qBAChE,UAAU,CAAC,gBAAgB,CAAC,KAAK,GAAG,QAAQ,CAAC,gBAAgB,CAAC;kBAC/D;cACF;kBAAM,IAAI,QAAQ,YAAY,kBAAkB,EAAE;iBACjD,UAAU,CAAC,OAAO,CAAC,KAAK,GAAG,QAAQ,CAAC,OAAO,CAAC;cAC7C;aACD,aAAa,CAAC,MAAM,CAChB,IAAI,CAAC,GAAG,EAAE,kBAAkB,CAAC,YAAY,EAAE,UAAU,EAAE,IAAI,CAAC,CAAC;UAClE;;SAED,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,MAAM,EAAE,iBAAiB,CAAC,CAAC;SACpD,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,MAAM,EAAE,cAAc,CAAC,CAAC;SACjD,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,EAAE,aAAa,EAAE,MAAM,CAAC,WAAW,CAAC,CAAC;SACjE,OAAO,OAAO,CAAC;MAChB;;KAED,6CAAqB,GAArB,UAAsB,QAAa,EAAE,QAAgH;SACnJ,QAAQ,CAAC,OAAO,CAAC,KAAK,GAAG,QAAQ,CAAC,OAAO,CAAC;SAC1C,QAAQ,CAAC,OAAO,CAAC,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC;SACxC,IAAI,QAAQ,CAAC,QAAQ,EAAE;aACrB,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAE,QAAgB,CAAC,iBAAiB,CAAC,CAAC;UACrG;SACD,QAAQ,CAAC,GAAG,CAAC,KAAK,GAAG,QAAQ,CAAC,GAAG,CAAC;SAClC,QAAQ,CAAC,WAAW,CAAC,KAAK,GAAG,QAAQ,CAAC,WAAW,CAAC;SAClD,QAAQ,CAAC,QAAQ,CAAC,KAAK,GAAG,QAAQ,CAAC,QAAQ,CAAC;SAC5C,IAAK,QAAgB,CAAC,KAAK,EAAE;aAC3B,QAAQ,CAAC,KAAK,CAAC,KAAK,GAAI,QAAgB,CAAC,KAAK,CAAC;aAC/C,QAAQ,CAAC,cAAc,CAAC,KAAK,GAAI,QAAgB,CAAC,cAAc,CAAC;UAClE;;;;;;;;SAQD,IAAI,UAAU,CAAC;SACf,IAAI,QAAQ,CAAC,GAAG,EAAE;aAChB,UAAU,GAAG,QAAQ,CAAC,GAAG,CAAC;UAC3B;cAAM,IAAI,QAAQ,CAAC,WAAW,EAAE;aAC/B,UAAU,GAAG,QAAQ,CAAC,WAAW,CAAC;UACnC;cAAM,IAAI,QAAQ,CAAC,eAAe,EAAE;aACnC,UAAU,GAAG,QAAQ,CAAC,eAAe,CAAC;UACvC;cAAM,IAAI,QAAQ,CAAC,SAAS,EAAE;aAC7B,UAAU,GAAG,QAAQ,CAAC,SAAS,CAAC;UACjC;cAAM,IAAI,QAAQ,CAAC,OAAO,EAAE;aAC3B,UAAU,GAAG,QAAQ,CAAC,OAAO,CAAC;UAC/B;cAAM,IAAI,QAAQ,CAAC,YAAY,EAAE;aAChC,UAAU,GAAG,QAAQ,CAAC,YAAY,CAAC;UACpC;cAAM,IAAI,QAAQ,CAAC,YAAY,EAAE;aAChC,UAAU,GAAG,QAAQ,CAAC,YAAY,CAAC;UACpC;cAAM,IAAI,QAAQ,CAAC,QAAQ,EAAE;aAC5B,UAAU,GAAG,QAAQ,CAAC,QAAQ,CAAC;UAChC;cAAM,IAAI,QAAQ,CAAC,WAAW,EAAE;aAC/B,UAAU,GAAG,QAAQ,CAAC,WAAW,CAAC;UACnC;SACD,IAAI,UAAU,KAAK,SAAS,EAAE;;aAE5B,IAAI,UAAU,YAAY,iBAAiB,EAAE;iBAC3C,UAAU,GAAG,UAAU,CAAC,OAAO,CAAC;cACjC;aACD,IAAM,MAAM,GAAG,UAAU,CAAC,MAAM,CAAC;aACjC,IAAM,MAAM,GAAG,UAAU,CAAC,MAAM,CAAC;aACjC,QAAQ,CAAC,YAAY,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC;UACzE;SACD,QAAQ,CAAC,MAAM,CAAC,KAAK,GAAG,QAAQ,CAAC,MAAM,CAAC;;;;;SAKxC,QAAQ,CAAC,UAAU,CAAC,KAAK,GAAG,CAAC,EAAG,QAAQ,CAAC,MAAM,IAAI,QAAQ,CAAC,MAAM,YAAY,WAAW,CAAC,IAAI,CAAC,GAAG,CAAE,CAAC,CAAC;SACtG,QAAQ,CAAC,YAAY,CAAC,KAAK,GAAG,QAAQ,CAAC,YAAY,CAAC;SACpD,QAAQ,CAAC,eAAe,CAAC,KAAK,GAAI,QAAgB,CAAC,eAAe,CAAC;MACpE;KACD,2CAAmB,GAAnB,UAAoB,QAAa,EAAE,QAAgD;SACjF,QAAQ,CAAC,OAAO,CAAC,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC;SACxC,QAAQ,CAAC,OAAO,CAAC,KAAK,GAAG,QAAQ,CAAC,OAAO,CAAC;MAC3C;KACD,2CAAmB,GAAnB,UAAoB,QAAa,EAAE,QAA4B;SAC7D,QAAQ,CAAC,QAAQ,CAAC,KAAK,GAAG,QAAQ,CAAC,QAAQ,CAAC;SAC5C,QAAQ,CAAC,SAAS,CAAC,KAAK,GAAG,QAAQ,CAAC,QAAQ,GAAG,QAAQ,CAAC,OAAO,CAAC;SAChE,QAAQ,CAAC,KAAK,CAAC,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC;MACvC;KACD,6CAAqB,GAArB,UAAsB,QAAa,EAAE,QAAwB;SAC3D,QAAQ,CAAC,OAAO,CAAC,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC;SACxC,QAAQ,CAAC,OAAO,CAAC,KAAK,GAAG,QAAQ,CAAC,OAAO,CAAC;SAC1C,QAAQ,CAAC,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC;SACvD,QAAQ,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC;SAC1C,QAAQ,CAAC,GAAG,CAAC,KAAK,GAAG,QAAQ,CAAC,GAAG,CAAC;SAClC,IAAI,QAAQ,CAAC,GAAG,KAAK,IAAI,EAAE;aACzB,IAAM,MAAM,GAAG,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC;aACnC,IAAM,MAAM,GAAG,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC;aACnC,QAAQ,CAAC,YAAY,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC;UACzE;MACF;KACD,0CAAkB,GAAlB,UAAmB,QAAa,EAAE,GAAkB;SAClD,QAAQ,CAAC,QAAQ,CAAC,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC;SACpC,IAAI,GAAG,YAAY,GAAG,EAAE;aACtB,QAAQ,CAAC,OAAO,CAAC,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC;aAClC,QAAQ,CAAC,MAAM,CAAC,KAAK,GAAG,GAAG,CAAC,GAAG,CAAC;UACjC;cAAM,IAAI,GAAG,YAAY,OAAO,EAAE;aACjC,QAAQ,CAAC,UAAU,CAAC,KAAK,GAAG,GAAG,CAAC,OAAO,CAAC;UACzC;MACF;KACD,8CAAsB,GAAtB,UAAuB,QAAa,EAAE,QAA6B;SACjE,IAAI,QAAQ,CAAC,QAAQ,EAAE;aACrB,QAAQ,CAAC,QAAQ,CAAC,KAAK,GAAG,QAAQ,CAAC,QAAQ,CAAC;aAC5C,QAAQ,CAAC,iBAAiB,CAAC,KAAK,GAAG,QAAQ,CAAC,iBAAiB,CAAC;UAC/D;SACD,IAAI,QAAQ,CAAC,WAAW,EAAE;aACxB,QAAQ,CAAC,WAAW,CAAC,KAAK,GAAG,QAAQ,CAAC,WAAW,CAAC;UACnD;MACF;KACD,4CAAoB,GAApB,UAAqB,QAAa,EAAE,QAA2B;SAC7D,QAAQ,CAAC,QAAQ,CAAC,KAAK,GAAG,QAAQ,CAAC,QAAQ,CAAC;SAC5C,QAAQ,CAAC,SAAS,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;SAC9D,IAAI,QAAQ,CAAC,QAAQ,EAAE;aACrB,QAAQ,CAAC,QAAQ,CAAC,KAAK,GAAG,QAAQ,CAAC,QAAQ,CAAC;aAC5C,QAAQ,CAAC,iBAAiB,CAAC,KAAK,GAAG,QAAQ,CAAC,iBAAiB,CAAC;UAC/D;SACD,IAAI,QAAQ,CAAC,WAAW,EAAE;aACxB,QAAQ,CAAC,WAAW,CAAC,KAAK,GAAG,QAAQ,CAAC,WAAW,CAAC;UACnD;SACD,IAAI,QAAQ,CAAC,OAAO,EAAE;aACpB,QAAQ,CAAC,OAAO,CAAC,KAAK,GAAG,QAAQ,CAAC,OAAO,CAAC;aAC1C,QAAQ,CAAC,SAAS,CAAC,KAAK,GAAG,QAAQ,CAAC,SAAS,CAAC;UAC/C;SACD,IAAI,QAAQ,CAAC,SAAS,EAAE;aACtB,QAAQ,CAAC,SAAS,CAAC,KAAK,GAAG,QAAQ,CAAC,SAAS,CAAC;aAC9C,QAAQ,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;UACvD;SACD,IAAI,QAAQ,CAAC,eAAe,EAAE;aAC5B,QAAQ,CAAC,eAAe,CAAC,KAAK,GAAG,QAAQ,CAAC,eAAe,CAAC;aAC1D,QAAQ,CAAC,iBAAiB,CAAC,KAAK,GAAG,QAAQ,CAAC,iBAAiB,CAAC;aAC9D,QAAQ,CAAC,gBAAgB,CAAC,KAAK,GAAG,QAAQ,CAAC,gBAAgB,CAAC;UAC7D;MACF;KACD,+CAAuB,GAAvB,UAAwB,QAAa,EAAE,QAA8B;SACnE,QAAQ,CAAC,SAAS,CAAC,KAAK,GAAG,QAAQ,CAAC,SAAS,CAAC;SAC9C,QAAQ,CAAC,SAAS,CAAC,KAAK,GAAG,QAAQ,CAAC,SAAS,CAAC;SAC9C,IAAI,QAAQ,CAAC,YAAY,EAAE;aACzB,QAAQ,CAAC,YAAY,CAAC,KAAK,GAAG,QAAQ,CAAC,YAAY,CAAC;UACrD;SACD,IAAI,QAAQ,CAAC,YAAY,EAAE;aACzB,QAAQ,CAAC,YAAY,CAAC,KAAK,GAAG,QAAQ,CAAC,YAAY,CAAC;UACrD;SACD,IAAI,QAAQ,CAAC,QAAQ,EAAE;aACrB,QAAQ,CAAC,QAAQ,CAAC,KAAK,GAAG,QAAQ,CAAC,QAAQ,CAAC;aAC5C,QAAQ,CAAC,iBAAiB,CAAC,KAAK,GAAG,QAAQ,CAAC,iBAAiB,CAAC;UAC/D;SACD,IAAI,QAAQ,CAAC,WAAW,EAAE;aACxB,QAAQ,CAAC,WAAW,CAAC,KAAK,GAAG,QAAQ,CAAC,WAAW,CAAC;UACnD;SACD,IAAI,QAAQ,CAAC,OAAO,EAAE;aACpB,QAAQ,CAAC,OAAO,CAAC,KAAK,GAAG,QAAQ,CAAC,OAAO,CAAC;aAC1C,QAAQ,CAAC,SAAS,CAAC,KAAK,GAAG,QAAQ,CAAC,SAAS,CAAC;UAC/C;SACD,IAAI,QAAQ,CAAC,SAAS,EAAE;aACtB,QAAQ,CAAC,SAAS,CAAC,KAAK,GAAG,QAAQ,CAAC,SAAS,CAAC;aAC9C,QAAQ,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;UACvD;SACD,IAAI,QAAQ,CAAC,eAAe,EAAE;aAC5B,QAAQ,CAAC,eAAe,CAAC,KAAK,GAAG,QAAQ,CAAC,eAAe,CAAC;aAC1D,QAAQ,CAAC,iBAAiB,CAAC,KAAK,GAAG,QAAQ,CAAC,iBAAiB,CAAC;aAC9D,QAAQ,CAAC,gBAAgB,CAAC,KAAK,GAAG,QAAQ,CAAC,gBAAgB,CAAC;UAC7D;SACD,IAAI,QAAQ,CAAC,MAAM,EAAE;;aAEnB,QAAQ,CAAC,eAAe,CAAC,KAAK,GAAG,QAAQ,CAAC,eAAe,CAAC;UAC3D;MACF;KACD,+CAAuB,GAAvB,UAAwB,QAAa,EAAE,QAA8B;SACnE,QAAQ,CAAC,SAAS,CAAC,KAAK,GAAG,QAAQ,CAAC,SAAS,CAAC;SAC9C,QAAQ,CAAC,kBAAkB,CAAC,KAAK,GAAG,QAAQ,CAAC,kBAAkB,CAAC;SAChE,IAAI,CAAC,uBAAuB,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;MAClD;;KAED,qDAA6B,GAA7B,UAA8B,QAAa,EAAE,KAAc;SACzD,QAAQ,CAAC,iBAAiB,CAAC,WAAW,GAAG,KAAK,CAAC;SAC/C,QAAQ,CAAC,iBAAiB,CAAC,WAAW,GAAG,KAAK,CAAC;SAC/C,QAAQ,CAAC,WAAW,CAAC,WAAW,GAAG,KAAK,CAAC;SACzC,QAAQ,CAAC,UAAU,CAAC,WAAW,GAAG,KAAK,CAAC;SACxC,QAAQ,CAAC,gBAAgB,CAAC,WAAW,GAAG,KAAK,CAAC;MAC/C;;KAED,oCAAY,GAAZ,UAAa,MAAe;SAC1B,IAAI,kBAAkB,GAAG,CAAC,CAAC;SAC3B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAG,EAAE;aAC9C,IAAM,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;aACxB,IAAI,KAAK,CAAC,UAAU,EAAE;iBACpB,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,kBAAkB,EAAG,CAAC,GAAG,KAAK,CAAC;cACrD;UACF;SACD,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,GAAG,kBAAkB,CAAC;MAClD;KACD,mCAAW,GAAX,UAAY,MAAe,EAAE,MAAc;SACzC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;SACxB,IAAM,UAAU,GAAG,MAAM,CAAC,kBAAkB,CAAC;SAC7C,IAAI,iBAAiB,GAAG,CAAC,CAAC;SAC1B,IAAI,WAAW,GAAG,CAAC,CAAC;SACpB,IAAI,UAAU,GAAG,CAAC,CAAC;SACnB,IAAI,UAAU,GAAG,CAAC,CAAC;SACnB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAG,EAAE;aAChD,IAAM,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;aACxB,IAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;aAC1B,IAAM,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC;aAClC,IAAM,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;aAChC,IAAM,SAAS,GAAG,CAAC,KAAK,CAAC,MAAM,IAAI,KAAK,CAAC,MAAM,CAAC,GAAG,IAAI,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,OAAO,GAAG,IAAI,CAAC;aACvF,IAAI,KAAK,YAAY,YAAY,EAAE;iBACjC,CAAC,IAAI,KAAK,CAAC,CAAC,GAAG,SAAS,CAAC;iBACzB,CAAC,IAAI,KAAK,CAAC,CAAC,GAAG,SAAS,CAAC;iBACzB,CAAC,IAAI,KAAK,CAAC,CAAC,GAAG,SAAS,CAAC;cAC1B;kBAAM,IAAI,KAAK,YAAY,gBAAgB,EAAE;iBAC5C,IAAM,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;iBAC5C,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,cAAc,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;iBACjE,QAAQ,CAAC,SAAS,CAAC,qBAAqB,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;iBAC5D,IAAI,CAAC,QAAQ,CAAC,qBAAqB,CAAC,KAAK,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;iBAC9D,QAAQ,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;iBACtC,QAAQ,CAAC,SAAS,CAAC,kBAAkB,CAAC,UAAU,CAAC,CAAC;iBAClD,QAAQ,CAAC,MAAM,GAAG,KAAK,CAAC,UAAU,CAAC;iBACnC,IAAI,KAAK,CAAC,UAAU,EAAE;qBACpB,QAAQ,CAAC,UAAU,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC;qBACxC,QAAQ,CAAC,YAAY,GAAG,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC;qBAC5C,QAAQ,CAAC,aAAa,GAAG,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC;kBAC/C;iBACD,IAAI,CAAC,OAAO,CAAC,oBAAoB,CAAC,iBAAiB,CAAC,GAAG,SAAS,CAAC;iBACjE,IAAI,CAAC,OAAO,CAAC,uBAAuB,CAAC,iBAAiB,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC;iBAC9E,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,iBAAiB,EAAG,CAAC,GAAG,QAAQ,CAAC;cAC3D;kBAAM,IAAI,KAAK,YAAY,SAAS,EAAE;iBACrC,IAAM,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;iBAC5C,QAAQ,CAAC,QAAQ,CAAC,qBAAqB,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;iBAC3D,QAAQ,CAAC,QAAQ,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC;iBAC3C,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC;iBACrD,QAAQ,CAAC,QAAQ,GAAG,QAAQ,CAAC;iBAC7B,QAAQ,CAAC,SAAS,CAAC,qBAAqB,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;iBAC5D,IAAI,CAAC,QAAQ,CAAC,qBAAqB,CAAC,KAAK,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;iBAC9D,QAAQ,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;iBACtC,QAAQ,CAAC,SAAS,CAAC,kBAAkB,CAAC,UAAU,CAAC,CAAC;iBAClD,QAAQ,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;iBACzC,QAAQ,CAAC,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,IAAI,CAAC,GAAG,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC;iBACpE,QAAQ,CAAC,KAAK,GAAG,CAAC,KAAK,CAAC,QAAQ,KAAK,CAAC,IAAI,GAAG,GAAG,KAAK,CAAC,KAAK,CAAC;iBAC5D,QAAQ,CAAC,MAAM,GAAG,KAAK,CAAC,UAAU,CAAC;iBACnC,IAAI,KAAK,CAAC,UAAU,EAAE;qBACpB,QAAQ,CAAC,UAAU,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC;qBACxC,QAAQ,CAAC,YAAY,GAAG,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC;qBAC5C,QAAQ,CAAC,aAAa,GAAG,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC;kBAC/C;iBACD,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,UAAU,CAAC,GAAG,SAAS,CAAC;iBACnD,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,UAAU,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC;iBAChE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,EAAG,CAAC,GAAG,QAAQ,CAAC;cAC7C;kBAAM,IAAI,KAAK,YAAY,UAAU,EAAE;iBACtC,IAAM,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;iBAC5C,QAAQ,CAAC,QAAQ,CAAC,qBAAqB,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;iBAC3D,QAAQ,CAAC,QAAQ,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC;iBAC3C,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,cAAc,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;iBACjE,QAAQ,CAAC,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;iBACnC,QAAQ,CAAC,KAAK,GAAG,CAAC,KAAK,CAAC,QAAQ,KAAK,CAAC,IAAI,GAAG,GAAG,KAAK,CAAC,KAAK,CAAC;iBAC5D,QAAQ,CAAC,MAAM,GAAG,KAAK,CAAC,UAAU,CAAC;iBACnC,IAAI,KAAK,CAAC,UAAU,EAAE;qBACpB,QAAQ,CAAC,UAAU,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC;qBACxC,QAAQ,CAAC,YAAY,GAAG,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC;qBAC5C,QAAQ,CAAC,aAAa,GAAG,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC;kBAC/C;iBACD,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,WAAW,CAAC,GAAG,SAAS,CAAC;iBACrD,IAAI,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,WAAW,CAAC,KAAK,SAAS,EAAE;qBAC7D,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,WAAW,CAAC,GAAG,IAAI,OAAO,EAAE,CAAC;kBAC7D;;;iBAGD,IAAI,CAAC,QAAQ,CAAC,qBAAqB,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,MAAM,EAAE,CAAC;iBAChE,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,WAAW,CAAC,CAAC,QAAQ,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;iBAClF,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,WAAW,EAAG,CAAC,GAAG,QAAQ,CAAC;cAC/C;kBAAM,IAAI,KAAK,YAAY,eAAe,EAAE;iBAC3C,IAAM,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;iBAC5C,QAAQ,CAAC,SAAS,CAAC,qBAAqB,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;iBAC5D,QAAQ,CAAC,SAAS,CAAC,kBAAkB,CAAC,UAAU,CAAC,CAAC;iBAClD,QAAQ,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC;iBAC/B,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC;iBAC9D,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC;iBACvE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,EAAG,CAAC,GAAG,QAAQ,CAAC;cAC7C;UACF;SACD,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;SAC5B,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;SAC5B,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;SAC5B,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,MAAM,GAAG,iBAAiB,CAAC;SACpD,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,GAAG,UAAU,CAAC;SACtC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,GAAG,WAAW,CAAC;SACxC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,GAAG,UAAU,CAAC;SACtC,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,iBAAiB,GAAG,GAAG,GAAG,WAAW,GAAG,GAAG,GAAG,UAAU,GAAG,GAAG,GAAG,UAAU,GAAG,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC;MACrI;;KAED,sCAAc,GAAd,UAAe,QAAkB,EAAE,kBAAsC;SACvE,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;SACjC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,kBAAkB,KAAKL,0BAAkB,CAAC,EAAE,CAAC,CAAC;MACvE;;KAED,wCAAgB,GAAhB;SACE,IAAM,WAAW,GAAG,IAAI,CAAC,iBAAiB,CAAC;SAC3C,IAAI,WAAW,IAAI,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE;aAChD,OAAO,CAAC,IAAI,CAAC,+BAA+B,GAAG,WAAW,GAAG,8CAA8C,GAAG,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC;UAC9I;SACD,IAAI,CAAC,iBAAiB,IAAI,CAAC,CAAC;SAC5B,OAAO,WAAW,CAAC;MACpB;;;KAGD,oCAAY,GAAZ,UAAa,OAAgB,EAAE,IAAY;SACzC,IAAI,MAAM,GAAG,KAAK,CAAC;;;SAGjB,IAAI,OAAO,IAAI,OAAO,YAAY,iBAAiB,EAAE;aACnD,IAAI,CAAE,MAAM,EAAE;iBACZ,OAAO,CAAC,IAAI,CAAC,8GAA8G,CAAC,CAAC;iBAC7H,MAAM,GAAG,IAAI,CAAC;cACf;aACD,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC;UAC3B;SACD,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;;MAE7C;KACD,kCAAU,GAAV,UAAW,OAAgB,EAAE,IAAY;SACvC,IAAI,MAAM,GAAG,KAAK,CAAC;;SAEjB,IAAI,CAAE,MAAM,EAAE;aACZ,OAAO,CAAC,IAAI,CAAC,2EAA2E,CAAC,CAAC;aAC1F,MAAM,GAAG,IAAI,CAAC;UACf;SACD,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;;MAE7C;KACD,sCAAc,GAAd,UAAe,OAAgB,EAAE,IAAY;SAC3C,IAAI,MAAM,GAAG,KAAK,CAAC;;;SAGjB,IAAI,OAAO,IAAI,OAAO,YAAY,qBAAqB,EAAE;aACvD,IAAI,CAAE,MAAM,EAAE;iBACZ,OAAO,CAAC,IAAI,CAAC,qHAAqH,CAAC,CAAC;iBACpI,MAAM,GAAG,IAAI,CAAC;cACf;aACD,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC;UAC3B;;;SAGD,IAAI,CAAC,OAAO,IAAI,OAAO,YAAY,WAAW;cAC1C,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,OAAO,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC,CAAC,EAAE;;;aAG/D,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;UAC7C;cAAM;;aAEL,IAAI,CAAC,QAAQ,CAAC,qBAAqB,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;UACpD;;MAEJ;KACD,8CAAsB,GAAtB;SACE,OAAO,IAAI,CAAC,oBAAoB,CAAC;MAClC;KACD,uCAAe,GAAf,UAAgB,YAA+B;SAC7C,IAAM,GAAG,GAA0B,IAAI,CAAC,GAAG,CAAC;SAC5C,IAAI,CAAC,oBAAoB,GAAG,YAAY,CAAC;SACzC,IAAI,YAAY,IAAI,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,kBAAkB,KAAK,SAAS,EAAE;aACtF,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC,YAAY,CAAC,CAAC;UAC/C;SACD,IAAI,WAAW,CAAC;SAChB,IAAI,YAAY,EAAE;aAChB,IAAM,sBAAsB,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;aACjE,IAAI,YAAY,IAAI,YAAY,YAAY,qBAAqB,EAAE;iBACjE,WAAW,GAAG,sBAAsB,CAAC,kBAAkB,CAAC,YAAY,CAAC,cAAc,CAAC,CAAC;cACtF;kBAAM;iBACL,WAAW,GAAG,sBAAsB,CAAC,kBAAkB,CAAC;cACzD;aACD,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;aAChD,IAAI,CAAC,mBAAmB,GAAG,YAAY,CAAC,WAAW,CAAC;aACpD,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;UACnD;cAAM;aACL,WAAW,GAAG,IAAI,CAAC;aACnB,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;aAC1E,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,YAAY,CAAC;aAC7C,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,cAAc,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;UAC7E;SACD,IAAI,IAAI,CAAC,mBAAmB,KAAK,WAAW,EAAE;aAC5C,GAAG,CAAC,eAAe,CAAC,GAAG,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC;aAClD,IAAI,CAAC,mBAAmB,GAAG,WAAW,CAAC;UACxC;SACD,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;SACzC,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;SACpD,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;SAC3C,IAAI,YAAY,IAAI,YAAY,YAAY,qBAAqB,EAAE;aACjE,IAAM,iBAAiB,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;aACpE,GAAG,CAAC,oBAAoB,CAAC,GAAG,CAAC,WAAW,EAAE,GAAG,CAAC,iBAAiB,EAAE,GAAG,CAAC,2BAA2B,GAAG,YAAY,CAAC,cAAc,EAAE,iBAAiB,CAAC,cAAc,EAAE,YAAY,CAAC,iBAAiB,CAAC,CAAC;UACnM;MACF;KACD,8CAAsB,GAAtB,UAAuB,YAA+B,EAAE,CAAS,EAAE,CAAS,EAAE,KAAa,EAAE,MAAc,EAAE,MAAuB;SAClI,IAAM,GAAG,GAA0B,IAAI,CAAC,GAAG,CAAC;SAC5C,IAAI,CAAC,YAAY,IAAI,YAAY,YAAY,iBAAiB,MAAM,KAAK,EAAE;aACzE,OAAO,CAAC,KAAK,CAAC,0FAA0F,CAAC,CAAC;aAC1G,OAAO;UACR;SACD,IAAM,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,kBAAkB,CAAC;SACzE,IAAI,WAAW,EAAE;aACf,IAAI,OAAO,GAAG,KAAK,CAAC;aACpB,IAAI,WAAW,KAAK,IAAI,CAAC,mBAAmB,EAAE;iBAC5C,GAAG,CAAC,eAAe,CAAC,GAAG,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC;iBAClD,OAAO,GAAG,IAAI,CAAC;cAChB;aACD,IAAI;iBACF,IAAM,OAAO,GAAG,YAAY,CAAC,OAAO,CAAC;iBACrC,IAAM,aAAa,GAAG,OAAO,CAAC,MAAM,CAAC;iBACrC,IAAM,WAAW,GAAG,OAAO,CAAC,IAAI,CAAC;iBACjC,IAAI,aAAa,KAAKe,qBAAa,CAAC,IAAI,IAAI,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,KAAK,GAAG,CAAC,YAAY,CAAC,GAAG,CAAC,gCAAgC,CAAC,EAAE;qBACzI,OAAO,CAAC,KAAK,CAAC,2GAA2G,CAAC,CAAC;qBAC3H,OAAO;kBACR;iBACD,IAAI,WAAW,KAAKD,mBAAW,CAAC,YAAY,IAAI,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,KAAK,GAAG,CAAC,YAAY,CAAC,GAAG,CAAC,8BAA8B,CAAC;qBACpI,EAAG,WAAW,KAAKA,mBAAW,CAAC,KAAK,KAAK,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,mBAAmB,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,0BAA0B,CAAC,CAAC,CAAC;qBACtI,EAAG,WAAW,KAAKA,mBAAW,CAAC,SAAS,IAAI,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,6BAA6B,CAAC,CAAC,EAAE;qBACpG,OAAO,CAAC,KAAK,CAAC,6HAA6H,CAAC,CAAC;qBAC7I,OAAO;kBACR;iBACD,IAAI,GAAG,CAAC,sBAAsB,CAAC,GAAG,CAAC,WAAW,CAAC,KAAK,GAAG,CAAC,oBAAoB,EAAE;;qBAE5E,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,YAAY,CAAC,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,YAAY,CAAC,MAAM,GAAG,MAAM,CAAC,CAAC,EAAE;yBACpG,GAAG,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,EAAE,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,EAAE,MAAM,CAAC,CAAC;sBACnH;kBACF;sBAAM;qBACL,OAAO,CAAC,KAAK,CAAC,4GAA4G,CAAC,CAAC;kBAC7H;cACF;qBAAS;iBACR,IAAI,OAAO,EAAE;qBACX,GAAG,CAAC,eAAe,CAAC,GAAG,CAAC,WAAW,EAAE,IAAI,CAAC,mBAAmB,CAAC,CAAC;kBAChE;cACF;UACF;MACF;;KAED,sCAAc,GAAd,UAAe,CAAS;SACtB,IAAM,GAAG,GAA0B,IAAI,CAAC,GAAG,CAAC;SAC5C,IAAI,SAAS,CAAC;SACd,IAAI,CAAC,KAAKF,uBAAe,CAAC,MAAM;aAAE,OAAO,GAAG,CAAC,MAAM,CAAC;SACpD,IAAI,CAAC,KAAKA,uBAAe,CAAC,WAAW;aAAE,OAAO,GAAG,CAAC,aAAa,CAAC;SAChE,IAAI,CAAC,KAAKA,uBAAe,CAAC,cAAc;aAAE,OAAO,GAAG,CAAC,eAAe,CAAC;SACrE,IAAI,CAAC,KAAKC,qBAAa,CAAC,OAAO;aAAE,OAAO,GAAG,CAAC,OAAO,CAAC;SACpD,IAAI,CAAC,KAAKA,qBAAa,CAAC,oBAAoB;aAAE,OAAO,GAAG,CAAC,sBAAsB,CAAC;SAChF,IAAI,CAAC,KAAKA,qBAAa,CAAC,mBAAmB;aAAE,OAAO,GAAG,CAAC,qBAAqB,CAAC;SAC9E,IAAI,CAAC,KAAKA,qBAAa,CAAC,MAAM;aAAE,OAAO,GAAG,CAAC,MAAM,CAAC;SAClD,IAAI,CAAC,KAAKA,qBAAa,CAAC,mBAAmB;aAAE,OAAO,GAAG,CAAC,qBAAqB,CAAC;SAC9E,IAAI,CAAC,KAAKA,qBAAa,CAAC,kBAAkB;aAAE,OAAO,GAAG,CAAC,oBAAoB,CAAC;SAC5E,IAAI,CAAC,KAAKC,mBAAW,CAAC,YAAY;aAAE,OAAO,GAAG,CAAC,aAAa,CAAC;SAC7D,IAAI,CAAC,KAAKA,mBAAW,CAAC,iBAAiB;aAAE,OAAO,GAAG,CAAC,sBAAsB,CAAC;SAC3E,IAAI,CAAC,KAAKA,mBAAW,CAAC,iBAAiB;aAAE,OAAO,GAAG,CAAC,sBAAsB,CAAC;SAC3E,IAAI,CAAC,KAAKA,mBAAW,CAAC,gBAAgB;aAAE,OAAO,GAAG,CAAC,oBAAoB,CAAC;SACxE,IAAI,CAAC,KAAKA,mBAAW,CAAC,IAAI;aAAE,OAAO,GAAG,CAAC,IAAI,CAAC;SAC5C,IAAI,CAAC,KAAKA,mBAAW,CAAC,KAAK;aAAE,OAAO,GAAG,CAAC,KAAK,CAAC;SAC9C,IAAI,CAAC,KAAKA,mBAAW,CAAC,aAAa;aAAE,OAAO,GAAG,CAAC,cAAc,CAAC;SAC/D,IAAI,CAAC,KAAKA,mBAAW,CAAC,GAAG;aAAE,OAAO,GAAG,CAAC,GAAG,CAAC;SAC1C,IAAI,CAAC,KAAKA,mBAAW,CAAC,WAAW;aAAE,OAAO,GAAG,CAAC,YAAY,CAAC;SAC3D,IAAI,CAAC,KAAKA,mBAAW,CAAC,KAAK;aAAE,OAAO,GAAG,CAAC,KAAK,CAAC;SAC9C,IAAI,CAAC,KAAKA,mBAAW,CAAC,SAAS,EAAE;aAC/B,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;aAC1D,IAAI,SAAS,KAAK,IAAI;iBAAE,OAAO,SAAS,CAAC,cAAc,CAAC;UACzD;SACD,IAAI,CAAC,KAAKC,qBAAa,CAAC,KAAK;aAAE,OAAO,GAAG,CAAC,KAAK,CAAC;SAChD,IAAI,CAAC,KAAKA,qBAAa,CAAC,GAAG;aAAE,OAAO,GAAG,CAAC,GAAG,CAAC;SAC5C,IAAI,CAAC,KAAKA,qBAAa,CAAC,IAAI;aAAE,OAAO,GAAG,CAAC,IAAI,CAAC;SAC9C,IAAI,CAAC,KAAKA,qBAAa,CAAC,SAAS;aAAE,OAAO,GAAG,CAAC,SAAS,CAAC;SACxD,IAAI,CAAC,KAAKA,qBAAa,CAAC,cAAc;aAAE,OAAO,GAAG,CAAC,eAAe,CAAC;SACnE,IAAI,CAAC,KAAKA,qBAAa,CAAC,KAAK;aAAE,OAAO,GAAG,CAAC,eAAe,CAAC;SAC1D,IAAI,CAAC,KAAKA,qBAAa,CAAC,YAAY;aAAE,OAAO,GAAG,CAAC,aAAa,CAAC;SAC/D,IAAI,CAAC,KAAKT,wBAAgB,CAAC,GAAG;aAAE,OAAO,GAAG,CAAC,QAAQ,CAAC;SACpD,IAAI,CAAC,KAAKA,wBAAgB,CAAC,QAAQ;aAAE,OAAO,GAAG,CAAC,aAAa,CAAC;SAC9D,IAAI,CAAC,KAAKA,wBAAgB,CAAC,eAAe;aAAE,OAAO,GAAG,CAAC,qBAAqB,CAAC;SAC7E,IAAI,CAAC,KAAKC,sBAAc,CAAC,IAAI;aAAE,OAAO,GAAG,CAAC,IAAI,CAAC;SAC/C,IAAI,CAAC,KAAKA,sBAAc,CAAC,GAAG;aAAE,OAAO,GAAG,CAAC,GAAG,CAAC;SAC7C,IAAI,CAAC,KAAKA,sBAAc,CAAC,QAAQ;aAAE,OAAO,GAAG,CAAC,SAAS,CAAC;SACxD,IAAI,CAAC,KAAKA,sBAAc,CAAC,gBAAgB;aAAE,OAAO,GAAG,CAAC,mBAAmB,CAAC;SAC1E,IAAI,CAAC,KAAKA,sBAAc,CAAC,QAAQ;aAAE,OAAO,GAAG,CAAC,SAAS,CAAC;SACxD,IAAI,CAAC,KAAKA,sBAAc,CAAC,gBAAgB;aAAE,OAAO,GAAG,CAAC,mBAAmB,CAAC;SAC1E,IAAI,CAAC,KAAKA,sBAAc,CAAC,QAAQ;aAAE,OAAO,GAAG,CAAC,SAAS,CAAC;SACxD,IAAI,CAAC,KAAKA,sBAAc,CAAC,gBAAgB;aAAE,OAAO,GAAG,CAAC,mBAAmB,CAAC;SAC1E,IAAI,CAAC,KAAKA,sBAAc,CAAC,QAAQ;aAAE,OAAO,GAAG,CAAC,SAAS,CAAC;SACxD,IAAI,CAAC,KAAKA,sBAAc,CAAC,gBAAgB;aAAE,OAAO,GAAG,CAAC,mBAAmB,CAAC;SAC1E,IAAI,CAAC,KAAKA,sBAAc,CAAC,gBAAgB;aAAE,OAAO,GAAG,CAAC,kBAAkB,CAAC;SACzE,IAAI,CAAC,KAAKQ,qBAAa,CAAC,aAAa,IAAI,CAAC,KAAKA,qBAAa,CAAC,cAAc;aACzE,CAAC,KAAKA,qBAAa,CAAC,cAAc,IAAI,CAAC,KAAKA,qBAAa,CAAC,cAAc,EAAE;aAC1E,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,+BAA+B,CAAC,CAAC;aACjE,IAAI,SAAS,KAAK,IAAI,EAAE;iBACtB,IAAI,CAAC,KAAKA,qBAAa,CAAC,aAAa;qBAAE,OAAO,SAAS,CAAC,4BAA4B,CAAC;iBACrF,IAAI,CAAC,KAAKA,qBAAa,CAAC,cAAc;qBAAE,OAAO,SAAS,CAAC,6BAA6B,CAAC;iBACvF,IAAI,CAAC,KAAKA,qBAAa,CAAC,cAAc;qBAAE,OAAO,SAAS,CAAC,6BAA6B,CAAC;iBACvF,IAAI,CAAC,KAAKA,qBAAa,CAAC,cAAc;qBAAE,OAAO,SAAS,CAAC,6BAA6B,CAAC;cACxF;UACF;SACD,IAAI,CAAC,KAAKA,qBAAa,CAAC,gBAAgB,IAAI,CAAC,KAAKA,qBAAa,CAAC,gBAAgB;aAC7E,CAAC,KAAKA,qBAAa,CAAC,iBAAiB,IAAI,CAAC,KAAKA,qBAAa,CAAC,iBAAiB,EAAE;aACjF,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,gCAAgC,CAAC,CAAC;aAClE,IAAI,SAAS,KAAK,IAAI,EAAE;iBACtB,IAAI,CAAC,KAAKA,qBAAa,CAAC,gBAAgB;qBAAE,OAAO,SAAS,CAAC,+BAA+B,CAAC;iBAC3F,IAAI,CAAC,KAAKA,qBAAa,CAAC,gBAAgB;qBAAE,OAAO,SAAS,CAAC,+BAA+B,CAAC;iBAC3F,IAAI,CAAC,KAAKA,qBAAa,CAAC,iBAAiB;qBAAE,OAAO,SAAS,CAAC,gCAAgC,CAAC;iBAC7F,IAAI,CAAC,KAAKA,qBAAa,CAAC,iBAAiB;qBAAE,OAAO,SAAS,CAAC,gCAAgC,CAAC;cAC9F;UACF;SACD,IAAI,CAAC,KAAKA,qBAAa,CAAC,QAAQ,EAAE;aAChC,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,+BAA+B,CAAC,CAAC;aACjE,IAAI,SAAS,KAAK,IAAI,EAAE;iBACtB,IAAI,CAAC,KAAKA,qBAAa,CAAC,QAAQ;qBAAE,OAAO,SAAS,CAAC,yBAAyB,CAAC;cAC9E;UACF;SACD,IAAI,CAAC,KAAKT,wBAAgB,CAAC,GAAG,IAAI,CAAC,KAAKA,wBAAgB,CAAC,GAAG,EAAE;aAC5D,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;aACpD,IAAI,SAAS,KAAK,IAAI,EAAE;iBACtB,IAAI,CAAC,KAAKA,wBAAgB,CAAC,GAAG;qBAAE,OAAO,SAAS,CAAC,OAAO,CAAC;iBACzD,IAAI,CAAC,KAAKA,wBAAgB,CAAC,GAAG;qBAAE,OAAO,SAAS,CAAC,OAAO,CAAC;cAC1D;UACF;SACD,IAAI,CAAC,KAAKQ,mBAAW,CAAC,cAAc,EAAE;aACpC,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;aACvD,IAAI,SAAS,KAAK,IAAI;iBAAE,OAAO,SAAS,CAAC,uBAAuB,CAAC;UACpE;SACC,OAAO,CAAC,CAAC;MACV;KACD,6CAAqB,GAArB;SACE,OAAO,CAAC,IAAI,CAAC,8FAA8F,CAAC,CAAC;SAC7G,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;MACjD;KACD,iDAAyB,GAAzB;SACE,OAAO,CAAC,IAAI,CAAC,uGAAuG,CAAC,CAAC;SACtH,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;MACtD;KACD,mDAA2B,GAA3B;SACE,OAAO,CAAC,IAAI,CAAC,2GAA2G,CAAC,CAAC;SAC1H,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,0BAA0B,CAAC,CAAC;MACxD;KACD,qDAA6B,GAA7B;SACE,OAAO,CAAC,IAAI,CAAC,kHAAkH,CAAC,CAAC;SACjI,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,+BAA+B,CAAC,CAAC;MAC7D;KACD,sDAA8B,GAA9B;SACE,OAAO,CAAC,IAAI,CAAC,oHAAoH,CAAC,CAAC;SACnI,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,gCAAgC,CAAC,CAAC;MAC9D;KACD,2CAAmB,GAAnB;SACE,OAAO,CAAC,IAAI,CAAC,2FAA2F,CAAC,CAAC;SAC1G,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;MAChD;KACD,8CAAsB,GAAtB;SACE,OAAO,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC;MACzC;KACD,+CAAuB,GAAvB;SACE,OAAO,CAAC,IAAI,CAAC,qGAAqG,CAAC,CAAC;SACpH,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;MACtD;KACD,yCAAiB,GAAjB,UAAkB,IAAa;SAC7B,OAAO,CAAC,IAAI,CAAC,qEAAqE,CAAC,CAAC;SACpF,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;MAC3B;;;;KAID,oCAAY,GAAZ;SACE,OAAO,CAAC,IAAI,CAAC,wDAAwD,CAAC,CAAC;MACxE;KACD,qCAAa,GAAb;SACE,OAAO,CAAC,IAAI,CAAC,yDAAyD,CAAC,CAAC;MACzE;KACD,uCAAe,GAAf;SACE,OAAO,CAAC,IAAI,CAAC,2DAA2D,CAAC,CAAC;MAC3E;KACD,sBAAI,2CAAgB;cAApB;aACE,OAAO,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC;UAC/B;cACD,UAAqB,KAAc;aACjC,OAAO,CAAC,IAAI,CAAC,mEAAmE,CAAC,CAAC;aAClF,IAAI,CAAC,SAAS,CAAC,OAAO,GAAG,KAAK,CAAC;UAChC;;;QAJA;KAKD,sBAAI,wCAAa;cAAjB;aACE,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;UAC5B;cACD,UAAkB,KAAa;aAC7B,OAAO,CAAC,IAAI,CAAC,6DAA6D,CAAC,CAAC;aAC5E,IAAI,CAAC,SAAS,CAAC,IAAI,GAAG,KAAK,CAAC;UAC7B;;;QAJA;KAKD,sBAAI,4CAAiB;cAArB;aACE,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC;UAChC;cACD,UAAsB,KAAa;aACjC,OAAO,CAAC,IAAI,CAAC,qEAAqE,CAAC,CAAC;aACpF,IAAI,CAAC,SAAS,CAAC,QAAQ,GAAG,KAAK,CAAC;UACjC;;;QAJA;KAKH,oBAAC;CAAD,CAAC;;CC/wDD;;;AAGA;KAA2BQ,yBAAQ;KAKjC;SAAA,YACE,iBAAO,SAER;SAPD,gBAAU,GAAkC,IAAI,CAAC;SACjD,SAAG,GAAkB,IAAI,CAAC;SAC1B,sBAAgB,GAAa,IAAI,CAAC;SAClC,gBAAU,GAAY,IAAI,CAAC;SAGzB,KAAI,CAAC,IAAI,GAAG,OAAO,CAAC;;MACrB;KACD,oBAAI,GAAJ,UAAK,MAAY,EAAE,SAAkB;SACnC,iBAAM,IAAI,YAAC,MAAM,EAAE,SAAS,CAAC,CAAC;SAC9B,IAAI,MAAM,CAAC,UAAU,KAAK,IAAI;aAAE,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;SAC5E,IAAI,MAAM,CAAC,GAAG,KAAK,IAAI;aAAE,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC;SACvD,IAAI,MAAM,CAAC,gBAAgB,KAAK,IAAI;aAAE,IAAI,CAAC,gBAAgB,GAAG,MAAM,CAAC,gBAAgB,CAAC,KAAK,EAAE,CAAC;SAC9F,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC;SACpC,IAAI,CAAC,gBAAgB,GAAG,MAAM,CAAC,gBAAgB,CAAC;SAChD,OAAO,IAAI,CAAC;MACb;KACD,sBAAM,GAAN,UAAO,IAAS;SACd,IAAI,IAAI,GAAG,iBAAM,MAAM,YAAC,IAAI,CAAC,CAAC;SAC9B,IAAI,IAAI,CAAC,UAAU,KAAK,IAAI;aAAE,IAAI,CAAC,MAAM,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;SACpF,IAAI,IAAI,CAAC,GAAG,KAAK,IAAI;aAAE,IAAI,CAAC,MAAM,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;SAC/D,OAAO,IAAI,CAAC;MACb;KACH,YAAC;CAAD,CAxBA,CAA2B,QAAQ;;CCNnC;;;;;AAKA;KAAyBA,uBAAQ;KAE/B;SAAA,YACE,iBAAO,SASR;SARC,KAAI,CAAC,IAAI,GAAG,KAAK,CAAC;SAClB,KAAI,CAAC,MAAM,GAAG,EAAE,CAAC;;;;;;;;MAOlB;KACD,kBAAI,GAAJ,UAAK,MAAY;SACf,iBAAM,IAAI,YAAC,MAAM,EAAE,KAAK,CAAC,CAAC;SAC1B,IAAI,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;SAC3B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAG,EAAE;aAC9C,IAAI,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;aACtB,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,EAAE,KAAK,CAAC,QAAQ,CAAC,CAAC;UACrD;SACD,OAAO,IAAI,CAAC;MACb;KACD,sBAAQ,GAAR,UAAS,MAAgB,EAAE,QAAgB;SACzC,IAAI,QAAQ,KAAK,SAAS;aAAE,QAAQ,GAAG,CAAC,CAAC;SACzC,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;SAC9B,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;SACzB,IAAI,CAAC,CAAC;SACN,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAG,EAAE;aACnC,IAAI,QAAQ,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE;iBACjC,MAAM;cACP;UACF;SACD,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC;SAC5D,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;MAClB;KACD,kCAAoB,GAApB,UAAqB,QAAgB;SACnC,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;SACzB,IAAI,CAAC,EAAE,CAAC,CAAC;SACT,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAG,EAAE;aAC1C,IAAI,QAAQ,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE;iBACjC,MAAM;cACP;UACF;SACD,OAAO,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC;MAC7B;KACD,qBAAO,GAAP,UAAQ,SAAoB,EAAE,UAAuB;SACnD,IAAI,cAAc,GAAG,IAAI,OAAO,EAAE,CAAC;;SAEjC,cAAc,CAAC,qBAAqB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;SACvD,IAAI,QAAQ,GAAG,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC;SAC/D,IAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;SACnE,OAAO,UAAU,CAAC;;MAErB;KACD,oBAAM,GAAN,UAAO,MAAc;SACnB,IAAI,EAAE,GAAG,IAAI,OAAO,EAAE,CAAC;SACvB,IAAI,EAAE,GAAG,IAAI,OAAO,EAAE,CAAC;;SAErB,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;SACzB,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;aACrB,EAAE,CAAC,qBAAqB,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;aAC7C,EAAE,CAAC,qBAAqB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;aAC3C,IAAI,QAAQ,GAAG,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;aACjC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,GAAG,IAAI,CAAC;aAChC,IAAI,CAAC,SAAA,EAAE,CAAC,SAAA,CAAC;aACT,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAG,EAAE;iBAC1C,IAAI,QAAQ,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE;qBAClC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,GAAG,KAAK,CAAC;qBACrC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,GAAG,IAAI,CAAC;kBACjC;sBAAM;qBACL,MAAM;kBACP;cACF;aACD,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,EAAG,EAAE;iBAClB,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,GAAG,KAAK,CAAC;cAClC;UACF;;MAEJ;KACD,oBAAM,GAAN,UAAO,IAAS;SACd,IAAI,IAAI,GAAG,iBAAM,MAAM,YAAC,IAAI,CAAC,CAAC;SAC9B,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,EAAE,CAAC;SACxB,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;SACzB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAG,EAAE;aAC9C,IAAI,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;aACtB,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC;iBACtB,MAAM,EAAE,KAAK,CAAC,MAAM,CAAC,IAAI;iBACzB,QAAQ,EAAE,KAAK,CAAC,QAAQ;cACzB,CAAC,CAAC;UACJ;SACD,OAAO,IAAI,CAAC;MACb;KACD,sBAAI,wBAAO;cAAX;aACE,OAAO,CAAC,IAAI,CAAC,kDAAkD,CAAC,CAAC;aACjE,OAAO,IAAI,CAAC,MAAM,CAAC;UACpB;;;QAAA;KACH,UAAC;CAAD,CAhGA,CAAyB,QAAQ;;CCRjC;;;AAGA;KAA2BA,yBAAQ;KACjC;SAAA,YACE,iBAAO,SAER;SADC,KAAI,CAAC,IAAI,GAAG,OAAO,CAAC;;MACrB;KACH,YAAC;CAAD,CALA,CAA2B,QAAQ;;CCFnC;;;AAGA;KAAkCA,gCAAO;KACvC,sBAAY,KAAuB,EAAE,OAAuB,EAAE,KAAsB,EAAE,KAAsB,EAAE,SAAwB,EAAE,SAAwB,EAAE,MAAqB,EAAE,IAAiB,EAAE,UAAkB;SAA9N,YACE,kBAAM,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,SAAS,EAAE,SAAS,EAAE,MAAM,EAAE,IAAI,EAAE,UAAU,CAAC,SAUpF;SATC,KAAI,CAAC,eAAe,GAAG,KAAK,CAAC;SAC7B,IAAM,KAAK,GAAiB,KAAI,CAAC;SACjC,SAAS,MAAM;aACb,qBAAqB,CAAC,MAAM,CAAC,CAAC;aAC9B,IAAI,KAAK,CAAC,UAAU,IAAI,KAAK,CAAC,iBAAiB,EAAE;iBAC/C,KAAK,CAAC,WAAW,GAAG,IAAI,CAAC;cAC1B;UACF;SACD,MAAM,EAAE,CAAC;;MACV;KACH,mBAAC;CAAD,CAbA,CAAkC,OAAO;;CCHzC;;;AAGA;KAAmCA,iCAAO;KACxC,uBAAY,MAAyB,EAAE,OAAwB,EAAE,KAAuB,EAAE,KAAuB,EAAE,SAAyB,EAAE,SAAyB,EAAE,MAAsB,EAAE,IAAkB,EAAE,UAAmB;SAAxO,YACE,kBAAM,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,SAAS,EAAE,SAAS,EAAE,MAAM,EAAE,IAAI,EAAE,UAAU,CAAC,SAErF;SADC,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC;;MACzB;KACH,oBAAC;CAAD,CALA,CAAmC,OAAO;;CCF1C;;;AAGA;KAAuCA,qCAAc;KACnD,2BAAY,QAAmC;SAA/C,YACE,iBAAO,SAsGR;SArGC,IAAM,IAAI,GAAG,CAAE,CAAC,EAAE,CAAC,CAAE,EAAE,IAAI,GAAG,EAAE,CAAC;SACjC,SAAS,YAAY,CAAC,CAAS,EAAE,CAAS;aACxC,OAAO,CAAC,GAAG,CAAC,CAAC;UACd;SACD,IAAM,IAAI,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;SAC7B,IAAI,QAAQ,IAAI,QAAQ,YAAY,QAAQ,EAAE;aAC5C,IAAM,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC;aACnC,IAAM,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC;aAC7B,IAAI,QAAQ,GAAG,CAAC,CAAC;;aAEjB,IAAM,KAAK,GAAG,IAAI,WAAW,CAAC,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC;aAChD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAG,EAAE;iBAC7C,IAAM,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;iBACtB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAG,EAAE;qBAC3B,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;qBACxB,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;qBAClC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;qBACxB,IAAM,GAAG,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;qBAC5B,IAAI,IAAI,CAAC,GAAG,CAAC,KAAK,SAAS,EAAE;yBAC3B,KAAK,CAAC,CAAC,GAAG,QAAQ,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;yBAC9B,KAAK,CAAC,CAAC,GAAG,QAAQ,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;yBAClC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC;yBACjB,QAAQ,EAAG,CAAC;sBACb;kBACF;cACF;aACD,IAAM,MAAM,GAAG,IAAI,YAAY,CAAC,QAAQ,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;aAClD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAG,EAAE;iBACzC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAG,EAAE;qBAC3B,IAAM,MAAM,GAAG,QAAQ,CAAC,KAAK,CAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;qBAC3C,IAAM,KAAK,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;qBAC5B,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;qBAC7B,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;qBAC7B,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;kBAC9B;cACF;aACD,KAAI,CAAC,YAAY,CAAC,UAAU,EAAE,IAAI,eAAe,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC;UAC/D;cAAM,IAAI,QAAQ,IAAI,QAAQ,YAAY,cAAc,EAAE;aACzD,IAAI,QAAQ,CAAC,KAAK,KAAK,IAAI,EAAE;;iBAE3B,IAAM,OAAO,GAAG,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC;iBACrC,IAAM,QAAQ,GAAoB,QAAQ,CAAC,UAAU,CAAC,QAAQ,CAAC;iBAC/D,IAAM,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC;iBAC/B,IAAI,QAAQ,GAAG,CAAC,CAAC;iBACjB,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;qBACvB,QAAQ,CAAC,QAAQ,CAAC,CAAC,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC;kBACtC;;iBAED,IAAM,KAAK,GAAG,IAAI,WAAW,CAAC,CAAC,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;iBAClD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,EAAG,CAAC,EAAE;qBAChD,IAAM,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;qBACxB,IAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;qBAC1B,IAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;qBAC1B,KAAK,IAAI,CAAC,GAAG,KAAK,EAAE,EAAE,GAAG,KAAK,GAAG,KAAK,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,IAAI,CAAC,EAAE;yBACtD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAG,EAAE;6BAC3B,IAAI,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;6BACzB,IAAI,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;6BACnC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;6BACxB,IAAM,GAAG,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;6BAC5B,IAAI,IAAI,CAAC,GAAG,CAAC,KAAK,SAAS,EAAE;iCAC3B,KAAK,CAAC,CAAC,GAAG,QAAQ,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;iCAC9B,KAAK,CAAC,CAAC,GAAG,QAAQ,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;iCAClC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC;iCACjB,QAAQ,EAAG,CAAC;8BACb;0BACF;sBACF;kBACF;iBACD,IAAM,MAAM,GAAG,IAAI,YAAY,CAAC,QAAQ,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;iBAClD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAG,EAAE;qBACzC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAG,EAAE;yBAC3B,IAAM,KAAK,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;yBAC5B,IAAM,MAAM,GAAG,KAAK,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;yBAChC,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;yBAC1C,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;yBAC1C,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;sBAC3C;kBACF;iBACD,KAAI,CAAC,YAAY,CAAC,UAAU,EAAE,IAAI,eAAe,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC;cAC/D;kBAAM;;iBAEL,IAAM,QAAQ,GAAG,QAAQ,CAAC,UAAU,CAAC,QAAQ,CAAC,KAAK,CAAC;iBACpD,IAAM,QAAQ,GAAG,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC;iBACrC,IAAM,OAAO,GAAG,QAAQ,GAAG,CAAC,CAAC;iBAC7B,IAAM,MAAM,GAAG,IAAI,YAAY,CAAC,QAAQ,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;iBAClD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAG,EAAE;qBACxC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAG,EAAE;yBAC3B,IAAM,KAAK,GAAG,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;yBAC7B,IAAM,MAAM,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;yBAC7B,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC;yBACrC,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;yBACzC,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;yBACzC,IAAM,MAAM,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;yBACzC,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC;yBACrC,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;yBACzC,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;sBAC1C;kBACF;iBACD,KAAI,CAAC,YAAY,CAAC,UAAU,EAAE,IAAI,eAAe,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC;cAC/D;UACF;;MACF;KACH,wBAAC;CAAD,CAzGA,CAAuC,cAAc;;CCJrD;;;;;;AAMA;KAA8CA,4CAAc;KAC1D,kCAAY,IAAI,EAAE,MAAM,EAAE,MAAM;SAAhC,YACE,iBAAO,SA0CR;SAzCC,KAAI,CAAC,IAAI,GAAG,0BAA0B,CAAC;SACvC,KAAI,CAAC,UAAU,GAAG;aAChB,IAAI,EAAE,IAAI;aACV,MAAM,EAAE,MAAM;aACd,MAAM,EAAE,MAAM;UACf,CAAC;;SAEF,IAAI,QAAQ,GAAG,EAAE,CAAC;SAClB,IAAI,GAAG,GAAG,EAAE,CAAC;SACb,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;SACZ,IAAI,CAAC,EAAE,CAAC,CAAC;SACT,IAAI,UAAU,GAAG,MAAM,GAAG,CAAC,CAAC;SAC5B,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,MAAM,EAAE,CAAC,EAAG,EAAE;aAC7B,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC;aACf,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,MAAM,EAAE,CAAC,EAAG,EAAE;iBAC7B,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC;iBACf,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;iBACf,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;iBAC7B,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;cAChB;UACF;;SAED,IAAI,OAAO,GAAG,EAAE,CAAC;SACjB,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;SACf,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAG,EAAE;aAC5B,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAG,EAAE;iBAC5B,CAAC,GAAG,CAAC,GAAG,UAAU,GAAG,CAAC,CAAC;iBACvB,CAAC,GAAG,CAAC,GAAG,UAAU,GAAG,CAAC,GAAG,CAAC,CAAC;iBAC3B,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,UAAU,GAAG,CAAC,GAAG,CAAC,CAAC;iBACjC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,UAAU,GAAG,CAAC,CAAC;;iBAE7B,OAAO,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;iBACtB,OAAO,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;cACvB;UACF;;SAED,KAAI,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,MAAM,GAAG,KAAK,GAAG,eAAe,GAAG,eAAe,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC,CAAC;SACxF,KAAI,CAAC,YAAY,CAAC,UAAU,EAAE,gBAAgB,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC;SAC7D,KAAI,CAAC,YAAY,CAAC,IAAI,EAAE,gBAAgB,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;;SAElD,KAAI,CAAC,oBAAoB,EAAE,CAAC;;MAC7B;KACH,+BAAC;CAAD,CA7CA,CAA8C,cAAc;;CCN5D;;;;;;AAMA;KAAwCA,sCAAQ;KAC9C,4BAAY,IAAI,EAAE,MAAM,EAAE,MAAM;SAAhC,YACE,iBAAO,SASR;SARC,KAAI,CAAC,IAAI,GAAG,oBAAoB,CAAC;SACjC,KAAI,CAAC,UAAU,GAAG;aAChB,IAAI,EAAE,IAAI;aACV,MAAM,EAAE,MAAM;aACd,MAAM,EAAE,MAAM;UACf,CAAC;SACF,KAAI,CAAC,kBAAkB,CAAC,IAAI,wBAAwB,CAAC,IAAI,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC;SAC5E,KAAI,CAAC,aAAa,EAAE,CAAC;;MACtB;KACH,yBAAC;CAAD,CAZA,CAAwC,QAAQ;;CCHhD;;;AAGA;KAA8CA,4CAAc;KAC1D,kCAAY,QAAQ,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM;SAA7C,YACE,iBAAO,SAqKR;SApKC,KAAI,CAAC,IAAI,GAAG,0BAA0B,CAAC;SACvC,KAAI,CAAC,UAAU,GAAG;aAChB,QAAQ,EAAE,QAAQ;aAClB,OAAO,EAAE,OAAO;aAChB,MAAM,EAAE,MAAM;aACd,MAAM,EAAE,MAAM;UACf,CAAC;SACF,MAAM,GAAG,MAAM,IAAI,CAAC,CAAC;SACrB,MAAM,GAAG,MAAM,IAAI,CAAC,CAAC;;SAErB,IAAI,YAAY,GAAG,EAAE,CAAC;SACtB,IAAI,QAAQ,GAAG,EAAE,CAAC;;SAElB,SAAS,CAAC,MAAM,CAAC,CAAC;;SAElB,YAAY,CAAC,MAAM,CAAC,CAAC;;SAErB,WAAW,EAAE,CAAC;;SAEd,KAAI,CAAC,YAAY,CAAC,UAAU,EAAE,gBAAgB,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC,CAAC;SACjE,KAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,gBAAgB,CAAC,YAAY,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;SACvE,KAAI,CAAC,YAAY,CAAC,IAAI,EAAE,gBAAgB,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC;SACvD,KAAI,CAAC,gBAAgB,EAAE,CAAC;SACxB,KAAI,CAAC,cAAc,GAAG,IAAI,MAAM,CAAC,IAAI,OAAO,EAAE,EAAE,MAAM,CAAC,CAAC;;SAExD,SAAS,SAAS,CAAC,MAAM;aACvB,IAAI,CAAC,GAAG,IAAI,OAAO,EAAE,CAAC;aACtB,IAAI,CAAC,GAAG,IAAI,OAAO,EAAE,CAAC;aACtB,IAAI,CAAC,GAAG,IAAI,OAAO,EAAE,CAAC;;aAEtB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;;iBAE1C,gBAAgB,CAAC,OAAO,CAAE,CAAC,GAAG,CAAC,CAAE,EAAE,CAAC,CAAC,CAAC;iBACtC,gBAAgB,CAAC,OAAO,CAAE,CAAC,GAAG,CAAC,CAAE,EAAE,CAAC,CAAC,CAAC;iBACtC,gBAAgB,CAAC,OAAO,CAAE,CAAC,GAAG,CAAC,CAAE,EAAE,CAAC,CAAC,CAAC;;iBAEtC,aAAa,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC,CAAC;cAChC;UACF;SACD,SAAS,aAAa,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,MAAM;aACpC,IAAI,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;;aAE/B,IAAI,CAAC,GAAG,EAAE,CAAC;aACX,IAAI,CAAC,EAAE,CAAC,CAAC;;aAET,KAAK,CAAC,GAAG,CAAC,EAAG,CAAC,IAAI,IAAI,EAAE,CAAC,EAAG,EAAE;iBAC5B,CAAC,CAAE,CAAC,CAAE,GAAG,EAAE,CAAC;iBACZ,IAAI,EAAE,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC;iBACrC,IAAI,EAAE,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC;iBACrC,IAAI,IAAI,GAAG,IAAI,GAAG,CAAC,CAAC;iBACpB,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,IAAI,EAAE,CAAC,EAAG,EAAE;qBAC3B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,IAAI,EAAE;yBACzB,CAAC,CAAE,CAAC,CAAE,CAAE,CAAC,CAAE,GAAG,EAAE,CAAC;sBAClB;0BAAM;yBACL,CAAC,CAAE,CAAC,CAAE,CAAE,CAAC,CAAE,GAAG,EAAE,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC;sBAC7C;kBACF;cACF;;aAED,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,EAAG,CAAC,EAAG,EAAE;iBAC3B,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAG,EAAE;qBACxC,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;qBAC1B,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;yBACf,UAAU,CAAC,CAAC,CAAE,CAAC,CAAE,CAAE,CAAC,GAAG,CAAC,CAAE,CAAC,CAAC;yBAC5B,UAAU,CAAC,CAAC,CAAE,CAAC,GAAG,CAAC,CAAE,CAAE,CAAC,CAAE,CAAC,CAAC;yBAC5B,UAAU,CAAC,CAAC,CAAE,CAAC,CAAE,CAAE,CAAC,CAAE,CAAC,CAAC;sBACzB;0BAAM;yBACL,UAAU,CAAC,CAAC,CAAE,CAAC,CAAE,CAAE,CAAC,GAAG,CAAC,CAAE,CAAC,CAAC;yBAC5B,UAAU,CAAC,CAAC,CAAE,CAAC,GAAG,CAAC,CAAE,CAAE,CAAC,GAAG,CAAC,CAAE,CAAC,CAAC;yBAChC,UAAU,CAAC,CAAC,CAAE,CAAC,GAAG,CAAC,CAAE,CAAE,CAAC,CAAE,CAAC,CAAC;sBAC7B;kBACF;cACF;UACF;SACD,SAAS,YAAY,CAAC,MAAM;aAC1B,IAAI,MAAM,GAAG,IAAI,OAAO,EAAE,CAAC;;aAE3B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,YAAY,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;iBAC/C,MAAM,CAAC,CAAC,GAAG,YAAY,CAAE,CAAC,GAAG,CAAC,CAAE,CAAC;iBACjC,MAAM,CAAC,CAAC,GAAG,YAAY,CAAE,CAAC,GAAG,CAAC,CAAE,CAAC;iBACjC,MAAM,CAAC,CAAC,GAAG,YAAY,CAAE,CAAC,GAAG,CAAC,CAAE,CAAC;iBACjC,MAAM,CAAC,SAAS,EAAE,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;iBAC1C,YAAY,CAAE,CAAC,GAAG,CAAC,CAAE,GAAG,MAAM,CAAC,CAAC,CAAC;iBACjC,YAAY,CAAE,CAAC,GAAG,CAAC,CAAE,GAAG,MAAM,CAAC,CAAC,CAAC;iBACjC,YAAY,CAAE,CAAC,GAAG,CAAC,CAAE,GAAG,MAAM,CAAC,CAAC,CAAC;cAClC;UACF;SACD,SAAS,WAAW;aAClB,IAAI,MAAM,GAAG,IAAI,OAAO,EAAE,CAAC;aAC3B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,YAAY,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;iBAC/C,MAAM,CAAC,CAAC,GAAG,YAAY,CAAE,CAAC,GAAG,CAAC,CAAE,CAAC;iBACjC,MAAM,CAAC,CAAC,GAAG,YAAY,CAAE,CAAC,GAAG,CAAC,CAAE,CAAC;iBACjC,MAAM,CAAC,CAAC,GAAG,YAAY,CAAE,CAAC,GAAG,CAAC,CAAE,CAAC;iBACjC,IAAI,CAAC,GAAG,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC;iBAC5C,IAAI,CAAC,GAAG,WAAW,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC;iBAC5C,QAAQ,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;cACzB;aACD,UAAU,EAAE,CAAC;aACb,WAAW,EAAE,CAAC;UACf;SACD,SAAS,WAAW;;aAElB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;;iBAE3C,IAAI,EAAE,GAAG,QAAQ,CAAE,CAAC,GAAG,CAAC,CAAE,CAAC;iBAC3B,IAAI,EAAE,GAAG,QAAQ,CAAE,CAAC,GAAG,CAAC,CAAE,CAAC;iBAC3B,IAAI,EAAE,GAAG,QAAQ,CAAE,CAAC,GAAG,CAAC,CAAE,CAAC;iBAC3B,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;iBAC/B,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;;iBAE/B,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,EAAE;qBAC1B,IAAI,EAAE,GAAG,GAAG;yBAAE,QAAQ,CAAE,CAAC,GAAG,CAAC,CAAE,IAAI,CAAC,CAAC;qBACrC,IAAI,EAAE,GAAG,GAAG;yBAAE,QAAQ,CAAE,CAAC,GAAG,CAAC,CAAE,IAAI,CAAC,CAAC;qBACrC,IAAI,EAAE,GAAG,GAAG;yBAAE,QAAQ,CAAE,CAAC,GAAG,CAAC,CAAE,IAAI,CAAC,CAAC;kBACtC;cACF;UACF;SACD,SAAS,UAAU,CAAC,MAAM;aACxB,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC;UACjD;SACD,SAAS,gBAAgB,CAAC,KAAK,EAAE,MAAM;aACrC,IAAI,MAAM,GAAG,KAAK,GAAG,CAAC,CAAC;aACvB,MAAM,CAAC,CAAC,GAAG,QAAQ,CAAE,MAAM,GAAG,CAAC,CAAE,CAAC;aAClC,MAAM,CAAC,CAAC,GAAG,QAAQ,CAAE,MAAM,GAAG,CAAC,CAAE,CAAC;aAClC,MAAM,CAAC,CAAC,GAAG,QAAQ,CAAE,MAAM,GAAG,CAAC,CAAE,CAAC;UACnC;SACD,SAAS,UAAU;aACjB,IAAI,CAAC,GAAG,IAAI,OAAO,EAAE,CAAC;aACtB,IAAI,CAAC,GAAG,IAAI,OAAO,EAAE,CAAC;aACtB,IAAI,CAAC,GAAG,IAAI,OAAO,EAAE,CAAC;aACtB,IAAI,QAAQ,GAAG,IAAI,OAAO,EAAE,CAAC;aAC7B,IAAI,GAAG,GAAG,IAAI,OAAO,EAAE,CAAC;aACxB,IAAI,GAAG,GAAG,IAAI,OAAO,EAAE,CAAC;aACxB,IAAI,GAAG,GAAG,IAAI,OAAO,EAAE,CAAC;aACxB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,YAAY,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE;iBAC9D,CAAC,CAAC,GAAG,CAAC,YAAY,CAAE,CAAC,GAAG,CAAC,CAAE,EAAE,YAAY,CAAE,CAAC,GAAG,CAAC,CAAE,EAAE,YAAY,CAAE,CAAC,GAAG,CAAC,CAAE,CAAC,CAAC;iBAC3E,CAAC,CAAC,GAAG,CAAC,YAAY,CAAE,CAAC,GAAG,CAAC,CAAE,EAAE,YAAY,CAAE,CAAC,GAAG,CAAC,CAAE,EAAE,YAAY,CAAE,CAAC,GAAG,CAAC,CAAE,CAAC,CAAC;iBAC3E,CAAC,CAAC,GAAG,CAAC,YAAY,CAAE,CAAC,GAAG,CAAC,CAAE,EAAE,YAAY,CAAE,CAAC,GAAG,CAAC,CAAE,EAAE,YAAY,CAAE,CAAC,GAAG,CAAC,CAAE,CAAC,CAAC;iBAC3E,GAAG,CAAC,GAAG,CAAC,QAAQ,CAAE,CAAC,GAAG,CAAC,CAAE,EAAE,QAAQ,CAAE,CAAC,GAAG,CAAC,CAAE,CAAC,CAAC;iBAC9C,GAAG,CAAC,GAAG,CAAC,QAAQ,CAAE,CAAC,GAAG,CAAC,CAAE,EAAE,QAAQ,CAAE,CAAC,GAAG,CAAC,CAAE,CAAC,CAAC;iBAC9C,GAAG,CAAC,GAAG,CAAC,QAAQ,CAAE,CAAC,GAAG,CAAC,CAAE,EAAE,QAAQ,CAAE,CAAC,GAAG,CAAC,CAAE,CAAC,CAAC;iBAC9C,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;iBAC/C,IAAI,GAAG,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;iBAC5B,SAAS,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;iBAC9B,SAAS,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;iBAC9B,SAAS,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;cAC/B;UACF;SACD,SAAS,SAAS,CAAC,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO;aAC5C,IAAI,CAAC,OAAO,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE;iBACjC,QAAQ,CAAE,MAAM,CAAE,GAAI,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC;cAChC;aACD,IAAI,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,MAAM,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE;iBACxC,QAAQ,CAAE,MAAM,CAAE,GAAG,OAAO,GAAG,CAAC,GAAG,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC;cAClD;UACF;;SAED,SAAS,OAAO,CAAC,MAAM;aACrB,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,CAAE,MAAM,CAAC,CAAC,CAAC,CAAC;UACzC;;SAED,SAAS,WAAW,CAAC,MAAM;aACzB,OAAO,IAAI,CAAC,KAAK,CAAC,CAAE,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,KAAK,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACzF;;MACF;KACH,+BAAC;CAAD,CAxKA,CAA8C,cAAc;;CCP5D;;;AAGA;KAA+CA,6CAAwB;KACrE,mCAAY,MAAM,EAAE,MAAM;SAA1B,iBAaC;SAZC,IAAI,QAAQ,GAAG;aACb,CAAC,EAAG,CAAC,EAAG,CAAC,EAAI,CAAE,CAAC,EAAE,CAAE,CAAC,EAAG,CAAC,EAAI,CAAE,CAAC,EAAG,CAAC,EAAE,CAAE,CAAC,EAAK,CAAC,EAAE,CAAE,CAAC,EAAE,CAAE,CAAC;UAC1D,CAAC;SACF,IAAI,OAAO,GAAG;aACZ,CAAC,EAAG,CAAC,EAAG,CAAC,EAAK,CAAC,EAAG,CAAC,EAAG,CAAC,EAAK,CAAC,EAAG,CAAC,EAAG,CAAC,EAAK,CAAC,EAAG,CAAC,EAAG,CAAC;UACpD,CAAC;SACF,QAAA,kBAAM,QAAQ,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,CAAC,SAAC;SACzC,KAAI,CAAC,IAAI,GAAG,2BAA2B,CAAC;SACxC,KAAI,CAAC,UAAU,GAAG;aAChB,MAAM,EAAE,MAAM;aACd,MAAM,EAAE,MAAM;UACf,CAAC;;MACH;KACH,gCAAC;CAAD,CAfA,CAA+C,wBAAwB;;CCFvE;;;AAGA;KAAyCA,uCAAQ;KAC/C,6BAAY,MAAc,EAAE,MAAc;SAA1C,YACE,iBAAO,SAQR;SAPC,KAAI,CAAC,IAAI,GAAG,qBAAqB,CAAC;SAClC,KAAI,CAAC,UAAU,GAAG;aAChB,MAAM,EAAE,MAAM;aACd,MAAM,EAAE,MAAM;UACf,CAAC;SACF,KAAI,CAAC,kBAAkB,CAAC,IAAI,yBAAyB,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC;SACvE,KAAI,CAAC,aAAa,EAAE,CAAC;;MACtB;KACH,0BAAC;CAAD,CAXA,CAAyC,QAAQ;;CCJjD;;;AAGA;KAA8CA,4CAAwB;KACpE,kCAAY,MAAM,EAAE,MAAM;SAA1B,iBAaC;SAZC,IAAI,QAAQ,GAAG;aACb,CAAC,EAAE,CAAC,EAAE,CAAC,EAAI,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAK,CAAC,EAAE,CAAC,EAAE,CAAC,EAAK,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,EAAK,CAAC,EAAE,CAAC,EAAE,CAAC,EAAK,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;UACzE,CAAC;SACF,IAAI,OAAO,GAAG;aACZ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAK,CAAC,EAAE,CAAC,EAAE,CAAC,EAAK,CAAC,EAAE,CAAC,EAAE,CAAC,EAAK,CAAC,EAAE,CAAC,EAAE,CAAC,EAAK,CAAC,EAAE,CAAC,EAAE,CAAC,EAAK,CAAC,EAAE,CAAC,EAAE,CAAC,EAAK,CAAC,EAAE,CAAC,EAAE,CAAC,EAAK,CAAC,EAAE,CAAC,EAAE,CAAC;UAC5F,CAAC;SACF,QAAA,kBAAM,QAAQ,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,CAAC,SAAC;SACzC,KAAI,CAAC,IAAI,GAAG,0BAA0B,CAAC;SACvC,KAAI,CAAC,UAAU,GAAG;aAChB,MAAM,EAAE,MAAM;aACd,MAAM,EAAE,MAAM;UACf,CAAC;;MACH;KACH,+BAAC;CAAD,CAfA,CAA8C,wBAAwB;;CCFtE;;;AAGA;KAAwCA,sCAAQ;KAC9C,4BAAY,MAAc,EAAE,MAAc;SAA1C,YACE,iBAAO,SAQR;SAPC,KAAI,CAAC,IAAI,GAAG,oBAAoB,CAAC;SACjC,KAAI,CAAC,UAAU,GAAG;aAChB,MAAM,EAAE,MAAM;aACd,MAAM,EAAE,MAAM;UACf,CAAC;SACF,KAAI,CAAC,kBAAkB,CAAC,IAAI,wBAAwB,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC;SACtE,KAAI,CAAC,aAAa,EAAE,CAAC;;MACtB;KACH,yBAAC;CAAD,CAXA,CAAwC,QAAQ;;CCJhD;;;AAGA;KAA+CA,6CAAwB;KACrE,mCAAY,MAAM,EAAE,MAAM;SAA1B,iBAmBC;SAlBC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;SAC/B,IAAI,QAAQ,GAAG;aACb,CAAE,CAAC,EAAG,CAAC,EAAG,CAAC,EAAK,CAAC,EAAG,CAAC,EAAG,CAAC,EAAI,CAAE,CAAC,EAAE,CAAE,CAAC,EAAG,CAAC,EAAK,CAAC,EAAE,CAAE,CAAC,EAAG,CAAC;aACvD,CAAC,EAAE,CAAE,CAAC,EAAG,CAAC,EAAK,CAAC,EAAG,CAAC,EAAG,CAAC,EAAK,CAAC,EAAE,CAAE,CAAC,EAAE,CAAE,CAAC,EAAK,CAAC,EAAG,CAAC,EAAE,CAAE,CAAC;aACvD,CAAC,EAAG,CAAC,EAAE,CAAE,CAAC,EAAK,CAAC,EAAG,CAAC,EAAG,CAAC,EAAI,CAAE,CAAC,EAAG,CAAC,EAAE,CAAE,CAAC,EAAI,CAAE,CAAC,EAAG,CAAC,EAAG,CAAC;UACzD,CAAC;SACF,IAAI,OAAO,GAAG;aACX,CAAC,EAAE,EAAE,EAAG,CAAC,EAAK,CAAC,EAAG,CAAC,EAAG,CAAC,EAAK,CAAC,EAAG,CAAC,EAAG,CAAC,EAAK,CAAC,EAAG,CAAC,EAAE,EAAE,EAAK,CAAC,EAAE,EAAE,EAAE,EAAE;aACjE,CAAC,EAAG,CAAC,EAAG,CAAC,EAAK,CAAC,EAAE,EAAE,EAAG,CAAC,EAAI,EAAE,EAAE,EAAE,EAAG,CAAC,EAAI,EAAE,EAAG,CAAC,EAAG,CAAC,EAAK,CAAC,EAAG,CAAC,EAAG,CAAC;aACjE,CAAC,EAAG,CAAC,EAAG,CAAC,EAAK,CAAC,EAAG,CAAC,EAAG,CAAC,EAAK,CAAC,EAAG,CAAC,EAAG,CAAC,EAAK,CAAC,EAAG,CAAC,EAAG,CAAC,EAAK,CAAC,EAAG,CAAC,EAAG,CAAC;aACjE,CAAC,EAAG,CAAC,EAAG,CAAC,EAAK,CAAC,EAAG,CAAC,EAAE,EAAE,EAAK,CAAC,EAAG,CAAC,EAAE,EAAE,EAAK,CAAC,EAAG,CAAC,EAAG,CAAC,EAAK,CAAC,EAAG,CAAC,EAAG,CAAC;UACnE,CAAC;SACF,QAAA,kBAAM,QAAQ,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,CAAC,SAAC;SACzC,KAAI,CAAC,IAAI,GAAG,2BAA2B,CAAC;SACxC,KAAI,CAAC,UAAU,GAAG;aAChB,MAAM,EAAE,MAAM;aACd,MAAM,EAAE,MAAM;UACf,CAAC;;MACH;KACH,gCAAC;CAAD,CArBA,CAA+C,wBAAwB;;CCFvE;;;AAGA;KAAyCA,uCAAQ;KAC/C,6BAAY,MAAc,EAAE,MAAc;SAA1C,YACE,iBAAO,SAQR;SAPC,KAAI,CAAC,IAAI,GAAG,qBAAqB,CAAC;SAClC,KAAI,CAAC,UAAU,GAAG;aAChB,MAAM,EAAE,MAAM;aACd,MAAM,EAAE,MAAM;UACf,CAAC;SACF,KAAI,CAAC,kBAAkB,CAAC,IAAI,yBAAyB,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC;SACvE,KAAI,CAAC,aAAa,EAAE,CAAC;;MACtB;KACH,0BAAC;CAAD,CAXA,CAAyC,QAAQ;;CCJjD;;;AAGA;KAAgDA,8CAAwB;KACtE,oCAAY,MAAM,EAAE,MAAM;SAA1B,iBAuCC;SAtCC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;SAC/B,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;SACd,IAAI,QAAQ,GAAG;;aAEb,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAE,CAAC,EAAK,CAAE,CAAC,EAAE,CAAE,CAAC,EAAG,CAAC;aAC9B,CAAE,CAAC,EAAG,CAAC,EAAE,CAAE,CAAC,EAAK,CAAE,CAAC,EAAG,CAAC,EAAG,CAAC;aAC3B,CAAC,EAAE,CAAE,CAAC,EAAE,CAAE,CAAC,EAAM,CAAC,EAAE,CAAE,CAAC,EAAG,CAAC;aAC3B,CAAC,EAAG,CAAC,EAAE,CAAE,CAAC,EAAM,CAAC,EAAG,CAAC,EAAG,CAAC;;aAEzB,CAAC,EAAE,CAAE,CAAC,EAAE,CAAE,CAAC,EAAM,CAAC,EAAE,CAAE,CAAC,EAAG,CAAC;aAC3B,CAAC,EAAG,CAAC,EAAE,CAAE,CAAC,EAAM,CAAC,EAAG,CAAC,EAAG,CAAC;;aAE1B,CAAE,CAAC,EAAE,CAAE,CAAC,EAAG,CAAC,EAAK,CAAE,CAAC,EAAG,CAAC,EAAG,CAAC;aAC3B,CAAC,EAAE,CAAE,CAAC,EAAG,CAAC,EAAM,CAAC,EAAG,CAAC,EAAG,CAAC;;aAE1B,CAAE,CAAC,EAAG,CAAC,EAAE,CAAE,CAAC,EAAM,CAAC,EAAG,CAAC,EAAE,CAAE,CAAC;aAC5B,CAAE,CAAC,EAAG,CAAC,EAAG,CAAC,EAAM,CAAC,EAAG,CAAC,EAAG,CAAC;UAC3B,CAAC;SACF,IAAI,OAAO,GAAG;aACX,CAAC,EAAE,EAAE,EAAG,CAAC,EAAO,CAAC,EAAG,CAAC,EAAE,EAAE,EAAO,CAAC,EAAE,EAAE,EAAE,EAAE;aACzC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAO,CAAC,EAAE,EAAE,EAAG,CAAC,EAAO,CAAC,EAAG,CAAC,EAAE,EAAE;aAC1C,EAAE,EAAG,CAAC,EAAG,CAAC,EAAM,EAAE,EAAG,CAAC,EAAE,EAAE,EAAM,EAAE,EAAE,EAAE,EAAG,CAAC;aACzC,CAAC,EAAG,CAAC,EAAE,EAAE,EAAO,CAAC,EAAE,EAAE,EAAG,CAAC,EAAO,CAAC,EAAG,CAAC,EAAE,EAAE;aACzC,CAAC,EAAE,EAAE,EAAG,CAAC,EAAO,CAAC,EAAG,CAAC,EAAE,EAAE,EAAO,CAAC,EAAE,EAAE,EAAE,EAAE;aACzC,CAAC,EAAE,EAAE,EAAG,CAAC,EAAO,CAAC,EAAG,CAAC,EAAE,EAAE,EAAO,CAAC,EAAE,EAAE,EAAE,EAAE;aACzC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAO,CAAC,EAAE,EAAE,EAAG,CAAC,EAAO,CAAC,EAAG,CAAC,EAAE,EAAE;aAC1C,EAAE,EAAG,CAAC,EAAG,CAAC,EAAM,EAAE,EAAG,CAAC,EAAE,EAAE,EAAM,EAAE,EAAE,EAAE,EAAG,CAAC;aACzC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAO,CAAC,EAAE,EAAE,EAAG,CAAC,EAAO,CAAC,EAAG,CAAC,EAAG,CAAC;aAC1C,EAAE,EAAG,CAAC,EAAG,CAAC,EAAM,EAAE,EAAG,CAAC,EAAE,EAAE,EAAM,EAAE,EAAE,EAAE,EAAG,CAAC;aAC1C,EAAE,EAAG,CAAC,EAAE,EAAE,EAAM,EAAE,EAAE,EAAE,EAAG,CAAC,EAAM,EAAE,EAAG,CAAC,EAAE,EAAE;aACzC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAO,CAAC,EAAE,EAAE,EAAG,CAAC,EAAO,CAAC,EAAG,CAAC,EAAG,CAAC;UAC3C,CAAC;SACF,QAAA,kBAAM,QAAQ,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,CAAC,SAAC;SACzC,KAAI,CAAC,IAAI,GAAG,4BAA4B,CAAC;SACzC,KAAI,CAAC,UAAU,GAAG;aAChB,MAAM,EAAE,MAAM;aACd,MAAM,EAAE,MAAM;UACf,CAAC;;MACH;KACH,iCAAC;CAAD,CAzCA,CAAgD,wBAAwB;;CCFxE;;;AAGA;KAA0CA,wCAAQ;KAChD,8BAAY,MAAc,EAAE,MAAc;SAA1C,YACE,iBAAO,SAQR;SAPC,KAAI,CAAC,IAAI,GAAG,sBAAsB,CAAC;SACnC,KAAI,CAAC,UAAU,GAAG;aAChB,MAAM,EAAE,MAAM;aACd,MAAM,EAAE,MAAM;UACf,CAAC;SACF,KAAI,CAAC,kBAAkB,CAAC,IAAI,0BAA0B,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC;SACxE,KAAI,CAAC,aAAa,EAAE,CAAC;;MACtB;KACH,2BAAC;CAAD,CAXA,CAA0C,QAAQ;;CCHlD;;;;;CAKA,SAAS,kBAAkB,CAAC,QAAQ,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM;KAC3D,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KACpB,IAAI,CAAC,IAAI,GAAG,oBAAoB,CAAC;KACjC,IAAI,CAAC,UAAU,GAAG;SAChB,QAAQ,EAAE,QAAQ;SAClB,OAAO,EAAE,OAAO;SAChB,MAAM,EAAE,MAAM;SACd,MAAM,EAAE,MAAM;MACf,CAAC;KACF,IAAI,CAAC,kBAAkB,CAAC,IAAI,wBAAwB,CAAC,QAAQ,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC;KACzF,IAAI,CAAC,aAAa,EAAE,CAAC;CACvB,CAAC;CACD,kBAAkB,CAAC,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;CACjE,kBAAkB,CAAC,SAAS,CAAC,WAAW,GAAG,kBAAkB,CAAC;;CCf9D;;;;;;AAMA;KAAwCA,sCAAc;KAIpD,4BAAY,IAAoB,EAAE,eAAuB,EAAE,MAAc,EAAE,cAAsB,EAAE,MAAe;SAAlH,YACE,iBAAO,SAgGR;SA/FC,KAAI,CAAC,IAAI,GAAG,oBAAoB,CAAC;SACjC,KAAI,CAAC,UAAU,GAAG;aAChB,IAAI,EAAE,IAAI;aACV,eAAe,EAAE,eAAe;aAChC,MAAM,EAAE,MAAM;aACd,cAAc,EAAE,cAAc;aAC9B,MAAM,EAAE,MAAM;UACf,CAAC;SACF,eAAe,GAAG,eAAe,IAAI,EAAE,CAAC;SACxC,MAAM,GAAG,MAAM,IAAI,CAAC,CAAC;SACrB,cAAc,GAAG,cAAc,IAAI,CAAC,CAAC;SACrC,MAAM,GAAG,MAAM,IAAI,KAAK,CAAC;SACzB,IAAI,MAAM,GAAG,IAAI,CAAC,mBAAmB,CAAC,eAAe,EAAE,MAAM,CAAC,CAAC;;SAE/D,KAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;SAChC,KAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;SAC9B,KAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;;SAElC,IAAI,MAAM,GAAG,IAAI,OAAO,EAAE,CAAC;SAC3B,IAAI,MAAM,GAAG,IAAI,OAAO,EAAE,CAAC;SAC3B,IAAI,EAAE,GAAG,IAAI,OAAO,EAAE,CAAC;;SAEvB,IAAI,QAAQ,GAAG,EAAE,CAAC;SAClB,IAAI,OAAO,GAAG,EAAE,CAAC;SACjB,IAAI,GAAG,GAAG,EAAE,CAAC;SACb,IAAI,OAAO,GAAG,EAAE,CAAC;;SAEjB,kBAAkB,EAAE,CAAC;;SAErB,KAAI,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,MAAM,GAAG,KAAK,GAAG,eAAe,GAAG,eAAe,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC,CAAC;SACxF,KAAI,CAAC,YAAY,CAAC,UAAU,EAAE,gBAAgB,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC;SAC7D,KAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,gBAAgB,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,CAAC;SAC1D,KAAI,CAAC,YAAY,CAAC,IAAI,EAAE,gBAAgB,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;;SAElD,SAAS,kBAAkB;aACzB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,eAAe,EAAE,CAAC,EAAG,EAAE;iBACzC,eAAe,CAAC,CAAC,CAAC,CAAC;cACpB;;;;;aAKD,eAAe,CAAC,CAAC,MAAM,KAAK,KAAK,IAAI,eAAe,GAAG,CAAC,CAAC,CAAC;;;aAG1D,WAAW,EAAE,CAAC;;aAEd,eAAe,EAAE,CAAC;UACnB;SACD,SAAS,eAAe,CAAC,CAAC;;aAExB,IAAI,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,GAAG,eAAe,CAAC,CAAC;;aAE7C,IAAI,CAAC,GAAG,MAAM,CAAC,OAAO,CAAE,CAAC,CAAE,CAAC;aAC5B,IAAI,CAAC,GAAG,MAAM,CAAC,SAAS,CAAE,CAAC,CAAE,CAAC;;aAE9B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,cAAc,EAAE,CAAC,EAAG,EAAE;iBACzC,IAAI,CAAC,GAAG,CAAC,GAAG,cAAc,GAAG,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;iBACzC,IAAI,GAAG,GAAK,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;iBACxB,IAAI,GAAG,GAAG,CAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;;iBAExB,MAAM,CAAC,CAAC,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;iBACnC,MAAM,CAAC,CAAC,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;iBACnC,MAAM,CAAC,CAAC,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;iBACnC,MAAM,CAAC,SAAS,EAAE,CAAC;iBACnB,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC;;iBAE3C,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,MAAM,GAAG,MAAM,CAAC,CAAC,CAAC;iBACnC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,MAAM,GAAG,MAAM,CAAC,CAAC,CAAC;iBACnC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,MAAM,GAAG,MAAM,CAAC,CAAC,CAAC;iBACnC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC;cAC7C;UACF;SACD,SAAS,eAAe;aACtB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,eAAe,EAAE,CAAC,EAAG,EAAE;iBAC1C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,cAAc,EAAE,CAAC,EAAG,EAAE;qBACzC,IAAI,CAAC,GAAG,CAAC,cAAc,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;qBACjD,IAAI,CAAC,GAAG,CAAC,cAAc,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;qBAC3C,IAAI,CAAC,GAAG,CAAC,cAAc,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;qBACrC,IAAI,CAAC,GAAG,CAAC,cAAc,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;;qBAE3C,OAAO,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;qBACtB,OAAO,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;kBACvB;cACF;UACF;SACD,SAAS,WAAW;aAClB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,eAAe,EAAE,CAAC,EAAG,EAAE;iBAC1C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,cAAc,EAAE,CAAC,EAAG,EAAE;qBACzC,EAAE,CAAC,CAAC,GAAG,CAAC,GAAG,eAAe,CAAC;qBAC3B,EAAE,CAAC,CAAC,GAAG,CAAC,GAAG,cAAc,CAAC;qBAC1B,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;kBACtB;cACF;UACF;;MACF;KACH,yBAAC;CAAD,CAtGA,CAAwC,cAAc;;CCPtD;;;;;;;;;AASA;KAAkCA,gCAAQ;KAIxC,sBAAY,IAAoB,EAAE,eAAuB,EAAE,MAAc,EAAE,cAAsB,EAAE,MAAe,EAAE,KAAc;SAAlI,YACE,iBAAO,SAkBR;SAjBC,KAAI,CAAC,IAAI,GAAG,cAAc,CAAC;SAC3B,KAAI,CAAC,UAAU,GAAG;aAChB,IAAI,EAAE,IAAI;aACV,eAAe,EAAE,eAAe;aAChC,MAAM,EAAE,MAAM;aACd,cAAc,EAAE,cAAc;aAC9B,MAAM,EAAE,MAAM;UACf,CAAC;SACF,IAAI,KAAK,KAAK,SAAS;aAAE,OAAO,CAAC,IAAI,CAAC,6CAA6C,CAAC,CAAC;SACrF,IAAI,cAAc,GAAG,IAAI,kBAAkB,CAAC,IAAI,EAAE,eAAe,EAAE,MAAM,EAAE,cAAc,EAAE,MAAM,CAAC,CAAC;;SAEnG,KAAI,CAAC,QAAQ,GAAG,cAAc,CAAC,QAAQ,CAAC;SACxC,KAAI,CAAC,OAAO,GAAG,cAAc,CAAC,OAAO,CAAC;SACtC,KAAI,CAAC,SAAS,GAAG,cAAc,CAAC,SAAS,CAAC;;SAE1C,KAAI,CAAC,kBAAkB,CAAC,cAAc,CAAC,CAAC;SACxC,KAAI,CAAC,aAAa,EAAE,CAAC;;MACtB;KACH,mBAAC;CAAD,CAxBA,CAAkC,QAAQ;;CCT1C;;;;;AAKA;KAA6CA,2CAAc;KACzD,iCAAY,MAAc,EAAE,IAAY,EAAE,eAAuB,EAAE,cAAsB,EAAE,CAAS,EAAE,CAAS;SAA/G,YACE,iBAAO,SA2GR;SA1GC,KAAI,CAAC,IAAI,GAAG,yBAAyB,CAAC;SACtC,KAAI,CAAC,UAAU,GAAG;aAChB,MAAM,EAAE,MAAM;aACd,IAAI,EAAE,IAAI;aACV,eAAe,EAAE,eAAe;aAChC,cAAc,EAAE,cAAc;aAC9B,CAAC,EAAE,CAAC;aACJ,CAAC,EAAE,CAAC;UACL,CAAC;SACF,MAAM,GAAG,MAAM,IAAI,GAAG,CAAC;SACvB,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;SAClB,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC;SACpD,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;SACjD,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;SACX,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;;SAEX,IAAM,WAAW,IAAI,CAAC,cAAc,GAAG,CAAC,KAAK,eAAe,GAAG,CAAC,CAAC,CAAC,CAAC;SACnE,IAAM,UAAU,GAAG,cAAc,GAAG,eAAe,GAAG,CAAC,GAAG,CAAC,CAAC;;SAE5D,IAAM,OAAO,GAAG,IAAI,eAAe,CAAC,KAAK,UAAU,GAAG,KAAK,GAAG,WAAW,GAAG,WAAW,EAAE,UAAU,CAAC,EAAG,CAAC,CAAC,CAAC;SAC1G,IAAM,QAAQ,GAAG,IAAI,eAAe,CAAC,IAAI,YAAY,CAAC,WAAW,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;SAC3E,IAAM,OAAO,GAAG,IAAI,eAAe,CAAC,IAAI,YAAY,CAAC,WAAW,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;SAC1E,IAAM,GAAG,GAAG,IAAI,eAAe,CAAC,IAAI,YAAY,CAAC,WAAW,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;;SAEtE,IAAI,KAAK,GAAG,CAAC,EAAE,WAAW,GAAG,CAAC,CAAC;SAC/B,IAAM,MAAM,GAAG,IAAI,OAAO,EAAE,CAAC;SAC7B,IAAM,MAAM,GAAG,IAAI,OAAO,EAAE,CAAC;SAC7B,IAAM,EAAE,GAAG,IAAI,OAAO,EAAE,CAAC;SACzB,IAAM,EAAE,GAAG,IAAI,OAAO,EAAE,CAAC;SACzB,IAAM,EAAE,GAAG,IAAI,OAAO,EAAE,CAAC;SACzB,IAAM,CAAC,GAAG,IAAI,OAAO,EAAE,CAAC;SACxB,IAAM,CAAC,GAAG,IAAI,OAAO,EAAE,CAAC;SACxB,IAAM,CAAC,GAAG,IAAI,OAAO,EAAE,CAAC;;SAExB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,eAAe,EAAE,EAAG,CAAC,EAAE;;aAE1C,IAAM,CAAC,GAAG,CAAC,GAAG,eAAe,GAAG,CAAC,GAAG,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;;;aAGhD,wBAAwB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,MAAM,EAAE,EAAE,CAAC,CAAC;aAC9C,wBAAwB,CAAC,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,MAAM,EAAE,EAAE,CAAC,CAAC;;aAErD,CAAC,CAAC,UAAU,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;aACrB,CAAC,CAAC,UAAU,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;aACrB,CAAC,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;aACrB,CAAC,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;;aAErB,CAAC,CAAC,SAAS,EAAE,CAAC;aACd,CAAC,CAAC,SAAS,EAAE,CAAC;aACd,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,cAAc,EAAE,EAAG,CAAC,EAAE;;;iBAGzC,IAAM,CAAC,GAAG,CAAC,GAAG,cAAc,GAAG,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;iBAC3C,IAAM,EAAE,GAAG,CAAE,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;iBAChC,IAAM,EAAE,GAAG,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;;;iBAG9B,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;iBACxC,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;iBACxC,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;;iBAExC,QAAQ,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC;;iBAErD,MAAM,CAAC,UAAU,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC;iBAC1C,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC;;iBAEpD,EAAE,CAAC,CAAC,GAAG,CAAC,GAAG,eAAe,CAAC;iBAC3B,EAAE,CAAC,CAAC,GAAG,CAAC,GAAG,cAAc,CAAC;iBAC1B,GAAG,CAAC,KAAK,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;;iBAE7B,KAAK,EAAG,CAAC;cACV;UACF;;SAED,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,eAAe,EAAE,CAAC,EAAG,EAAE;aAC1C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,cAAc,EAAE,CAAC,EAAG,EAAE;;iBAEzC,IAAM,CAAC,GAAG,CAAC,cAAc,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;iBACnD,IAAM,CAAC,GAAG,CAAC,cAAc,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;iBAC7C,IAAM,CAAC,GAAG,CAAC,cAAc,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;iBACvC,IAAM,CAAC,GAAG,CAAC,cAAc,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;;iBAE7C,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;iBAAC,WAAW,EAAE,CAAC;iBAC5C,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;iBAAC,WAAW,EAAE,CAAC;iBAC5C,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;iBAAC,WAAW,EAAE,CAAC;;iBAE5C,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;iBAAC,WAAW,EAAE,CAAC;iBAC5C,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;iBAAC,WAAW,EAAE,CAAC;iBAC5C,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;iBAAC,WAAW,EAAE,CAAC;cAC7C;UACF;;SAED,KAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;SACvB,KAAI,CAAC,YAAY,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;SACxC,KAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;SACrC,KAAI,CAAC,YAAY,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;;SAE7B,SAAS,wBAAwB,CAAC,CAAS,EAAE,CAAS,EAAE,CAAS,EAAE,MAAc,EAAE,QAAiB;aAClG,IAAM,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;aACvB,IAAM,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;aACvB,IAAM,OAAO,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;aAC1B,IAAM,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;aAC7B,QAAQ,CAAC,CAAC,GAAG,MAAM,IAAI,CAAC,GAAG,EAAE,CAAC,GAAG,GAAG,GAAG,EAAE,CAAC;aAC1C,QAAQ,CAAC,CAAC,GAAG,MAAM,IAAI,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,GAAG,CAAC;aAC1C,QAAQ,CAAC,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,GAAG,CAAC;UAC/C;;MACF;KACH,8BAAC;CAAD,CA9GA,CAA6C,cAAc;;CCP3D;;;AAGA;KAAuCA,qCAAQ;KAC7C,2BAAY,MAAc,EAAE,IAAY,EAAE,eAAuB,EAAE,cAAsB,EAAE,CAAU,EAAE,CAAU,EAAE,WAAoB;SAAvI,YACE,iBAAO,SAaR;SAZC,KAAI,CAAC,IAAI,GAAG,mBAAmB,CAAC;SAChC,KAAI,CAAC,UAAU,GAAG;aAChB,MAAM,EAAE,MAAM;aACd,IAAI,EAAE,IAAI;aACV,eAAe,EAAE,eAAe;aAChC,cAAc,EAAE,cAAc;aAC9B,CAAC,EAAE,CAAC;aACJ,CAAC,EAAE,CAAC;UACL,CAAC;SACF,IAAI,WAAW,KAAK,SAAS;aAAE,OAAO,CAAC,IAAI,CAAC,wFAAwF,CAAC,CAAC;SACtI,KAAI,CAAC,kBAAkB,CAAC,IAAI,uBAAuB,CAAC,MAAM,EAAE,IAAI,EAAE,eAAe,EAAE,cAAc,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;SAC1G,KAAI,CAAC,aAAa,EAAE,CAAC;;MACtB;KACH,wBAAC;CAAD,CAhBA,CAAuC,QAAQ;;CCF/C;;;AAGA;KAAyCA,uCAAc;KACrD,6BAAY,MAAc,EAAE,IAAY,EAAE,cAAsB,EAAE,eAAuB,EAAE,GAAY;SAAvG,YACE,iBAAO,SAmFR;SAlFC,KAAI,CAAC,IAAI,GAAG,qBAAqB,CAAC;SAClC,KAAI,CAAC,UAAU,GAAG;aAChB,MAAM,EAAE,MAAM;aACd,IAAI,EAAE,IAAI;aACV,cAAc,EAAE,cAAc;aAC9B,eAAe,EAAE,eAAe;aAChC,GAAG,EAAE,GAAG;UACT,CAAC;SACF,MAAM,GAAG,MAAM,IAAI,GAAG,CAAC;SACvB,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;SAClB,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;SACjD,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;SACnD,GAAG,GAAG,GAAG,IAAI,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;;SAEzB,IAAM,WAAW,IAAI,CAAC,cAAc,GAAG,CAAC,KAAK,eAAe,GAAG,CAAC,CAAC,CAAC,CAAC;SACnE,IAAM,UAAU,GAAG,cAAc,GAAG,eAAe,GAAG,CAAC,GAAG,CAAC,CAAC;;SAE5D,IAAM,OAAO,GAAG,KAAK,UAAU,GAAG,KAAK,GAAG,WAAW,GAAG,WAAW,EAAE,UAAU,CAAC,CAAC;SACjF,IAAM,QAAQ,GAAG,IAAI,YAAY,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC;SACnD,IAAM,OAAO,GAAG,IAAI,YAAY,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC;SAClD,IAAM,GAAG,GAAG,IAAI,YAAY,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC;;SAE9C,IAAI,kBAAkB,GAAG,CAAC,CAAC;SAC3B,IAAI,cAAc,GAAG,CAAC,CAAC;SACvB,IAAI,iBAAiB,GAAG,CAAC,CAAC;;SAE1B,IAAM,MAAM,GAAG,IAAI,OAAO,EAAE,CAAC;SAC7B,IAAM,MAAM,GAAG,IAAI,OAAO,EAAE,CAAC;SAC7B,IAAM,MAAM,GAAG,IAAI,OAAO,EAAE,CAAC;;SAE7B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,cAAc,EAAE,CAAC,EAAG,EAAE;aACzC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,eAAe,EAAE,CAAC,EAAG,EAAE;iBAC1C,IAAM,CAAC,GAAG,CAAC,GAAG,eAAe,GAAG,GAAG,CAAC;iBACpC,IAAM,CAAC,GAAG,CAAC,GAAG,cAAc,GAAG,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;;iBAE3C,MAAM,CAAC,CAAC,GAAG,CAAC,MAAM,GAAG,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;iBACvD,MAAM,CAAC,CAAC,GAAG,CAAC,MAAM,GAAG,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;iBACvD,MAAM,CAAC,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;iBAC9B,QAAQ,CAAC,kBAAkB,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;iBACxC,QAAQ,CAAC,kBAAkB,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;iBAC5C,QAAQ,CAAC,kBAAkB,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;;iBAE5C,MAAM,CAAC,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;iBAChC,MAAM,CAAC,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;;iBAEhC,MAAM,CAAC,UAAU,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC,SAAS,EAAE,CAAC;iBAC9C,OAAO,CAAC,kBAAkB,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;iBACvC,OAAO,CAAC,kBAAkB,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;iBAC3C,OAAO,CAAC,kBAAkB,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;;iBAE3C,GAAG,CAAC,cAAc,CAAC,GAAG,CAAC,GAAG,eAAe,CAAC;iBAC1C,GAAG,CAAC,cAAc,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,cAAc,CAAC;;iBAE7C,kBAAkB,IAAI,CAAC,CAAC;iBACxB,cAAc,IAAI,CAAC,CAAC;cACrB;UACF;;SAED,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,cAAc,EAAE,CAAC,EAAG,EAAE;aACzC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,eAAe,EAAE,CAAC,EAAG,EAAE;;iBAE1C,IAAM,CAAC,GAAG,CAAC,eAAe,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;iBAC5C,IAAM,CAAC,GAAG,CAAC,eAAe,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;iBAClD,IAAM,CAAC,GAAG,CAAC,eAAe,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;iBAC9C,IAAM,CAAC,GAAG,CAAC,eAAe,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;;iBAExC,OAAO,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC;iBAC/B,OAAO,CAAC,iBAAiB,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;iBACnC,OAAO,CAAC,iBAAiB,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;;iBAEnC,OAAO,CAAC,iBAAiB,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;iBACnC,OAAO,CAAC,iBAAiB,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;iBACnC,OAAO,CAAC,iBAAiB,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;;iBAEnC,iBAAiB,IAAI,CAAC,CAAC;cACxB;UACF;;SAED,KAAI,CAAC,QAAQ,CAAC,IAAI,eAAe,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,CAAC;SAC/C,KAAI,CAAC,YAAY,CAAC,UAAU,EAAE,IAAI,eAAe,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC;SAChE,KAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,IAAI,eAAe,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,CAAC;SAC7D,KAAI,CAAC,YAAY,CAAC,IAAI,EAAE,IAAI,eAAe,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;;MACtD;KACH,0BAAC;CAAD,CAtFA,CAAyC,cAAc;;CCJvD;;;;;AAKA;KAAmCA,iCAAQ;KACzC,uBAAY,MAAc,EAAE,IAAY,EAAE,cAAsB,EAAE,eAAuB,EAAE,GAAY;SAAvG,YACE,iBAAO,SAUR;SATC,KAAI,CAAC,IAAI,GAAG,eAAe,CAAC;SAC5B,KAAI,CAAC,UAAU,GAAG;aAChB,MAAM,EAAE,MAAM;aACd,IAAI,EAAE,IAAI;aACV,cAAc,EAAE,cAAc;aAC9B,eAAe,EAAE,eAAe;aAChC,GAAG,EAAE,GAAG;UACT,CAAC;SACF,KAAI,CAAC,kBAAkB,CAAC,IAAI,mBAAmB,CAAC,MAAM,EAAE,IAAI,EAAE,cAAc,EAAE,eAAe,EAAE,GAAG,CAAC,CAAC,CAAC;;MACtG;KACH,oBAAC;CAAD,CAbA,CAAmC,QAAQ;;CCP3C;;;AAGA;KACA;MA0cC;;KAxcQ,eAAI,GAAX,UAAY,OAAkB;SAC5B,IAAI,CAAC,GAAG,OAAO,CAAC,MAAM,CAAC;SACvB,IAAI,CAAC,GAAG,GAAG,CAAC;SACZ,KAAK,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAG,EAAE;aAC1C,CAAC,IAAI,OAAO,CAAE,CAAC,CAAE,CAAC,CAAC,GAAG,OAAO,CAAE,CAAC,CAAE,CAAC,CAAC,GAAG,OAAO,CAAE,CAAC,CAAE,CAAC,CAAC,GAAG,OAAO,CAAE,CAAC,CAAE,CAAC,CAAC,CAAC;UACxE;SACD,OAAO,CAAC,GAAG,GAAG,CAAC;MAChB;KACM,sBAAW,GAAlB,UAAmB,OAAkB,EAAE,OAAgB;;;;;;;;;;;;;;SAcrD,SAAS,IAAI,CAAC,OAAkB,EAAE,CAAS,EAAE,CAAS,EAAE,CAAS,EAAE,CAAS,EAAE,KAAe;aAC3F,IAAI,CAAS,CAAC;aACd,IAAI,EAAU,EAAE,EAAU,EAAE,EAAU,EAAE,EAAU,CAAC;aACnD,IAAI,EAAU,EAAE,EAAU,EAAE,EAAU,EAAE,EAAU,CAAC;aACnD,EAAE,GAAG,OAAO,CAAE,KAAK,CAAE,CAAC,CAAE,CAAE,CAAC,CAAC,CAAC;aAC7B,EAAE,GAAG,OAAO,CAAE,KAAK,CAAE,CAAC,CAAE,CAAE,CAAC,CAAC,CAAC;aAC7B,EAAE,GAAG,OAAO,CAAE,KAAK,CAAE,CAAC,CAAE,CAAE,CAAC,CAAC,CAAC;aAC7B,EAAE,GAAG,OAAO,CAAE,KAAK,CAAE,CAAC,CAAE,CAAE,CAAC,CAAC,CAAC;aAC7B,EAAE,GAAG,OAAO,CAAE,KAAK,CAAE,CAAC,CAAE,CAAE,CAAC,CAAC,CAAC;aAC7B,EAAE,GAAG,OAAO,CAAE,KAAK,CAAE,CAAC,CAAE,CAAE,CAAC,CAAC,CAAC;aAC7B,IAAI,CAAC,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC;iBAAE,OAAO,KAAK,CAAC;aACrE,IAAI,EAAU,EAAE,EAAU,EAAE,EAAU,EAAE,EAAU,EAAE,EAAU,EAAE,EAAU,CAAC;aAC3E,IAAI,GAAW,EAAE,GAAW,EAAE,GAAW,EAAE,GAAW,EAAE,GAAW,EAAE,GAAW,CAAC;aACjF,IAAI,QAAgB,EAAE,QAAgB,EAAE,QAAgB,CAAC;aACzD,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;aAAE,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;aAC5B,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;aAAE,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;aAC5B,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;aAAE,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;aAC5B,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAG,EAAE;iBACvB,EAAE,GAAG,OAAO,CAAE,KAAK,CAAE,CAAC,CAAE,CAAE,CAAC,CAAC,CAAC;iBAC7B,EAAE,GAAG,OAAO,CAAE,KAAK,CAAE,CAAC,CAAE,CAAE,CAAC,CAAC,CAAC;iBAC7B,IAAI,CAAC,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC;sBAC3B,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC,CAAC;sBAC3B,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC,CAAC;qBAAG,SAAS;iBAC3C,GAAG,GAAG,EAAE,GAAG,EAAE,CAAC;iBAAE,GAAG,GAAG,EAAE,GAAG,EAAE,CAAC;iBAC9B,GAAG,GAAG,EAAE,GAAG,EAAE,CAAC;iBAAE,GAAG,GAAG,EAAE,GAAG,EAAE,CAAC;iBAC9B,GAAG,GAAG,EAAE,GAAG,EAAE,CAAC;iBAAE,GAAG,GAAG,EAAE,GAAG,EAAE,CAAC;;iBAE9B,QAAQ,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC;iBAC/B,QAAQ,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC;iBAC/B,QAAQ,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC;iBAC/B,IAAI,CAAC,QAAQ,IAAI,CAAE,MAAM,CAAC,OAAO,MAAM,QAAQ,IAAI,CAAE,MAAM,CAAC,OAAO,CAAC,KAAK,QAAQ,IAAI,CAAE,MAAM,CAAC,OAAO,CAAC;qBAAE,OAAO,KAAK,CAAC;cACtH;aACD,OAAO,IAAI,CAAC;UACb;;;SAGC,IAAI,CAAC,GAAW,OAAO,CAAC,MAAM,CAAC;SAC/B,IAAI,CAAC,GAAG,CAAC;aAAE,OAAO,IAAI,CAAC;SACvB,IAAM,MAAM,GAAgB,EAAE,CAAC;SAC/B,IAAM,KAAK,GAAa,EAAE,CAAC;SAC3B,IAAM,WAAW,GAAe,EAAE,CAAC;;SAEnC,IAAI,CAAS,EAAE,CAAS,EAAE,CAAS,CAAC;SACpC,IAAI,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,GAAG,EAAE;aAClC,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAG;iBAAE,KAAK,CAAE,CAAC,CAAE,GAAG,CAAC,CAAC;UACzC;cAAM;aACL,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAG;iBAAE,KAAK,CAAE,CAAC,CAAE,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;UACnD;SACD,IAAI,EAAE,GAAW,CAAC,CAAC;;SAEnB,IAAI,KAAK,GAAW,CAAC,GAAG,EAAE,CAAC;SAC3B,KAAK,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,GAAI;;aAEzB,IAAI,CAAC,KAAK,EAAG,KAAK,CAAC,EAAE;;;;;iBAKnB,OAAO,CAAC,IAAI,CAAC,mEAAmE,CAAC,CAAC;iBAClF,IAAI,OAAO;qBAAE,OAAO,WAAW,CAAC;iBAChC,OAAO,MAAM,CAAC;cACf;;aAED,CAAC,GAAG,CAAC,CAAC;aAAM,IAAI,EAAE,IAAI,CAAC;iBAAE,CAAC,GAAG,CAAC,CAAC;aAC/B,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;aAAE,IAAI,EAAE,IAAI,CAAC;iBAAE,CAAC,GAAG,CAAC,CAAC;aAC/B,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;aAAE,IAAI,EAAE,IAAI,CAAC;iBAAE,CAAC,GAAG,CAAC,CAAC;aAC/B,IAAI,IAAI,CAAC,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,KAAK,CAAC,EAAE;iBACrC,IAAI,CAAC,SAAQ,EAAE,CAAC,SAAQ,EAAE,CAAC,SAAQ,EAAE,CAAC,SAAQ,EAAE,CAAC,SAAQ,CAAC;;iBAE1D,CAAC,GAAG,KAAK,CAAE,CAAC,CAAE,CAAC;iBACf,CAAC,GAAG,KAAK,CAAE,CAAC,CAAE,CAAC;iBACf,CAAC,GAAG,KAAK,CAAE,CAAC,CAAE,CAAC;;iBAEf,MAAM,CAAC,IAAI,CAAC,CAAE,OAAO,CAAE,CAAC,CAAE,EAAE,OAAO,CAAE,CAAC,CAAE,EAAE,OAAO,CAAE,CAAC,CAAE,CAAE,CAAC,CAAC;iBAC1D,WAAW,CAAC,IAAI,CAAC,CAAE,KAAK,CAAE,CAAC,CAAE,EAAE,KAAK,CAAE,CAAC,CAAE,EAAE,KAAK,CAAE,CAAC,CAAE,CAAE,CAAC,CAAC;;iBAEzD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAG,EAAE,CAAC,EAAG,EAAE;qBACzC,KAAK,CAAE,CAAC,CAAE,GAAG,KAAK,CAAE,CAAC,CAAE,CAAC;kBACzB;iBACD,EAAE,EAAG,CAAC;;iBAEN,KAAK,GAAG,CAAC,GAAG,EAAE,CAAC;cAChB;UACF;SACD,IAAI,OAAO;aAAE,OAAO,WAAW,CAAC;SAChC,OAAO,MAAM,CAAC;;MAEjB;KACM,2BAAgB,GAAvB,UAAwB,OAAkB,EAAE,KAAkB;SAC5D,SAAS,eAAe,CAAC,MAAiB;aACxC,IAAI,CAAC,GAAW,MAAM,CAAC,MAAM,CAAC;aAC9B,IAAI,CAAC,GAAG,CAAC,IAAI,MAAM,CAAE,CAAC,GAAG,CAAC,CAAE,CAAC,MAAM,CAAC,MAAM,CAAE,CAAC,CAAE,CAAC,EAAE;iBAChD,MAAM,CAAC,GAAG,EAAE,CAAC;cACd;UACF;SACD,eAAe,CAAC,OAAO,CAAC,CAAC;SACzB,KAAK,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;SAC/B,SAAS,yBAAyB,CAAC,QAAiB,EAAE,QAAiB,EAAE,SAAkB;;aAEzF,IAAI,QAAQ,CAAC,CAAC,KAAK,QAAQ,CAAC,CAAC,EAAE;iBAC7B,IAAI,QAAQ,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,EAAE;qBAC3B,QAAS,CAAC,QAAQ,CAAC,CAAC,IAAI,SAAS,CAAC,CAAC,MAAM,SAAS,CAAC,CAAC,IAAI,QAAQ,CAAC,CAAC,CAAC,EAAE;kBACtE;sBAAM;qBACL,QAAS,CAAC,QAAQ,CAAC,CAAC,IAAI,SAAS,CAAC,CAAC,MAAM,SAAS,CAAC,CAAC,IAAI,QAAQ,CAAC,CAAC,CAAC,EAAE;kBACtE;cACF;kBAAM;iBACL,IAAI,QAAQ,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,EAAE;qBAC3B,QAAS,CAAC,QAAQ,CAAC,CAAC,IAAI,SAAS,CAAC,CAAC,MAAM,SAAS,CAAC,CAAC,IAAI,QAAQ,CAAC,CAAC,CAAC,EAAE;kBACtE;sBAAM;qBACL,QAAS,CAAC,QAAQ,CAAC,CAAC,IAAI,SAAS,CAAC,CAAC,MAAM,SAAS,CAAC,CAAC,IAAI,QAAQ,CAAC,CAAC,CAAC,EAAE;kBACtE;cACF;UACF;SACD,SAAS,qBAAqB,CAAC,SAAkB,EAAE,SAAkB,EAAE,SAAkB,EAAE,SAAkB,EAAE,qBAA8B;aAC3I,IAAI,MAAM,GAAW,SAAS,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,EAAE,MAAM,GAAW,SAAS,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC;aAC3F,IAAI,MAAM,GAAW,SAAS,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,EAAE,MAAM,GAAW,SAAS,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC;aAC3F,IAAI,UAAU,GAAW,SAAS,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC;aACnD,IAAI,UAAU,GAAW,SAAS,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC;aACnD,IAAI,KAAK,GAAW,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,CAAC;aACtD,IAAI,QAAQ,GAAW,MAAM,GAAG,UAAU,GAAG,MAAM,GAAG,UAAU,CAAC;aACjE,IAAI,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,MAAM,CAAC,OAAO,EAAE;;iBAEpC,IAAI,QAAQ,SAAQ,CAAC;iBACrB,IAAI,KAAK,GAAG,CAAC,EAAE;qBACb,IAAI,CAAC,QAAQ,GAAG,CAAC,MAAM,QAAQ,GAAG,KAAK,CAAC;yBAAE,OAAO,EAAE,CAAC;qBACpD,QAAQ,GAAG,MAAM,GAAG,UAAU,GAAG,MAAM,GAAG,UAAU,CAAC;qBACrD,IAAI,CAAC,QAAQ,GAAG,CAAC,MAAM,QAAQ,GAAG,KAAK,CAAC;yBAAE,OAAO,EAAE,CAAC;kBACrD;sBAAM;qBACL,IAAI,CAAC,QAAQ,GAAG,CAAC,MAAM,QAAQ,GAAG,KAAK,CAAC;yBAAE,OAAO,EAAE,CAAC;qBACpD,QAAQ,GAAG,MAAM,GAAG,UAAU,GAAG,MAAM,GAAG,UAAU,CAAC;qBACrD,IAAI,CAAC,QAAQ,GAAG,CAAC,MAAM,QAAQ,GAAG,KAAK,CAAC;yBAAE,OAAO,EAAE,CAAC;kBACrD;;;iBAGD,IAAI,QAAQ,KAAK,CAAC,EAAE;qBAClB,IAAI,CAAC,qBAAqB;0BACtB,CAAC,QAAQ,KAAK,CAAC,MAAM,QAAQ,KAAK,KAAK,CAAC,CAAC;yBAAE,OAAO,EAAE,CAAC;qBACzD,OAAO,CAAE,SAAS,CAAE,CAAC;kBACtB;iBACD,IAAI,QAAQ,KAAK,KAAK,EAAE;qBACtB,IAAI,CAAC,qBAAqB;0BACtB,CAAC,QAAQ,KAAK,CAAC,MAAM,QAAQ,KAAK,KAAK,CAAC,CAAC;yBAAE,OAAO,EAAE,CAAC;qBACzD,OAAO,CAAE,SAAS,CAAE,CAAC;kBACtB;;iBAED,IAAI,QAAQ,KAAK,CAAC;qBAAE,OAAO,CAAE,SAAS,CAAE,CAAC;iBACzC,IAAI,QAAQ,KAAK,KAAK;qBAAE,OAAO,CAAE,SAAS,CAAE,CAAC;;iBAE7C,IAAI,UAAU,GAAG,QAAQ,GAAG,KAAK,CAAC;iBAClC,OAAO,CAAE,IAAI,OAAO,CAAC,SAAS,CAAC,CAAC,GAAG,UAAU,GAAG,MAAM,EAAE,SAAS,CAAC,CAAC,GAAG,UAAU,GAAG,MAAM,CAAC,CAAE,CAAC;cAC9F;kBAAM;;iBAEL,IAAI,CAAC,QAAQ,KAAK,CAAC;sBACf,MAAM,GAAG,UAAU,KAAK,MAAM,GAAG,UAAU,CAAC;qBAAE,OAAO,EAAE,CAAC;;iBAE5D,IAAI,MAAM,IAAa,CAAC,MAAM,KAAK,CAAC,MAAM,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;iBACzD,IAAI,MAAM,IAAa,CAAC,MAAM,KAAK,CAAC,MAAM,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;;iBAEzD,IAAI,MAAM,IAAI,MAAM,EAAE;qBACpB,IAAI,CAAC,SAAS,CAAC,CAAC,KAAK,SAAS,CAAC,CAAC,MAAM,SAAS,CAAC,CAAC,KAAK,SAAS,CAAC,CAAC,CAAC;yBAAE,OAAO,EAAE,CAAC;qBAC9E,OAAO,CAAE,SAAS,CAAE,CAAC;kBACtB;;iBAED,IAAI,MAAM,EAAE;qBACV,IAAI,CAAE,yBAAyB,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;yBAAE,OAAO,EAAE,CAAC;qBAC5E,OAAO,CAAE,SAAS,CAAE,CAAC;kBACtB;;iBAED,IAAI,MAAM,EAAE;qBACV,IAAI,CAAE,yBAAyB,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;yBAAE,OAAO,EAAE,CAAC;qBAC5E,OAAO,CAAE,SAAS,CAAE,CAAC;kBACtB;;iBAED,IAAI,OAAO,SAAS,EAAE,OAAO,SAAS,EAAE,UAAU,SAAQ,EAAE,UAAU,SAAQ,CAAC;iBAC/E,IAAI,OAAO,SAAS,EAAE,OAAO,SAAS,EAAE,UAAU,SAAQ,EAAE,UAAU,SAAQ,CAAC;iBAC/E,IAAI,MAAM,KAAK,CAAC,EAAE;;qBAEhB,IAAI,SAAS,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,EAAE;yBAC7B,OAAO,GAAG,SAAS,CAAC;yBAAC,UAAU,GAAG,SAAS,CAAC,CAAC,CAAC;yBAC9C,OAAO,GAAG,SAAS,CAAC;yBAAC,UAAU,GAAG,SAAS,CAAC,CAAC,CAAC;sBAC/C;0BAAM;yBACL,OAAO,GAAG,SAAS,CAAC;yBAAC,UAAU,GAAG,SAAS,CAAC,CAAC,CAAC;yBAC9C,OAAO,GAAG,SAAS,CAAC;yBAAC,UAAU,GAAG,SAAS,CAAC,CAAC,CAAC;sBAC/C;qBACD,IAAI,SAAS,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,EAAE;yBAC7B,OAAO,GAAG,SAAS,CAAC;yBAAC,UAAU,GAAG,SAAS,CAAC,CAAC,CAAC;yBAC9C,OAAO,GAAG,SAAS,CAAC;yBAAC,UAAU,GAAG,SAAS,CAAC,CAAC,CAAC;sBAC/C;0BAAM;yBACL,OAAO,GAAG,SAAS,CAAC;yBAAC,UAAU,GAAG,SAAS,CAAC,CAAC,CAAC;yBAC9C,OAAO,GAAG,SAAS,CAAC;yBAAC,UAAU,GAAG,SAAS,CAAC,CAAC,CAAC;sBAC/C;kBACF;sBAAM;;qBAEL,IAAI,SAAS,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,EAAE;yBAC7B,OAAO,GAAG,SAAS,CAAC;yBAAC,UAAU,GAAG,SAAS,CAAC,CAAC,CAAC;yBAC9C,OAAO,GAAG,SAAS,CAAC;yBAAC,UAAU,GAAG,SAAS,CAAC,CAAC,CAAC;sBAC/C;0BAAM;yBACL,OAAO,GAAG,SAAS,CAAC;yBAAC,UAAU,GAAG,SAAS,CAAC,CAAC,CAAC;yBAC9C,OAAO,GAAG,SAAS,CAAC;yBAAC,UAAU,GAAG,SAAS,CAAC,CAAC,CAAC;sBAC/C;qBACD,IAAI,SAAS,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,EAAE;yBAC7B,OAAO,GAAG,SAAS,CAAC;yBAAC,UAAU,GAAG,SAAS,CAAC,CAAC,CAAC;yBAC9C,OAAO,GAAG,SAAS,CAAC;yBAAC,UAAU,GAAG,SAAS,CAAC,CAAC,CAAC;sBAC/C;0BAAM;yBACL,OAAO,GAAG,SAAS,CAAC;yBAAC,UAAU,GAAG,SAAS,CAAC,CAAC,CAAC;yBAC9C,OAAO,GAAG,SAAS,CAAC;yBAAC,UAAU,GAAG,SAAS,CAAC,CAAC,CAAC;sBAC/C;kBACF;iBACD,IAAI,UAAU,IAAI,UAAU,EAAE;qBAC5B,IAAI,UAAU,GAAI,UAAU;yBAAE,OAAO,EAAE,CAAC;qBACxC,IAAI,UAAU,KAAK,UAAU,EAAE;yBAC7B,IAAI,qBAAqB;6BAAE,OAAO,EAAE,CAAC;yBACrC,OAAO,CAAE,OAAO,CAAE,CAAC;sBACpB;qBACD,IAAI,UAAU,IAAI,UAAU;yBAAG,OAAO,CAAE,OAAO,EAAE,OAAO,CAAE,CAAC;qBAC3D,OAAQ,CAAE,OAAO,EAAE,OAAO,CAAE,CAAC;kBAC9B;sBAAM;qBACL,IAAI,UAAU,GAAI,UAAU;yBAAE,OAAO,EAAE,CAAC;qBACxC,IAAI,UAAU,KAAK,UAAU,EAAE;yBAC7B,IAAI,qBAAqB;6BAAE,OAAO,EAAE,CAAC;yBACrC,OAAO,CAAE,OAAO,CAAE,CAAC;sBACpB;qBACD,IAAI,UAAU,IAAI,UAAU;yBAAE,OAAO,CAAE,OAAO,EAAE,OAAO,CAAE,CAAC;qBAC1D,OAAQ,CAAE,OAAO,EAAE,OAAO,CAAE,CAAC;kBAC9B;cACF;UACF;SACD,SAAS,kBAAkB,CAAC,QAAiB,EAAE,WAAoB,EAAE,SAAkB,EAAE,SAAkB;;;aAGzG,IAAI,UAAU,GAAW,WAAW,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,EAAE,UAAU,GAAW,WAAW,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC;aACrG,IAAI,QAAQ,GAAW,SAAS,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,EAAE,QAAQ,GAAW,SAAS,CAAC,CAAC,GAAI,QAAQ,CAAC,CAAC,CAAC;aAC9F,IAAI,QAAQ,GAAW,SAAS,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,EAAE,QAAQ,GAAW,SAAS,CAAC,CAAC,GAAI,QAAQ,CAAC,CAAC,CAAC;;aAE9F,IAAI,YAAY,GAAW,UAAU,GAAG,QAAQ,GAAG,UAAU,GAAG,QAAQ,CAAC;aACzE,IAAI,eAAe,GAAY,UAAU,GAAG,QAAQ,GAAG,UAAU,GAAG,QAAQ,CAAC;aAC7E,IAAI,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,GAAG,MAAM,CAAC,OAAO,EAAE;;iBAE3C,IAAI,aAAa,GAAW,QAAQ,GAAG,QAAQ,GAAG,QAAQ,GAAG,QAAQ,CAAC;;iBAEtE,IAAI,YAAY,GAAG,CAAC,EAAE;;qBAEpB,QAAQ,CAAC,eAAe,IAAI,CAAC,MAAM,aAAa,IAAI,CAAC,CAAC,EAAE;kBACzD;sBAAM;;qBAEL,QAAQ,CAAC,eAAe,IAAI,CAAC,MAAM,aAAa,IAAI,CAAC,CAAC,EAAE;kBACzD;cACF;kBAAM;;;iBAGL,QAAQ,eAAe,GAAG,CAAC,EAAE;cAC9B;UACF;SACD,SAAS,WAAW,CAAC,OAAkB,EAAE,KAAkB;aACzD,IAAI,KAAK,GAAc,OAAO,CAAC,MAAM,EAAE,CAAC;aACxC,IAAI,IAAe,CAAC;aACpB,SAAS,qBAAqB,CAAC,UAAkB,EAAE,SAAiB;;iBAElE,IAAI,YAAY,GAAW,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;iBAC5C,IAAI,YAAY,GAAW,UAAU,GAAG,CAAC,CAAC;iBAC1C,IAAI,YAAY,GAAG,CAAC;qBAAE,YAAY,GAAG,YAAY,CAAC;iBAClD,IAAI,YAAY,GAAW,UAAU,GAAG,CAAC,CAAC;iBAC1C,IAAI,YAAY,GAAG,YAAY;qBAAG,YAAY,GAAG,CAAC,CAAC;iBACnD,IAAI,WAAW,GAAY,kBAAkB,CAAC,KAAK,CAAE,UAAU,CAAE,EAAE,KAAK,CAAE,YAAY,CAAE,EAAE,KAAK,CAAE,YAAY,CAAE,EAAE,IAAI,CAAE,SAAS,CAAE,CAAC,CAAC;iBACpI,IAAI,CAAE,WAAW,EAAE;;qBAEjB,OAAO,KAAK,CAAC;kBACd;;iBAED,IAAI,WAAW,GAAW,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;iBAC1C,IAAI,WAAW,GAAW,SAAS,GAAG,CAAC,CAAC;iBACxC,IAAI,WAAW,GAAG,CAAC;qBAAE,WAAW,GAAG,WAAW,CAAC;iBAC/C,IAAI,WAAW,GAAW,SAAS,GAAG,CAAC,CAAC;iBACxC,IAAI,WAAW,GAAG,WAAW;qBAAG,WAAW,GAAG,CAAC,CAAC;iBAChD,WAAW,GAAG,kBAAkB,CAAC,IAAI,CAAE,SAAS,CAAE,EAAE,IAAI,CAAE,WAAW,CAAE,EAAE,IAAI,CAAE,WAAW,CAAE,EAAE,KAAK,CAAE,UAAU,CAAE,CAAC,CAAC;iBACnH,IAAI,CAAE,WAAW,EAAE;;qBAEjB,OAAO,KAAK,CAAC;kBACd;iBACD,OAAO,IAAI,CAAC;cACb;aACD,SAAS,mBAAmB,CAAC,SAAkB,EAAE,QAAiB;;iBAEhE,IAAI,IAAY,EAAE,OAAe,EAAE,YAAuB,CAAC;iBAC3D,KAAK,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,KAAK,CAAC,MAAM,EAAE,IAAI,EAAG,EAAE;qBAC3C,OAAO,GAAG,IAAI,GAAG,CAAC,CAAC;qBAAC,OAAO,IAAI,KAAK,CAAC,MAAM,CAAC;qBAC5C,YAAY,GAAG,qBAAqB,CAAC,SAAS,EAAE,QAAQ,EAAE,KAAK,CAAE,IAAI,CAAE,EAAE,KAAK,CAAE,OAAO,CAAE,EAAE,IAAI,CAAC,CAAC;qBACjG,IAAI,YAAY,CAAC,MAAM,GAAG,CAAC;yBAAE,OAAO,IAAI,CAAC;kBAC1C;iBACD,OAAO,KAAK,CAAC;cACd;aACD,IAAI,UAAU,GAAa,EAAE,CAAC;aAC9B,SAAS,kBAAkB,CAAC,SAAkB,EAAE,QAAiB;;iBAE/D,IAAI,KAAK,EAAE,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,YAAY,CAAC;iBAChD,KAAK,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,UAAU,CAAC,MAAM,EAAE,KAAK,EAAG,EAAE;qBACnD,OAAO,GAAG,KAAK,CAAE,UAAU,CAAE,KAAK,CAAE,CAAC,CAAC;qBACtC,KAAK,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,OAAO,CAAC,MAAM,EAAE,IAAI,EAAG,EAAE;yBAC7C,OAAO,GAAG,IAAI,GAAG,CAAC,CAAC;yBAAC,OAAO,IAAI,OAAO,CAAC,MAAM,CAAC;yBAC9C,YAAY,GAAG,qBAAqB,CAAC,SAAS,EAAE,QAAQ,EAAE,OAAO,CAAE,IAAI,CAAE,EAAE,OAAO,CAAE,OAAO,CAAE,EAAE,IAAI,CAAC,CAAC;yBACrG,IAAI,YAAY,CAAC,MAAM,GAAG,CAAC;6BAAE,OAAO,IAAI,CAAC;sBAC1C;kBACF;iBACD,OAAO,KAAK,CAAC;cACd;aACD,IAAI,SAAS,EAAE,UAAU,EACvB,OAAO,EAAE,MAAM,EACf,OAAO,EAAE,MAAM,EAAE,UAAU,GAAc,EAAE,EAC3C,SAAS,EAAE,SAAS,EACpB,QAAQ,EAAE,QAAQ,CAAC;aACrB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAG,EAAE;iBAC/C,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;cACpB;aACD,IAAI,aAAa,GAAG,CAAC,CAAC;aACtB,IAAI,OAAO,GAAG,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC;aACpC,OAAO,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE;iBAC5B,OAAO,EAAG,CAAC;iBACX,IAAI,OAAO,GAAG,CAAC,EAAE;qBACf,OAAO,CAAC,GAAG,CAAC,4BAA4B,GAAG,UAAU,CAAC,MAAM,GAAG,gCAAgC,CAAC,CAAC;qBACjG,MAAM;kBACP;;;iBAGD,KAAK,UAAU,GAAG,aAAa,EAAE,UAAU,GAAG,KAAK,CAAC,MAAM,EAAE,UAAU,EAAG,EAAE;qBACzE,OAAO,GAAG,KAAK,CAAE,UAAU,CAAE,CAAC;qBAC9B,SAAS,GAAI,CAAE,CAAC,CAAC;;qBAEjB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,EAAG,EAAE;yBAC3C,OAAO,GAAG,UAAU,CAAE,CAAC,CAAE,CAAC;;yBAE1B,MAAM,GAAG,OAAO,CAAC,CAAC,GAAG,GAAG,GAAG,OAAO,CAAC,CAAC,GAAG,GAAG,GAAG,OAAO,CAAC;yBACrD,IAAI,UAAU,CAAE,MAAM,CAAE,KAAK,SAAS;6BAAO,SAAS;yBACtD,IAAI,GAAG,KAAK,CAAE,OAAO,CAAE,CAAC;yBACxB,KAAK,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,MAAM,EAAE,EAAE,EAAG,EAAE;6BACxC,MAAM,GAAG,IAAI,CAAE,EAAE,CAAE,CAAC;6BACpB,IAAI,CAAE,qBAAqB,CAAC,UAAU,EAAE,EAAE,CAAC;iCAAK,SAAS;6BACzD,IAAI,mBAAmB,CAAC,OAAO,EAAE,MAAM,CAAC;iCAAK,SAAS;6BACtD,IAAI,kBAAkB,CAAC,OAAO,EAAE,MAAM,CAAC;iCAAK,SAAS;6BACrD,SAAS,GAAG,EAAE,CAAC;6BACf,UAAU,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;6BACxB,SAAS,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,UAAU,GAAG,CAAC,CAAC,CAAC;6BAC3C,SAAS,GAAG,KAAK,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;6BACpC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;6BACjC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,SAAS,GAAG,CAAC,CAAC,CAAC;6BACxC,KAAK,GAAG,SAAS,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;6BACtE,aAAa,GAAG,UAAU,CAAC;;;6BAG3B,MAAM;0BACP;yBACD,IAAI,SAAS,IAAI,CAAC;6BAAG,MAAM;yBAC3B,UAAU,CAAE,MAAM,CAAE,GAAG,IAAI,CAAC;sBAC7B;qBACD,IAAI,SAAS,IAAI,CAAC;yBAAG,MAAM;kBAC5B;cACF;aACD,OAAO,KAAK,CAAC;UACd;SACD,IAAM,YAAY,GAAG,EAAE,CAAC;;SAExB,IAAM,SAAS,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC;SACnC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAG,EAAE;aAC/C,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,KAAK,CAAE,CAAC,CAAE,CAAC,CAAC;UACnD;;;SAGD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAG,EAAE;aACnD,IAAM,GAAG,GAAG,SAAS,CAAE,CAAC,CAAE,CAAC,CAAC,GAAG,GAAG,GAAG,SAAS,CAAE,CAAC,CAAE,CAAC,CAAC,CAAC;aACtD,IAAI,YAAY,CAAE,GAAG,CAAE,KAAK,SAAS,EAAE;iBACrC,OAAO,CAAC,IAAI,CAAC,mCAAmC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;cAC3D;aACD,YAAY,CAAE,GAAG,CAAE,GAAG,CAAC,CAAC;UACzB;;SAED,IAAM,iBAAiB,GAAG,WAAW,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;SACtD,IAAM,iBAAiB,GAA6B,UAAU,CAAC,WAAW,CAAC,iBAAiB,EAAE,KAAK,CAAC,CAAC;SACrG,IAAM,gBAAgB,GAAe,EAAE,CAAC;;;SAGxC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,iBAAiB,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAG,EAAE;aAC3D,IAAM,aAAa,GAAG,iBAAiB,CAAE,CAAC,CAAE,CAAC;aAC7C,IAAM,YAAY,GAAG,gBAAgB,CAAE,CAAC,CAAE,GAAG,EAAE,CAAC;aAChD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAG,EAAE;iBAC3B,IAAM,GAAG,GAAG,aAAa,CAAE,CAAC,CAAE,CAAC,CAAC,GAAG,GAAG,GAAG,aAAa,CAAE,CAAC,CAAE,CAAC,CAAC,CAAC;iBAC9D,IAAM,KAAK,GAAG,YAAY,CAAE,GAAG,CAAE,CAAC;iBAClC,IAAI,KAAK,KAAK,SAAS,EAAE;qBACvB,YAAY,CAAE,CAAC,CAAE,GAAG,KAAK,CAAC;kBAC3B;cACF;UACF;SACD,OAAO,gBAAgB,CAAC;MACzB;KACM,sBAAW,GAAlB,UAAmB,GAAc;SAC/B,OAAO,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;MACjC;;;;KAIM,aAAE,GAAT,UAAU,CAAS,EAAE,EAAU,EAAE,EAAU,EAAE,EAAU;SACrD,SAAS,IAAI,CAAC,CAAS,EAAE,CAAS;aAChC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;aACd,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;UAClB;SACD,SAAS,IAAI,CAAC,CAAS,EAAE,CAAS;aAChC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;UAC5B;SACD,SAAS,IAAI,CAAC,CAAS,EAAE,CAAS;aAChC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;UAClB;;SAEC,OAAO,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;;MAElD;;KAEM,aAAE,GAAT,UAAU,CAAS,EAAE,EAAU,EAAE,EAAU,EAAE,EAAU,EAAE,EAAU;SACjE,SAAS,IAAI,CAAC,CAAS,EAAE,CAAS;aAChC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;aACd,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;UACtB;SACD,SAAS,IAAI,CAAC,CAAS,EAAE,CAAS;aAChC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;aACd,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;UAC1B;SACD,SAAS,IAAI,CAAC,CAAS,EAAE,CAAS;aAChC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;aACd,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;UAC1B;SACD,SAAS,IAAI,CAAC,CAAS,EAAE,CAAS;aAChC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;UACtB;;SAEC,OAAO,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;;MAEhE;KACH,iBAAC;CAAD,CAAC;;;KCjboCA,mCAAQ;KAC3C,yBAAY,MAAwB,EAAE,OAAa;SAAnD,iBAeC;SAdC,IAAI,QAAO,MAAM,CAAC,KAAK,WAAW,EAAE;aAClC,MAAM,GAAG,EAAE,CAAC;aACZ,OAAO;UACR;SACD,QAAA,iBAAO,SAAC;SACR,KAAI,CAAC,IAAI,GAAG,iBAAiB,CAAC;SAC9B,MAAM,GAAG,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,MAAM,GAAG,CAAE,MAAM,CAAE,CAAC;SACrD,KAAI,CAAC,YAAY,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;SACnC,KAAI,CAAC,kBAAkB,EAAE,CAAC;;;;;;;MAM3B;KACD,sCAAY,GAAZ,UAAa,MAAe,EAAE,OAAa;SACzC,IAAM,EAAE,GAAG,MAAM,CAAC,MAAM,CAAC;SACzB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAG,EAAE;aAC5B,IAAM,KAAK,GAAG,MAAM,CAAE,CAAC,CAAE,CAAC;aAC1B,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;UAC/B;MACF;KACD,kCAAQ,GAAR,UAAS,KAAY,EAAE,OAAa;SAClC,IAAM,MAAM,GAAG,OAAO,CAAC,MAAM,KAAK,SAAS,GAAG,OAAO,CAAC,MAAM,GAAG,GAAG,CAAC;SACnE,IAAI,cAAc,GAAG,OAAO,CAAC,cAAc,KAAK,SAAS,GAAG,OAAO,CAAC,cAAc,GAAG,CAAC,CAAC;SACvF,IAAI,SAAS,GAAG,OAAO,CAAC,SAAS,KAAK,SAAS,GAAG,OAAO,CAAC,SAAS,GAAG,cAAc,GAAG,CAAC,CAAC;SACzF,IAAI,aAAa,GAAG,OAAO,CAAC,aAAa,KAAK,SAAS,GAAG,OAAO,CAAC,aAAa,GAAG,CAAC,CAAC;SACpF,IAAI,YAAY,GAAG,OAAO,CAAC,YAAY,KAAK,SAAS,GAAG,OAAO,CAAC,YAAY,GAAG,IAAI,CAAC;SACpF,IAAM,aAAa,GAAG,OAAO,CAAC,aAAa,KAAK,SAAS,GAAG,OAAO,CAAC,aAAa,GAAG,EAAE,CAAC;SACvF,IAAM,KAAK,GAAG,OAAO,CAAC,KAAK,KAAK,SAAS,GAAG,OAAO,CAAC,KAAK,GAAG,CAAC,CAAC;SAC9D,IAAM,WAAW,GAAG,OAAO,CAAC,WAAW,CAAC;SACxC,IAAI,UAAU,CAAC;SACf,IAAI,aAAa,GAAG,KAAK,CAAC;;SAE1B,IAAM,KAAK,GAAgB,OAAO,CAAC,WAAW,KAAK,SAAS,GAAG,OAAO,CAAC,WAAW,GAAG,eAAe,CAAC,gBAAgB,CAAC;SACtH,IAAI,UAAU,EAAE,QAAQ,EAAE,MAAM,EAAE,SAAS,CAAC;SAC5C,IAAI,WAAW,EAAE;aACf,UAAU,GAAG,WAAW,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;aAChD,aAAa,GAAG,IAAI,CAAC;aACrB,YAAY,GAAG,KAAK,CAAC;;;aAGrB,UAAU,GAAG,OAAO,CAAC,MAAM,KAAK,SAAS,GAAG,OAAO,CAAC,MAAM,GAAG,WAAW,CAAC,mBAAmB,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;;aAE3G,QAAQ,GAAG,IAAI,OAAO,EAAE,CAAC;aACzB,MAAM,GAAG,IAAI,OAAO,EAAE,CAAC;aACvB,SAAS,GAAG,IAAI,OAAO,EAAE,CAAC;UAC3B;;SAED,IAAI,CAAE,YAAY,EAAE;aAClB,aAAa,GAAG,CAAC,CAAC;aAClB,cAAc,GAAG,CAAC,CAAC;aACnB,SAAS,GAAG,CAAC,CAAC;UACf;;SAED,IAAM,KAAK,GAAG,IAAI,CAAC;SACnB,IAAM,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;SAC1C,IAAM,WAAW,GAAG,KAAK,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC;SACvD,IAAI,QAAQ,GAAG,WAAW,CAAC,KAAK,CAAC;SACjC,IAAM,KAAK,GAAG,WAAW,CAAC,KAAK,CAAC;SAChC,IAAI,OAAO,GAAG,CAAE,UAAU,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;SACjD,IAAI,OAAO,EAAE;aACX,QAAQ,GAAG,QAAQ,CAAC,OAAO,EAAE,CAAC;;aAE9B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAG,EAAE;iBAC/C,IAAM,KAAK,GAAG,KAAK,CAAE,CAAC,CAAE,CAAC;iBACzB,IAAI,UAAU,CAAC,WAAW,CAAC,KAAK,CAAC,EAAE;qBACjC,KAAK,CAAE,CAAC,CAAE,GAAG,KAAK,CAAC,OAAO,EAAE,CAAC;kBAC9B;cACF;aACD,OAAO,GAAG,KAAK,CAAC;UACjB;SACD,IAAM,KAAK,GAAG,UAAU,CAAC,gBAAgB,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;;SAE3D,IAAM,OAAO,GAAG,QAAQ,CAAC;SACzB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAG,EAAE;aAC/C,IAAM,KAAK,GAAG,KAAK,CAAE,CAAC,CAAE,CAAC;aACzB,QAAQ,GAAG,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;UACnC;SACD,SAAS,QAAQ,CAAC,EAAW,EAAE,GAAY,EAAE,IAAY;aACvD,IAAI,CAAE,GAAG;iBAAE,OAAO,CAAC,KAAK,CAAC,2CAA2C,CAAC,CAAC;aACtE,OAAO,GAAG,CAAC,KAAK,EAAE,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;UACjD;SACD,IAAM,IAAI,GAAG,QAAQ,CAAC,MAAM,CAAC;SAC7B,IAAM,IAAI,GAAG,KAAK,CAAC,MAAM,CAAC;;SAE1B,SAAS,WAAW,CAAC,IAAa,EAAE,MAAe,EAAE,MAAe;;;;;;;aAOlE,IAAI,SAAS,EAAE,SAAS,EAAE,SAAS,GAAG,CAAC,CAAC;;;aAGxC,IAAM,QAAQ,GAAG,IAAI,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,EAAE,QAAQ,GAAG,IAAI,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;aACjE,IAAM,QAAQ,GAAG,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,QAAQ,GAAG,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;aACjE,IAAM,YAAY,IAAI,QAAQ,GAAG,QAAQ,GAAG,QAAQ,GAAG,QAAQ,CAAC,CAAC;;aAEjE,IAAM,UAAU,IAAI,QAAQ,GAAG,QAAQ,GAAG,QAAQ,GAAG,QAAQ,CAAC,CAAC;aAC/D,IAAI,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,GAAG,MAAM,CAAC,OAAO,EAAE;;;iBAGzC,IAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;iBAC3C,IAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,QAAQ,GAAG,QAAQ,GAAG,QAAQ,CAAC,CAAC;;iBAExE,IAAM,aAAa,IAAI,MAAM,CAAC,CAAC,GAAG,QAAQ,GAAG,UAAU,CAAC,CAAC;iBACzD,IAAM,aAAa,IAAI,MAAM,CAAC,CAAC,GAAG,QAAQ,GAAG,UAAU,CAAC,CAAC;iBACzD,IAAM,aAAa,IAAI,MAAM,CAAC,CAAC,GAAG,QAAQ,GAAG,UAAU,CAAC,CAAC;iBACzD,IAAM,aAAa,IAAI,MAAM,CAAC,CAAC,GAAG,QAAQ,GAAG,UAAU,CAAC,CAAC;;iBAEzD,IAAM,EAAE,GAAG,CAAC,CAAC,aAAa,GAAG,aAAa,IAAI,QAAQ;qBACpD,CAAC,aAAa,GAAG,aAAa,IAAI,QAAQ;sBACzC,QAAQ,GAAG,QAAQ,GAAG,QAAQ,GAAG,QAAQ,CAAC,CAAC;;iBAE9C,SAAS,IAAI,aAAa,GAAG,QAAQ,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;iBACrD,SAAS,IAAI,aAAa,GAAG,QAAQ,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;;;iBAGrD,IAAM,aAAa,IAAI,SAAS,GAAG,SAAS,GAAG,SAAS,GAAG,SAAS,CAAC,CAAC;iBACtE,IAAI,aAAa,IAAI,CAAC,EAAE;qBACtB,OAAO,IAAI,OAAO,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;kBAC1C;sBAAM;qBACL,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC,CAAC;kBAC1C;cACF;kBAAM;;iBAEL,IAAI,YAAY,GAAG,KAAK,CAAC;iBACzB,IAAI,QAAQ,GAAG,MAAM,CAAC,OAAO,EAAE;qBAC7B,IAAI,QAAQ,GAAG,MAAM,CAAC,OAAO,EAAE;yBAC7B,YAAY,GAAG,IAAI,CAAC;sBACrB;kBACF;sBAAM;qBACL,IAAI,QAAQ,GAAG,CAAE,MAAM,CAAC,OAAO,EAAE;yBAC/B,IAAI,QAAQ,GAAG,CAAE,MAAM,CAAC,OAAO,EAAE;6BAC/B,YAAY,GAAG,IAAI,CAAC;0BACrB;sBACF;0BAAM;yBACL,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE;6BAC/C,YAAY,GAAG,IAAI,CAAC;0BACrB;sBACF;kBACF;iBACD,IAAI,YAAY,EAAE;;qBAEhB,SAAS,GAAG,CAAE,QAAQ,CAAC;qBACvB,SAAS,GAAI,QAAQ,CAAC;qBACtB,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;kBACrC;sBAAM;;qBAEL,SAAS,GAAG,QAAQ,CAAC;qBACrB,SAAS,GAAG,QAAQ,CAAC;qBACrB,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC,CAAC;kBACzC;cACF;aACD,OAAO,IAAI,OAAO,CAAC,SAAS,GAAG,SAAS,EAAE,SAAS,GAAG,SAAS,CAAC,CAAC;UAClE;SACD,IAAM,gBAAgB,GAAG,EAAE,CAAC;SAC5B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAG,EAAE,CAAC,EAAG,EAAE,CAAC,EAAG,EAAE;aACpF,IAAI,CAAC,KAAK,EAAE;iBAAE,CAAC,GAAG,CAAC,CAAC;aACpB,IAAI,CAAC,KAAK,EAAE;iBAAE,CAAC,GAAG,CAAC,CAAC;;;aAGpB,gBAAgB,CAAE,CAAC,CAAE,GAAG,WAAW,CAAC,OAAO,CAAE,CAAC,CAAE,EAAE,OAAO,CAAE,CAAC,CAAE,EAAE,OAAO,CAAE,CAAC,CAAE,CAAC,CAAC;UAC/E;SACD,IAAM,cAAc,GAAG,EAAE,CAAC;SAC1B,IAAI,iBAAiB,GAAG,gBAAgB,CAAC,MAAM,EAAE,CAAC;SAClD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAG,EAAE;aAC/C,IAAM,KAAK,GAAG,KAAK,CAAE,CAAC,CAAE,CAAC;aACzB,IAAM,gBAAgB,GAAG,EAAE,CAAC;aAC5B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAG,EAAE,CAAC,EAAG,EAAE,CAAC,EAAG,EAAE;iBAClF,IAAI,CAAC,KAAK,EAAE;qBAAE,CAAC,GAAG,CAAC,CAAC;iBACpB,IAAI,CAAC,KAAK,EAAE;qBAAE,CAAC,GAAG,CAAC,CAAC;;iBAEpB,gBAAgB,CAAE,CAAC,CAAE,GAAG,WAAW,CAAC,KAAK,CAAE,CAAC,CAAE,EAAE,KAAK,CAAE,CAAC,CAAE,EAAE,KAAK,CAAE,CAAC,CAAE,CAAC,CAAC;cACzE;aACD,cAAc,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;aACtC,iBAAiB,GAAG,iBAAiB,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC;UAChE;;SAED,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,aAAa,EAAE,CAAC,EAAG,EAAE;;aAEvC,IAAM,CAAC,GAAG,CAAC,GAAG,aAAa,CAAC;aAC5B,IAAM,CAAC,GAAG,cAAc,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;aACrD,IAAM,IAAE,GAAG,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;;aAEjD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAG,EAAE;iBACjD,IAAM,IAAI,GAAG,QAAQ,CAAC,OAAO,CAAE,CAAC,CAAE,EAAE,gBAAgB,CAAE,CAAC,CAAE,EAAE,IAAE,CAAC,CAAC;iBAC/D,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAG,CAAE,CAAC,CAAC,CAAC;cACzB;;aAED,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAG,EAAE;iBAC/C,IAAM,KAAK,GAAG,KAAK,CAAE,CAAC,CAAE,CAAC;iBACzB,IAAM,gBAAgB,GAAG,cAAc,CAAE,CAAC,CAAE,CAAC;iBAC7C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAG,EAAE;qBAC/C,IAAM,IAAI,GAAG,QAAQ,CAAC,KAAK,CAAE,CAAC,CAAE,EAAE,gBAAgB,CAAE,CAAC,CAAE,EAAE,IAAE,CAAC,CAAC;qBAC7D,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAG,CAAE,CAAC,CAAC,CAAC;kBACzB;cACF;UACF;SACD,IAAM,EAAE,GAAG,SAAS,CAAC;;SAErB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,EAAE,CAAC,EAAG,EAAE;aAC9B,IAAM,IAAI,GAAG,YAAY,GAAG,QAAQ,CAAC,QAAQ,CAAE,CAAC,CAAE,EAAE,iBAAiB,CAAE,CAAC,CAAE,EAAE,EAAE,CAAC,GAAG,QAAQ,CAAE,CAAC,CAAE,CAAC;aAChG,IAAI,CAAE,aAAa,EAAE;iBACnB,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;cACtB;kBAAM;;iBAEL,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAE,CAAC,CAAE,CAAC,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;iBAC5D,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,SAAS,CAAE,CAAC,CAAE,CAAC,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;iBAChE,SAAS,CAAC,IAAI,CAAC,UAAU,CAAE,CAAC,CAAE,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;iBAC1D,CAAC,CAAC,SAAS,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC;cAC1C;UACF;;;SAGD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,KAAK,EAAE,CAAC,EAAG,EAAE;aAChC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,EAAE,CAAC,EAAG,EAAE;iBAC9B,IAAM,IAAI,GAAG,YAAY,GAAG,QAAQ,CAAC,QAAQ,CAAE,CAAC,CAAE,EAAE,iBAAiB,CAAE,CAAC,CAAE,EAAE,EAAE,CAAC,GAAG,QAAQ,CAAE,CAAC,CAAE,CAAC;iBAChG,IAAI,CAAE,aAAa,EAAE;qBACnB,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,MAAM,GAAG,KAAK,GAAG,CAAC,CAAC,CAAC;kBACvC;sBAAM;;qBAEL,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAE,CAAC,CAAE,CAAC,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;qBAC5D,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,SAAS,CAAE,CAAC,CAAE,CAAC,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;qBAChE,SAAS,CAAC,IAAI,CAAC,UAAU,CAAE,CAAC,CAAE,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;qBAC1D,CAAC,CAAC,SAAS,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC;kBAC1C;cACF;UACF;;;SAGD,KAAK,IAAI,CAAC,GAAG,aAAa,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAG,EAAE;aAC5C,IAAM,CAAC,GAAG,CAAC,GAAG,aAAa,CAAC;aAC5B,IAAM,CAAC,GAAG,cAAc,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;aACrD,IAAM,IAAE,GAAG,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;;aAEjD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAG,EAAE;iBACjD,IAAM,IAAI,GAAG,QAAQ,CAAC,OAAO,CAAE,CAAC,CAAE,EAAE,gBAAgB,CAAE,CAAC,CAAE,EAAE,IAAE,CAAC,CAAC;iBAC/D,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAG,MAAM,GAAG,CAAC,CAAC,CAAC;cAChC;;aAED,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAG,EAAE;iBAC/C,IAAM,KAAK,GAAG,KAAK,CAAE,CAAC,CAAE,CAAC;iBACzB,IAAM,gBAAgB,GAAG,cAAc,CAAE,CAAC,CAAE,CAAC;iBAC7C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAG,EAAE;qBAC/C,IAAM,IAAI,GAAG,QAAQ,CAAC,KAAK,CAAE,CAAC,CAAE,EAAE,gBAAgB,CAAE,CAAC,CAAE,EAAE,IAAE,CAAC,CAAC;qBAC7D,IAAI,CAAE,aAAa,EAAE;yBACnB,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAG,MAAM,GAAG,CAAC,CAAC,CAAC;sBAChC;0BAAM;yBACL,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,UAAU,CAAE,KAAK,GAAG,CAAC,CAAE,CAAC,CAAC,EAAE,UAAU,CAAE,KAAK,GAAG,CAAC,CAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;sBAC9E;kBACF;cACF;UACF;;;SAGD,aAAa,EAAE,CAAC;;SAEhB,cAAc,EAAE,CAAC;;SAEjB,SAAS,aAAa;aACpB,IAAI,YAAY,EAAE;iBAChB,IAAI,KAAK,GAAG,CAAC,CAAC;iBACd,IAAI,MAAM,GAAG,IAAI,GAAG,KAAK,CAAC;;iBAE1B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,EAAE,CAAC,EAAG,EAAE;qBAC9B,IAAM,IAAI,GAAG,KAAK,CAAE,CAAC,CAAE,CAAC;qBACxB,EAAE,CAAC,IAAI,CAAE,CAAC,CAAE,GAAG,MAAM,EAAE,IAAI,CAAE,CAAC,CAAE,GAAG,MAAM,EAAE,IAAI,CAAE,CAAC,CAAE,GAAG,MAAM,CAAC,CAAC;kBAChE;iBACD,KAAK,GAAG,KAAK,GAAG,aAAa,GAAG,CAAC,CAAC;iBAClC,MAAM,GAAG,IAAI,GAAG,KAAK,CAAC;;iBAEtB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,EAAE,CAAC,EAAG,EAAE;qBAC9B,IAAM,IAAI,GAAG,KAAK,CAAE,CAAC,CAAE,CAAC;qBACxB,EAAE,CAAC,IAAI,CAAE,CAAC,CAAE,GAAG,MAAM,EAAE,IAAI,CAAE,CAAC,CAAE,GAAG,MAAM,EAAE,IAAI,CAAE,CAAC,CAAE,GAAG,MAAM,CAAC,CAAC;kBAChE;cACF;kBAAM;;iBAEL,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,EAAE,CAAC,EAAG,EAAE;qBAC9B,IAAM,IAAI,GAAG,KAAK,CAAE,CAAC,CAAE,CAAC;qBACxB,EAAE,CAAC,IAAI,CAAE,CAAC,CAAE,EAAE,IAAI,CAAE,CAAC,CAAE,EAAE,IAAI,CAAE,CAAC,CAAE,CAAC,CAAC;kBACrC;;iBAED,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,EAAE,CAAC,EAAG,EAAE;qBAC9B,IAAM,IAAI,GAAG,KAAK,CAAE,CAAC,CAAE,CAAC;qBACxB,EAAE,CAAC,IAAI,CAAE,CAAC,CAAE,GAAG,IAAI,GAAG,KAAK,EAAE,IAAI,CAAE,CAAC,CAAE,GAAG,IAAI,GAAG,KAAK,EAAE,IAAI,CAAE,CAAC,CAAE,GAAG,IAAI,GAAG,KAAK,CAAC,CAAC;kBAClF;cACF;UACF;;SAED,SAAS,cAAc;aACrB,IAAI,WAAW,GAAG,CAAC,CAAC;aACpB,SAAS,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;aAChC,WAAW,IAAI,OAAO,CAAC,MAAM,CAAC;aAC9B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAG,EAAE;iBAC/C,IAAM,KAAK,GAAG,KAAK,CAAE,CAAC,CAAE,CAAC;iBACzB,SAAS,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC;;iBAE9B,WAAW,IAAI,KAAK,CAAC,MAAM,CAAC;cAC7B;UACF;SACD,SAAS,SAAS,CAAC,OAAc,EAAE,WAAmB;aACpD,IAAI,CAAC,GAAG,OAAO,CAAC,MAAM,CAAC;aACvB,OAAO,EAAG,CAAC,IAAI,CAAC,EAAE;iBAChB,IAAI,CAAC,GAAG,CAAC,CAAC;iBACV,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;iBACd,IAAI,CAAC,GAAG,CAAC;qBAAE,CAAC,GAAG,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC;;iBAElC,IAAM,EAAE,GAAG,KAAK,GAAG,aAAa,GAAG,CAAC,CAAC;iBACrC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAG,EAAE;qBAC5B,IAAM,KAAK,GAAG,IAAI,GAAG,CAAC,CAAC;qBACvB,IAAM,KAAK,GAAG,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;qBAC7B,IAAM,CAAC,GAAG,WAAW,GAAG,CAAC,GAAG,KAAK,EAC/B,CAAC,GAAG,WAAW,GAAG,CAAC,GAAG,KAAK,EAC3B,CAAC,GAAG,WAAW,GAAG,CAAC,GAAG,KAAK,EAC3B,CAAC,GAAG,WAAW,GAAG,CAAC,GAAG,KAAK,CAAC;qBAC9B,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;kBACtC;cACF;UACF;SACD,SAAS,CAAC,CAAC,CAAS,EAAE,CAAS,EAAE,CAAS;aACxC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;UAC3C;SACD,SAAS,EAAE,CAAC,CAAS,EAAE,CAAS,EAAE,CAAS;aACzC,CAAC,IAAI,YAAY,CAAC;aAClB,CAAC,IAAI,YAAY,CAAC;aAClB,CAAC,IAAI,YAAY,CAAC;aAClB,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;aACpD,IAAM,GAAG,GAAG,KAAK,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;aAChD,KAAK,CAAC,aAAa,CAAE,CAAC,CAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;UACpC;SACD,SAAS,EAAE,CAAC,CAAS,EAAE,CAAS,EAAE,CAAS,EAAE,CAAS,EAAE,WAAgB,EAAE,SAAiB,EAAE,WAAmB,EAAE,aAAqB,EAAE,aAAqB;aAC5J,CAAC,IAAI,YAAY,CAAC;aAClB,CAAC,IAAI,YAAY,CAAC;aAClB,CAAC,IAAI,YAAY,CAAC;aAClB,CAAC,IAAI,YAAY,CAAC;aAClB,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;aACpD,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;aACpD,IAAM,GAAG,GAAG,KAAK,CAAC,kBAAkB,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;aACxD,KAAK,CAAC,aAAa,CAAE,CAAC,CAAE,CAAC,IAAI,CAAC,CAAE,GAAG,CAAE,CAAC,CAAE,EAAE,GAAG,CAAE,CAAC,CAAE,EAAE,GAAG,CAAE,CAAC,CAAE,CAAE,CAAC,CAAC;aAChE,KAAK,CAAC,aAAa,CAAE,CAAC,CAAE,CAAC,IAAI,CAAC,CAAE,GAAG,CAAE,CAAC,CAAE,EAAE,GAAG,CAAE,CAAC,CAAE,EAAE,GAAG,CAAE,CAAC,CAAE,CAAE,CAAC,CAAC;UACjE;MACF;KACc,iCAAiB;SAAG;UAkClC;SAjCC,+BAAa,GAAb,UAAc,QAAa,EAAE,MAAc,EAAE,MAAc,EAAE,MAAc;aACzE,IAAM,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC;aACnC,IAAM,CAAC,GAAG,QAAQ,CAAE,MAAM,CAAE,CAAC;aAC7B,IAAM,CAAC,GAAG,QAAQ,CAAE,MAAM,CAAE,CAAC;aAC7B,IAAM,CAAC,GAAG,QAAQ,CAAE,MAAM,CAAE,CAAC;aAC7B,OAAO;iBACL,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;iBACrB,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;iBACrB,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;cACtB,CAAC;UACH;SACD,oCAAkB,GAAlB,UAAmB,QAAa,EAAE,MAAc,EAAE,MAAc,EAAE,MAAc,EAAE,MAAc;aAC9F,IAAM,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC;aACnC,IAAM,CAAC,GAAG,QAAQ,CAAE,MAAM,CAAE,CAAC;aAC7B,IAAM,CAAC,GAAG,QAAQ,CAAE,MAAM,CAAE,CAAC;aAC7B,IAAM,CAAC,GAAG,QAAQ,CAAE,MAAM,CAAE,CAAC;aAC7B,IAAM,CAAC,GAAG,QAAQ,CAAE,MAAM,CAAE,CAAC;aAC7B,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,EAAE;iBAC9B,OAAO;qBACL,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;qBACzB,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;qBACzB,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;qBACzB,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;kBAC1B,CAAC;cACH;kBAAM;iBACL,OAAO;qBACL,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;qBACzB,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;qBACzB,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;qBACzB,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;kBAC1B,CAAC;cACH;UACF;SACH,cAAC;MAAA,IAAC;KACK,gCAAgB,GAAG,IAAI,eAAe,CAAC,iBAAiB,EAAE,CAAC;KACpE,sBAAC;EAAA,CA/XoC,QAAQ;;;KCa7C;MA+MC;;;KAzMC,wBAAQ,GAAR,UAAS,CAAS;SAChB,OAAO,CAAC,IAAI,CAAC,mDAAmD,CAAC,CAAC;SAClE,OAAO,IAAI,CAAC;MACb;;;KAGD,0BAAU,GAAV,UAAW,CAAS;SAClB,IAAM,CAAC,GAAW,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;SACzC,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;MACzB;;KAED,yBAAS,GAAT,UAAU,SAAqB;SAArB,0BAAA,EAAA,aAAqB;SAC7B,IAAM,MAAM,GAAQ,EAAE,CAAC;SACvB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,SAAS,EAAE,CAAC,EAAG,EAAE;aACpC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC;UAC3C;SACD,OAAO,MAAM,CAAC;MACf;;KAED,+BAAe,GAAf,UAAgB,SAAqB;SAArB,0BAAA,EAAA,aAAqB;SACnC,IAAM,MAAM,GAAQ,EAAE,CAAC;SACvB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,SAAS,EAAE,CAAC,EAAG,EAAE;aACpC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC;UAC7C;SACD,OAAO,MAAM,CAAC;MACf;;KAED,yBAAS,GAAT;SACE,IAAM,OAAO,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;SAClC,OAAO,OAAO,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;MACpC;;KAED,0BAAU,GAAV,UAAW,SAAkB;SAC3B,IAAI,CAAE,SAAS;aAAE,SAAS,GAAG,CAAC,IAAI,CAAC,oBAAoB,KAAK,IAAI,CAAC,oBAAoB,IAAI,GAAG,CAAC;SAC7F,IAAI,IAAI,CAAC,eAAe;iBAClB,IAAI,CAAC,eAAe,CAAC,MAAM,KAAK,SAAS,GAAG,CAAC,CAAC;gBAC/C,CAAE,IAAI,CAAC,WAAW,EAAE;;aAEvB,OAAO,IAAI,CAAC,eAAe,CAAC;UAC7B;SACD,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;SACzB,IAAM,KAAK,GAAa,EAAE,CAAC;SAC3B,IAAI,OAAU,CAAC;SACf,IAAI,IAAI,GAAM,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;SAC/B,IAAI,GAAG,GAAW,CAAC,CAAC;SACpB,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SACd,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,SAAS,EAAE,CAAC,EAAG,EAAE;aACpC,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC;aACvC,GAAG,IAAI,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;aAChC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;aAChB,IAAI,GAAG,OAAO,CAAC;UAChB;SACD,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;SAC7B,OAAO,KAAK,CAAC;MACd;KACD,gCAAgB,GAAhB;SACE,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;SACxB,IAAI,CAAC,UAAU,EAAE,CAAC;MACnB;;KAED,8BAAc,GAAd,UAAe,CAAS,EAAE,QAAiB;SACzC,IAAM,UAAU,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;SACrC,IAAI,CAAC,GAAG,CAAC,CAAC;SACV,IAAM,EAAE,GAAG,UAAU,CAAC,MAAM,CAAC;SAC7B,IAAI,eAAe,CAAC;SACpB,IAAI,QAAQ,EAAE;aACZ,eAAe,GAAG,QAAQ,CAAC;UAC5B;cAAM;aACL,eAAe,GAAG,CAAC,GAAG,UAAU,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;UAC1C;;;SAGD,IAAI,GAAG,GAAG,CAAC,EAAE,IAAI,GAAG,EAAE,GAAG,CAAC,EAAE,UAAU,CAAC;SACvC,OAAO,GAAG,IAAI,IAAI,EAAE;aAClB,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,IAAI,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC;aACvC,UAAU,GAAG,UAAU,CAAC,CAAC,CAAC,GAAG,eAAe,CAAC;aAC7C,IAAI,UAAU,GAAG,CAAC,EAAE;iBAClB,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;cACb;kBAAM,IAAI,UAAU,GAAG,CAAC,EAAE;iBACzB,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC;cACd;kBAAM;iBACL,IAAI,GAAG,CAAC,CAAC;iBACT,MAAM;;cAEP;UACF;SACD,CAAC,GAAG,IAAI,CAAC;;SAET,IAAI,UAAU,CAAC,CAAC,CAAC,KAAK,eAAe,EAAE;aACrC,IAAM,GAAC,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC;aACvB,OAAO,GAAC,CAAC;UACV;;SAED,IAAM,YAAY,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;SACnC,IAAM,WAAW,GAAG,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;SACtC,IAAM,aAAa,GAAG,WAAW,GAAG,YAAY,CAAC;;SAEjD,IAAM,eAAe,GAAG,CAAC,eAAe,GAAG,YAAY,IAAI,aAAa,CAAC;;SAEzE,IAAM,CAAC,GAAG,CAAC,CAAC,GAAG,eAAe,KAAK,EAAE,GAAG,CAAC,CAAC,CAAC;SAC3C,OAAO,CAAC,CAAC;MACV;;;;;KAKD,0BAAU,GAAV,UAAW,CAAS;SAClB,IAAM,KAAK,GAAG,MAAM,CAAC;SACrB,IAAI,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC;SACnB,IAAI,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC;;SAEnB,IAAI,EAAE,GAAG,CAAC;aAAE,EAAE,GAAG,CAAC,CAAC;SACnB,IAAI,EAAE,GAAG,CAAC;aAAE,EAAE,GAAG,CAAC,CAAC;SACnB,IAAM,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;SAC9B,IAAM,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;SAC9B,IAAM,GAAG,GAAG,GAAG,CAAC,KAAK,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;SACjC,OAAO,GAAG,CAAC,SAAS,EAAE,CAAC;MACxB;KACD,4BAAY,GAAZ,UAAa,CAAS;SACpB,IAAM,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;SACjC,OAAO,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;MAC3B;KACD,mCAAmB,GAAnB,UAAoB,QAAQ,EAAE,MAAM;;SAElC,IAAI,MAAM,GAAG,IAAI,OAAO,EAAE,CAAC;SAC3B,IAAI,QAAQ,GAAc,EAAE,CAAC;SAC7B,IAAI,OAAO,GAAc,EAAE,CAAC;SAC5B,IAAI,SAAS,GAAc,EAAE,CAAC;SAC9B,IAAI,GAAG,GAAG,IAAI,OAAO,EAAE,CAAC;SACxB,IAAI,GAAG,GAAG,IAAI,OAAO,EAAE,CAAC;SACxB,IAAI,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;;SAEhB,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,QAAQ,EAAE,CAAC,EAAG,EAAE;aAC/B,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC;aACjB,QAAQ,CAAE,CAAC,CAAE,GAAQ,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;aAC1C,QAAQ,CAAE,CAAC,CAAE,CAAC,SAAS,EAAE,CAAC;UAC3B;;;SAGD,OAAO,CAAE,CAAC,CAAE,GAAG,IAAI,OAAO,EAAE,CAAC;SAC7B,SAAS,CAAE,CAAC,CAAE,GAAG,IAAI,OAAO,EAAE,CAAC;SAC/B,IAAI,GAAG,GAAG,MAAM,CAAC,SAAS,CAAC;SAC3B,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAE,CAAC,CAAE,CAAC,CAAC,CAAC,CAAC;SACnC,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAE,CAAC,CAAE,CAAC,CAAC,CAAC,CAAC;SACnC,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAE,CAAC,CAAE,CAAC,CAAC,CAAC,CAAC;SACnC,IAAI,EAAE,IAAI,GAAG,EAAE;aACb,GAAG,GAAG,EAAE,CAAC;aACT,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;UACrB;SACD,IAAI,EAAE,IAAI,GAAG,EAAE;aACb,GAAG,GAAG,EAAE,CAAC;aACT,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;UACrB;SACD,IAAI,EAAE,IAAI,GAAG,EAAE;aACb,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;UACrB;SACD,GAAG,CAAC,YAAY,CAAC,QAAQ,CAAE,CAAC,CAAE,EAAE,MAAM,CAAC,CAAC,SAAS,EAAE,CAAC;SACpD,OAAO,CAAE,CAAC,CAAE,CAAC,YAAY,CAAC,QAAQ,CAAE,CAAC,CAAE,EAAE,GAAG,CAAC,CAAC;SAC9C,SAAS,CAAE,CAAC,CAAE,CAAC,YAAY,CAAC,QAAQ,CAAE,CAAC,CAAE,EAAE,OAAO,CAAE,CAAC,CAAE,CAAC,CAAC;;SAEzD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,QAAQ,EAAE,CAAC,EAAG,EAAE;aAC/B,OAAO,CAAE,CAAC,CAAE,GAAG,OAAO,CAAE,CAAC,GAAG,CAAC,CAAE,CAAC,KAAK,EAAE,CAAC;aACxC,SAAS,CAAE,CAAC,CAAE,GAAG,SAAS,CAAE,CAAC,GAAG,CAAC,CAAE,CAAC,KAAK,EAAE,CAAC;aAC5C,GAAG,CAAC,YAAY,CAAC,QAAQ,CAAE,CAAC,GAAG,CAAC,CAAE,EAAE,QAAQ,CAAE,CAAC,CAAE,CAAC,CAAC;aACnD,IAAI,GAAG,CAAC,MAAM,EAAE,GAAG,MAAM,CAAC,OAAO,EAAE;iBACjC,GAAG,CAAC,SAAS,EAAE,CAAC;iBAChB,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,QAAQ,CAAE,CAAC,GAAG,CAAC,CAAE,CAAC,GAAG,CAAC,QAAQ,CAAE,CAAC,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;iBAC7E,OAAO,CAAE,CAAC,CAAE,CAAC,YAAY,CAAC,GAAG,CAAC,gBAAgB,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,CAAC;cAC7D;aACD,SAAS,CAAE,CAAC,CAAE,CAAC,YAAY,CAAC,QAAQ,CAAE,CAAC,CAAE,EAAE,OAAO,CAAE,CAAC,CAAE,CAAC,CAAC;UAC1D;;SAED,IAAI,MAAM,KAAK,IAAI,EAAE;aACnB,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAE,CAAC,CAAE,CAAC,GAAG,CAAC,OAAO,CAAE,QAAQ,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;aAC9E,KAAK,IAAI,QAAQ,CAAC;aAClB,IAAI,QAAQ,CAAE,CAAC,CAAE,CAAC,GAAG,CAAC,GAAG,CAAC,YAAY,CAAC,OAAO,CAAE,CAAC,CAAE,EAAE,OAAO,CAAE,QAAQ,CAAE,CAAC,CAAC,GAAG,CAAC,EAAE;iBAC9E,KAAK,GAAG,CAAE,KAAK,CAAC;cACjB;aACD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,QAAQ,EAAE,CAAC,EAAG,EAAE;;iBAE/B,OAAO,CAAE,CAAC,CAAE,CAAC,YAAY,CAAC,GAAG,CAAC,gBAAgB,CAAC,QAAQ,CAAE,CAAC,CAAE,EAAE,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC;iBAC1E,SAAS,CAAE,CAAC,CAAE,CAAC,YAAY,CAAC,QAAQ,CAAE,CAAC,CAAE,EAAE,OAAO,CAAE,CAAC,CAAE,CAAC,CAAC;cAC1D;UACF;SACD,OAAO;aACL,QAAQ,EAAE,QAAQ;aAClB,OAAO,EAAE,OAAO;aAChB,SAAS,EAAE,SAAS;UACrB,CAAC;MACH;;;;;;KAMM,YAAM,GAAb,UAAc,WAAgB,EAAE,YAAoC;SAClE,WAAW,CAAC,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;SACvD,WAAW,CAAC,SAAS,CAAC,WAAW,GAAG,WAAW,CAAC;SAChD,WAAW,CAAC,SAAS,CAAC,QAAQ,GAAG,YAAY,CAAC;SAC9C,OAAO,WAAW,CAAC;MACpB;KACH,YAAC;CAAD,CAAC,IAAA;CACD;KAA4BA,0BAAc;KAA1C;;MAA6C;KAAD,aAAC;CAAD,CAA5C,CAA4B,KAAK,GAAY;CAC7C;KAA4BA,0BAAc;KAA1C;;MAA6C;KAAD,aAAC;CAAD,CAA5C,CAA4B,KAAK,GAAY;CAC7C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA4FE;;CCtVF;;;AAGA;KAA+BA,6BAAc;KAI3C,mBAAY,EAAW,EAAE,EAAW;SAApC,YACE,iBAAO,SAGR;SALQ,iBAAW,GAAY,IAAI,CAAC;SAGnC,KAAI,CAAC,EAAE,GAAG,EAAE,CAAC;SACb,KAAI,CAAC,EAAE,GAAG,EAAE,CAAC;;MACd;KACD,4BAAQ,GAAR,UAAS,CAAS;SAChB,IAAI,CAAC,KAAK,CAAC,EAAE;aACX,OAAO,IAAI,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC;UACxB;SACD,IAAI,KAAK,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;SACzC,KAAK,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;SACrC,OAAO,KAAK,CAAC;MACd;;KAED,8BAAU,GAAV,UAAW,CAAS;SAClB,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;MACzB;KACD,8BAAU,GAAV,UAAW,CAAS;SAClB,IAAI,OAAO,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;SAC3C,OAAO,OAAO,CAAC,SAAS,EAAE,CAAC;MAC5B;KACH,gBAAC;CAAD,CAzBA,CAA+B,KAAK;;CCLpC;;;AAGA;KAAA;MA2BC;KA1BQ,iCAAsB,GAA7B,UAA8B,CAAS,EAAE,EAAU,EAAE,EAAU,EAAE,EAAU;SACzE,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,EAAE,CAAC,CAAC;MACpD;;KAEM,6BAAkB,GAAzB,UAA0B,CAAS,EAAE,EAAU,EAAE,EAAU,EAAE,EAAU,EAAE,EAAU;SACjF,OAAO,CAAE,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;aACjC,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;aACjD,CAAC,GAAG,CAAC,GAAI,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE;aACtC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;MAClB;KACM,wBAAa,GAApB,UAAqB,CAAS,EAAE,EAAU,EAAE,EAAU,EAAE,EAAU,EAAE,EAAU;;SAE5E,IAAI,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;SAC5B,IAAI,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;SAChC,IAAI,GAAG,GAAG,CAAE,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;SAC9B,IAAI,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;SAC5B,OAAO,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;MAC9B;;KAEM,sBAAW,GAAlB,UAAmB,EAAU,EAAE,EAAU,EAAE,EAAU,EAAE,EAAU,EAAE,CAAS;SAC1E,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,IAAI,GAAG,CAAC;SACzB,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,IAAI,GAAG,CAAC;SACzB,IAAI,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC;SACf,IAAI,EAAE,GAAG,CAAC,GAAG,EAAE,CAAC;SAChB,OAAO,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,CAAC,CAAE,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,CAAC;MAChG;KACH,iBAAC;CAAD,CAAC;;CC3BD;;;AAGA;KAAiCA,+BAAc;KAG7C,qBAAY,MAAsB;SAAtB,uBAAA,EAAA,WAAsB;SAAlC,YACE,iBAAO,SAER;SAJQ,mBAAa,GAAY,IAAI,CAAC;SAGrC,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC;;MACtB;KACD,8BAAQ,GAAR,UAAS,CAAS;SAChB,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;SACzB,IAAI,KAAK,GAAG,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,CAAC;SACpC,IAAI,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;SACjC,IAAI,MAAM,GAAG,KAAK,GAAG,QAAQ,CAAC;SAC9B,IAAI,MAAM,GAAG,MAAM,CAAC,QAAQ,KAAK,CAAC,GAAG,QAAQ,GAAG,QAAQ,GAAG,CAAC,CAAC,CAAC;SAC9D,IAAI,MAAM,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC;SAC9B,IAAI,MAAM,GAAG,MAAM,CAAC,QAAQ,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC,GAAG,QAAQ,GAAG,CAAC,CAAC,CAAC;SACrF,IAAI,MAAM,GAAG,MAAM,CAAC,QAAQ,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC,GAAG,QAAQ,GAAG,CAAC,CAAC,CAAC;SACrF,IAAI,WAAW,GAAG,UAAU,CAAC,WAAW,CAAC;SACzC,OAAO,IAAI,OAAO,CAChB,WAAW,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,EAC3D,WAAW,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAC5D,CAAC;MACH;KACH,kBAAC;CAAD,CAtBA,CAAiC,KAAK;;CCJtC;;;AAGA;KAAkCA,gCAAc;KAU9C,sBAAY,EAAU,EAAE,EAAU,EAAE,OAAe,EAAE,OAAe,EAAE,WAAmB,EAAE,SAAiB,EAAE,UAAmB,EAAE,SAAqB;SAArB,0BAAA,EAAA,aAAqB;SAAxJ,YACE,iBAAO,SASR;SAXQ,oBAAc,GAAY,IAAI,CAAC;SAGtC,KAAI,CAAC,EAAE,GAAG,EAAE,CAAC;SACb,KAAI,CAAC,EAAE,GAAG,EAAE,CAAC;SACb,KAAI,CAAC,OAAO,GAAG,OAAO,CAAC;SACvB,KAAI,CAAC,OAAO,GAAG,OAAO,CAAC;SACvB,KAAI,CAAC,WAAW,GAAG,WAAW,CAAC;SAC/B,KAAI,CAAC,SAAS,GAAG,SAAS,CAAC;SAC3B,KAAI,CAAC,UAAU,GAAG,UAAU,CAAC;SAC7B,KAAI,CAAC,SAAS,GAAG,SAAS,CAAC;;MAC5B;KACD,+BAAQ,GAAR,UAAS,CAAS;SAChB,IAAI,KAAK,GAAG,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;SACxB,IAAI,UAAU,GAAG,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC;SACnD,IAAI,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,GAAG,MAAM,CAAC,OAAO,CAAC;;SAEvD,OAAO,UAAU,GAAG,CAAC;aAAE,UAAU,IAAI,KAAK,CAAC;SAC3C,OAAO,UAAU,GAAG,KAAK;aAAE,UAAU,IAAI,KAAK,CAAC;SAC/C,IAAI,UAAU,GAAG,MAAM,CAAC,OAAO,EAAE;aAC/B,IAAI,UAAU,EAAE;iBACd,UAAU,GAAG,CAAC,CAAC;cAChB;kBAAM;iBACL,UAAU,GAAG,KAAK,CAAC;cACpB;UACF;SACD,IAAI,IAAI,CAAC,UAAU,KAAK,IAAI,IAAI,CAAE,UAAU,EAAE;aAC5C,IAAI,UAAU,KAAK,KAAK,EAAE;iBACxB,UAAU,GAAG,CAAE,KAAK,CAAC;cACtB;kBAAM;iBACL,UAAU,GAAG,UAAU,GAAG,KAAK,CAAC;cACjC;UACF;SACD,IAAI,KAAK,GAAG,IAAI,CAAC,WAAW,GAAG,CAAC,GAAG,UAAU,CAAC;SAC9C,IAAI,CAAC,GAAG,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;SACjD,IAAI,CAAC,GAAG,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;SACjD,IAAI,IAAI,CAAC,SAAS,KAAK,CAAC,EAAE;aACxB,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;aACnC,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;aACnC,IAAI,EAAE,GAAG,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC;aACrB,IAAI,EAAE,GAAG,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC;;aAErB,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,IAAI,CAAC,EAAE,CAAC;aAClC,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,IAAI,CAAC,EAAE,CAAC;UACnC;SACD,OAAO,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;MAC1B;KACH,mBAAC;CAAD,CAxDA,CAAkC,KAAK;;CCEvC;;;;CAIA;;;;AAIA;KAKE;SACE,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;SACjB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;MACxB;KACD,uBAAG,GAAH,UAAI,KAAqB;SACvB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;MACzB;KACD,6BAAS,GAAT;;SAEE,IAAI,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;SAC5C,IAAI,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;SAC/D,IAAI,CAAE,UAAU,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE;aACjC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,SAAS,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC,CAAC;UACvD;MACF;;;;;;;;KAQD,4BAAQ,GAAR,UAAS,CAAS;SAChB,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;SAC7B,IAAI,YAAY,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;SAC1C,IAAI,CAAC,GAAG,CAAC,CAAC;;SAEV,OAAO,CAAC,GAAG,YAAY,CAAC,MAAM,EAAE;aAC9B,IAAI,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE;iBACxB,IAAI,IAAI,GAAG,YAAY,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;iBAC/B,IAAI,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;iBAC3B,IAAI,aAAa,GAAG,KAAK,CAAC,SAAS,EAAE,CAAC;iBACtC,IAAI,CAAC,GAAG,aAAa,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,IAAI,GAAG,aAAa,CAAC;iBAC3D,OAAO,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;cAC5B;aACD,CAAC,EAAG,CAAC;UACN;SACD,OAAO,IAAI,CAAC;;MAEb;;;;KAID,6BAAS,GAAT;SACE,IAAI,IAAI,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;SAClC,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;MAC9B;;KAED,oCAAgB,GAAhB;SACE,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;SACxB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;SACzB,IAAI,CAAC,eAAe,EAAE,CAAC;MACxB;;;KAGD,mCAAe,GAAf;;SAEE,IAAI,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,KAAK,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE;aACxE,OAAO,IAAI,CAAC,YAAY,CAAC;UAC1B;;;SAGD,IAAI,OAAO,GAAG,EAAE,EAAE,IAAI,GAAG,CAAC,CAAC;SAC3B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAG,EAAE;aACnD,IAAI,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC;aACnC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;UACpB;SACD,IAAI,CAAC,YAAY,GAAG,OAAO,CAAC;SAC5B,OAAO,OAAO,CAAC;MAChB;KACD,mCAAe,GAAf,UAAgB,SAAsB;SAAtB,0BAAA,EAAA,cAAsB;SACpC,IAAI,MAAM,GAAG,EAAE,CAAC;SAChB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,SAAS,EAAE,CAAC,EAAG,EAAE;aACpC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC;UAC3C;SACD,IAAI,IAAI,CAAC,SAAS,EAAE;aAClB,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;UACxB;SACD,OAAO,MAAM,CAAC;MACf;KACD,6BAAS,GAAT,UAAU,SAAsB;SAAtB,0BAAA,EAAA,cAAsB;SAC9B,IAAI,MAAM,GAAG,EAAE,EAAE,IAAI,CAAC;SACtB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,MAAM,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAG,EAAE;aAC7D,IAAI,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;aACtB,IAAI,UAAU,GAAG,CAAC,KAAK,IAAI,KAAK,YAAY,YAAY,IAAI,SAAS,GAAG,CAAC;mBACrE,CAAC,KAAK,IAAI,KAAK,YAAY,SAAS,IAAI,CAAC;uBACzC,CAAC,KAAK,IAAI,KAAK,YAAY,WAAW,IAAI,SAAS,GAAG,KAAK,CAAC,MAAM,CAAC,MAAM;2BACzE,SAAS,CAAC;aACd,IAAI,GAAG,GAAG,KAAK,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;aACtC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;iBACnC,IAAI,KAAK,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;iBACnB,IAAI,IAAI,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC;qBAAE,SAAS;iBACzC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;iBACnB,IAAI,GAAG,KAAK,CAAC;cACd;UACF;SACD,IAAI,IAAI,CAAC,SAAS,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE;aACvF,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;UACxB;SACD,OAAO,MAAM,CAAC;MACf;;;;;KAKD,wCAAoB,GAApB,UAAqB,SAAkB;SACrC,IAAI,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;SACpC,OAAO,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC;MACjC;;KAED,8CAA0B,GAA1B,UAA2B,SAAkB;SAC3C,IAAI,GAAG,GAAG,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;SAC1C,OAAO,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC;MACjC;KACD,kCAAc,GAAd,UAAe,MAA6B;SAC1C,IAAI,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC;SAC9B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAG,EAAE;aAC9C,IAAI,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;aACtB,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,EAAG,KAAiB,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;UAClF;SACD,OAAO,QAAQ,CAAC;MACjB;KACH,gBAAC;CAAD,CAAC;;CC1ID;;;AAGA;KAAsCA,oCAAc;KAKlD,0BAAY,EAAW,EAAE,EAAW,EAAE,EAAW,EAAE,EAAW;SAA9D,YACE,iBAAO,SAKR;SAJC,KAAI,CAAC,EAAE,GAAG,EAAE,CAAC;SACb,KAAI,CAAC,EAAE,GAAG,EAAE,CAAC;SACb,KAAI,CAAC,EAAE,GAAG,EAAE,CAAC;SACb,KAAI,CAAC,EAAE,GAAG,EAAE,CAAC;;MACd;KACD,mCAAQ,GAAR,UAAS,CAAS;SAChB,IAAI,EAAE,GAAG,UAAU,CAAC,EAAE,CAAC;SACvB,OAAO,IAAI,OAAO,CAChB,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,EACjD,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAClD,CAAC;MACH;KACD,qCAAU,GAAV,UAAW,CAAS;SAClB,IAAI,kBAAkB,GAAG,UAAU,CAAC,kBAAkB,CAAC;SACvD,OAAO,IAAI,OAAO,CAChB,kBAAkB,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,EACjE,kBAAkB,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAClE,CAAC,SAAS,EAAE,CAAC;MACf;KACH,uBAAC;CAAD,CA1BA,CAAsC,KAAK;;CCH3C;;;AAGA;KAA0CA,wCAAc;KAItD,8BAAY,EAAW,EAAE,EAAW,EAAE,EAAW;SAAjD,YACE,iBAAO,SAIR;SAHC,KAAI,CAAC,EAAE,GAAG,EAAE,CAAC;SACb,KAAI,CAAC,EAAE,GAAG,EAAE,CAAC;SACb,KAAI,CAAC,EAAE,GAAG,EAAE,CAAC;;MACd;KACD,uCAAQ,GAAR,UAAS,CAAS;SAChB,IAAI,EAAE,GAAG,UAAU,CAAC,EAAE,CAAC;SACvB,OAAO,IAAI,OAAO,CAChB,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,EACtC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CACvC,CAAC;MACH;KACD,yCAAU,GAAV,UAAW,CAAS;SAClB,IAAI,sBAAsB,GAAG,UAAU,CAAC,sBAAsB,CAAC;SAC/D,OAAO,IAAI,OAAO,CAChB,sBAAsB,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,EAC1D,sBAAsB,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAC3D,CAAC,SAAS,EAAE,CAAC;MACf;KACH,2BAAC;CAAD,CAxBA,CAA0C,KAAK;;CCE/C;;;;;AAKA;KAA0BA,wBAAS;KAEjC,cAAY,MAAkB;SAA9B,YACE,iBAAO,SAKR;SAJC,KAAI,CAAC,YAAY,GAAG,IAAI,OAAO,EAAE,CAAC;SAClC,IAAI,MAAM,EAAE;aACV,KAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;UACzB;;MACF;KACD,yBAAU,GAAV,UAAW,OAAkB;SAC3B,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SACxC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAG,EAAE;aAC/C,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACzC;MACF;KACD,qBAAM,GAAN,UAAO,CAAS,EAAE,CAAS;SACzB,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;MAC7B;KACD,qBAAM,GAAN,UAAO,CAAS,EAAE,CAAS;SACzB,IAAI,KAAK,GAAG,IAAI,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,EAAE,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;SACxE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SACxB,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;MAC7B;KACD,+BAAgB,GAAhB,UAAiB,IAAY,EAAE,IAAY,EAAE,EAAU,EAAE,EAAU;SACjE,IAAI,KAAK,GAAG,IAAI,oBAAoB,CAClC,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,EACzB,IAAI,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,EACvB,IAAI,OAAO,CAAC,EAAE,EAAE,EAAE,CAAC,CACpB,CAAC;SACF,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SACxB,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;MAC/B;KACD,4BAAa,GAAb,UAAc,KAAa,EAAE,KAAa,EAAE,KAAa,EAAE,KAAa,EAAE,EAAU,EAAE,EAAU;SAC9F,IAAI,KAAK,GAAG,IAAI,gBAAgB,CAC9B,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,EACzB,IAAI,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC,EACzB,IAAI,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC,EACzB,IAAI,OAAO,CAAC,EAAE,EAAE,EAAE,CAAC,CACpB,CAAC;SACF,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SACxB,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;MAC/B;KACD,yBAAU,GAAV,UAAW,GAAc;SACvB,IAAI,IAAI,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;SACnD,IAAI,KAAK,GAAG,IAAI,WAAW,CAAC,IAAI,CAAC,CAAC;SAClC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SACxB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;MAC7C;KACD,kBAAG,GAAH,UAAI,EAAU,EAAE,EAAU,EAAE,OAAe,EAAE,WAAmB,EAAE,SAAiB,EAAE,UAAmB;SACtG,IAAI,EAAE,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;SAC7B,IAAI,EAAE,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;SAC7B,IAAI,CAAC,MAAM,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,OAAO,EACnC,WAAW,EAAE,SAAS,EAAE,UAAU,CAAC,CAAC;MACvC;KACD,qBAAM,GAAN,UAAO,EAAU,EAAE,EAAU,EAAE,OAAe,EAAE,WAAmB,EAAE,SAAiB,EAAE,UAAmB;SACzG,IAAI,CAAC,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,WAAW,EAAE,SAAS,EAAE,UAAU,CAAC,CAAC;MAC/E;KACD,sBAAO,GAAP,UAAQ,EAAU,EAAE,EAAU,EAAE,OAAe,EAAE,OAAe,EAAE,WAAmB,EAAE,SAAiB,EAAE,UAAmB,EAAE,SAAkB;SAC/I,IAAI,EAAE,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;SAC7B,IAAI,EAAE,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;SAC7B,IAAI,CAAC,UAAU,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,WAAW,EAAE,SAAS,EAAE,UAAU,EAAE,SAAS,CAAC,CAAC;MACpG;KACD,yBAAU,GAAV,UAAW,EAAU,EAAE,EAAU,EAAE,OAAe,EAAE,OAAe,EAAE,WAAmB,EAAE,SAAiB,EAAE,UAAmB,EAAE,SAAkB;SAClJ,IAAI,KAAK,GAAG,IAAI,YAAY,CAAC,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,WAAW,EAAE,SAAS,EAAE,UAAU,EAAE,SAAS,CAAC,CAAC;SACtG,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;;aAE1B,IAAI,UAAU,GAAG,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;aACnC,IAAI,CAAE,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE;iBAC1C,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC;cACzC;UACF;SACD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SACxB,IAAI,SAAS,GAAG,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;SAClC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;MACnC;KACH,WAAC;CAAD,CA3EA,CAA0B,SAAS;;CCPnC;;;;;;;;;;;;;;;AAeA;KAAmCA,iCAAQ;KACzC,uBAAY,MAAuB,EAAE,OAAa;SAAlD,YACE,iBAAO,SAQR;SAPC,KAAI,CAAC,IAAI,GAAG,eAAe,CAAC;SAC5B,IAAI,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;aACzB,KAAI,CAAC,YAAY,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;UACpC;cAAM;aACL,KAAI,CAAC,YAAY,CAAC,CAAE,MAAM,CAAE,EAAE,OAAO,CAAC,CAAC;UACxC;SACD,KAAI,CAAC,kBAAkB,EAAE,CAAC;;MAC3B;;;;KAID,oCAAY,GAAZ,UAAa,MAAe,EAAE,OAAa;SACzC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAG,EAAE;aAC9C,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC;UACnC;SACD,OAAO,IAAI,CAAC;MACb;;;;KAID,gCAAQ,GAAR,UAAS,KAAY,EAAE,OAAa;SAClC,IAAI,OAAO,KAAK,SAAS;aAAE,OAAO,GAAG,EAAE,CAAC;SACxC,IAAM,aAAa,GAAW,OAAO,CAAC,aAAa,KAAK,SAAS,GAAG,OAAO,CAAC,aAAa,GAAG,EAAE,CAAC;SAC/F,IAAM,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC;SAClC,IAAM,KAAK,GAAG,OAAO,CAAC,WAAW,KAAK,SAAS,GAAG,eAAe,CAAC,gBAAgB,GAAG,OAAO,CAAC,WAAW,CAAC;;SAEzG,IAAM,YAAY,GAAW,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;SAClD,IAAM,WAAW,GAA6C,KAAK,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC;SACjG,IAAI,QAAQ,GAAc,WAAW,CAAC,KAAK,CAAC;SAC5C,IAAM,KAAK,GAAgB,WAAW,CAAC,KAAK,CAAC;SAC7C,IAAI,OAAO,GAAY,CAAE,UAAU,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;SAC1D,IAAI,OAAO,EAAE;aACX,QAAQ,GAAG,QAAQ,CAAC,OAAO,EAAE,CAAC;;aAE9B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAG,EAAE;iBAC7C,IAAM,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;iBACtB,IAAI,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE;qBAChC,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;kBAC3B;cACF;aACD,OAAO,GAAG,KAAK,CAAC;UACjB;SACD,IAAM,KAAK,GAAe,UAAU,CAAC,gBAAgB,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;;SAEvE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAG,EAAE;aAC7C,IAAM,IAAI,GAAc,KAAK,CAAC,CAAC,CAAC,CAAC;aACjC,QAAQ,GAAG,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;UAClC;;SAED,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,IAAI,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,GAAG,IAAI,EAAE,CAAC,EAAG,EAAE;aACtD,IAAM,IAAI,GAAY,QAAQ,CAAC,CAAC,CAAC,CAAC;aAClC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;UACpD;SACD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,IAAI,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,IAAI,EAAE,CAAC,EAAG,EAAE;aACnD,IAAM,IAAI,GAAa,KAAK,CAAC,CAAC,CAAC,CAAC;aAChC,IAAM,CAAC,GAAW,IAAI,CAAC,CAAC,CAAC,GAAG,YAAY,CAAC;aACzC,IAAM,CAAC,GAAW,IAAI,CAAC,CAAC,CAAC,GAAG,YAAY,CAAC;aACzC,IAAM,CAAC,GAAW,IAAI,CAAC,CAAC,CAAC,GAAG,YAAY,CAAC;aACzC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC,CAAC;aAC1D,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;UAChE;MACF;KACH,oBAAC;CAAD,CAjEA,CAAmC,QAAQ;;;KCThBA,yBAAI;KAE7B,eAAY,MAAkB;SAA9B,YACE,kBAAM,MAAM,CAAC,SAEd;SADC,KAAI,CAAC,KAAK,GAAG,EAAE,CAAC;;MACjB;KACD,8BAAc,GAAd,UAAe,SAAiB;SAC9B,IAAM,QAAQ,GAAgB,EAAE,CAAC;SACjC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAG,EAAE;aAClD,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;UAClD;SACD,OAAO,QAAQ,CAAC;MACjB;;KAED,gCAAgB,GAAhB,UAAiB,SAAiB;SAChC,OAAO;aACL,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC;aAChC,KAAK,EAAE,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC;UACtC,CAAC;MACH;KACD,6BAAa,GAAb,UAAc,SAAiB;SAC7B,OAAO,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC;MACzC;KACD,uBAAO,GAAP,UAAQ,OAAY;SAClB,OAAO,CAAC,IAAI,CAAC,0EAA0E,CAAC,CAAC;SACzF,OAAO,IAAI,eAAe,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;MAC3C;KACD,4BAAY,GAAZ,UAAa,OAAY;SACvB,OAAO,CAAC,IAAI,CAAC,6EAA6E,CAAC,CAAC;SAC5F,OAAO,IAAI,aAAa,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;MACzC;KACH,YAAC;CAAD,CA/BA,CAA2B,IAAI;;CCT/B;;;;;CAKA;AACA;KAGE;SACE,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;SACnB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;MACzB;KACD,0BAAM,GAAN,UAAO,CAAS,EAAE,CAAS;SACzB,IAAI,CAAC,WAAW,GAAG,IAAI,IAAI,EAAE,CAAC;SAC9B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;SACrC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;MAC/B;KACD,0BAAM,GAAN,UAAO,CAAS,EAAE,CAAS;SACzB,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;MAC/B;KACD,oCAAgB,GAAhB,UAAiB,IAAY,EAAE,IAAY,EAAE,EAAU,EAAE,EAAU;SACjE,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;MACvD;KACD,iCAAa,GAAb,UAAc,KAAa,EAAE,KAAa,EAAE,KAAa,EAAE,KAAa,EAAE,EAAU,EAAE,EAAU;SAC9F,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;MACpE;KACD,8BAAU,GAAV,UAAW,GAAc;SACvB,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;MAClC;KACD,uBAAG,GAAH,UAAI,EAAU,EAAE,EAAU,EAAE,OAAe,EAAE,WAAmB,EAAE,SAAiB,EAAE,UAAmB;SACtG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,WAAW,EAAE,SAAS,EAAE,UAAU,CAAC,CAAC;MAClE;KACD,0BAAM,GAAN,UAAO,EAAU,EAAE,EAAU,EAAE,OAAe,EAAE,WAAmB,EAAE,SAAiB,EAAE,UAAmB;SACzG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,EAAE,WAAW,EAAE,SAAS,EAAE,UAAU,CAAC,CAAC;MACrE;KACD,2BAAO,GAAP,UAAQ,EAAU,EAAE,EAAU,EAAE,OAAe,EAAE,OAAe,EAAE,WAAmB,EAAE,SAAiB,EAAE,UAAmB,EAAE,SAAkB;SAC/I,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,WAAW,EAAE,SAAS,EAAE,UAAU,EAAE,SAAS,CAAC,CAAC;MACnG;KACD,8BAAU,GAAV,UAAW,EAAU,EAAE,EAAU,EAAE,OAAe,EAAE,OAAe,EAAE,WAAmB,EAAE,SAAiB,EAAE,UAAmB,EAAE,SAAkB;SAClJ,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,WAAW,EAAE,SAAS,EAAE,UAAU,EAAE,SAAS,CAAC,CAAC;MACtG;KACD,4BAAQ,GAAR,UAAS,KAAe,EAAE,OAAiB;SACzC,SAAS,eAAe,CAAC,UAAkB;aACzC,IAAI,MAAM,GAAG,EAAE,CAAC;aAChB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAG,EAAE;iBAClD,IAAI,SAAO,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;iBAC5B,IAAI,UAAQ,GAAG,IAAI,KAAK,EAAE,CAAC;iBAC3B,UAAQ,CAAC,MAAM,GAAG,SAAO,CAAC,MAAM,CAAC;iBACjC,MAAM,CAAC,IAAI,CAAC,UAAQ,CAAC,CAAC;cACvB;aACD,OAAO,MAAM,CAAC;UACf;SACD,SAAS,oBAAoB,CAAC,IAAa,EAAE,SAAoB;aAC/D,IAAI,OAAO,GAAG,SAAS,CAAC,MAAM,CAAC;;;;;aAK/B,IAAI,MAAM,GAAG,KAAK,CAAC;aACnB,KAAK,IAAI,CAAC,GAAG,OAAO,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,EAAE,CAAC,GAAG,CAAC,EAAG,EAAE;iBACtD,IAAI,SAAS,GAAI,SAAS,CAAC,CAAC,CAAC,CAAC;iBAC9B,IAAI,UAAU,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;iBAC9B,IAAI,MAAM,GAAG,UAAU,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC;iBACxC,IAAI,MAAM,GAAG,UAAU,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC;iBACxC,IAAI,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,MAAM,CAAC,OAAO,EAAE;;qBAErC,IAAI,MAAM,GAAG,CAAC,EAAE;yBACd,SAAS,GAAI,SAAS,CAAC,CAAC,CAAC,CAAC;yBAAC,MAAM,GAAG,CAAE,MAAM,CAAC;yBAC7C,UAAU,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;yBAAC,MAAM,GAAG,CAAE,MAAM,CAAC;sBAC9C;qBACD,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC;yBAAM,SAAS;qBACpE,IAAI,IAAI,CAAC,CAAC,KAAK,SAAS,CAAC,CAAC,EAAE;yBAC1B,IAAI,IAAI,CAAC,CAAC,KAAK,SAAS,CAAC,CAAC;6BAAK,OAAQ,IAAI,CAAC;;sBAE7C;0BAAM;yBACL,IAAI,QAAQ,GAAG,MAAM,IAAI,IAAI,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,MAAM,IAAI,IAAI,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;yBACjF,IAAI,QAAQ,KAAK,CAAC;6BAAS,OAAQ,IAAI,CAAC;yBACxC,IAAI,QAAQ,GAAG,CAAC;6BAAU,SAAS;yBACnC,MAAM,GAAG,CAAE,MAAM,CAAC;sBACnB;kBACF;sBAAM;;qBAEL,IAAI,IAAI,CAAC,CAAC,KAAK,SAAS,CAAC,CAAC;yBAAM,SAAS;;qBAEzC,IAAI,CAAC,CAAC,UAAU,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC,IAAI,SAAS,CAAC,CAAC,CAAC;0BACpD,CAAC,SAAS,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC;yBAAK,OAAQ,IAAI,CAAC;;kBAE3E;cACF;aACD,OAAQ,MAAM,CAAC;UAChB;SACD,IAAI,WAAW,GAAG,UAAU,CAAC,WAAW,CAAC;SACzC,IAAI,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;SAC7B,IAAI,QAAQ,CAAC,MAAM,KAAK,CAAC;aAAE,OAAO,EAAE,CAAC;SACrC,IAAI,OAAO,KAAK,IAAI;aAAG,OAAQ,eAAe,CAAC,QAAQ,CAAC,CAAC;SACzD,IAAI,KAAK,EAAE,OAAO,EAAE,QAAQ,EAAE,MAAM,GAAG,EAAE,CAAC;SAC1C,IAAI,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAE;aACzB,OAAO,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;aACtB,QAAQ,GAAG,IAAI,KAAK,EAAE,CAAC;aACvB,QAAQ,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;aACjC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aACtB,OAAO,MAAM,CAAC;UACf;SACD,IAAI,UAAU,GAAY,CAAE,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC;SACjE,UAAU,GAAG,KAAK,GAAG,CAAE,UAAU,GAAG,UAAU,CAAC;;SAE/C,IAAI,gBAAgB,GAAU,EAAE,CAAC;SACjC,IAAI,SAAS,GAAU,EAAE,CAAC;SAC1B,IAAI,aAAa,GAAU,EAAE,CAAC;SAC9B,IAAI,OAAO,GAAW,CAAC,CAAC;SACxB,IAAI,SAAS,CAAC;SACd,SAAS,CAAC,OAAO,CAAC,GAAG,SAAS,CAAC;SAC/B,aAAa,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC;SAC5B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAG,EAAE;aAChD,OAAO,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;aACtB,SAAS,GAAG,OAAO,CAAC,SAAS,EAAE,CAAC;aAChC,KAAK,GAAG,WAAW,CAAC,SAAS,CAAC,CAAC;aAC/B,KAAK,GAAG,KAAK,GAAG,CAAE,KAAK,GAAG,KAAK,CAAC;aAChC,IAAI,KAAK,EAAE;iBACT,IAAI,CAAC,CAAE,UAAU,MAAM,SAAS,CAAC,OAAO,CAAC,CAAC;qBAAG,OAAO,EAAG,CAAC;iBACxD,SAAS,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC,EAAE,IAAI,KAAK,EAAE,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC;iBACtD,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;iBAC7C,IAAI,UAAU;qBAAG,OAAO,EAAG,CAAC;iBAC5B,aAAa,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC;;cAE7B;kBAAM;iBACL,aAAa,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;;cAE9D;UACF;;SAED,IAAI,CAAE,SAAS,CAAC,CAAC,CAAC;aAAG,OAAQ,eAAe,CAAC,QAAQ,CAAC,CAAC;SACvD,IAAI,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;aACxB,IAAI,SAAS,GAAG,KAAK,CAAC;aACtB,IAAI,QAAQ,GAAG,EAAE,CAAC;aAClB,KAAK,IAAI,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,SAAS,CAAC,MAAM,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,EAAG,EAAE;iBAChE,gBAAgB,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;cAC7B;aACD,KAAK,IAAI,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,SAAS,CAAC,MAAM,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,EAAG,EAAE;iBAChE,IAAI,GAAG,GAAG,aAAa,CAAC,IAAI,CAAC,CAAC;iBAC9B,KAAK,IAAI,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,GAAG,CAAC,MAAM,EAAE,IAAI,EAAG,EAAE;qBAC7C,IAAI,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC;qBACnB,IAAI,eAAe,GAAG,IAAI,CAAC;qBAC3B,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,SAAS,CAAC,MAAM,EAAE,KAAK,EAAG,EAAE;yBACtD,IAAI,oBAAoB,CAAC,EAAE,CAAC,CAAC,EAAE,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE;6BAClD,IAAI,IAAI,KAAK,KAAK;iCAAG,QAAQ,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;6BAC5E,IAAI,eAAe,EAAE;iCACnB,eAAe,GAAG,KAAK,CAAC;iCACxB,gBAAgB,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;8BAClC;kCAAM;iCACL,SAAS,GAAG,IAAI,CAAC;8BAClB;0BACF;sBACF;qBACD,IAAI,eAAe,EAAE;yBACnB,gBAAgB,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;sBACjC;kBACF;cACF;;aAED,IAAI,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;;iBAEvB,IAAI,CAAE,SAAS;qBAAG,aAAa,GAAG,gBAAgB,CAAC;cACpD;UACF;SACD,IAAI,QAAa,CAAC;SAClB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAG,EAAE;aACnD,QAAQ,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;aAC1B,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aACtB,QAAQ,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC;aAC5B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAG,EAAE;iBAClD,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;cACpC;UACF;;SAED,OAAO,MAAM,CAAC;MACf;KACH,gBAAC;CAAD,CAAC;;CCpLD;;;;AAIA;KAGE,cAAY,IAAS;SADZ,WAAM,GAAY,IAAI,CAAC;SAE9B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;MAClB;KACD,6BAAc,GAAd,UAAe,IAAY,EAAE,IAAY,EAAE,SAAiB;SAC1D,SAAS,WAAW,CAAC,IAAY;aAC/B,IAAI,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;aACnC,IAAI,KAAK,GAAG,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC;aACnC,IAAI,MAAM,GAAG,CAAC,CAAC;aACf,IAAI,KAAK,GAAG,EAAE,CAAC;aACf,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAG,EAAE;iBACtC,IAAI,GAAG,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;iBAC9C,MAAM,IAAI,GAAG,CAAC,MAAM,CAAC;iBACrB,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;cACtB;aACD,OAAO,KAAK,CAAC;UACd;SACD,SAAS,UAAU,CAAC,CAAS,EAAE,KAAa,EAAE,MAAc;aAC1D,IAAI,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;aAC/C,IAAI,CAAE,KAAK;iBAAE,OAAO;aACpB,IAAI,IAAI,GAAG,IAAI,SAAS,EAAE,CAAC;aAC3B,IAAI,GAAG,GAAU,EAAE,EAAE,EAAE,GAAG,UAAU,CAAC,EAAE,EAAE,EAAE,GAAG,UAAU,CAAC,EAAE,CAAC;aAC5D,IAAI,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,CAAC;aAC9D,IAAI,KAAK,CAAC,CAAC,EAAE;iBACX,IAAI,OAAO,GAAG,KAAK,CAAC,cAAc,KAAK,KAAK,CAAC,cAAc,GAAG,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;iBAClF,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,GAAI;qBAC3C,IAAI,MAAM,GAAG,OAAO,CAAC,CAAC,EAAG,CAAC,CAAC;qBAC3B,QAAQ,MAAM;yBACZ,KAAK,GAAG;6BACN,CAAC,GAAG,OAAO,CAAC,CAAC,EAAG,CAAC,GAAG,KAAK,GAAG,MAAM,CAAC;6BACnC,CAAC,GAAG,OAAO,CAAC,CAAC,EAAG,CAAC,GAAG,KAAK,CAAC;6BAC1B,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;6BAClB,MAAM;yBACR,KAAK,GAAG;6BACN,CAAC,GAAG,OAAO,CAAC,CAAC,EAAG,CAAC,GAAG,KAAK,GAAG,MAAM,CAAC;6BACnC,CAAC,GAAG,OAAO,CAAC,CAAC,EAAG,CAAC,GAAG,KAAK,CAAC;6BAC1B,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;6BAClB,MAAM;yBACR,KAAK,GAAG;6BACN,GAAG,GAAI,OAAO,CAAC,CAAC,EAAG,CAAC,GAAG,KAAK,GAAG,MAAM,CAAC;6BACtC,GAAG,GAAI,OAAO,CAAC,CAAC,EAAG,CAAC,GAAG,KAAK,CAAC;6BAC7B,IAAI,GAAG,OAAO,CAAC,CAAC,EAAG,CAAC,GAAG,KAAK,GAAG,MAAM,CAAC;6BACtC,IAAI,GAAG,OAAO,CAAC,CAAC,EAAG,CAAC,GAAG,KAAK,CAAC;6BAC7B,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;6BAC5C,KAAK,GAAG,GAAG,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;6BAC5B,IAAI,KAAK,EAAE;iCACT,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC;iCACf,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC;iCACf,KAAK,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,IAAI,SAAS,EAAE,EAAE,EAAG,EAAE;qCACvC,IAAI,CAAC,GAAG,EAAE,GAAG,SAAS,CAAC;qCACvB,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC;qCACvB,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC;kCACxB;8BACF;6BACD,MAAM;yBACR,KAAK,GAAG;6BACN,GAAG,GAAI,OAAO,CAAC,CAAC,EAAG,CAAC,GAAG,KAAK,GAAG,MAAM,CAAC;6BACtC,GAAG,GAAI,OAAO,CAAC,CAAC,EAAG,CAAC,GAAG,KAAK,CAAC;6BAC7B,IAAI,GAAG,OAAO,CAAC,CAAC,EAAG,CAAC,GAAG,KAAK,GAAG,MAAM,CAAC;6BACtC,IAAI,GAAG,OAAO,CAAC,CAAC,EAAG,CAAC,GAAG,KAAK,CAAC;6BAC7B,IAAI,GAAG,OAAO,CAAC,CAAC,EAAG,CAAC,GAAG,KAAK,GAAG,MAAM,CAAC;6BACtC,IAAI,GAAG,OAAO,CAAC,CAAC,EAAG,CAAC,GAAG,KAAK,CAAC;6BAC7B,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;6BACrD,KAAK,GAAG,GAAG,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;6BAC5B,IAAI,KAAK,EAAE;iCACT,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC;iCACf,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC;iCACf,KAAK,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,IAAI,SAAS,EAAE,EAAE,EAAG,EAAE;qCACvC,IAAI,CAAC,GAAG,EAAE,GAAG,SAAS,CAAC;qCACvB,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC;qCAC7B,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC;kCAC9B;8BACF;6BACD,MAAM;sBACT;kBACF;cACF;aACD,OAAO,EAAE,MAAM,EAAE,KAAK,CAAC,EAAE,GAAG,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;UACjD;;SAED,IAAI,IAAI,KAAK,SAAS;aAAE,IAAI,GAAG,GAAG,CAAC;SACnC,IAAI,SAAS,KAAK,SAAS;aAAE,SAAS,GAAG,CAAC,CAAC;SAC3C,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;SACrB,IAAI,KAAK,GAAG,WAAW,CAAC,IAAI,CAAC,CAAC;SAC9B,IAAI,MAAM,GAAU,EAAE,CAAC;SACvB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAG,EAAE;aAC/C,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;UACzD;SACD,OAAO,MAAM,CAAC;MACf;KACH,WAAC;CAAD,CAAC;;;KC9EiCA,gCAAe;KAC/C,sBAAY,IAAY,EAAE,UAAoB;SAApB,2BAAA,EAAA,eAAoB;SAA9C,iBAeC;SAdC,IAAM,IAAI,GAAG,UAAU,CAAC,IAAI,CAAC;SAC7B,IAAI,CAAC,IAAI,IAAI,IAAI,YAAY,IAAI,MAAM,KAAK,EAAE;aAC5C,OAAO,CAAC,KAAK,CAAC,sEAAsE,CAAC,CAAC;;UAEvF;SACD,IAAM,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,UAAU,CAAC,IAAI,EAAE,UAAU,CAAC,aAAa,CAAC,CAAC;;SAEpF,UAAU,CAAC,MAAM,GAAG,UAAU,CAAC,MAAM,KAAK,SAAS,GAAG,UAAU,CAAC,MAAM,GAAG,EAAE,CAAC;;SAE7E,IAAI,UAAU,CAAC,cAAc,KAAK,SAAS;aAAE,UAAU,CAAC,cAAc,GAAG,EAAE,CAAC;SAC5E,IAAI,UAAU,CAAC,SAAS,KAAK,SAAS;aAAE,UAAU,CAAC,SAAS,GAAG,CAAC,CAAC;SACjE,IAAI,UAAU,CAAC,YAAY,KAAK,SAAS;aAAE,UAAU,CAAC,YAAY,GAAG,KAAK,CAAC;SAC3E,QAAA,kBAAM,MAAM,EAAE,UAAU,CAAC,SAAC;SAC1B,KAAI,CAAC,IAAI,GAAG,cAAc,CAAC;;MAC5B;KACH,mBAAC;CAAD,CAjBA,CAAkC,eAAe;;CChBjD;;;;AAIA;KAA0CA,wCAAc;KACtD,8BAAY,MAAc,EAAE,aAAqB,EAAE,cAAsB,EAAE,QAAiB,EAAE,SAAkB,EAAE,UAAmB,EAAE,WAAoB;SAA3J,YACE,iBAAO,SA0DR;SAzDC,KAAI,CAAC,IAAI,GAAG,sBAAsB,CAAC;SACnC,KAAI,CAAC,UAAU,GAAG;aAChB,MAAM,EAAE,MAAM;aACd,aAAa,EAAE,aAAa;aAC5B,cAAc,EAAE,cAAc;aAC9B,QAAQ,EAAE,QAAQ;aAClB,SAAS,EAAE,SAAS;aACpB,UAAU,EAAE,UAAU;aACtB,WAAW,EAAE,WAAW;UACzB,CAAC;SACF,MAAM,GAAG,MAAM,IAAI,EAAE,CAAC;SACtB,aAAa,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;SAC5D,cAAc,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC;SAC9D,QAAQ,GAAG,QAAQ,KAAK,SAAS,GAAG,QAAQ,GAAG,CAAC,CAAC;SACjD,SAAS,GAAG,SAAS,KAAK,SAAS,GAAG,SAAS,GAAG,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;SAC9D,UAAU,GAAG,UAAU,KAAK,SAAS,GAAG,UAAU,GAAG,CAAC,CAAC;SACvD,WAAW,GAAG,WAAW,KAAK,SAAS,GAAG,WAAW,GAAG,IAAI,CAAC,EAAE,CAAC;SAChE,IAAM,QAAQ,GAAG,UAAU,GAAG,WAAW,CAAC;SAC1C,IAAM,WAAW,IAAI,CAAC,aAAa,GAAG,CAAC,KAAK,cAAc,GAAG,CAAC,CAAC,CAAC,CAAC;SACjE,IAAM,SAAS,GAAG,IAAI,eAAe,CAAC,IAAI,YAAY,CAAC,WAAW,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;SAC5E,IAAM,OAAO,GAAG,IAAI,eAAe,CAAC,IAAI,YAAY,CAAC,WAAW,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;SAC1E,IAAM,GAAG,GAAG,IAAI,eAAe,CAAC,IAAI,YAAY,CAAC,WAAW,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;SACtE,IAAI,KAAK,GAAG,CAAC,CAAC;SACd,IAAM,QAAQ,GAAG,EAAE,EAAE,MAAM,GAAG,IAAI,OAAO,EAAE,CAAC;SAC5C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,cAAc,EAAE,CAAC,EAAG,EAAE;aACzC,IAAM,WAAW,GAAG,EAAE,CAAC;aACvB,IAAM,CAAC,GAAG,CAAC,GAAG,cAAc,CAAC;aAC7B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,aAAa,EAAE,CAAC,EAAG,EAAE;iBACxC,IAAM,CAAC,GAAG,CAAC,GAAG,aAAa,CAAC;iBAC5B,IAAM,EAAE,GAAG,CAAE,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,GAAG,CAAC,GAAG,SAAS,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,GAAG,CAAC,GAAG,WAAW,CAAC,CAAC;iBAClG,IAAM,EAAE,GAAG,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,GAAG,CAAC,GAAG,WAAW,CAAC,CAAC;iBAC3D,IAAM,EAAE,GAAG,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,GAAG,CAAC,GAAG,SAAS,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,GAAG,CAAC,GAAG,WAAW,CAAC,CAAC;iBAChG,MAAM,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC;iBACnC,SAAS,CAAC,MAAM,CAAC,KAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;iBACpC,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC;iBACpD,GAAG,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;iBAC3B,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;iBACxB,KAAK,EAAG,CAAC;cACV;aACD,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;UAC5B;SACD,IAAM,OAAO,GAAG,EAAE,CAAC;SACnB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,cAAc,EAAE,CAAC,EAAG,EAAE;aACxC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,aAAa,EAAE,CAAC,EAAG,EAAE;iBACvC,IAAM,EAAE,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;iBAC9B,IAAM,EAAE,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;iBAC1B,IAAM,EAAE,GAAG,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;iBAC9B,IAAM,EAAE,GAAG,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;iBAClC,IAAI,CAAC,KAAK,CAAC,IAAI,UAAU,GAAG,CAAC;qBAAE,OAAO,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;iBACxD,IAAI,CAAC,KAAK,cAAc,GAAG,CAAC,IAAI,QAAQ,GAAG,IAAI,CAAC,EAAE;qBAAE,OAAO,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;cAC9E;UACF;SACD,KAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,KAAK,GAAG,KAAK,GAAG,eAAe,GAAG,eAAe,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC,CAAC;SACzF,KAAI,CAAC,YAAY,CAAC,UAAU,EAAE,SAAS,CAAC,CAAC;SACzC,KAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;SACrC,KAAI,CAAC,YAAY,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;SAC7B,KAAI,CAAC,cAAc,GAAG,IAAI,MAAM,CAAC,IAAI,OAAO,EAAE,EAAE,MAAM,CAAC,CAAC;;MACzD;KACH,2BAAC;CAAD,CA7DA,CAA0C,cAAc;;CCNxD;;;AAGA;KAAoCA,kCAAQ;KAC1C,wBAAY,MAAc,EAAE,aAAsB,EAAE,cAAuB,EAAE,QAAiB,EAAE,SAAkB,EAAE,UAAmB,EAAE,WAAoB;SAA7J,YACE,iBAAO,SAYR;SAXC,KAAI,CAAC,IAAI,GAAG,gBAAgB,CAAC;SAC7B,KAAI,CAAC,UAAU,GAAG;aAChB,MAAM,EAAE,MAAM;aACd,aAAa,EAAE,aAAa;aAC5B,cAAc,EAAE,cAAc;aAC9B,QAAQ,EAAE,QAAQ;aAClB,SAAS,EAAE,SAAS;aACpB,UAAU,EAAE,UAAU;aACtB,WAAW,EAAE,WAAW;UACzB,CAAC;SACF,KAAI,CAAC,kBAAkB,CAAC,IAAI,oBAAoB,CAAC,MAAM,EAAE,aAAa,EAAE,cAAc,EAAE,QAAQ,EAAE,SAAS,EAAE,UAAU,EAAE,WAAW,CAAC,CAAC,CAAC;;MACxI;KACH,qBAAC;CAAD,CAfA,CAAoC,QAAQ;;CCD5C;;;AAGA;KAAwCA,sCAAc;KACpD,4BAAY,WAAmB,EAAE,WAAmB,EAAE,aAAqB,EAAE,WAAmB,EAAE,UAAkB,EAAE,WAAmB;SAAzI,YACE,iBAAO,SA4ER;SA3EC,KAAI,CAAC,IAAI,GAAG,oBAAoB,CAAC;SACjC,KAAI,CAAC,UAAU,GAAG;aAChB,WAAW,EAAE,WAAW;aACxB,WAAW,EAAE,WAAW;aACxB,aAAa,EAAE,aAAa;aAC5B,WAAW,EAAE,WAAW;aACxB,UAAU,EAAE,UAAU;aACtB,WAAW,EAAE,WAAW;UACzB,CAAC;SACF,WAAW,GAAG,WAAW,IAAI,EAAE,CAAC;SAChC,WAAW,GAAG,WAAW,IAAI,EAAE,CAAC;SAChC,UAAU,GAAG,UAAU,KAAK,SAAS,GAAG,UAAU,GAAG,CAAC,CAAC;SACvD,WAAW,GAAG,WAAW,KAAK,SAAS,GAAG,WAAW,GAAG,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;SACpE,aAAa,GAAG,aAAa,KAAK,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,aAAa,CAAC,GAAG,CAAC,CAAC;SAC7E,WAAW,GAAG,WAAW,KAAK,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,WAAW,CAAC,GAAG,CAAC,CAAC;;SAEvE,IAAM,WAAW,GAAG,CAAC,aAAa,GAAG,CAAC,KAAK,WAAW,GAAG,CAAC,CAAC,CAAC;SAC5D,IAAM,UAAU,GAAG,aAAa,GAAG,WAAW,GAAG,CAAC,GAAG,CAAC,CAAC;;SAEvD,IAAM,OAAO,GAAG,IAAI,eAAe,CAAC,KAAK,UAAU,GAAG,KAAK,GAAG,WAAW,GAAG,WAAW,EAAE,UAAU,CAAC,EAAG,CAAC,CAAC,CAAC;SAC1G,IAAM,QAAQ,GAAG,IAAI,eAAe,CAAC,IAAI,YAAY,CAAC,WAAW,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;SAC3E,IAAM,OAAO,GAAG,IAAI,eAAe,CAAC,IAAI,YAAY,CAAC,WAAW,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;SAC1E,IAAM,GAAG,GAAG,IAAI,eAAe,CAAC,IAAI,YAAY,CAAC,WAAW,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;;SAEtE,IAAI,KAAK,GAAG,CAAC,EAAE,WAAW,GAAG,CAAC,CAAC;SAC/B,IAAI,MAAM,GAAG,WAAW,CAAC;SACzB,IAAM,UAAU,IAAI,CAAC,WAAW,GAAG,WAAW,IAAI,WAAW,CAAC,CAAC;SAC/D,IAAM,MAAM,GAAG,IAAI,OAAO,EAAE,CAAC;SAC7B,IAAM,EAAE,GAAG,IAAI,OAAO,EAAE,CAAC;;;SAGzB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,WAAW,EAAE,CAAC,EAAG,EAAE;aACtC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,aAAa,EAAE,CAAC,EAAG,EAAE;iBACxC,IAAM,OAAO,GAAG,UAAU,GAAG,CAAC,GAAG,aAAa,GAAG,WAAW,CAAC;;iBAE7D,MAAM,CAAC,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;iBACtC,MAAM,CAAC,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;iBACtC,QAAQ,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC;;iBAErD,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;;iBAE/B,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,GAAG,WAAW,GAAG,CAAC,IAAI,CAAC,CAAC;iBACxC,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,GAAG,WAAW,GAAG,CAAC,IAAI,CAAC,CAAC;iBACxC,GAAG,CAAC,KAAK,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;;iBAE7B,KAAK,EAAE,CAAC;cACT;;aAED,MAAM,IAAI,UAAU,CAAC;UACtB;;SAED,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,EAAE,CAAC,EAAG,EAAE;aACrC,IAAM,iBAAiB,GAAG,CAAC,IAAI,aAAa,GAAG,CAAC,CAAC,CAAC;aAClD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,aAAa,EAAE,CAAC,EAAG,EAAE;iBACvC,IAAM,OAAO,GAAG,CAAC,GAAG,iBAAiB,CAAC;;iBAEtC,IAAM,CAAC,GAAG,OAAO,CAAC;iBAClB,IAAM,CAAC,GAAG,OAAO,GAAG,aAAa,GAAG,CAAC,CAAC;iBACtC,IAAM,CAAC,GAAG,OAAO,GAAG,aAAa,GAAG,CAAC,CAAC;iBACtC,IAAM,CAAC,GAAG,OAAO,GAAG,CAAC,CAAC;;iBAEtB,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;iBAAC,WAAW,EAAE,CAAC;iBAC5C,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;iBAAC,WAAW,EAAE,CAAC;iBAC5C,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;iBAAC,WAAW,EAAE,CAAC;;iBAE5C,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;iBAAC,WAAW,EAAE,CAAC;iBAC5C,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;iBAAC,WAAW,EAAE,CAAC;iBAC5C,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;iBAAC,WAAW,EAAE,CAAC;cAC7C;UACF;;SAED,KAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;SACvB,KAAI,CAAC,YAAY,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;SACxC,KAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;SACrC,KAAI,CAAC,YAAY,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;;MAC9B;KACH,yBAAC;CAAD,CA/EA,CAAwC,cAAc;;CCLtD;;;AAGA;KAAkCA,gCAAQ;KACxC,sBAAY,WAAmB,EAAE,WAAmB,EAAE,aAAqB,EAAE,WAAmB,EAAE,UAAkB,EAAE,WAAmB;SAAzI,YACE,iBAAO,SAWR;SAVC,KAAI,CAAC,IAAI,GAAG,cAAc,CAAC;SAC3B,KAAI,CAAC,UAAU,GAAG;aAChB,WAAW,EAAE,WAAW;aACxB,WAAW,EAAE,WAAW;aACxB,aAAa,EAAE,aAAa;aAC5B,WAAW,EAAE,WAAW;aACxB,UAAU,EAAE,UAAU;aACtB,WAAW,EAAE,WAAW;UACzB,CAAC;SACF,KAAI,CAAC,kBAAkB,CAAC,IAAI,kBAAkB,CAAC,WAAW,EAAE,WAAW,EAAE,aAAa,EAAE,WAAW,EAAE,UAAU,EAAE,WAAW,CAAC,CAAC,CAAC;;MAChI;KACH,mBAAC;CAAD,CAdA,CAAkC,QAAQ;;CCH1C;;;;AAIA;KAAmCA,iCAAQ;KACzC,uBAAY,KAAa,EAAE,MAAc,EAAE,aAAsB,EAAE,cAAuB;SAA1F,YACE,iBAAO,SASR;SARC,KAAI,CAAC,IAAI,GAAG,eAAe,CAAC;SAC5B,KAAI,CAAC,UAAU,GAAG;aAChB,KAAK,EAAE,KAAK;aACZ,MAAM,EAAE,MAAM;aACd,aAAa,EAAE,aAAa;aAC5B,cAAc,EAAE,cAAc;UAC/B,CAAC;SACF,KAAI,CAAC,kBAAkB,CAAC,IAAI,mBAAmB,CAAC,KAAK,EAAE,MAAM,EAAE,aAAa,EAAE,cAAc,CAAC,CAAC,CAAC;;MAChG;KACH,oBAAC;CAAD,CAZA,CAAmC,QAAQ;;CCD3C;;;CAGC;CACA;CACA;CACA;CACA;CACA;AACD;KAAyCA,uCAAc;KACrD,6BAAY,MAAiB,EAAE,QAAgB,EAAE,QAAgB,EAAE,SAAiB;SAApF,YACE,iBAAO,SA+FR;SA9FC,KAAI,CAAC,IAAI,GAAG,qBAAqB,CAAC;SAClC,KAAI,CAAC,UAAU,GAAG;aAChB,MAAM,EAAE,MAAM;aACd,QAAQ,EAAE,QAAQ;aAClB,QAAQ,EAAE,QAAQ;aAClB,SAAS,EAAE,SAAS;UACrB,CAAC;SACF,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;SACtC,QAAQ,GAAG,QAAQ,IAAI,CAAC,CAAC;SACzB,SAAS,GAAG,SAAS,IAAI,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;;SAErC,SAAS,GAAG,KAAK,CAAC,KAAK,CAAC,SAAS,EAAE,CAAC,EAAE,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;;SAEnD,IAAM,WAAW,GAAG,CAAC,QAAQ,GAAG,CAAC,IAAI,MAAM,CAAC,MAAM,CAAC;SACnD,IAAM,UAAU,GAAG,QAAQ,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC;;SAEpD,IAAM,OAAO,GAAG,IAAI,eAAe,CAAC,KAAK,UAAU,GAAG,KAAK,GAAG,WAAW,GAAG,WAAW,EAAE,UAAU,CAAC,EAAG,CAAC,CAAC,CAAC;SAC1G,IAAM,QAAQ,GAAG,IAAI,eAAe,CAAC,IAAI,YAAY,CAAC,WAAW,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;SAC3E,IAAM,GAAG,GAAG,IAAI,eAAe,CAAC,IAAI,YAAY,CAAC,WAAW,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;;SAEtE,IAAI,KAAK,GAAG,CAAC,EAAE,WAAW,GAAG,CAAC,CAAC;SAC/B,IAAM,eAAe,GAAG,GAAG,GAAG,QAAQ,CAAC;SACvC,IAAM,MAAM,GAAG,IAAI,OAAO,EAAE,CAAC;SAC7B,IAAM,EAAE,GAAG,IAAI,OAAO,EAAE,CAAC;;SAEzB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,QAAQ,EAAE,CAAC,EAAG,EAAE;aACnC,IAAM,GAAG,GAAG,QAAQ,GAAG,CAAC,GAAG,eAAe,GAAG,SAAS,CAAC;aACvD,IAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;aAC1B,IAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;aAC1B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,KAAK,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC,EAAG,EAAE;;iBAE9C,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;iBAC7B,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;iBACvB,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;iBAC7B,QAAQ,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC;;iBAErD,EAAE,CAAC,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC;iBACpB,EAAE,CAAC,CAAC,GAAG,CAAC,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;iBAC/B,GAAG,CAAC,KAAK,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;;iBAE7B,KAAK,EAAG,CAAC;cACV;UACF;;SAED,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,EAAE,CAAC,EAAG,EAAE;aAClC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC,EAAG,EAAE;iBAC7C,IAAM,IAAI,GAAG,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC;;iBAEnC,IAAM,CAAC,GAAG,IAAI,CAAC;iBACf,IAAM,CAAC,GAAG,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC;iBAC/B,IAAM,CAAC,GAAG,IAAI,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;iBACnC,IAAM,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC;;iBAEnB,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;iBAAC,WAAW,EAAE,CAAC;iBAC5C,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;iBAAC,WAAW,EAAE,CAAC;iBAC5C,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;iBAAC,WAAW,EAAE,CAAC;;iBAE5C,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;iBAAC,WAAW,EAAE,CAAC;iBAC5C,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;iBAAC,WAAW,EAAE,CAAC;iBAC5C,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;iBAAC,WAAW,EAAE,CAAC;cAC7C;UACF;;SAED,KAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;SACvB,KAAI,CAAC,YAAY,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;SACxC,KAAI,CAAC,YAAY,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;;SAE7B,KAAI,CAAC,oBAAoB,EAAE,CAAC;;;SAG5B,IAAI,SAAS,KAAK,IAAI,CAAC,EAAE,GAAG,CAAC,EAAE;aAC7B,IAAM,OAAO,GAAG,KAAI,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC;aAC7C,IAAM,EAAE,GAAG,IAAI,OAAO,EAAE,CAAC;aACzB,IAAM,EAAE,GAAG,IAAI,OAAO,EAAE,CAAC;aACzB,IAAM,CAAC,GAAG,IAAI,OAAO,EAAE,CAAC;;aAExB,IAAM,IAAI,GAAG,QAAQ,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;aAC1C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAG,EAAE,CAAC,IAAI,CAAC,EAAE;;iBAEtD,EAAE,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;iBACtB,EAAE,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;iBACtB,EAAE,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;;iBAEtB,EAAE,CAAC,CAAC,GAAG,OAAO,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;iBAC7B,EAAE,CAAC,CAAC,GAAG,OAAO,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;iBAC7B,EAAE,CAAC,CAAC,GAAG,OAAO,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;;iBAE7B,CAAC,CAAC,UAAU,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC;;iBAEjC,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,OAAO,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;iBAC7C,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,OAAO,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;iBAC7C,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,OAAO,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;cAC9C;UACF;;MACF;KACH,0BAAC;CAAD,CAlGA,CAAyC,cAAc;;CCXvD;;;;;CAKA;CACA;CACA;CACA;CACA;CACA;AACA;KAAmCA,iCAAQ;KACzC,uBAAY,MAAiB,EAAE,QAAgB,EAAE,QAAiB,EAAE,SAAkB;SAAtF,YACE,iBAAO,SAUR;SATC,KAAI,CAAC,IAAI,GAAG,eAAe,CAAC;SAC5B,KAAI,CAAC,UAAU,GAAG;aAChB,MAAM,EAAE,MAAM;aACd,QAAQ,EAAE,QAAQ;aAClB,QAAQ,EAAE,QAAQ;aAClB,SAAS,EAAE,SAAS;UACrB,CAAC;SACF,KAAI,CAAC,kBAAkB,CAAC,IAAI,mBAAmB,CAAC,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC,CAAC;SACxF,KAAI,CAAC,aAAa,EAAE,CAAC;;MACtB;KACH,oBAAC;CAAD,CAbA,CAAmC,QAAQ;;CCV3C;;;AAGA;KAAmCA,iCAAc;KAC/C,uBAAY,QAAmC,EAAE,cAA0B;SAA1B,+BAAA,EAAA,kBAA0B;SAA3E,YACE,iBAAO,SA+CR;SA9CC,IAAM,YAAY,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,GAAG,cAAc,CAAC,CAAC;SAC9D,IAAM,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,GAAG,EAAE,CAAC;SAC/B,SAAS,YAAY,CAAC,CAAS,EAAE,CAAS;aACxC,OAAO,CAAC,GAAG,CAAC,CAAC;UACd;SACD,IAAM,IAAI,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;SAC7B,IAAI,SAAmB,CAAC;SACxB,KAAK,QAAQ,IAAI,QAAQ,YAAY,cAAc,GAAG;aACpD,SAAS,GAAG,IAAI,QAAQ,EAAE,CAAC;aAC3B,SAAS,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC;UACxC;cAAM,IAAI,QAAQ,IAAI,QAAQ,YAAY,QAAQ,EAAE;aACnD,SAAS,GAAG,QAAQ,CAAC,KAAK,EAAE,CAAC;UAC9B;SACD,SAAS,CAAC,aAAa,EAAE,CAAC;SAC1B,SAAS,CAAC,kBAAkB,EAAE,CAAC;SAC/B,IAAM,QAAQ,GAAG,SAAS,CAAC,QAAQ,CAAC;SACpC,IAAM,KAAK,GAAG,SAAS,CAAC,KAAK,CAAC;SAC9B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAG,EAAE;aAC7C,IAAM,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;aACtB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAG,EAAE;iBAC3B,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;iBACxB,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;iBAClC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;iBACxB,IAAM,GAAG,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;iBAC5B,IAAI,IAAI,CAAC,GAAG,CAAC,KAAK,SAAS,EAAE;qBAC3B,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,CAAC;kBAC5E;sBAAM;qBACL,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC;kBACrB;cACF;UACF;SACD,IAAM,MAAM,GAAG,EAAE,CAAC;SAClB,KAAK,IAAI,GAAG,IAAI,IAAI,EAAE;aACpB,IAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;aACpB,IAAI,CAAC,CAAC,KAAK,KAAK,SAAS,IAAI,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,IAAI,YAAY,EAAE;iBAC7F,IAAM,OAAO,GAAG,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;iBAClC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;iBACvB,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;iBACvB,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;iBACvB,IAAM,OAAO,GAAG,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;iBAClC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;iBACvB,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;iBACvB,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;cACxB;UACF;SACD,KAAI,CAAC,YAAY,CAAC,UAAU,EAAE,IAAI,eAAe,CAAC,IAAI,YAAY,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;;MACjF;KACH,oBAAC;CAAD,CAlDA,CAAmC,cAAc;;CCHjD;;;AAGA;KAA4CA,0CAAc;KACxD,gCAAY,SAAiB,EAAE,YAAoB,EAAE,MAAc,EAAE,cAAsB,EAAE,cAAsB,EAAE,SAAmB,EAAE,UAAmB,EAAE,WAAoB;SAAnL,YACE,iBAAO,SAmMR;SAlMC,KAAI,CAAC,IAAI,GAAG,wBAAwB,CAAC;SACrC,KAAI,CAAC,UAAU,GAAG;aAChB,SAAS,EAAE,SAAS;aACpB,YAAY,EAAE,YAAY;aAC1B,MAAM,EAAE,MAAM;aACd,cAAc,EAAE,cAAc;aAC9B,cAAc,EAAE,cAAc;aAC9B,SAAS,EAAE,SAAS;aACpB,UAAU,EAAE,UAAU;aACtB,WAAW,EAAE,WAAW;UACzB,CAAC;SACF,IAAM,KAAK,GAAG,KAAI,CAAC;SACnB,SAAS,GAAG,SAAS,KAAK,SAAS,GAAG,SAAS,GAAG,EAAE,CAAC;SACrD,YAAY,GAAG,YAAY,KAAK,SAAS,GAAG,YAAY,GAAG,EAAE,CAAC;SAC9D,MAAM,GAAG,MAAM,KAAK,SAAS,GAAG,MAAM,GAAG,GAAG,CAAC;SAC7C,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;SACjD,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;SACjD,SAAS,GAAG,SAAS,KAAK,SAAS,GAAG,SAAS,GAAG,KAAK,CAAC;SACxD,UAAU,GAAG,UAAU,KAAK,SAAS,GAAG,UAAU,GAAG,GAAG,CAAC;SACzD,WAAW,GAAG,WAAW,KAAK,SAAS,GAAG,WAAW,GAAG,GAAG,GAAG,IAAI,CAAC,EAAE,CAAC;;SAEtE,IAAI,KAAK,GAAG,CAAC,CAAC;SACd,IAAI,SAAS,KAAK,KAAK,EAAE;aACvB,IAAI,SAAS,GAAG,CAAC;iBAAE,KAAK,EAAG,CAAC;aAC5B,IAAI,YAAY,GAAG,CAAC;iBAAE,KAAK,EAAG,CAAC;UAChC;SACD,IAAM,WAAW,GAAG,oBAAoB,EAAE,CAAC;SAC3C,IAAM,UAAU,GAAG,mBAAmB,EAAE,CAAC;;SAEzC,IAAM,OAAO,GAAG,IAAI,eAAe,CAAC,KAAK,UAAU,GAAG,KAAK,GAAG,WAAW,GAAG,WAAW,EAAE,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC;SACzG,IAAM,QAAQ,GAAG,IAAI,eAAe,CAAC,IAAI,YAAY,CAAC,WAAW,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;SAC3E,IAAM,OAAO,GAAG,IAAI,eAAe,CAAC,IAAI,YAAY,CAAC,WAAW,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;SAC1E,IAAM,GAAG,GAAG,IAAI,eAAe,CAAC,IAAI,YAAY,CAAC,WAAW,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;;SAEtE,IAAI,KAAK,GAAG,CAAC,EACT,WAAW,GAAG,CAAC,EACf,UAAU,GAAU,EAAE,EACtB,UAAU,GAAG,MAAM,GAAG,CAAC,CAAC;;SAE5B,IAAI,UAAU,GAAG,CAAC,CAAC;;SAEnB,aAAa,EAAE,CAAC;SAChB,IAAI,SAAS,KAAK,KAAK,EAAE;aACvB,IAAI,SAAS,GAAG,CAAC;iBAAE,WAAW,CAAC,IAAI,CAAC,CAAC;aACrC,IAAI,YAAY,GAAG,CAAC;iBAAE,WAAW,CAAC,KAAK,CAAC,CAAC;UAC1C;;SAED,KAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;SACvB,KAAI,CAAC,YAAY,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;SACxC,KAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;SACrC,KAAI,CAAC,YAAY,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;;SAE7B,SAAS,oBAAoB;aAC3B,IAAI,KAAK,GAAG,CAAC,cAAc,GAAG,CAAC,KAAK,cAAc,GAAG,CAAC,CAAC,CAAC;aACxD,IAAI,SAAS,KAAK,KAAK,EAAE;iBACvB,KAAK,IAAI,CAAC,CAAC,cAAc,GAAG,CAAC,IAAI,KAAK,KAAK,cAAc,GAAG,KAAK,CAAC,CAAC;cACpE;aACD,OAAO,KAAK,CAAC;UACd;SACD,SAAS,mBAAmB;aAC1B,IAAI,KAAK,GAAG,cAAc,GAAG,cAAc,GAAG,CAAC,GAAG,CAAC,CAAC;aACpD,IAAI,SAAS,KAAK,KAAK,EAAE;iBACvB,KAAK,IAAI,cAAc,GAAG,KAAK,GAAG,CAAC,CAAC;cACrC;aACD,OAAO,KAAK,CAAC;UACd;SACD,SAAS,aAAa;aACpB,IAAM,MAAM,GAAG,IAAI,OAAO,EAAE,CAAC;aAC7B,IAAM,MAAM,GAAG,IAAI,OAAO,EAAE,CAAC;aAC7B,IAAI,UAAU,GAAG,CAAC,CAAC;;aAEnB,IAAM,KAAK,GAAG,CAAC,YAAY,GAAG,SAAS,IAAI,MAAM,CAAC;;aAElD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,cAAc,EAAE,CAAC,EAAG,EAAE;iBACzC,IAAM,QAAQ,GAAG,EAAE,CAAC;iBACpB,IAAM,CAAC,GAAG,CAAC,GAAG,cAAc,CAAC;;iBAE7B,IAAM,MAAM,GAAG,CAAC,IAAI,YAAY,GAAG,SAAS,CAAC,GAAG,SAAS,CAAC;iBAC1D,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,cAAc,EAAE,CAAC,EAAG,EAAE;qBACzC,IAAM,CAAC,GAAG,CAAC,GAAG,cAAc,CAAC;qBAC7B,IAAM,KAAK,GAAG,CAAC,GAAG,WAAW,GAAG,UAAU,CAAC;qBAC3C,IAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;qBACjC,IAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;;qBAEjC,MAAM,CAAC,CAAC,GAAG,MAAM,GAAG,QAAQ,CAAC;qBAC7B,MAAM,CAAC,CAAC,GAAG,CAAE,CAAC,GAAG,MAAM,GAAG,UAAU,CAAC;qBACrC,MAAM,CAAC,CAAC,GAAG,MAAM,GAAG,QAAQ,CAAC;qBAC7B,QAAQ,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC;;qBAErD,MAAM,CAAC,GAAG,CAAC,QAAQ,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC,SAAS,EAAE,CAAC;qBAClD,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC;;qBAEpD,GAAG,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;;qBAE3B,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;;qBAErB,KAAK,EAAG,CAAC;kBACV;;iBAED,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;cAC3B;;aAED,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,cAAc,EAAE,CAAC,EAAG,EAAE;iBACxC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,cAAc,EAAE,CAAC,EAAG,EAAE;;qBAExC,IAAM,EAAE,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;qBAC5B,IAAM,EAAE,GAAG,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;qBAChC,IAAM,EAAE,GAAG,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;qBACpC,IAAM,EAAE,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;;qBAEhC,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC;qBAAC,WAAW,EAAG,CAAC;qBAC9C,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC;qBAAC,WAAW,EAAG,CAAC;qBAC9C,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC;qBAAC,WAAW,EAAG,CAAC;;qBAE9C,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC;qBAAC,WAAW,EAAG,CAAC;qBAC9C,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC;qBAAC,WAAW,EAAG,CAAC;qBAC9C,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC;qBAAC,WAAW,EAAG,CAAC;;qBAE9C,UAAU,IAAI,CAAC,CAAC;kBACjB;cACF;;aAED,KAAK,CAAC,QAAQ,CAAC,UAAU,EAAE,UAAU,EAAE,CAAC,CAAC,CAAC;;aAE1C,UAAU,IAAI,UAAU,CAAC;UAC1B;SACD,SAAS,WAAW,CAAC,GAAY;aAC/B,IAAM,EAAE,GAAG,IAAI,OAAO,EAAE,CAAC;aACzB,IAAM,MAAM,GAAG,IAAI,OAAO,EAAE,CAAC;aAC7B,IAAI,UAAU,GAAG,CAAC,CAAC;aACnB,IAAM,MAAM,GAAG,CAAC,GAAG,KAAK,IAAI,IAAI,SAAS,GAAG,YAAY,CAAC;aACzD,IAAM,IAAI,GAAG,CAAC,GAAG,KAAK,IAAI,IAAI,CAAC,GAAG,CAAE,CAAC,CAAC;;aAEtC,IAAM,gBAAgB,GAAG,KAAK,CAAC;;;;aAI/B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,cAAc,EAAE,CAAC,EAAG,EAAE;;iBAEzC,QAAQ,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,EAAE,UAAU,GAAG,IAAI,EAAE,CAAC,CAAC,CAAC;;iBAEhD,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;;iBAElC,EAAE,CAAC,CAAC,GAAG,GAAG,CAAC;iBACX,EAAE,CAAC,CAAC,GAAG,GAAG,CAAC;iBACX,GAAG,CAAC,KAAK,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;;iBAE7B,KAAK,EAAG,CAAC;cACV;;aAED,IAAM,cAAc,GAAG,KAAK,CAAC;;aAE7B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,cAAc,EAAE,CAAC,EAAG,EAAE;iBACzC,IAAM,CAAC,GAAG,CAAC,GAAG,cAAc,CAAC;iBAC7B,IAAM,KAAK,GAAG,CAAC,GAAG,WAAW,GAAG,UAAU,CAAC;iBAC3C,IAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;iBACjC,IAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;;iBAEjC,MAAM,CAAC,CAAC,GAAG,MAAM,GAAG,QAAQ,CAAC;iBAC7B,MAAM,CAAC,CAAC,GAAG,UAAU,GAAG,IAAI,CAAC;iBAC7B,MAAM,CAAC,CAAC,GAAG,MAAM,GAAG,QAAQ,CAAC;iBAC7B,QAAQ,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC;;iBAErD,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;;iBAElC,EAAE,CAAC,CAAC,GAAG,CAAC,QAAQ,GAAG,GAAG,IAAI,GAAG,CAAC;iBAC9B,EAAE,CAAC,CAAC,GAAG,CAAC,QAAQ,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,CAAC;iBACrC,GAAG,CAAC,KAAK,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;;iBAE7B,KAAK,EAAG,CAAC;cACV;;aAED,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,cAAc,EAAE,CAAC,EAAG,EAAE;iBACxC,IAAM,CAAC,GAAG,gBAAgB,GAAG,CAAC,CAAC;iBAC/B,IAAM,CAAC,GAAG,cAAc,GAAG,CAAC,CAAC;iBAC7B,IAAI,GAAG,KAAK,IAAI,EAAE;;qBAEhB,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;qBAAC,WAAW,EAAG,CAAC;qBAC7C,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;qBAAC,WAAW,EAAG,CAAC;qBACjD,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;qBAAC,WAAW,EAAG,CAAC;kBAC9C;sBAAM;;qBAEL,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;qBAAC,WAAW,EAAG,CAAC;qBACjD,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;qBAAC,WAAW,EAAG,CAAC;qBAC7C,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;qBAAC,WAAW,EAAG,CAAC;kBAC9C;;iBAED,UAAU,IAAI,CAAC,CAAC;cACjB;;aAED,KAAK,CAAC,QAAQ,CAAC,UAAU,EAAE,UAAU,EAAE,GAAG,KAAK,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;;aAE7D,UAAU,IAAI,UAAU,CAAC;UAC1B;;MACF;KACH,6BAAC;CAAD,CAtMA,CAA4C,cAAc;;CCL1D;;;AAGA;KAAsCA,oCAAQ;KAC5C,0BAAY,SAAiB,EAAE,YAAoB,EAAE,MAAc,EAAE,cAAsB,EAAE,cAAsB,EAAE,SAAmB,EAAE,UAAmB,EAAE,WAAoB;SAAnL,YACE,iBAAO,SAcR;SAbC,KAAI,CAAC,IAAI,GAAG,kBAAkB,CAAC;SAC/B,KAAI,CAAC,UAAU,GAAG;aAChB,SAAS,EAAE,SAAS;aACpB,YAAY,EAAE,YAAY;aAC1B,MAAM,EAAE,MAAM;aACd,cAAc,EAAE,cAAc;aAC9B,cAAc,EAAE,cAAc;aAC9B,SAAS,EAAE,SAAS;aACpB,UAAU,EAAE,UAAU;aACtB,WAAW,EAAE,WAAW;UACzB,CAAC;SACF,KAAI,CAAC,kBAAkB,CAAC,IAAI,sBAAsB,CAAC,SAAS,EAAE,YAAY,EAAE,MAAM,EAAE,cAAc,EAAE,cAAc,EAAE,SAAS,EAAE,UAAU,EAAE,WAAW,CAAC,CAAC,CAAC;SACzJ,KAAI,CAAC,aAAa,EAAE,CAAC;;MACtB;KACH,uBAAC;CAAD,CAjBA,CAAsC,QAAQ;;CCJ9C;;;AAGA;KAAkCA,gCAAgB;KAChD,sBAAY,MAAc,EAAE,MAAc,EAAE,cAAsB,EAAE,cAAsB,EAAE,SAAkB,EAAE,UAAkB,EAAE,WAAmB;SAAvJ,YACE,kBAAM,CAAC,EAAE,MAAM,EAAE,MAAM,EAAE,cAAc,EAAE,cAAc,EAAE,SAAS,EAAE,UAAU,EAAE,WAAW,CAAC,SAW7F;SAVC,KAAI,CAAC,IAAI,GAAG,cAAc,CAAC;SAC3B,KAAI,CAAC,UAAU,GAAG;aAChB,MAAM,EAAE,MAAM;aACd,MAAM,EAAE,MAAM;aACd,cAAc,EAAE,cAAc;aAC9B,cAAc,EAAE,cAAc;aAC9B,SAAS,EAAE,SAAS;aACpB,UAAU,EAAE,UAAU;aACtB,WAAW,EAAE,WAAW;UACzB,CAAC;;MACH;KACH,mBAAC;CAAD,CAdA,CAAkC,gBAAgB;;CCHlD;;;AAGA;KAAwCA,sCAAsB;KAC5D,4BACE,MAAc,EAAE,MAAc,EAAE,cAAsB,EAAE,cAAsB,EAAE,SAAkB,EAAE,UAAkB,EAAE,WAAmB;SAD7I,YAEE,kBAAM,CAAC,EAAE,MAAM,EAAE,MAAM,EAAE,cAAc,EAAE,cAAc,EAAE,SAAS,EAAE,UAAU,EAAE,WAAW,CAAC,SAW7F;SAVC,KAAI,CAAC,IAAI,GAAG,oBAAoB,CAAC;SACjC,KAAI,CAAC,UAAU,GAAG;aAChB,MAAM,EAAE,MAAM;aACd,MAAM,EAAE,MAAM;aACd,cAAc,EAAE,cAAc;aAC9B,cAAc,EAAE,cAAc;aAC9B,SAAS,EAAE,SAAS;aACpB,UAAU,EAAE,UAAU;aACtB,WAAW,EAAE,WAAW;UACzB,CAAC;;MACH;KACH,yBAAC;CAAD,CAfA,CAAwC,sBAAsB;;CCA9D;;;AAGA;KAA0CA,wCAAc;KACtD,8BAAY,MAAc,EAAE,QAAgB,EAAE,UAAkB,EAAE,WAAmB;SAArF,YACE,iBAAO,SAqCR;SApCC,KAAI,CAAC,IAAI,GAAG,sBAAsB,CAAC;SACnC,KAAI,CAAC,UAAU,GAAG;aAChB,MAAM,EAAE,MAAM;aACd,QAAQ,EAAE,QAAQ;aAClB,UAAU,EAAE,UAAU;aACtB,WAAW,EAAE,WAAW;UACzB,CAAC;SACF,MAAM,GAAG,MAAM,IAAI,EAAE,CAAC;SACtB,QAAQ,GAAG,QAAQ,KAAK,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,QAAQ,CAAC,GAAG,CAAC,CAAC;SAC9D,UAAU,GAAG,UAAU,KAAK,SAAS,GAAG,UAAU,GAAG,CAAC,CAAC;SACvD,WAAW,GAAG,WAAW,KAAK,SAAS,GAAG,WAAW,GAAG,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;SACpE,IAAM,QAAQ,GAAG,QAAQ,GAAG,CAAC,CAAC;SAC9B,IAAM,SAAS,GAAG,IAAI,YAAY,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC;SACjD,IAAM,OAAO,GAAG,IAAI,YAAY,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC;SAC/C,IAAM,GAAG,GAAG,IAAI,YAAY,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC;;SAE3C,OAAO,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;SACjB,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;SACb,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;SACb,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,EAAG,CAAC,IAAI,QAAQ,EAAE,CAAC,EAAG,EAAE,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE;aACpE,IAAM,OAAO,GAAG,UAAU,GAAG,CAAC,GAAG,QAAQ,GAAG,WAAW,CAAC;aACxD,SAAS,CAAC,CAAC,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;aAC1C,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;aAC9C,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;aACnB,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,MAAM,GAAG,CAAC,IAAI,CAAC,CAAC;aAC1C,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,GAAG,CAAC,IAAI,CAAC,CAAC;UACnD;SACD,IAAM,OAAO,GAAG,EAAE,CAAC;SACnB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,QAAQ,EAAE,CAAC,EAAG,EAAE;aACnC,OAAO,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;UAC3B;SACD,KAAI,CAAC,QAAQ,CAAC,IAAI,eAAe,CAAC,IAAI,WAAW,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;SAChE,KAAI,CAAC,YAAY,CAAC,UAAU,EAAE,IAAI,eAAe,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC;SACjE,KAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,IAAI,eAAe,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,CAAC;SAC7D,KAAI,CAAC,YAAY,CAAC,IAAI,EAAE,IAAI,eAAe,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;SACrD,KAAI,CAAC,cAAc,GAAG,IAAI,MAAM,CAAC,IAAI,OAAO,EAAE,EAAE,MAAM,CAAC,CAAC;;MACzD;KACH,2BAAC;CAAD,CAxCA,CAA0C,cAAc;;CCLxD;;;AAGA;KAAoCA,kCAAQ;KAC1C,wBAAY,MAAc,EAAE,QAAgB,EAAE,UAAkB,EAAE,WAAmB;SAArF,YACE,iBAAO,SASR;SARC,KAAI,CAAC,IAAI,GAAG,gBAAgB,CAAC;SAC7B,KAAI,CAAC,UAAU,GAAG;aAChB,MAAM,EAAE,MAAM;aACd,QAAQ,EAAE,QAAQ;aAClB,UAAU,EAAE,UAAU;aACtB,WAAW,EAAE,WAAW;UACzB,CAAC;SACF,KAAI,CAAC,kBAAkB,CAAC,IAAI,oBAAoB,CAAC,MAAM,EAAE,QAAQ,EAAE,UAAU,EAAE,WAAW,CAAC,CAAC,CAAC;;MAC9F;KACH,qBAAC;CAAD,CAZA,CAAoC,QAAQ;;CCH5C;;;;AAIA;KAAiCA,+BAAQ;KACvC,qBAAY,KAAa,EAAE,MAAc,EAAE,KAAa,EAAE,aAAsB,EAAE,cAAuB,EAAE,aAAsB;SAAjI,YACE,iBAAO,SAYR;SAXC,KAAI,CAAC,IAAI,GAAG,aAAa,CAAC;SAC1B,KAAI,CAAC,UAAU,GAAG;aAChB,KAAK,EAAE,KAAK;aACZ,MAAM,EAAE,MAAM;aACd,KAAK,EAAE,KAAK;aACZ,aAAa,EAAE,aAAa;aAC5B,cAAc,EAAE,cAAc;aAC9B,aAAa,EAAE,aAAa;UAC7B,CAAC;SACF,KAAI,CAAC,kBAAkB,CAAC,IAAI,iBAAiB,CAAC,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,aAAa,EAAE,cAAc,EAAE,aAAa,CAAC,CAAC,CAAC;SACnH,KAAI,CAAC,aAAa,EAAE,CAAC;;MACtB;KACH,kBAAC;CAAD,CAfA,CAAiC,QAAQ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KCGLA,kCAAc;KAEhD;SAAA,YACE,kBAAM;aACJ,QAAQ,EAAE,aAAa,CAAC,KAAK,CAAC;iBAC5B,WAAW,CAAC,QAAQ,CAAC;iBACrB;qBACE,OAAO,EAAE,EAAE,KAAK,EAAE,GAAG,EAAE;kBACxB;cACF,CAAC;aACF,YAAY,EAAE,WAAW,CAAC,aAAa,CAAC;aACxC,cAAc,EAAE,WAAW,CAAC,aAAa,CAAC;UAC3C,CAAC,SAGH;SAdQ,sBAAgB,GAAY,IAAI,CAAC;SAYxC,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC;SACnB,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC;;MACzB;KACD,sBAAI,mCAAO;cAAX,cAAwB,OAAO,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;cAC7D,UAAY,KAAa,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC,EAAE;;;QADN;KAE/D,qBAAC;CAAD,CAlBA,CAAoC,cAAc;;;;;;;;;;;;;;;;;;;;;;;CCTlD;;;AAGA;KAAA;MAmBC;KAhBQ,SAAG,GAAV,UAAW,GAAW,EAAE,IAAS;SAC/B,IAAI,KAAK,CAAC,OAAO,KAAK,KAAK;aAAE,OAAO;;SAEpC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC;MACzB;KACM,SAAG,GAAV,UAAW,GAAW;SACpB,IAAI,KAAK,CAAC,OAAO,KAAK,KAAK;aAAE,OAAO;;SAEpC,OAAO,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;MACzB;KACM,YAAM,GAAb,UAAc,GAAW;SACvB,OAAO,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;MACzB;KACM,WAAK,GAAZ;SACE,KAAK,CAAC,KAAK,GAAG,EAAE,CAAC;MAClB;KAjBM,aAAO,GAAY,KAAK,CAAC;KACzB,WAAK,GAAG,EAAE,CAAC;KAiBpB,YAAC;EAnBD;;CCHA;;;AAGA;KAQE,wBAAY,MAAmB,EAAE,UAA2E,EAAE,OAA+B;SAP7I,cAAS,GAAY,KAAK,CAAC;SAC3B,gBAAW,GAAW,CAAC,CAAC;SACxB,eAAU,GAAW,CAAC,CAAC;SAMrB,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC;SACzB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;SACrB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;SAC7B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;MACxB;KACD,kCAAS,GAAT,UAAU,GAAW;SACnB,IAAI,CAAC,UAAU,EAAG,CAAC;SACnB,IAAI,IAAI,CAAC,SAAS,KAAK,KAAK,EAAE;aAC5B,IAAI,IAAI,CAAC,OAAO,KAAK,SAAS,EAAE;iBAC9B,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;cACtD;UACF;SACD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;MACvB;KACD,gCAAO,GAAP,UAAQ,GAAW;SACjB,IAAI,CAAC,WAAW,EAAG,CAAC;SACpB,IAAI,IAAI,CAAC,UAAU,KAAK,SAAS,EAAE;aACjC,IAAI,CAAC,UAAU,CAAC,GAAG,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;UACzD;SACD,IAAI,IAAI,CAAC,WAAW,KAAK,IAAI,CAAC,UAAU,EAAE;aACxC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;aACvB,IAAI,IAAI,CAAC,MAAM,KAAK,SAAS,EAAE;iBAC7B,IAAI,CAAC,MAAM,EAAE,CAAC;cACf;UACF;MACF;KACD,kCAAS,GAAT,UAAU,GAAW;SACnB,IAAI,IAAI,CAAC,OAAO,KAAK,SAAS,EAAE;aAC9B,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;UACnB;MACF;KACH,qBAAC;CAAD,CAAC,IAAA;KACY,qBAAqB,GAAG,IAAI,cAAc,EAAE;;CC1CzD;;;AAGA;KAKE,mBAAY,OAA+C;SAA/C,wBAAA,EAAA,+BAA+C;SACzD,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;MACxB;KACD,wBAAI,GAAJ,UAAK,GAAW,EAAE,MAAwD,EAAE,UAA2C,EAAE,OAAqC;SAC5J,IAAI,GAAG,KAAK,SAAS;aAAE,GAAG,GAAG,EAAE,CAAC;SAChC,IAAI,IAAI,CAAC,IAAI,KAAK,SAAS;aAAE,GAAG,GAAG,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;SACnD,IAAM,KAAK,GAAc,IAAI,CAAC;SAC9B,IAAM,MAAM,GAAQ,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;SACnC,IAAI,MAAM,KAAK,SAAS,EAAE;aACxB,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;aAC7B,UAAU,CAAC;iBACT,IAAI,MAAM;qBAAE,MAAM,CAAC,MAAM,CAAC,CAAC;iBAC3B,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;cAC5B,EAAE,CAAC,CAAC,CAAC;aACN,OAAO,MAAM,CAAC;UACf;SACD,IAAI,OAAuB,CAAC;;SAE5B,IAAI,YAAY,GAAG,6BAA6B,CAAC;SACjD,IAAI,kBAAkB,GAAG,GAAG,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;;SAEjD,IAAI,kBAAkB,EAAE;aACtB,IAAI,QAAQ,GAAG,kBAAkB,CAAC,CAAC,CAAC,CAAC;aACrC,IAAI,QAAQ,GAAG,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC;aACvC,IAAI,IAAI,GAAG,kBAAkB,CAAC,CAAC,CAAC,CAAC;aACjC,IAAI,GAAG,kBAAkB,CAAC,IAAI,CAAC,CAAC;aAChC,IAAI,QAAQ,EAAE;iBACZ,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;cAC1B;aACD,IAAI;iBACF,IAAI,UAAQ,CAAC;iBACb,IAAI,YAAY,GAAG,CAAC,IAAI,CAAC,YAAY,IAAI,EAAE,EAAE,WAAW,EAAE,CAAC;iBAC3D,QAAQ,YAAY;qBAClB,KAAK,aAAa,CAAC;qBACnB,KAAK,MAAM;yBACR,UAAQ,GAAG,IAAI,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;yBACzC,IAAI,IAAI,GAAG,IAAI,UAAU,CAAC,UAAQ,CAAC,CAAC;yBACpC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAG,EAAE;6BACnC,IAAI,CAAE,CAAC,CAAE,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;0BAClC;yBACD,IAAI,YAAY,KAAK,MAAM,EAAE;6BAC3B,UAAQ,GAAG,IAAI,IAAI,CAAC,CAAE,UAAQ,CAAE,EAAE,EAAE,MAAM,EAAG,QAAQ,EAAE,CAAC,CAAC;0BAC1D;yBACD,MAAM;qBACR,KAAK,UAAU;yBACb,IAAI,MAAM,GAAG,IAAI,SAAS,EAAE,CAAC;yBAC7B,UAAQ,GAAG,MAAM,CAAC,eAAe,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;yBAClD,MAAM;qBACR,KAAK,MAAM;yBACT,UAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;yBAC5B,MAAM;qBACR;yBACE,UAAQ,GAAG,IAAI,CAAC;yBAChB,MAAM;kBACT;;iBAED,MAAM,CAAC,UAAU,CAAC;qBAChB,IAAI,MAAM;yBAAE,MAAM,CAAC,UAAQ,CAAC,CAAC;qBAC7B,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;kBAC5B,EAAE,CAAC,CAAC,CAAC;cACP;aAAC,OAAO,KAAK,EAAE;;iBAEd,MAAM,CAAC,UAAU,CAAC;qBAChB,IAAI,OAAO;yBAAE,OAAO,CAAC,KAAK,CAAC,CAAC;qBAC5B,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;kBAC9B,EAAE,CAAC,CAAC,CAAC;cACP;UACF;cAAM;aACL,OAAO,GAAG,IAAI,cAAc,EAAE,CAAC;aAC/B,OAAO,CAAC,IAAI,CAAC,KAAK,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;aAC/B,OAAO,CAAC,gBAAgB,CAAC,MAAM,EAAE,UAAS,KAAc;iBACtD,IAAM,QAAQ,GAAW,OAAO,CAAC,QAAQ,CAAC;iBAC1C,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;iBACzB,IAAI,OAAO,CAAC,MAAM,KAAK,GAAG,EAAE;qBAC1B,IAAI,MAAM;yBAAE,MAAM,CAAC,QAAQ,CAAC,CAAC;qBAC7B,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;kBAC5B;sBAAM,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;;;qBAG/B,OAAO,CAAC,IAAI,CAAC,0CAA0C,CAAC,CAAC;qBACzD,IAAI,MAAM;yBAAE,MAAM,CAAC,QAAQ,CAAC,CAAC;qBAC7B,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;kBAC5B;sBAAM;qBACL,IAAI,OAAO;yBAAE,OAAO,CAAM,KAAK,CAAC,CAAC;qBACjC,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;kBAC9B;cACF,EAAE,KAAK,CAAC,CAAC;aACV,IAAI,UAAU,KAAK,SAAS,EAAE;iBAC5B,OAAO,CAAC,gBAAgB,CAAC,UAAU,EAAE,UAAS,KAAoB;qBAChE,UAAU,CAAC,KAAK,CAAC,CAAC;kBACnB,EAAE,KAAK,CAAC,CAAC;cACX;aACD,OAAO,CAAC,gBAAgB,CAAC,OAAO,EAAE,UAAS,KAAiB;iBAC1D,IAAI,OAAO;qBAAE,OAAO,CAAC,KAAK,CAAC,CAAC;iBAC5B,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;cAC9B,EAAE,KAAK,CAAC,CAAC;aACV,IAAI,IAAI,CAAC,YAAY,KAAK,SAAS;iBAAE,OAAO,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;aAC9E,IAAI,IAAI,CAAC,eAAe,KAAK,SAAS;iBAAE,OAAO,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC;aACvF,IAAI,OAAO,CAAC,gBAAgB;iBAAE,OAAO,CAAC,gBAAgB,CAAC,YAAY,CAAC,CAAC;aACrE,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;UACpB;SACD,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;SAC7B,OAAO,OAAO,CAAC;MAChB;KACD,2BAAO,GAAP,UAAQ,KAAa;SACnB,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;SAClB,OAAO,IAAI,CAAC;MACb;KACD,mCAAe,GAAf,UAAgB,KAAiC;SAC/C,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;SAC1B,OAAO,IAAI,CAAC;MACb;KACD,sCAAkB,GAAlB,UAAmB,KAAc;SAC/B,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;SAC7B,OAAO,IAAI,CAAC;MACb;KACH,gBAAC;CAAD,CAAC;;CC1HD;;;;;AAKA;KAIE,iCAAY,OAA+C;SAA/C,wBAAA,EAAA,+BAA+C;SACzD,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;;SAEvB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;MACrB;KACD,sCAAI,GAAJ,UAAK,GAAsB,EAAE,MAA4C,EAAE,UAA2C,EAAE,OAAqC;SAC3J,IAAM,KAAK,GAA4B,IAAI,CAAC;SAC5C,IAAM,MAAM,GAAU,EAAE,CAAC;SACzB,IAAM,OAAO,GAAsB,IAAI,iBAAiB,EAAE,CAAC;SAC3D,OAAO,CAAC,KAAK,GAAG,MAAM,CAAC;SACvB,IAAM,MAAM,GAAc,IAAI,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SACtD,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAC1B,MAAM,CAAC,eAAe,CAAC,aAAa,CAAC,CAAC;SACtC,IAAI,MAAM,GAAW,CAAC,CAAC;SACvB,SAAS,WAAW,CAAC,CAAS;aAC5B,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,UAAS,MAAmB;iBAC9C,IAAM,QAAQ,GAAG,KAAK,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;iBAC7C,MAAM,CAAC,CAAC,CAAC,GAAG;qBACV,KAAK,EAAE,QAAQ,CAAC,KAAK;qBACrB,MAAM,EAAE,QAAQ,CAAC,MAAM;qBACvB,MAAM,EAAE,QAAQ,CAAC,MAAM;qBACvB,OAAO,EAAE,QAAQ,CAAC,OAAO;kBAC1B,CAAC;iBACF,MAAM,IAAI,CAAC,CAAC;iBACZ,IAAI,MAAM,KAAK,CAAC,EAAE;qBAChB,IAAI,QAAQ,CAAC,WAAW,KAAK,CAAC;yBAC5B,OAAO,CAAC,SAAS,GAAGT,qBAAa,CAAC,MAAM,CAAC;qBAC3C,OAAO,CAAC,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC;qBACjC,OAAO,CAAC,WAAW,GAAG,IAAI,CAAC;qBAC3B,IAAI,MAAM;yBAAE,MAAM,CAAC,OAAO,CAAC,CAAC;kBAC7B;cACF,EAAE,UAAU,EAAE,OAAO,CAAC,CAAC;UACzB;SACD,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;aACtB,MAAM,GAAG,CAAC,CAAC;aACX,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,EAAG,CAAC,EAAE;iBAC7C,WAAW,CAAC,CAAC,CAAC,CAAC;cAChB;UACF;cAAM;;aAEL,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,UAAS,MAAmB;iBAC3C,IAAM,QAAQ,GAAG,KAAK,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;iBAC7C,IAAI,QAAQ,CAAC,SAAS,EAAE;qBACtB,IAAM,KAAK,GAAG,QAAQ,CAAC,OAAO,CAAC,MAAM,GAAG,QAAQ,CAAC,WAAW,CAAC;qBAC7D,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,EAAG,EAAE;yBAC/B,MAAM,CAAC,CAAC,CAAC,GAAG,EAAE,OAAO,EAAG,EAAE,EAAE,CAAC;yBAC7B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,WAAW,EAAE,CAAC,EAAG,EAAE;6BAC9C,MAAM,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,GAAG,QAAQ,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC,CAAC;6BACvE,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC;6BACnC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC;6BACjC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC;0BACpC;sBACF;kBACF;sBAAM;qBACL,OAAO,CAAC,KAAK,CAAC,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC;qBACrC,OAAO,CAAC,KAAK,CAAC,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC;qBACvC,OAAO,CAAC,OAAO,GAAG,QAAQ,CAAC,OAAO,CAAC;kBACpC;iBACD,IAAI,QAAQ,CAAC,WAAW,KAAK,CAAC,EAAE;qBAC9B,OAAO,CAAC,SAAS,GAAGA,qBAAa,CAAC,MAAM,CAAC;kBAC1C;iBACD,OAAO,CAAC,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC;iBACjC,OAAO,CAAC,WAAW,GAAG,IAAI,CAAC;iBAC3B,IAAI,MAAM;qBAAE,MAAM,CAAC,OAAO,CAAC,CAAC;cAC7B,EAAE,UAAU,EAAE,OAAO,CAAC,CAAC;UACzB;SACD,OAAO,OAAO,CAAC;MAChB;KACD,yCAAO,GAAP,UAAQ,KAAa;SACnB,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;SAClB,OAAO,IAAI,CAAC;MACb;KACH,8BAAC;CAAD,CAAC;;CCjFD;;;;;AAKA;KAGE,6BAAY,OAA+C;SAA/C,wBAAA,EAAA,+BAA+C;SACzD,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;;SAEvB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;MACrB;KACD,kCAAI,GAAJ,UAAK,GAAW,EAAE,MAAqD,EAAE,UAA2C,EAAE,OAAqC;SACzJ,IAAM,KAAK,GAAwB,IAAI,CAAC;SACxC,IAAM,OAAO,GAAgB,IAAI,WAAW,EAAE,CAAC;SAC/C,IAAM,MAAM,GAAc,IAAI,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SACtD,MAAM,CAAC,eAAe,CAAC,aAAa,CAAC,CAAC;SACtC,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,UAAS,MAAmB;aAC3C,IAAM,OAAO,GAAQ,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;aAC3C,IAAI,CAAE,OAAO;iBAAE,OAAO;aACtB,IAAI,SAAS,KAAK,OAAO,CAAC,KAAK,EAAE;iBAC/B,OAAO,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;cAC/B;kBAAM,IAAI,SAAS,KAAK,OAAO,CAAC,IAAI,EAAE;iBACrC,OAAO,CAAC,KAAK,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;iBACpC,OAAO,CAAC,KAAK,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;iBACtC,OAAO,CAAC,KAAK,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;cACnC;aACD,OAAO,CAAC,KAAK,GAAG,SAAS,KAAK,OAAO,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,GAAGD,uBAAe,CAAC,WAAW,CAAC;aAC1F,OAAO,CAAC,KAAK,GAAG,SAAS,KAAK,OAAO,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,GAAGA,uBAAe,CAAC,WAAW,CAAC;aAC1F,OAAO,CAAC,SAAS,GAAG,SAAS,KAAK,OAAO,CAAC,SAAS,GAAG,OAAO,CAAC,SAAS,GAAGC,qBAAa,CAAC,MAAM,CAAC;aAC/F,OAAO,CAAC,SAAS,GAAG,SAAS,KAAK,OAAO,CAAC,SAAS,GAAG,OAAO,CAAC,SAAS,GAAGA,qBAAa,CAAC,kBAAkB,CAAC;aAC3G,OAAO,CAAC,UAAU,GAAG,SAAS,KAAK,OAAO,CAAC,UAAU,GAAG,OAAO,CAAC,UAAU,GAAG,CAAC,CAAC;aAC/E,IAAI,SAAS,KAAK,OAAO,CAAC,MAAM,EAAE;iBAChC,OAAO,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;cACjC;aACD,IAAI,SAAS,KAAK,OAAO,CAAC,IAAI,EAAE;iBAC9B,OAAO,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;cAC7B;aACD,IAAI,SAAS,KAAK,OAAO,CAAC,OAAO,EAAE;iBACjC,OAAO,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC;cACnC;aACD,IAAI,CAAC,KAAK,OAAO,CAAC,WAAW,EAAE;iBAC7B,OAAO,CAAC,SAAS,GAAGA,qBAAa,CAAC,MAAM,CAAC;cAC1C;aACD,OAAO,CAAC,WAAW,GAAG,IAAI,CAAC;aAC3B,IAAI,MAAM;iBAAE,MAAM,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;UACtC,EAAE,UAAU,EAAE,OAAO,CAAC,CAAC;SACxB,OAAO,OAAO,CAAC;MAChB;KACH,0BAAC;CAAD,CAAC,IAAA;KACY,iBAAiB,GAAG,mBAAmB;;CCrDpD;;;AAGA;KAKE,qBAAY,OAA+C;SAA/C,wBAAA,EAAA,+BAA+C;SACzD,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;MACxB;KACD,0BAAI,GAAJ,UAAK,GAAW,EAAE,MAAyC,EAAE,UAA2C,EAAE,OAAqC;SAC7I,IAAM,KAAK,GAAgB,IAAI,CAAC;SAChC,IAAM,KAAK,GAAwC,QAAQ,CAAC,eAAe,CAAC,8BAA8B,EAAE,KAAK,CAAC,CAAC;SACnH,KAAK,CAAC,MAAM,GAAG,UAAS,KAAc;aACpC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC;aACpB,GAAG,CAAC,eAAe,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;aAC/B,IAAI,MAAM;iBAAE,MAAM,CAAC,KAAK,CAAC,CAAC;aAC1B,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;UAC5B,CAAC;SACF,KAAK,CAAC,OAAO,GAAG,OAAO,CAAC;SACxB,IAAI,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;aAC9B,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC;UACjB;cAAM;aACL,IAAM,MAAM,GAAc,IAAI,SAAS,EAAE,CAAC;aAC1C,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aAC1B,MAAM,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;aAC/B,MAAM,CAAC,kBAAkB,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;aAChD,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,UAAS,IAAU;iBAClC,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;cACvC,EAAE,UAAU,EAAE,OAAO,CAAC,CAAC;UACzB;SACD,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;SAC7B,OAAO,KAAK,CAAC;MACd;KACD,oCAAc,GAAd,UAAe,KAAa;SAC1B,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;SACzB,OAAO,IAAI,CAAC;MACb;KACD,wCAAkB,GAAlB,UAAmB,KAAc;SAC/B,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;SAC7B,OAAO,IAAI,CAAC;MACb;KACD,6BAAO,GAAP,UAAQ,KAAa;SACnB,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;SAClB,OAAO,IAAI,CAAC;MACb;KACH,kBAAC;CAAD,CAAC;;CC9CD;;;AAGA;KAIE,2BAAY,OAA+C;SAA/C,wBAAA,EAAA,+BAA+C;SACzD,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;MACxB;KACD,gCAAI,GAAJ,UAAK,IAAc,EAAE,MAAsC,EAAE,UAA2C,EAAE,OAAqC;SAC7I,IAAM,OAAO,GAAgB,IAAI,WAAW,EAAE,CAAC;SAC/C,IAAM,MAAM,GAAgB,IAAI,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SAC1D,MAAM,CAAC,cAAc,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;SACxC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAC1B,IAAI,MAAM,GAAW,CAAC,CAAC;SACvB,SAAS,WAAW,CAAC,CAAS;aAC5B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,UAAS,KAAuB;iBACnD,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;iBAC1B,MAAM,EAAG,CAAC;iBACV,IAAI,MAAM,KAAK,CAAC,EAAE;qBAChB,OAAO,CAAC,WAAW,GAAG,IAAI,CAAC;qBAC3B,IAAI,MAAM;yBAAE,MAAM,CAAC,OAAO,CAAC,CAAC;kBAC7B;cACF,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;UACxB;SACD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,EAAG,CAAC,EAAE;aACrC,WAAW,CAAC,CAAC,CAAC,CAAC;UAChB;SACD,OAAO,OAAO,CAAC;MAChB;KACD,0CAAc,GAAd,UAAe,KAAa;SAC1B,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;SACzB,OAAO,IAAI,CAAC;MACb;KACD,mCAAO,GAAP,UAAQ,KAAa;SACnB,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;SAClB,OAAO,IAAI,CAAC;MACb;KACH,wBAAC;CAAD,CAAC;;CCtCD;;;AAGA;KAKE,uBAAY,OAA+C;SAA/C,wBAAA,EAAA,+BAA+C;SACzD,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;MACxB;KACD,4BAAI,GAAJ,UAAK,GAAW,EAAE,MAAmC,EAAE,UAA2C,EAAE,OAAqC;SACvI,IAAM,OAAO,GAAY,IAAI,OAAO,EAAE,CAAC;SACvC,IAAM,MAAM,GAAgB,IAAI,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SAC1D,MAAM,CAAC,cAAc,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;SACxC,MAAM,CAAC,kBAAkB,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;SAChD,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAC1B,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,UAAS,KAAuB;;aAE/C,IAAM,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC,eAAe,CAAC,GAAG,CAAC,IAAI,GAAG,CAAC,MAAM,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC;aACzF,OAAO,CAAC,MAAM,GAAG,MAAM,GAAGE,qBAAa,CAAC,GAAG,GAAGA,qBAAa,CAAC,IAAI,CAAC;aACjE,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC;aACtB,OAAO,CAAC,WAAW,GAAG,IAAI,CAAC;aAC3B,IAAI,MAAM,KAAK,SAAS,EAAE;iBACxB,MAAM,CAAC,OAAO,CAAC,CAAC;cACjB;UACF,EAAE,UAAU,EAAE,OAAO,CAAC,CAAC;SACxB,OAAO,OAAO,CAAC;MAChB;KACD,sCAAc,GAAd,UAAe,KAAa;SAC1B,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;SACzB,OAAO,IAAI,CAAC;MACb;KACD,0CAAkB,GAAlB,UAAmB,KAAc;SAC/B,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;SAC7B,OAAO,IAAI,CAAC;MACb;KACD,+BAAO,GAAP,UAAQ,KAAa;SACnB,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;SAClB,OAAO,IAAI,CAAC;MACb;KACH,oBAAC;CAAD,CAAC;;CC7CD;;;;;AAKA;KAAA;MAoFC;;KAlFQ,yBAAU,GAAjB,UAAkB,KAAU,EAAE,IAAY,EAAE,EAAU;SACpD,IAAI,cAAc,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE;aACtC,OAAO,IAAI,KAAK,CAAC,WAAW,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;UACxD;SACD,OAAO,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;MAC9B;;KAEM,2BAAY,GAAnB,UAAoB,KAAU,EAAE,IAAS,EAAE,UAA2B;SAA3B,2BAAA,EAAA,kBAA2B;SACpE,IAAI,CAAE,KAAK;aACP,CAAE,UAAU,IAAI,KAAK,CAAC,WAAW,KAAK,IAAI;aAAE,OAAO,KAAK,CAAC;SAC7D,IAAI,OAAO,IAAI,CAAC,iBAAiB,KAAK,QAAQ,EAAE;aAC9C,OAAO,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC;UACxB;SACD,OAAO,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;MAC1C;KACM,2BAAY,GAAnB,UAAoB,MAAW;SAC7B,OAAO,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC;aAC7B,EAAG,MAAM,YAAY,QAAQ,CAAC,CAAC;MACpC;;KAEM,+BAAgB,GAAvB,UAAwB,KAAe;SACrC,SAAS,WAAW,CAAC,CAAS,EAAE,CAAS;aACvC,OAAO,KAAK,CAAE,CAAC,CAAE,GAAG,KAAK,CAAE,CAAC,CAAE,CAAC;UAChC;SACD,IAAM,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC;SACvB,IAAM,MAAM,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;SAC5B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,EAAG,CAAC;aAAE,MAAM,CAAE,CAAC,CAAE,GAAG,CAAC,CAAC;SAC/C,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;SACzB,OAAO,MAAM,CAAC;MACf;;KAEM,0BAAW,GAAlB,UAAmB,MAAW,EAAE,MAAc,EAAE,KAAe;SAC7D,IAAM,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC;SAC9B,IAAM,MAAM,GAAG,IAAI,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;SAC/C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,SAAS,GAAG,CAAC,EAAE,SAAS,KAAK,OAAO,EAAE,EAAG,CAAC,EAAE;aAC1D,IAAM,SAAS,GAAG,KAAK,CAAE,CAAC,CAAE,GAAG,MAAM,CAAC;aACtC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,KAAK,MAAM,EAAE,EAAG,CAAC,EAAE;iBAClC,MAAM,CAAE,SAAS,EAAG,CAAE,GAAG,MAAM,CAAE,SAAS,GAAG,CAAC,CAAE,CAAC;cAClD;UACF;SACD,OAAO,MAAM,CAAC;MACf;;KAEM,0BAAW,GAAlB,UAAmB,QAAa,EAAE,KAAe,EAAE,MAAW,EAAE,iBAAyB;SACvF,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,QAAQ,CAAE,CAAC,CAAE,CAAC;SAC/B,OAAO,GAAG,KAAK,SAAS,IAAI,GAAG,CAAE,iBAAiB,CAAE,KAAK,SAAS,EAAE;aAClE,GAAG,GAAG,QAAQ,CAAE,CAAC,EAAG,CAAE,CAAC;UACxB;SACD,IAAI,GAAG,KAAK,SAAS;aAAE,OAAO;SAC9B,IAAI,KAAK,GAAG,GAAG,CAAE,iBAAiB,CAAE,CAAC;SACrC,IAAI,KAAK,KAAK,SAAS;aAAE,OAAO;SAChC,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;aACxB,GAAG;iBACD,KAAK,GAAG,GAAG,CAAE,iBAAiB,CAAE,CAAC;iBACjC,IAAI,KAAK,KAAK,SAAS,EAAE;qBACvB,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;qBACrB,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;kBAClC;iBACD,GAAG,GAAG,QAAQ,CAAE,CAAC,EAAG,CAAE,CAAC;cACxB,QAAQ,GAAG,KAAK,SAAS,EAAE;UAC7B;cAAM,IAAI,KAAK,CAAC,OAAO,KAAK,SAAS,EAAE;;aAEtC,GAAG;iBACD,KAAK,GAAG,GAAG,CAAE,iBAAiB,CAAE,CAAC;iBACjC,IAAI,KAAK,KAAK,SAAS,EAAE;qBACvB,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;qBACrB,KAAK,CAAC,OAAO,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC;kBACtC;iBACD,GAAG,GAAG,QAAQ,CAAE,CAAC,EAAG,CAAE,CAAC;cACxB,QAAQ,GAAG,KAAK,SAAS,EAAE;UAC7B;cAAM;;aAEL,GAAG;iBACD,KAAK,GAAG,GAAG,CAAE,iBAAiB,CAAE,CAAC;iBACjC,IAAI,KAAK,KAAK,SAAS,EAAE;qBACvB,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;qBACrB,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;kBACpB;iBACD,GAAG,GAAG,QAAQ,CAAE,CAAC,EAAG,CAAE,CAAC;cACxB,QAAQ,GAAG,KAAK,SAAS,EAAE;UAC7B;MACF;KACH,qBAAC;CAAD,CAAC;;CCzFD;;;;;;;;;;;;;;;;;;;;;AAqBA;KAME,qBAAY,kBAA0D,EAAE,YAAoD,EAAE,UAAkB,EAAE,YAAqD;SAqGvM,aAAQ,GAAQ,IAAI,CAAC;;;SAGrB,qBAAgB,GAAG,EAAE,CAAC;SAvGpB,IAAI,CAAC,kBAAkB,GAAG,kBAAkB,CAAC;SAC7C,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;SACtB,IAAI,CAAC,YAAY,GAAG,YAAY,KAAK,SAAS;aAC1C,YAAY,GAAG,IAAK,YAAY,CAAC,WAAmB,CAAC,UAAU,CAAC,CAAC;SACrE,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;SACjC,IAAI,CAAC,SAAS,GAAG,UAAU,CAAC;MAC7B;KACD,8BAAQ,GAAR,UAAS,CAAS;SAChB,IAAM,EAAE,GAAG,IAAI,CAAC,kBAAkB,CAAC;SACnC,IAAI,EAAE,GAAG,IAAI,CAAC,YAAY,CAAC;SAC3B,IAAI,EAAE,GAAG,EAAE,CAAI,EAAE,CAAI,CAAC;SACtB,IAAI,EAAE,GAAG,EAAE,CAAE,EAAE,GAAG,CAAC,CAAE,CAAC;SACtB,iBAAiB,EAAE;aACjB,IAAI,EAAE;iBACJ,IAAI,KAAK,SAAA,CAAC;iBACV,WAAW,EAAE;;;;;qBAKX,YAAY,EAAE,IAAI,EAAG,CAAC,GAAG,EAAE,CAAC,EAAE;yBAC5B,KAAK,IAAI,QAAQ,GAAG,EAAE,GAAG,CAAC,IAAM;6BAC9B,IAAI,EAAE,KAAK,SAAS,EAAE;iCACpB,IAAI,CAAC,GAAG,EAAE;qCAAE,MAAM,YAAY,CAAC;;iCAE/B,EAAE,GAAG,EAAE,CAAC,MAAM,CAAC;iCACf,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;iCACvB,OAAO,IAAI,CAAC,SAAS,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;8BACtC;6BACD,IAAI,EAAE,KAAK,QAAQ;iCAAE,MAAM;6BAC3B,EAAE,GAAG,EAAE,CAAC;6BACR,EAAE,GAAG,EAAE,CAAE,EAAG,EAAE,CAAE,CAAC;6BACjB,IAAI,CAAC,GAAG,EAAE,EAAE;;iCAEV,MAAM,IAAI,CAAC;8BACZ;0BACF;;yBAED,KAAK,GAAG,EAAE,CAAC,MAAM,CAAC;yBAClB,MAAM,WAAW,CAAC;sBACnB;;;qBAGD,IAAI,EAAG,CAAC,IAAI,EAAE,CAAC,EAAE;;yBAEf,IAAM,QAAQ,GAAG,EAAE,CAAE,CAAC,CAAE,CAAC;yBACzB,IAAI,CAAC,GAAG,QAAQ,EAAE;6BAChB,EAAE,GAAG,CAAC,CAAC;6BACP,EAAE,GAAG,QAAQ,CAAC;0BACf;;yBAED,KAAK,IAAI,QAAQ,GAAG,EAAE,GAAG,CAAC,IAAM;6BAC9B,IAAI,EAAE,KAAK,SAAS,EAAE;;iCAEpB,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;iCACtB,OAAO,IAAI,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;8BACpC;6BACD,IAAI,EAAE,KAAK,QAAQ;iCAAE,MAAM;6BAC3B,EAAE,GAAG,EAAE,CAAC;6BACR,EAAE,GAAG,EAAE,CAAE,EAAG,EAAE,GAAG,CAAC,CAAE,CAAC;6BACrB,IAAI,CAAC,IAAI,EAAE,EAAE;;iCAEX,MAAM,IAAI,CAAC;8BACZ;0BACF;;yBAED,KAAK,GAAG,EAAE,CAAC;yBACX,EAAE,GAAG,CAAC,CAAC;yBACP,MAAM,WAAW,CAAC;sBACnB;;qBAED,MAAM,iBAAiB,CAAC;kBACzB;;iBAED,OAAO,EAAE,GAAG,KAAK,EAAE;qBACjB,IAAM,GAAG,GAAW,CAAC,EAAE,GAAG,KAAK,MAAM,CAAC,CAAC;qBACvC,IAAI,CAAC,GAAG,EAAE,CAAE,GAAG,CAAE,EAAE;yBACjB,KAAK,GAAG,GAAG,CAAC;sBACb;0BAAM;yBACL,EAAE,GAAG,GAAG,GAAG,CAAC,CAAC;sBACd;kBACF;iBACD,EAAE,GAAG,EAAE,CAAI,EAAE,CAAI,CAAC;iBAClB,EAAE,GAAG,EAAE,CAAE,EAAE,GAAG,CAAC,CAAE,CAAC;;iBAElB,IAAI,EAAE,KAAK,SAAS,EAAE;qBACpB,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;qBACtB,OAAO,IAAI,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;kBACpC;iBACD,IAAI,EAAE,KAAK,SAAS,EAAE;qBACpB,EAAE,GAAG,EAAE,CAAC,MAAM,CAAC;qBACf,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;qBACvB,OAAO,IAAI,CAAC,SAAS,CAAC,EAAE,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;kBACtC;cACF;aACD,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;aACvB,IAAI,CAAC,gBAAgB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;UACnC;SACD,OAAO,IAAI,CAAC,YAAY,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;MACzC;KAKD,kCAAY,GAAZ;SACE,OAAO,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,gBAAgB,CAAC;MAC/C;KACS,sCAAgB,GAA1B,UAA2B,KAAa,EAAE,EAAW,EAAE,EAAW;;SAEhE,IAAM,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC;SACjC,IAAM,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC;SACjC,IAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC;SAC9B,IAAM,MAAM,GAAG,KAAK,GAAG,MAAM,CAAC;SAC9B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,KAAK,MAAM,EAAE,EAAG,CAAC,EAAE;aAClC,MAAM,CAAE,CAAC,CAAE,GAAG,MAAM,CAAE,MAAM,GAAG,CAAC,CAAE,CAAC;UACpC;SACD,OAAO,MAAM,CAAC;MACf;;KAES,kCAAY,GAAtB,UAAuB,EAAU,EAAE,EAAU,EAAE,CAAS,EAAE,EAAU;SAClE,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;;MAE5C;KACS,sCAAgB,GAA1B,UAA2B,EAAU,EAAE,EAAU,EAAE,EAAU;;MAE5D;KACO,kCAAY,GAApB,UAAqB,CAAS,EAAE,EAAU,EAAE,EAAU;SACpD,OAAO,IAAI,CAAC,gBAAgB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;MACzC;KACO,+BAAS,GAAjB,UAAkB,CAAS,EAAE,EAAU,EAAE,EAAU;SACjD,OAAO,IAAI,CAAC,gBAAgB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;MACzC;KACH,kBAAC;CAAD,CAAC;;CC9JD;;;;;;;;;AASA;KAAsCO,oCAAW;KAS/C,0BAAY,kBAA0D,EAAE,YAAoD,EAAE,UAAkB,EAAE,YAAqD;SAAvM,YACE,kBAAM,kBAAkB,EAAE,YAAY,EAAE,UAAU,EAAE,YAAY,CAAC,SAKlE;SAVD,sBAAgB,GAAG;aACjB,WAAW,EAAIJ,kBAAU,CAAC,aAAa;aACvC,SAAS,EAAKA,kBAAU,CAAC,aAAa;UACvC,CAAC;SAGA,KAAI,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC;SACtB,KAAI,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC;SACtB,KAAI,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC;SACtB,KAAI,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC;;MACvB;KACD,2CAAgB,GAAhB,UAAiB,EAAU,EAAE,EAAU,EAAE,EAAU;SACjD,IAAM,EAAE,GAAG,IAAI,CAAC,kBAAkB,CAAC;SACnC,IAAI,KAAK,GAAG,EAAE,GAAG,CAAC,CAAC;SACnB,IAAI,KAAK,GAAG,EAAE,GAAG,CAAC,CAAC;SACnB,IAAI,KAAK,GAAG,EAAE,CAAE,KAAK,CAAE,CAAC;SACxB,IAAI,KAAK,GAAG,EAAE,CAAE,KAAK,CAAE,CAAC;SACxB,IAAI,KAAK,KAAK,SAAS,EAAE;aACvB,QAAQ,IAAI,CAAC,YAAY,EAAE,CAAC,WAAW;iBACrC,KAAKA,kBAAU,CAAC,SAAS;;qBAEvB,KAAK,GAAG,EAAE,CAAC;qBACX,KAAK,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC;qBACpB,MAAM;iBACR,KAAKA,kBAAU,CAAC,UAAU;;qBAExB,KAAK,GAAG,EAAE,CAAC,MAAM,GAAG,CAAC,CAAC;qBACtB,KAAK,GAAG,EAAE,GAAG,EAAE,CAAE,KAAK,CAAE,GAAG,EAAE,CAAE,KAAK,GAAG,CAAC,CAAE,CAAC;qBAC3C,MAAM;iBACR;;qBAEE,KAAK,GAAG,EAAE,CAAC;qBACX,KAAK,GAAG,EAAE,CAAC;cACd;UACF;SACD,IAAI,KAAK,KAAK,SAAS,EAAE;aACvB,QAAQ,IAAI,CAAC,YAAY,EAAE,CAAC,SAAS;iBACnC,KAAKA,kBAAU,CAAC,SAAS;;qBAEvB,KAAK,GAAG,EAAE,CAAC;qBACX,KAAK,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC;qBACpB,MAAM;iBACR,KAAKA,kBAAU,CAAC,UAAU;;qBAExB,KAAK,GAAG,CAAC,CAAC;qBACV,KAAK,GAAG,EAAE,GAAG,EAAE,CAAE,CAAC,CAAE,GAAG,EAAE,CAAE,CAAC,CAAE,CAAC;qBAC/B,MAAM;iBACR;;qBAEE,KAAK,GAAG,EAAE,GAAG,CAAC,CAAC;qBACf,KAAK,GAAG,EAAE,CAAC;cACd;UACF;SACD,IAAM,MAAM,GAAG,CAAC,EAAE,GAAG,EAAE,IAAI,GAAG,CAAC;SAC/B,IAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC;SAC9B,IAAI,CAAC,WAAW,GAAG,MAAM,IAAI,EAAE,GAAG,KAAK,CAAC,CAAC;SACzC,IAAI,CAAC,WAAW,GAAG,MAAM,IAAI,KAAK,GAAG,EAAE,CAAC,CAAC;SACzC,IAAI,CAAC,WAAW,GAAG,KAAK,GAAG,MAAM,CAAC;SAClC,IAAI,CAAC,WAAW,GAAG,KAAK,GAAG,MAAM,CAAC;MACnC;KACD,uCAAY,GAAZ,UAAa,EAAU,EAAE,EAAU,EAAE,CAAS,EAAE,EAAU;SACxD,IAAM,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC;SACjC,IAAM,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC;SACjC,IAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC;SAC9B,IAAM,EAAE,GAAG,EAAE,GAAG,MAAM,CAAC;SACvB,IAAM,EAAE,GAAG,EAAE,GAAG,MAAM,CAAC;SACvB,IAAM,EAAE,GAAG,IAAI,CAAC,WAAW,CAAC;SAC5B,IAAM,EAAE,GAAG,IAAI,CAAC,WAAW,CAAC;SAC5B,IAAM,EAAE,GAAG,IAAI,CAAC,WAAW,CAAC;SAC5B,IAAM,EAAE,GAAG,IAAI,CAAC,WAAW,CAAC;SAC5B,IAAM,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC,CAAC;SAC/B,IAAM,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC;SACjB,IAAM,GAAG,GAAG,EAAE,GAAG,CAAC,CAAC;;SAEnB,IAAM,EAAE,GAAO,CAAE,EAAE,GAAK,GAAG,GAAa,CAAC,GAAG,EAAE,GAAM,EAAE,GAAe,EAAE,GAAK,CAAC,CAAC;SAC9E,IAAM,EAAE,GAAG,CAAC,CAAC,GAAG,EAAE,IAAI,GAAG,GAAK,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,EAAE,IAAK,EAAE,GAAM,CAAC,CAAC,GAAG,GAAG,EAAE,IAAI,CAAC,GAAO,CAAC,CAAC;SACjF,IAAM,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,GAAG,GAAK,CAAC,GAAG,GAAK,EAAE,IAAK,EAAE,GAAS,GAAG,GAAU,CAAC,CAAC;SACzE,IAAM,EAAE,GAAS,EAAE,GAAK,GAAG,GAAe,EAAE,GAAQ,EAAE,CAAC;;SAEvD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,KAAK,MAAM,EAAE,EAAG,CAAC,EAAE;aAClC,MAAM,CAAE,CAAC,CAAE;iBACP,EAAE,GAAG,MAAM,CAAE,EAAE,GAAG,CAAC,CAAE;qBACrB,EAAE,GAAG,MAAM,CAAE,EAAE,GAAG,CAAC,CAAE;qBACrB,EAAE,GAAG,MAAM,CAAE,EAAE,GAAG,CAAC,CAAE;qBACrB,EAAE,GAAG,MAAM,CAAE,EAAE,GAAG,CAAC,CAAE,CAAC;UAC3B;SACD,OAAO,MAAM,CAAC;MACf;KACH,uBAAC;CAAD,CA7FA,CAAsC,WAAW;;CCVjD;;;AAGA;KAAuCI,qCAAW;KAChD,2BAAY,kBAA0D,EAAE,YAAoD,EAAE,UAAkB,EAAE,YAAqD;gBACrM,kBAAM,kBAAkB,EAAE,YAAY,EAAE,UAAU,EAAE,YAAY,CAAC;MAClE;KACD,wCAAY,GAAZ,UAAa,EAAU,EAAE,EAAU,EAAE,CAAS,EAAE,EAAU;SACxD,IAAM,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC;SACjC,IAAM,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC;SACjC,IAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC;SAC9B,IAAM,OAAO,GAAG,EAAE,GAAG,MAAM,CAAC;SAC5B,IAAM,OAAO,GAAG,OAAO,GAAG,MAAM,CAAC;SACjC,IAAM,OAAO,GAAG,CAAC,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC,CAAC;SACrC,IAAM,OAAO,GAAG,CAAC,GAAG,OAAO,CAAC;SAC5B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,KAAK,MAAM,EAAE,EAAG,CAAC,EAAE;aAClC,MAAM,CAAE,CAAC,CAAE;iBACP,MAAM,CAAE,OAAO,GAAG,CAAC,CAAE,GAAG,OAAO;qBAC/B,MAAM,CAAE,OAAO,GAAG,CAAC,CAAE,GAAG,OAAO,CAAC;UACrC;SACD,OAAO,MAAM,CAAC;MACf;KACH,wBAAC;CAAD,CAnBA,CAAuC,WAAW;;CCHlD;;;;;;;AAOA;KAAyCA,uCAAW;KAClD,6BAAY,kBAA0D,EAAE,YAAoD,EAAE,UAAkB,EAAE,YAAqD;gBACrM,kBAAM,kBAAkB,EAAE,YAAY,EAAE,UAAU,EAAE,YAAY,CAAC;MAClE;KACD,0CAAY,GAAZ,UAAa,EAAU,EAAE,EAAU,EAAE,CAAS,EAAE,EAAU;SACxD,OAAO,IAAI,CAAC,gBAAgB,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;MACtC;KACH,0BAAC;CAAD,CAPA,CAAyC,WAAW;;CCFpD;;;;;;;;;AASA;KAIE,uBAAY,IAAY,EAAE,KAAe,EAAE,MAA8C,EAAE,aAAqB;SAYhH,mBAAc,GAAyE,YAAY,CAAC;SACpG,oBAAe,GAAyE,YAAY,CAAC;SACrG,yBAAoB,GAAoBL,uBAAe,CAAC,MAAM,CAAC;SAb7D,IAAI,IAAI,KAAK,SAAS;aAAE,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;SACnE,IAAI,KAAK,KAAK,SAAS,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;aAC7C,MAAM,IAAI,KAAK,CAAC,8BAA8B,GAAG,IAAI,CAAC,CAAC;UACxD;SACD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;SACjB,IAAI,CAAC,KAAK,GAAG,cAAc,CAAC,YAAY,CAAC,KAAK,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;SACrE,IAAI,CAAC,MAAM,GAAG,cAAc,CAAC,YAAY,CAAC,MAAM,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;SACxE,IAAI,CAAC,gBAAgB,CAAC,aAAa,IAAI,IAAI,CAAC,oBAAoB,CAAC,CAAC;SAClE,IAAI,CAAC,QAAQ,EAAE,CAAC;SAChB,IAAI,CAAC,QAAQ,EAAE,CAAC;MACjB;KAID,wDAAgC,GAAhC,UAAiC,MAA8C;SAC7E,OAAO,IAAI,mBAAmB,CAC1B,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,YAAY,EAAE,EAAE,MAAM,CAAC,CAAC;MAC3D;KACD,sDAA8B,GAA9B,UAA+B,MAA8C;SAC3E,OAAO,IAAI,iBAAiB,CACxB,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,YAAY,EAAE,EAAE,MAAM,CAAC,CAAC;MAC3D;KACD,sDAA8B,GAA9B,UAA+B,MAA8C;SAC3E,OAAO,IAAI,gBAAgB,CACvB,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,YAAY,EAAE,EAAE,MAAM,CAAC,CAAC;MAC3D;KAGD,wCAAgB,GAAhB,UAAiB,aAA8B;SAC7C,IAAI,aAA8E,CAAC;SACnF,QAAQ,aAAa;aACnB,KAAKA,uBAAe,CAAC,QAAQ;iBAC3B,aAAa,GAAG,IAAI,CAAC,gCAAgC,CAAC;iBACtD,MAAM;aACR,KAAKA,uBAAe,CAAC,MAAM;iBACzB,aAAa,GAAG,IAAI,CAAC,8BAA8B,CAAC;iBACpD,MAAM;aACR,KAAKA,uBAAe,CAAC,MAAM;iBACzB,aAAa,GAAG,IAAI,CAAC,8BAA8B,CAAC;iBACpD,MAAM;UACT;SACD,IAAI,aAAa,KAAK,SAAS,EAAE;aAC/B,IAAM,OAAO,GAAG,gCAAgC;iBAC5C,IAAI,CAAC,aAAa,GAAG,wBAAwB,GAAG,IAAI,CAAC,IAAI,CAAC;aAC9D,IAAI,IAAI,CAAC,iBAAiB,KAAK,SAAS,EAAE;;iBAExC,IAAI,aAAa,KAAK,IAAI,CAAC,oBAAoB,EAAE;qBAC/C,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;kBAClD;sBAAM;qBACL,MAAM,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC;kBAC1B;cACF;aACD,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;aACtB,OAAO;UACR;SACD,IAAI,CAAC,iBAAiB,GAAG,aAAa,CAAC;MACxC;KACD,wCAAgB,GAAhB;SACE,QAAQ,IAAI,CAAC,iBAAiB;aAC5B,KAAK,IAAI,CAAC,gCAAgC;iBACxC,OAAOA,uBAAe,CAAC,QAAQ,CAAC;aAClC,KAAK,IAAI,CAAC,8BAA8B;iBACtC,OAAOA,uBAAe,CAAC,MAAM,CAAC;aAChC,KAAK,IAAI,CAAC,8BAA8B;iBACtC,OAAOA,uBAAe,CAAC,MAAM,CAAC;UACjC;SACD,MAAM,IAAI,KAAK,EAAE,CAAC;MACnB;KACD,oCAAY,GAAZ;SACE,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;MAC/C;;KAED,6BAAK,GAAL,UAAM,UAAkB;SACtB,IAAI,UAAU,KAAK,GAAG,EAAE;aACtB,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;aACzB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,KAAK,CAAC,EAAE,EAAG,CAAC,EAAE;iBAC/C,KAAK,CAAE,CAAC,CAAE,IAAI,UAAU,CAAC;cAC1B;UACF;SACD,OAAO,IAAI,CAAC;MACb;;KAED,6BAAK,GAAL,UAAM,SAAiB;SACrB,IAAI,SAAS,KAAK,GAAG,EAAE;aACrB,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;aACzB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,KAAK,CAAC,EAAE,EAAG,CAAC,EAAE;iBAC/C,KAAK,CAAE,CAAC,CAAE,IAAI,SAAS,CAAC;cACzB;UACF;SACD,OAAO,IAAI,CAAC;MACb;;;KAGD,4BAAI,GAAJ,UAAK,SAAiB,EAAE,OAAe;SACrC,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;SACzB,IAAM,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC;SAC3B,IAAI,IAAI,GAAG,CAAC,CAAC;SACb,IAAI,EAAE,GAAG,KAAK,GAAG,CAAC,CAAC;SACnB,OAAO,IAAI,KAAK,KAAK,IAAI,KAAK,CAAE,IAAI,CAAE,GAAG,SAAS;aAAE,EAAG,IAAI,CAAC;SAC5D,OAAO,EAAE,KAAK,CAAC,CAAC,IAAI,KAAK,CAAE,EAAE,CAAE,GAAG,OAAO;aAAE,EAAG,EAAE,CAAC;SACjD,EAAG,EAAE,CAAC;SACN,IAAI,IAAI,KAAK,CAAC,IAAI,EAAE,KAAK,KAAK,EAAE;;aAE9B,IAAI,IAAI,IAAI,EAAE;iBAAE,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,EAAG,CAAC,CAAC,EAAE,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC;aACrD,IAAM,MAAM,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;aACnC,IAAI,CAAC,KAAK,GAAG,cAAc,CAAC,UAAU,CAAC,KAAK,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC;aACxD,IAAI,CAAC,MAAM,GAAG,cAAc;iBACxB,UAAU,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,GAAG,MAAM,EAAE,EAAE,GAAG,MAAM,CAAC,CAAC;UACzD;SACD,OAAO,IAAI,CAAC;MACb;;KAED,gCAAQ,GAAR;SACE,IAAI,KAAK,GAAG,IAAI,CAAC;SACjB,IAAM,SAAS,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;SACtC,IAAI,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE;aAC3C,OAAO,CAAC,KAAK,CAAC,6BAA6B,EAAE,IAAI,CAAC,CAAC;aACnD,KAAK,GAAG,KAAK,CAAC;UACf;SACD,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;SACzB,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;SAC3B,IAAM,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC;SAC3B,IAAI,KAAK,KAAK,CAAC,EAAE;aACf,OAAO,CAAC,KAAK,CAAC,gBAAgB,EAAE,IAAI,CAAC,CAAC;aACtC,KAAK,GAAG,KAAK,CAAC;UACf;SACD,IAAI,QAAQ,GAAG,IAAI,CAAC;SACpB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,KAAK,KAAK,EAAE,CAAC,EAAG,EAAE;aACjC,IAAM,QAAQ,GAAG,KAAK,CAAE,CAAC,CAAE,CAAC;aAC5B,IAAI,OAAO,QAAQ,KAAK,QAAQ,IAAI,KAAK,CAAC,QAAQ,CAAC,EAAE;iBACnD,OAAO,CAAC,KAAK,CAAC,4BAA4B,EAAE,IAAI,EAAE,CAAC,EAAE,QAAQ,CAAC,CAAC;iBAC/D,KAAK,GAAG,KAAK,CAAC;iBACd,MAAM;cACP;aACD,IAAI,QAAQ,KAAK,IAAI,IAAI,QAAQ,GAAG,QAAQ,EAAE;iBAC5C,OAAO,CAAC,KAAK,CAAC,mBAAmB,EAAE,IAAI,EAAE,CAAC,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;iBAChE,KAAK,GAAG,KAAK,CAAC;iBACd,MAAM;cACP;aACD,QAAQ,GAAG,QAAQ,CAAC;UACrB;SACD,IAAI,MAAM,KAAK,SAAS,EAAE;aACxB,IAAI,cAAc,CAAC,YAAY,CAAC,MAAM,CAAC,EAAE;iBACvC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,KAAK,CAAC,EAAE,EAAG,CAAC,EAAE;qBAChD,IAAM,KAAK,GAAG,MAAM,CAAE,CAAC,CAAE,CAAC;qBAC1B,IAAI,KAAK,CAAC,KAAK,CAAC,EAAE;yBAChB,OAAO,CAAC,KAAK,CAAC,6BAA6B,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;yBAC7D,KAAK,GAAG,KAAK,CAAC;yBACd,MAAM;sBACP;kBACF;cACF;UACF;SACD,OAAO,KAAK,CAAC;MACd;;;KAGD,gCAAQ,GAAR;SACE,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;SACzB,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;SAC3B,IAAM,MAAM,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;SACnC,IAAM,mBAAmB,GAAG,IAAI,CAAC,gBAAgB,EAAE,KAAKA,uBAAe,CAAC,MAAM,CAAC;SAC/E,IAAI,UAAU,GAAG,CAAC,CAAC;SACnB,IAAM,SAAS,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;SACnC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,EAAE,EAAG,CAAC,EAAE;aACnC,IAAI,IAAI,GAAG,KAAK,CAAC;aACjB,IAAM,IAAI,GAAG,KAAK,CAAE,CAAC,CAAE,CAAC;aACxB,IAAM,QAAQ,GAAG,KAAK,CAAE,CAAC,GAAG,CAAC,CAAE,CAAC;;aAEhC,IAAI,IAAI,KAAK,QAAQ,KAAK,CAAC,KAAK,CAAC,IAAI,IAAI,KAAK,IAAI,CAAE,CAAC,CAAE,CAAC,EAAE;iBACxD,IAAI,CAAE,mBAAmB,EAAE;;qBAEzB,IAAM,MAAM,GAAG,CAAC,GAAG,MAAM,CAAC;qBAC1B,IAAM,OAAO,GAAG,MAAM,GAAG,MAAM,CAAC;qBAChC,IAAM,OAAO,GAAG,MAAM,GAAG,MAAM,CAAC;qBAChC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,KAAK,MAAM,EAAE,EAAG,CAAC,EAAE;yBAClC,IAAM,KAAK,GAAG,MAAM,CAAE,MAAM,GAAG,CAAC,CAAE,CAAC;yBACnC,IAAI,KAAK,KAAK,MAAM,CAAE,OAAO,GAAG,CAAC,CAAE;6BAC/B,KAAK,KAAK,MAAM,CAAE,OAAO,GAAG,CAAC,CAAE,EAAE;6BACnC,IAAI,GAAG,IAAI,CAAC;6BACZ,MAAM;0BACP;sBACF;kBACF;;qBAAM,IAAI,GAAG,IAAI,CAAC;cACpB;;aAED,IAAI,IAAI,EAAE;iBACR,IAAI,CAAC,KAAK,UAAU,EAAE;qBACpB,KAAK,CAAE,UAAU,CAAE,GAAG,KAAK,CAAE,CAAC,CAAE,CAAC;qBACjC,IAAM,UAAU,GAAG,CAAC,GAAG,MAAM,CAAC;qBAC9B,IAAM,WAAW,GAAG,UAAU,GAAG,MAAM,CAAC;qBACxC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,KAAK,MAAM,EAAE,EAAG,CAAC;yBAChC,MAAM,CAAE,WAAW,GAAG,CAAC,CAAE,GAAG,MAAM,CAAE,UAAU,GAAG,CAAC,CAAE,CAAC;kBACxD;iBACD,EAAG,UAAU,CAAC;cACf;UACF;;SAED,IAAI,SAAS,GAAG,CAAC,EAAE;aACjB,KAAK,CAAE,UAAU,CAAE,GAAG,KAAK,CAAE,SAAS,CAAE,CAAC;aACzC,KAAK,IAAI,UAAU,GAAG,SAAS,GAAG,MAAM,EAAE,WAAW,GAAG,UAAU,GAAG,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,KAAK,MAAM,EAAE,EAAG,CAAC;iBACpG,MAAM,CAAE,WAAW,GAAG,CAAC,CAAE,GAAG,MAAM,CAAE,UAAU,GAAG,CAAC,CAAE,CAAC;aACvD,EAAG,UAAU,CAAC;UACf;SACD,IAAI,UAAU,KAAK,KAAK,CAAC,MAAM,EAAE;aAC/B,IAAI,CAAC,KAAK,GAAG,cAAc,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC,EAAE,UAAU,CAAC,CAAC;aAC7D,IAAI,CAAC,MAAM,GAAG,cAAc,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,UAAU,GAAG,MAAM,CAAC,CAAC;UACzE;SACD,OAAO,IAAI,CAAC;MACb;KACH,oBAAC;CAAD,CAAC;;CCpOD;;;;;;;;;AASA;KAA4CK,0CAAa;KACvD,gCAAY,IAAY,EAAE,KAAe,EAAE,MAAW,EAAE,aAAsB;SAA9E,YACE,kBAAM,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,aAAa,CAAC,SAC1C;SACD,mBAAa,GAAW,QAAQ,CAAC;SACjC,qBAAe,GAAG,KAAK,CAAC;SACxB,0BAAoB,GAAoBL,uBAAe,CAAC,QAAQ,CAAC;;MAHhE;KAMH,6BAAC;CAAD,CATA,CAA4C,aAAa;;CCTzD;;;;;;;;;AASA;KAA6CK,2CAAa;KACxD,iCAAY,IAAY,EAAE,KAAe,EAAE,MAAW,EAAE,aAAqB;SAA7E,YACE,kBAAM,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,aAAa,CAAC,SAC1C;SACD,mBAAa,GAAW,OAAO,CAAC;SAChC,qBAAe,GAAG,KAAK,CAAC;SACxB,0BAAoB,GAAoBL,uBAAe,CAAC,QAAQ,CAAC;;MAHhE;KASH,8BAAC;CAAD,CAZA,CAA6C,aAAa;;CCT1D;;;;;AAKA;KAAiDK,+CAAW;KAC1D,qCAAY,kBAA0D,EAAE,YAAoD,EAAE,UAAkB,EAAE,YAAoD;gBACpM,kBAAM,kBAAkB,EAAE,YAAY,EAAE,UAAU,EAAE,YAAY,CAAC;MAClE;KACD,kDAAY,GAAZ,UAAa,EAAU,EAAE,EAAU,EAAE,CAAS,EAAE,EAAU;SACxD,IAAM,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC;SACjC,IAAM,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC;SACjC,IAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC;SAC9B,IAAI,MAAM,GAAG,EAAE,GAAG,MAAM,CAAC;SACzB,IAAM,KAAK,GAAG,CAAC,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC,CAAC;SACnC,KAAK,IAAI,GAAG,GAAG,MAAM,GAAG,MAAM,EAAE,MAAM,KAAK,GAAG,EAAE,MAAM,IAAI,CAAC,EAAE;aAC3D,UAAU,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,EAC1B,MAAM,EAAE,MAAM,GAAG,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;UACrD;SACD,OAAO,MAAM,CAAC;MACf;KACH,kCAAC;CAAD,CAhBA,CAAiD,WAAW;;CCH5D;;;;;;;;AAQA;KAAgDA,8CAAa;KAC3D,oCAAY,IAAY,EAAE,KAAe,EAAE,MAAW,EAAE,aAAqB;SAA7E,YACE,kBAAM,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,aAAa,CAAC,SAC1C;SACD,mBAAa,GAAW,YAAY,CAAC;;SAErC,0BAAoB,GAAoBL,uBAAe,CAAC,MAAM,CAAC;;MAH9D;KAID,mEAA8B,GAA9B,UAA+B,MAA+B;SAC5D,OAAO,IAAI,2BAA2B,CAClC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,YAAY,EAAE,EAAE,MAAM,CAAC,CAAC;MAC3D;KAEH,iCAAC;CAAD,CAZA,CAAgD,aAAa;;CCX7D;;;;;;;;;AASA;KAA2CK,yCAAa;KACtD,+BAAY,IAAY,EAAE,KAAe,EAAE,MAAW,EAAE,aAAqB;SAA7E,YACE,kBAAM,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,aAAa,CAAC,SAC1C;SACD,mBAAa,GAAW,OAAO,CAAC;;MAD/B;KAMH,4BAAC;CAAD,CATA,CAA2C,aAAa;;CCTxD;;;;;;;;;AASA;KAA4CA,0CAAa;KACvD,gCAAY,IAAY,EAAE,KAAe,EAAE,MAAW,EAAE,aAAqB;SAA7E,YACE,kBAAM,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,aAAa,CAAC,SAC1C;SACD,mBAAa,GAAW,QAAQ,CAAC;;MADhC;KAIH,6BAAC;CAAD,CAPA,CAA4C,aAAa;;CCTzD;;;;;;;;AAQA;KAA4CA,0CAAa;KACvD,gCAAY,IAAY,EAAE,KAAe,EAAE,MAAW,EAAE,aAAsB;SAA9E,YACE,kBAAM,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,aAAa,CAAC,SAC1C;SACD,mBAAa,GAAW,QAAQ,CAAC;;MADhC;KAIH,6BAAC;CAAD,CAPA,CAA4C,aAAa;;CCDzD;KAAA;MAsEC;;;;KAlEQ,wBAAK,GAAZ,UAAa,IAAS;SACpB,IAAI,IAAI,CAAC,IAAI,KAAK,SAAS,EAAE;aAC3B,MAAM,IAAI,KAAK,CAAC,qCAAqC,CAAC,CAAC;UACxD;SACD,IAAI,SAAS,GAAQ,kBAAkB,CAAC,6BAA6B,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACjF,IAAI,IAAI,CAAC,KAAK,KAAK,SAAS,EAAE;aAC5B,IAAI,KAAK,GAAU,EAAE,EAAE,MAAM,GAAU,EAAE,CAAC;aAC1C,cAAc,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;aAC9D,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;aACnB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;UACtB;;SAED,IAAI,SAAS,CAAC,KAAK,KAAK,SAAS,EAAE;aACjC,OAAO,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;UAC9B;cAAM;;aAEL,OAAO,IAAI,SAAS,CAChB,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;UAC7D;MACF;KACM,yBAAM,GAAb,UAAc,KAAoB;SAChC,IAAI,SAAS,GAAQ,KAAK,CAAC,WAAW,CAAC;SACvC,IAAI,IAAS,CAAC;;SAEd,IAAI,SAAS,CAAC,MAAM,KAAK,SAAS,EAAE;aAClC,IAAI,GAAG,SAAS,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;UAChC;cAAM;;aAEL,IAAI,GAAG;iBACL,MAAM,EAAE,KAAK,CAAC,IAAI;iBAClB,OAAO,EAAE,cAAc,CAAC,YAAY,CAAC,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC;iBACxD,QAAQ,EAAE,cAAc,CAAC,YAAY,CAAC,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC;cAC3D,CAAC;aACF,IAAI,aAAa,GAAG,KAAK,CAAC,gBAAgB,EAAE,CAAC;aAC7C,IAAI,aAAa,KAAK,KAAK,CAAC,oBAAoB,EAAE;iBAChD,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;cACpC;UACF;SACD,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,aAAa,CAAC;SAChC,OAAO,IAAI,CAAC;MACb;KACc,gDAA6B,GAA5C,UAA6C,QAAgB;SAC3D,QAAQ,QAAQ,CAAC,WAAW,EAAE;aAC5B,KAAK,QAAQ,CAAC;aACd,KAAK,QAAQ,CAAC;aACd,KAAK,OAAO,CAAC;aACb,KAAK,QAAQ,CAAC;aACd,KAAK,SAAS;iBACZ,OAAOE,sBAAmB,CAAC;aAC7B,KAAK,QAAQ,CAAC;aACd,KAAK,SAAS,CAAC;aACf,KAAK,SAAS,CAAC;aACf,KAAK,SAAS;iBACZ,OAAOC,sBAAmB,CAAC;aAC7B,KAAK,OAAO;iBACV,OAAOC,qBAAkB,CAAC;aAC5B,KAAK,YAAY;iBACf,OAAOC,0BAAuB,CAAC;aACjC,KAAK,MAAM,CAAC;aACZ,KAAK,SAAS;iBACZ,OAAOC,uBAAoB,CAAC;aAC9B,KAAK,QAAQ;iBACX,OAAOC,sBAAmB,CAAC;UAC9B;SACD,MAAM,IAAI,KAAK,CAAC,wBAAwB,GAAG,QAAQ,CAAC,CAAC;MACtD;KACH,yBAAC;CAAD,CAAC,IAAA;;CC9ED;AACA,CAQA;;;;;;;AAOA;KAKE,uBAAY,IAAY,EAAE,QAAgB,EAAE,MAAuB;SACjE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;SACjB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;SACrB,IAAI,CAAC,QAAQ,GAAG,CAAC,QAAQ,KAAK,SAAS,IAAI,QAAQ,GAAG,CAAC,CAAC,CAAC;SACzD,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,YAAY,EAAE,CAAC;;SAEjC,IAAI,IAAI,CAAC,QAAQ,GAAG,CAAC,EAAE;aACrB,IAAI,CAAC,aAAa,EAAE,CAAC;UACtB;SACD,IAAI,CAAC,QAAQ,EAAE,CAAC;MACjB;KACD,qCAAa,GAAb;SACE,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;SAC3B,IAAI,QAAQ,GAAG,CAAC,CAAC;SACjB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,KAAK,CAAC,EAAE,EAAG,CAAC,EAAE;aAChD,IAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAE,CAAC,CAAE,CAAC;aAC/B,QAAQ,GAAG,IAAI,CAAC,GAAG,CACf,QAAQ,EAAE,KAAK,CAAC,KAAK,CAAE,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAE,CAAC,CAAC;UACtD;SACD,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;MAC1B;KACD,4BAAI,GAAJ;SACE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAG,EAAE;aAC5C,IAAI,CAAC,MAAM,CAAE,CAAC,CAAE,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;UACzC;SACD,OAAO,IAAI,CAAC;MACb;KACD,gCAAQ,GAAR;SACE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAG,EAAE;aAC5C,IAAI,CAAC,MAAM,CAAE,CAAC,CAAE,CAAC,QAAQ,EAAE,CAAC;UAC7B;SACD,OAAO,IAAI,CAAC;MACb;;KAEM,mBAAK,GAAZ,UAAa,IAAS;SACpB,IAAM,MAAM,GAAG,EAAE,EACf,UAAU,GAAG,IAAI,CAAC,MAAM,EACxB,SAAS,GAAG,GAAG,IAAI,IAAI,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC;SACtC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,KAAK,CAAC,EAAE,EAAG,CAAC,EAAE;aACpD,MAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,UAAU,CAAE,CAAC,CAAE,CAAC,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC;UACzE;SACD,OAAO,IAAI,aAAa,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;MAC5D;KACM,oBAAM,GAAb,UAAc,IAAmB;SAC/B,IAAM,MAAM,GAAQ,EAAE,CAAC;SACvB,IAAM,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC;SAC/B,IAAM,IAAI,GAAG;aACX,MAAM,EAAE,IAAI,CAAC,IAAI;aACjB,UAAU,EAAE,IAAI,CAAC,QAAQ;aACzB,QAAQ,EAAE,MAAM;UACjB,CAAC;SACF,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,KAAK,CAAC,EAAE,EAAG,CAAC,EAAE;aACpD,MAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,UAAU,CAAE,CAAC,CAAE,CAAC,CAAC,CAAC;UACzD;SACD,OAAO,IAAI,CAAC;MACb;KACM,2CAA6B,GAApC,UAAqC,IAAY,EAAE,mBAA0B,EAAE,GAAW,EAAE,MAAe;SACzG,IAAM,eAAe,GAAG,mBAAmB,CAAC,MAAM,CAAC;SACnD,IAAM,MAAM,GAAG,EAAE,CAAC;SAClB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,eAAe,EAAE,CAAC,EAAG,EAAE;aACzC,IAAI,KAAK,GAAG,EAAE,CAAC;aACf,IAAI,MAAM,GAAG,EAAE,CAAC;aAChB,KAAK,CAAC,IAAI,CACN,CAAC,CAAC,GAAG,eAAe,GAAG,CAAC,IAAI,eAAe,EAC3C,CAAC,EACD,CAAC,CAAC,GAAG,CAAC,IAAI,eAAe,CAAC,CAAC;aAC/B,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;aACrB,IAAM,KAAK,GAAG,cAAc,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;aACrD,KAAK,GAAG,cAAc,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;aACpD,MAAM,GAAG,cAAc,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;;;aAGtD,IAAI,CAAE,MAAM,IAAI,KAAK,CAAE,CAAC,CAAE,KAAK,CAAC,EAAE;iBAChC,KAAK,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;iBAC5B,MAAM,CAAC,IAAI,CAAC,MAAM,CAAE,CAAC,CAAE,CAAC,CAAC;cAC1B;aACD,MAAM,CAAC,IAAI,CACP,IAAIL,sBAAmB,CACrB,yBAAyB,GAAG,mBAAmB,CAAE,CAAC,CAAE,CAAC,IAAI,GAAG,GAAG,EAC/D,KAAK,EAAE,MAAM,CACd,CAAC,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC;UACzB;SACD,OAAO,IAAI,aAAa,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;MAC5C;KACM,wBAAU,GAAjB,UAAkB,iBAAsB,EAAE,IAAY;SACpD,IAAI,SAAS,GAAG,iBAAiB,CAAC;SAClC,IAAI,CAAE,KAAK,CAAC,OAAO,CAAC,iBAAiB,CAAC,EAAE;aACtC,IAAM,CAAC,GAAG,iBAAiB,CAAC;aAC5B,SAAS,GAAG,CAAC,CAAC,QAAQ,IAAI,CAAC,CAAC,QAAQ,CAAC,UAAU,IAAI,CAAC,CAAC,UAAU,CAAC;UACjE;SACD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAG,EAAE;aAC1C,IAAI,SAAS,CAAE,CAAC,CAAE,CAAC,IAAI,KAAK,IAAI,EAAE;iBAChC,OAAO,SAAS,CAAE,CAAC,CAAE,CAAC;cACvB;UACF;SACD,OAAO,IAAI,CAAC;MACb;KACM,iDAAmC,GAA1C,UAA2C,YAAmB,EAAE,GAAW,EAAE,MAAgB;SAC3F,IAAM,uBAAuB,GAAG,EAAE,CAAC;;;SAGnC,IAAM,OAAO,GAAW,oBAAoB,CAAC;;;SAG7C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,YAAY,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAG,EAAE;aACtD,IAAM,WAAW,GAAG,YAAY,CAAE,CAAC,CAAE,CAAC;aACtC,IAAM,KAAK,GAAG,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;aAC9C,IAAI,KAAK,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;iBAC7B,IAAM,IAAI,GAAG,KAAK,CAAE,CAAC,CAAE,CAAC;iBACxB,IAAI,qBAAqB,GAAG,uBAAuB,CAAE,IAAI,CAAE,CAAC;iBAC5D,IAAI,CAAE,qBAAqB,EAAE;qBAC3B,uBAAuB,CAAE,IAAI,CAAE,GAAG,qBAAqB,GAAG,EAAE,CAAC;kBAC9D;iBACD,qBAAqB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;cACzC;UACF;SACD,IAAM,KAAK,GAAoB,EAAE,CAAC;SAClC,KAAK,IAAI,IAAI,IAAI,uBAAuB,EAAE;aACxC,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,6BAA6B,CAAC,IAAI,EAAE,uBAAuB,CAAE,IAAI,CAAE,EAAE,GAAG,EAAE,MAAM,CAAC,CAAC,CAAC;UAC7G;SACD,OAAO,KAAK,CAAC;MACd;;KAEM,4BAAc,GAArB,UAAsB,SAAc,EAAE,KAAa;SACjD,IAAI,CAAE,SAAS,EAAE;aACf,OAAO,CAAC,KAAK,CAAC,mCAAmC,CAAC,CAAC;aACnD,OAAO,IAAI,CAAC;UACb;SACD,SAAS,gBAAgB,CAAC,SAAc,EAAE,SAAiB,EAAE,aAAkB,EAAE,YAAoB,EAAE,UAAe;;aAEpH,IAAI,aAAa,CAAC,MAAM,KAAK,CAAC,EAAE;iBAC9B,IAAM,KAAK,GAAU,EAAE,CAAC;iBACxB,IAAM,MAAM,GAAU,EAAE,CAAC;iBACzB,cAAc,CAAC,WAAW,CACtB,aAAa,EAAE,KAAK,EAAE,MAAM,EAAE,YAAY,CAAC,CAAC;;iBAEhD,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;qBACtB,UAAU,CAAC,IAAI,CAAC,IAAI,SAAS,CAAC,SAAS,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC;kBAC1D;cACF;UACF;SACD,IAAM,MAAM,GAAG,EAAE,CAAC;SAClB,IAAM,QAAQ,GAAG,SAAS,CAAC,IAAI,IAAI,SAAS,CAAC;;SAE7C,IAAI,QAAQ,GAAG,SAAS,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC;SACtC,IAAM,GAAG,GAAG,SAAS,CAAC,GAAG,IAAI,EAAE,CAAC;SAChC,IAAM,eAAe,GAAG,SAAS,CAAC,SAAS,IAAI,EAAE,CAAC;SAClD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,eAAe,CAAC,MAAM,EAAE,CAAC,EAAG,EAAE;aAChD,IAAM,aAAa,GAAG,eAAe,CAAE,CAAC,CAAE,CAAC,IAAI,CAAC;;aAEhD,IAAI,CAAE,aAAa,IAAI,aAAa,CAAC,MAAM,KAAK,CAAC;iBAAE,SAAS;;;aAG5D,IAAI,aAAa,CAAC,CAAC,CAAC,CAAC,YAAY,EAAE;;iBAEjC,IAAM,gBAAgB,GAAQ,EAAE,CAAC;iBACjC,IAAI,CAAC,SAAA,CAAC;iBACN,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,aAAa,CAAC,MAAM,EAAE,CAAC,EAAG,EAAE;qBAC1C,IAAI,aAAa,CAAC,CAAC,CAAC,CAAC,YAAY,EAAE;yBACjC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,EAAG,EAAE;6BAC9D,gBAAgB,CAAE,aAAa,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAE,GAAG,CAAC,CAAC,CAAC;0BAC3D;sBACF;kBACF;;;;iBAID,KAAK,IAAI,eAAe,IAAI,gBAAgB,EAAE;qBAC5C,IAAI,KAAK,GAAG,EAAE,CAAC;qBACf,IAAI,MAAM,GAAG,EAAE,CAAC;qBAChB,KAAK,IAAI,CAAC,GAAG,CAAC,EACV,CAAC,KAAK,aAAa,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,MAAM,EAAE,EAAG,CAAC,EAAE;yBACpD,IAAM,YAAY,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC;yBACtC,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;yBAC9B,MAAM,CAAC,IAAI,CAAC,CAAC,YAAY,CAAC,WAAW,KAAK,eAAe,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;sBACrE;qBACD,MAAM,CAAC,IAAI,CAAC,IAAIA,sBAAmB,CAC/B,wBAAwB,GAAG,eAAe,GAAG,GAAG,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC;kBACvE;iBACD,QAAQ,GAAG,gBAAgB,CAAC,MAAM,IAAI,GAAG,IAAI,GAAG,CAAC,CAAC;cACnD;kBAAM;;iBAEL,IAAM,QAAQ,GAAG,SAAS,GAAG,KAAK,CAAE,CAAC,CAAE,CAAC,IAAI,GAAG,GAAG,CAAC;iBACnD,gBAAgB,CACZC,sBAAmB,EAAE,QAAQ,GAAG,WAAW,EAC3C,aAAa,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;iBAClC,gBAAgB,CACZE,0BAAuB,EAAE,QAAQ,GAAG,aAAa,EACjD,aAAa,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;iBAClC,gBAAgB,CACZF,sBAAmB,EAAE,QAAQ,GAAG,QAAQ,EACxC,aAAa,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;cACnC;UACF;SACD,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;aACvB,OAAO,IAAI,CAAC;UACb;SACD,IAAM,IAAI,GAAG,IAAI,aAAa,CAAC,QAAQ,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAC;SAC3D,OAAO,IAAI,CAAC;MACb;KACH,oBAAC;CAAD,CAAC;;CCvND;;;AAGA;KAGE,wBAAY,OAA+C;SAA/C,wBAAA,EAAA,+BAA+C;SAD3D,aAAQ,GAAyB,IAAI,GAAG,EAAmB,CAAC;SAE1D,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;MACxB;KACD,6BAAI,GAAJ,UAAK,GAAW,EAAE,MAAoC,EAAE,UAA2C,EAAE,OAAqC;SACxI,IAAM,KAAK,GAAmB,IAAI,CAAC;SACnC,IAAM,MAAM,GAAc,IAAI,SAAS,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;SACvD,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,UAAS,IAAY;aACpC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;UACvC,EAAE,UAAU,EAAE,OAAO,CAAC,CAAC;MACzB;KACD,oCAAW,GAAX,UAAY,KAA2B;SACrC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;MACvB;KACD,8BAAK,GAAL,UAAM,IAAS;SACb,IAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;SAC/B,SAAS,UAAU,CAAC,IAAY;aAC9B,IAAI,QAAQ,CAAC,IAAI,CAAC,KAAK,SAAS,EAAE;iBAChC,OAAO,CAAC,IAAI,CAAC,yCAAyC,EAAE,IAAI,CAAC,CAAC;cAC/D;aACD,OAAO,QAAQ,CAAC,IAAI,CAAC,CAAC;UACvB;SACD,IAAM,QAAQ,GAAQ,IAAI,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;SACjD,IAAI,IAAI,CAAC,IAAI,KAAK,SAAS;aAAE,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;SACvD,IAAI,IAAI,CAAC,IAAI,KAAK,SAAS;aAAE,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;SACvD,IAAI,IAAI,CAAC,KAAK,KAAK,SAAS;aAAE,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SAChE,IAAI,IAAI,CAAC,SAAS,KAAK,SAAS;aAAE,QAAQ,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;SACtE,IAAI,IAAI,CAAC,SAAS,KAAK,SAAS;aAAE,QAAQ,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;SACtE,IAAI,IAAI,CAAC,QAAQ,KAAK,SAAS;aAAE,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SACzE,IAAI,IAAI,CAAC,QAAQ,KAAK,SAAS;aAAE,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SACzE,IAAI,IAAI,CAAC,SAAS,KAAK,SAAS;aAAE,QAAQ,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;SACtE,IAAI,IAAI,CAAC,QAAQ,KAAK,SAAS;aAAE,QAAQ,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;SACnE,IAAI,IAAI,CAAC,YAAY,KAAK,SAAS;aAAE,QAAQ,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;SAC/E,IAAI,IAAI,CAAC,cAAc,KAAK,SAAS;aAAE,QAAQ,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC;SACrF,IAAI,IAAI,CAAC,YAAY,KAAK,SAAS;aAAE,QAAQ,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;SAC/E,IAAI,IAAI,CAAC,GAAG,KAAK,SAAS;aAAE,QAAQ,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;SACpD,IAAI,IAAI,CAAC,OAAO,KAAK,SAAS;aAAE,QAAQ,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;SAChE,IAAI,IAAI,CAAC,QAAQ,KAAK,SAAS;aAAE,QAAQ,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;SACnE,IAAI,IAAI,CAAC,IAAI,KAAK,SAAS;aAAE,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;SACvD,IAAI,IAAI,CAAC,OAAO,KAAK,SAAS;aAAE,QAAQ,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;SAChE,IAAI,IAAI,CAAC,WAAW,KAAK,SAAS;aAAE,QAAQ,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;SAC5E,IAAI,IAAI,CAAC,SAAS,KAAK,SAAS;aAAE,QAAQ,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;SACtE,IAAI,IAAI,CAAC,SAAS,KAAK,SAAS;aAAE,QAAQ,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;SACtE,IAAI,IAAI,CAAC,UAAU,KAAK,SAAS;aAAE,QAAQ,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;SACzE,IAAI,IAAI,CAAC,UAAU,KAAK,SAAS;aAAE,QAAQ,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;SACzE,IAAI,IAAI,CAAC,SAAS,KAAK,SAAS;aAAE,QAAQ,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;SACtE,IAAI,IAAI,CAAC,kBAAkB,KAAK,SAAS;aAAE,QAAQ,CAAC,kBAAkB,GAAG,IAAI,CAAC,kBAAkB,CAAC;SACjG,IAAI,IAAI,CAAC,gBAAgB,KAAK,SAAS;aAAE,QAAQ,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC;SAC3F,IAAI,IAAI,CAAC,iBAAiB,KAAK,SAAS;aAAE,QAAQ,CAAC,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,CAAC;SAC9F,IAAI,IAAI,CAAC,QAAQ,KAAK,SAAS;aAAE,QAAQ,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;SACnE,IAAI,IAAI,CAAC,YAAY,KAAK,SAAS;aAAE,QAAQ,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;;SAE/E,IAAI,IAAI,CAAC,IAAI,KAAK,SAAS;aAAE,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;SACvD,IAAI,IAAI,CAAC,eAAe,KAAK,SAAS;aAAE,QAAQ,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC;;SAExF,IAAI,IAAI,CAAC,GAAG,KAAK,SAAS;aAAE,QAAQ,CAAC,GAAG,GAAG,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SAChE,IAAI,IAAI,CAAC,QAAQ,KAAK,SAAS,EAAE;aAC/B,QAAQ,CAAC,QAAQ,GAAG,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aAC9C,QAAQ,CAAC,WAAW,GAAG,IAAI,CAAC;UAC7B;SACD,IAAI,IAAI,CAAC,OAAO,KAAK,SAAS;aAAE,QAAQ,CAAC,OAAO,GAAG,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SAC5E,IAAI,IAAI,CAAC,SAAS,KAAK,SAAS;aAAE,QAAQ,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;SACtE,IAAI,IAAI,CAAC,SAAS,KAAK,SAAS;aAAE,QAAQ,CAAC,SAAS,GAAG,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;SAClF,IAAI,IAAI,CAAC,WAAW,KAAK,SAAS,EAAE;aAClC,IAAI,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;aACnC,IAAI,KAAK,CAAC,OAAO,CAAC,WAAW,CAAC,KAAK,KAAK,EAAE;;iBAExC,WAAW,GAAG,CAAE,WAAW,EAAE,WAAW,CAAE,CAAC;cAC5C;aACD,QAAQ,CAAC,WAAW,GAAG,IAAI,OAAO,EAAE,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;UAC7D;SACD,IAAI,IAAI,CAAC,eAAe,KAAK,SAAS;aAAE,QAAQ,CAAC,eAAe,GAAG,UAAU,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;SACpG,IAAI,IAAI,CAAC,iBAAiB,KAAK,SAAS;aAAE,QAAQ,CAAC,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,CAAC;SAC9F,IAAI,IAAI,CAAC,gBAAgB,KAAK,SAAS;aAAE,QAAQ,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC;SAC3F,IAAI,IAAI,CAAC,YAAY,KAAK,SAAS;aAAE,QAAQ,CAAC,YAAY,GAAG,UAAU,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;SAC3F,IAAI,IAAI,CAAC,YAAY,KAAK,SAAS;aAAE,QAAQ,CAAC,YAAY,GAAG,UAAU,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;SAC3F,IAAI,IAAI,CAAC,WAAW,KAAK,SAAS;aAAE,QAAQ,CAAC,WAAW,GAAG,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;SACxF,IAAI,IAAI,CAAC,iBAAiB,KAAK,SAAS;aAAE,QAAQ,CAAC,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,CAAC;SAC9F,IAAI,IAAI,CAAC,WAAW,KAAK,SAAS;aAAE,QAAQ,CAAC,WAAW,GAAG,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;SACxF,IAAI,IAAI,CAAC,MAAM,KAAK,SAAS;aAAE,QAAQ,CAAC,MAAM,GAAG,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SACzE,IAAI,IAAI,CAAC,YAAY,KAAK,SAAS;aAAE,QAAQ,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;SAC/E,IAAI,IAAI,CAAC,QAAQ,KAAK,SAAS;aAAE,QAAQ,CAAC,QAAQ,GAAG,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SAC/E,IAAI,IAAI,CAAC,iBAAiB,KAAK,SAAS;aAAE,QAAQ,CAAC,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,CAAC;SAC9F,IAAI,IAAI,CAAC,KAAK,KAAK,SAAS;aAAE,QAAQ,CAAC,KAAK,GAAG,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SACtE,IAAI,IAAI,CAAC,cAAc,KAAK,SAAS;aAAE,QAAQ,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC;;SAErF,IAAI,IAAI,CAAC,SAAS,KAAK,SAAS,EAAE;aAChC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAG,EAAE;iBACtD,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;cACxD;UACF;SACD,OAAO,QAAQ,CAAC;MACjB;KACH,qBAAC;CAAD,CAAC;;CClGD;;;AAGA;KAEE,8BAAY,OAA+C;SAA/C,wBAAA,EAAA,+BAA+C;SACzD,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;MACxB;KACD,mCAAI,GAAJ,UAAK,GAAW,EAAE,MAA0C,EAAE,UAA2C,EAAE,OAAqC;SAC9I,IAAM,KAAK,GAAyB,IAAI,CAAC;SACzC,IAAM,MAAM,GAAc,IAAI,SAAS,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;SACvD,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,UAAS,IAAY;aACpC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;UACvC,EAAE,UAAU,EAAE,OAAO,CAAC,CAAC;MACzB;KACD,oCAAK,GAAL,UAAM,IAAS;SACb,IAAM,QAAQ,GAAmB,IAAI,cAAc,EAAE,CAAC;SACtD,IAAM,KAAK,GAAQ,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;SACnC,IAAM,YAAY,GAA6C;aAC7D,WAAW,EAAE,SAAS;aACtB,YAAY,EAAE,UAAU;aACxB,mBAAmB,EAAE,iBAAiB;aACtC,YAAY,EAAE,UAAU;aACxB,aAAa,EAAE,WAAW;aAC1B,YAAY,EAAE,UAAU;aACxB,aAAa,EAAE,WAAW;aAC1B,cAAc,EAAE,YAAY;aAC5B,cAAc,EAAE,YAAY;UAC7B,CAAC;SACF,IAAI,KAAK,KAAK,SAAS,EAAE;aACvB,IAAM,UAAU,GAAe,IAAI,YAAY,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;aACzE,QAAQ,CAAC,QAAQ,CAAC,IAAI,eAAe,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC,CAAC;UACvD;SACD,IAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;SACxC,KAAK,IAAI,GAAG,IAAI,UAAU,EAAE;aAC1B,IAAM,SAAS,GAAG,UAAU,CAAC,GAAG,CAAC,CAAC;aAClC,IAAM,UAAU,GAAe,IAAI,YAAY,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;aACjF,QAAQ,CAAC,YAAY,CAAC,GAAG,EAAE,IAAI,eAAe,CAAC,UAAU,EAAE,SAAS,CAAC,QAAQ,EAAE,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC;UACvG;SACD,IAAM,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC;SAC5E,IAAI,MAAM,KAAK,SAAS,EAAE;aACxB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,KAAK,CAAC,EAAE,EAAG,CAAC,EAAE;iBAChD,IAAM,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;iBACxB,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,aAAa,CAAC,CAAC;cAClE;UACF;SACD,IAAM,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC;SAChD,IAAI,cAAc,KAAK,SAAS,EAAE;aAChC,IAAM,MAAM,GAAG,IAAI,OAAO,EAAE,CAAC;aAC7B,IAAI,cAAc,CAAC,MAAM,KAAK,SAAS,EAAE;iBACvC,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;cACzC;aACD,QAAQ,CAAC,cAAc,GAAG,IAAI,MAAM,CAAC,MAAM,EAAE,cAAc,CAAC,MAAM,CAAC,CAAC;UACrE;SACD,OAAO,QAAQ,CAAC;MACjB;KACH,2BAAC;CAAD,CAAC;;CCtDD;;;AAGA;KAAA;SACE,gBAAW,GAAe,eAAa,CAAC;SACxC,mBAAc,GAAe,eAAa,CAAC;SAC3C,mBAAc,GAAe,eAAa,CAAC;MAsO5C;KApOC,+BAAc,GAAd,UAAe,GAAW;SACxB,IAAM,KAAK,GAAa,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;SACvC,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC;aAAE,OAAO,IAAI,CAAC;SACpC,KAAK,CAAC,GAAG,EAAE,CAAC;SACZ,OAAO,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;MAC9B;KACD,8BAAa,GAAb,UAAc,SAAqB,EAAE,WAAmB,EAAE,WAAmB;SAC3E,IAAM,KAAK,GAAe,EAAE,CAAC;SAC7B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,EAAG,CAAC,EAAE;aAC1C,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,WAAW,EAAE,WAAW,CAAC,CAAC;UACxE;SACD,OAAO,KAAK,CAAC;MACd;KACD,+BAAc,GAAd,UAAe,CAAM,EAAE,WAAmB,EAAE,WAAmB;SAC7D,IAAM,KAAK,GAAG,IAAI,KAAK,EAAE,EAAE,aAAa,GAAG,IAAI,aAAa,EAAE,EAAE,cAAc,GAAG,IAAI,cAAc,EAAE,CAAC;;;SAGpG,IAAM,QAAQ,GAAG,IAAI,GAAG,EAAmB,CAAC;SAC5C,SAAS,WAAW,CAAC,IAAY,EAAE,MAAgB,EAAE,MAAe,EAAE,IAAc,EAAE,UAAkB;aACtG,IAAM,QAAQ,GAAW,WAAW,GAAG,IAAI,CAAC;aAC5C,IAAM,MAAM,GAAG,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;aAC7C,IAAI,OAAO,CAAC;aACZ,IAAI,MAAM,KAAK,IAAI,EAAE;iBACnB,OAAO,GAAG,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;cACjC;kBAAM;iBACL,aAAa,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC;iBAC1C,OAAO,GAAG,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;cACxC;aACD,IAAI,MAAM,KAAK,SAAS,EAAE;iBACxB,OAAO,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;iBACjC,IAAI,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC;qBAAE,OAAO,CAAC,KAAK,GAAGb,uBAAe,CAAC,MAAM,CAAC;iBAC5D,IAAI,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC;qBAAE,OAAO,CAAC,KAAK,GAAGA,uBAAe,CAAC,MAAM,CAAC;cAC7D;aACD,IAAI,MAAM,KAAK,SAAS,EAAE;iBACxB,OAAO,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;cAClC;aACD,IAAI,IAAI,KAAK,SAAS,EAAE;iBACtB,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,QAAQ;qBAAE,OAAO,CAAC,KAAK,GAAGA,uBAAe,CAAC,MAAM,CAAC;iBACjE,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,QAAQ;qBAAE,OAAO,CAAC,KAAK,GAAGA,uBAAe,CAAC,cAAc,CAAC;iBACzE,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,QAAQ;qBAAE,OAAO,CAAC,KAAK,GAAGA,uBAAe,CAAC,MAAM,CAAC;iBACjE,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,QAAQ;qBAAE,OAAO,CAAC,KAAK,GAAGA,uBAAe,CAAC,cAAc,CAAC;cAC1E;aACD,IAAI,UAAU,KAAK,SAAS,EAAE;iBAC5B,OAAO,CAAC,UAAU,GAAG,UAAU,CAAC;cACjC;aACD,IAAM,IAAI,GAAG,KAAK,CAAC,YAAY,EAAE,CAAC;aAClC,QAAQ,CAAC,IAAI,CAAC,GAAG,OAAO,CAAC;aACzB,OAAO,IAAI,CAAC;UACb;;SAED,IAAM,IAAI,GAAQ;aAChB,IAAI,EAAE,KAAK,CAAC,YAAY,EAAE;aAC1B,IAAI,EAAE,qBAAqB;UAC5B,CAAC;SACF,KAAK,IAAI,IAAI,IAAI,CAAC,EAAE;aAClB,IAAM,KAAK,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC;aACtB,QAAQ,IAAI;iBACV,KAAK,UAAU,CAAC;iBAChB,KAAK,UAAU,CAAC;iBAChB,KAAK,gBAAgB,CAAC;iBACtB,KAAK,cAAc;qBACjB,MAAM;iBACR,KAAK,SAAS;qBACZ,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;qBAClB,MAAM;iBACR,KAAK,UAAU;qBACb,IAAI,CAAC,QAAQ,GAAGP,oBAAY,CAAC,KAAK,CAAC,CAAC;qBACpC,MAAM;iBACR,KAAK,cAAc,CAAC;iBACpB,KAAK,YAAY;qBACf,OAAO,CAAC,IAAI,CAAC,8BAA8B,EAAE,IAAI,EAAE,yBAAyB,CAAC,CAAC;qBAC9E,MAAM;iBACR,KAAK,cAAc;qBACjB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,MAAM,EAAE,CAAC;qBAC7C,MAAM;iBACR,KAAK,eAAe;qBAClB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,MAAM,EAAE,CAAC;qBAChD,MAAM;iBACR,KAAK,eAAe;qBAClB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,MAAM,EAAE,CAAC;qBAChD,MAAM;iBACR,KAAK,cAAc;qBACjB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;qBACvB,MAAM;iBACR,KAAK,SAAS;qBACZ,IAAI,KAAK,CAAC,WAAW,EAAE,KAAK,OAAO;yBAAE,IAAI,CAAC,IAAI,GAAG,mBAAmB,CAAC;qBACrE,IAAI,KAAK,CAAC,WAAW,EAAE,KAAK,OAAO;yBAAE,IAAI,CAAC,IAAI,GAAG,mBAAmB,CAAC;qBACrE,IAAI,KAAK,CAAC,WAAW,EAAE,KAAK,UAAU;yBAAE,IAAI,CAAC,IAAI,GAAG,sBAAsB,CAAC;qBAC3E,MAAM;iBACR,KAAK,YAAY;qBACf,IAAI,CAAC,GAAG,GAAG,WAAW,CAAC,KAAK,EAAE,CAAC,CAAC,gBAAgB,EAAE,CAAC,CAAC,gBAAgB,EAAE,CAAC,CAAC,cAAc,EAAE,CAAC,CAAC,oBAAoB,CAAC,CAAC;qBAChH,MAAM;iBACR,KAAK,kBAAkB,CAAC;iBACxB,KAAK,kBAAkB,CAAC;iBACxB,KAAK,gBAAgB,CAAC;iBACtB,KAAK,sBAAsB;qBACzB,MAAM;iBACR,KAAK,aAAa;qBAChB,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC,KAAK,EAAE,CAAC,CAAC,iBAAiB,EAAE,CAAC,CAAC,iBAAiB,EAAE,CAAC,CAAC,eAAe,EAAE,CAAC,CAAC,qBAAqB,CAAC,CAAC;qBAC5H,MAAM;iBACR,KAAK,mBAAmB,CAAC;iBACzB,KAAK,mBAAmB,CAAC;iBACzB,KAAK,iBAAiB,CAAC;iBACvB,KAAK,uBAAuB;qBAC1B,MAAM;iBACR,KAAK,UAAU;qBACb,IAAI,CAAC,QAAQ,GAAG,WAAW,CAAC,KAAK,EAAE,CAAC,CAAC,cAAc,EAAE,CAAC,CAAC,cAAc,EAAE,CAAC,CAAC,YAAY,EAAE,CAAC,CAAC,kBAAkB,CAAC,CAAC;qBAC7G,MAAM;iBACR,KAAK,gBAAgB,CAAC;iBACtB,KAAK,gBAAgB,CAAC;iBACtB,KAAK,cAAc,CAAC;iBACpB,KAAK,oBAAoB;qBACvB,MAAM;iBACR,KAAK,OAAO;qBACV,IAAI,CAAC,KAAK,GAAG,WAAW,CAAC,KAAK,EAAE,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC,eAAe,CAAC,CAAC;qBAC9F,MAAM;iBACR,KAAK,aAAa,CAAC;iBACnB,KAAK,aAAa,CAAC;iBACnB,KAAK,WAAW,CAAC;iBACjB,KAAK,iBAAiB;qBACpB,MAAM;iBACR,KAAK,SAAS;qBACZ,IAAI,CAAC,OAAO,GAAG,WAAW,CAAC,KAAK,EAAE,CAAC,CAAC,aAAa,EAAE,CAAC,CAAC,aAAa,EAAE,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC,iBAAiB,CAAC,CAAC;qBACxG,MAAM;iBACR,KAAK,cAAc;qBACjB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;qBACvB,MAAM;iBACR,KAAK,eAAe,CAAC;iBACrB,KAAK,eAAe,CAAC;iBACrB,KAAK,aAAa,CAAC;iBACnB,KAAK,mBAAmB;qBACtB,MAAM;iBACR,KAAK,WAAW;qBACd,IAAI,CAAC,SAAS,GAAG,WAAW,CAAC,KAAK,EAAE,CAAC,CAAC,eAAe,EAAE,CAAC,CAAC,eAAe,EAAE,CAAC,CAAC,aAAa,EAAE,CAAC,CAAC,mBAAmB,CAAC,CAAC;qBAClH,MAAM;iBACR,KAAK,iBAAiB;qBACpB,IAAI,CAAC,WAAW,GAAG,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;qBAClC,MAAM;iBACR,KAAK,iBAAiB,CAAC;iBACvB,KAAK,iBAAiB,CAAC;iBACvB,KAAK,eAAe,CAAC;iBACrB,KAAK,qBAAqB;qBACxB,MAAM;iBACR,KAAK,aAAa;qBAChB,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC,KAAK,EAAE,CAAC,CAAC,iBAAiB,EAAE,CAAC,CAAC,iBAAiB,EAAE,CAAC,CAAC,eAAe,EAAE,CAAC,CAAC,qBAAqB,CAAC,CAAC;qBAC5H,MAAM;iBACR,KAAK,mBAAmB,CAAC;iBACzB,KAAK,mBAAmB,CAAC;iBACzB,KAAK,iBAAiB,CAAC;iBACvB,KAAK,uBAAuB;qBAC1B,MAAM;iBACR,KAAK,cAAc;qBACjB,IAAI,CAAC,YAAY,GAAG,WAAW,CAAC,KAAK,EAAE,CAAC,CAAC,kBAAkB,EAAE,CAAC,CAAC,kBAAkB,EAAE,CAAC,CAAC,gBAAgB,EAAE,CAAC,CAAC,sBAAsB,CAAC,CAAC;qBACjI,MAAM;iBACR,KAAK,oBAAoB,CAAC;iBAC1B,KAAK,oBAAoB,CAAC;iBAC1B,KAAK,kBAAkB,CAAC;iBACxB,KAAK,wBAAwB;qBAC3B,MAAM;iBACR,KAAK,cAAc;qBACjB,IAAI,CAAC,YAAY,GAAG,WAAW,CAAC,KAAK,EAAE,CAAC,CAAC,kBAAkB,EAAE,CAAC,CAAC,kBAAkB,EAAE,CAAC,CAAC,gBAAgB,EAAE,CAAC,CAAC,sBAAsB,CAAC,CAAC;qBACjI,MAAM;iBACR,KAAK,oBAAoB,CAAC;iBAC1B,KAAK,oBAAoB,CAAC;iBAC1B,KAAK,kBAAkB,CAAC;iBACxB,KAAK,wBAAwB;qBAC3B,MAAM;iBACR,KAAK,UAAU;qBACb,IAAI,CAAC,QAAQ,GAAG,WAAW,CAAC,KAAK,EAAE,CAAC,CAAC,cAAc,EAAE,CAAC,CAAC,cAAc,EAAE,CAAC,CAAC,YAAY,EAAE,CAAC,CAAC,kBAAkB,CAAC,CAAC;qBAC7G,MAAM;iBACR,KAAK,gBAAgB,CAAC;iBACtB,KAAK,gBAAgB,CAAC;iBACtB,KAAK,cAAc,CAAC;iBACpB,KAAK,oBAAoB;qBACvB,MAAM;iBACR,KAAK,WAAW;qBACd,IAAI,CAAC,IAAI,GAAGH,gBAAQ,CAAC,IAAI,CAAC;qBAC1B,MAAM;iBACR,KAAK,aAAa;qBAChB,IAAI,CAAC,IAAI,GAAGA,gBAAQ,CAAC,MAAM,CAAC;qBAC5B,MAAM;iBACR,KAAK,cAAc;qBACjB,OAAO,CAAC,IAAI,CAAC,uEAAuE,CAAC,CAAC;qBACtF,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;qBACrB,MAAM;iBACR,KAAK,WAAW,CAAC;iBACjB,KAAK,YAAY,CAAC;iBAClB,KAAK,YAAY,CAAC;iBAClB,KAAK,SAAS,CAAC;iBACf,KAAK,cAAc,CAAC;iBACpB,KAAK,aAAa,CAAC;iBACnB,KAAK,SAAS,CAAC;iBACf,KAAK,WAAW;qBACd,IAAI,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC;qBACnB,MAAM;iBACR,KAAK,cAAc;qBACjB,IAAI,KAAK,KAAK,IAAI;yBAAE,IAAI,CAAC,YAAY,GAAGE,kBAAU,CAAC,MAAM,CAAC;qBAC1D,IAAI,KAAK,KAAK,MAAM;yBAAE,IAAI,CAAC,YAAY,GAAGA,kBAAU,CAAC,IAAI,CAAC;qBAC1D,MAAM;iBACR;qBACE,OAAO,CAAC,KAAK,CAAC,0CAA0C,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;qBACvE,MAAM;cACT;UACF;SACD,IAAI,IAAI,CAAC,IAAI,KAAK,mBAAmB;aAAE,OAAO,IAAI,CAAC,QAAQ,CAAC;SAC5D,IAAI,IAAI,CAAC,IAAI,KAAK,mBAAmB;aAAE,OAAO,IAAI,CAAC,QAAQ,CAAC;SAC5D,IAAI,IAAI,CAAC,OAAO,GAAG,CAAC;aAAE,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;SAC9C,cAAc,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;SACrC,OAAO,cAAc,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;;MAErC;;KACM,eAAQ;aAAG;cAgBjB;aAdQ,WAAG,GAAV,UAAW,KAAa,EAAE,MAAW;iBACnC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;cACnC;aACM,WAAG,GAAV,UAAW,IAAY;iBACrB,IAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;iBAC/B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE;qBAClD,IAAM,KAAK,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;qBAC1B,IAAM,MAAM,GAAG,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;qBAC/B,IAAI,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;yBACpB,OAAO,MAAM,CAAC;sBACf;kBACF;iBACD,OAAO,IAAI,CAAC;cACb;aACH,cAAC;UAAA;SAfQ,WAAQ,GAAU,EAAG;aAe5B;KACJ,aAAC;EAzOD;;CCAA;;;;AAIA;KAKE,oBAAY,OAA+C;SAA/C,wBAAA,EAAA,+BAA+C;SAD3D,oBAAe,GAAY,KAAK,CAAC;;;;;SAM/B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;MACxB;KACD,yBAAI,GAAJ,UAAK,GAAW,EAAE,MAA2D,EAAE,UAA2C,EAAE,OAAqC;SAC/J,IAAM,KAAK,GAAe,IAAI,CAAC;SAC/B,IAAM,WAAW,GAAW,IAAI,CAAC,WAAW,KAAK,OAAO,IAAI,CAAC,WAAW,KAAK,QAAQ,CAAC,GAAG,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC;SACjJ,IAAM,MAAM,GAAc,IAAI,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SACtD,MAAM,CAAC,kBAAkB,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;SAChD,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,UAAS,IAAY;aACpC,IAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;aAC9B,IAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;aAC/B,IAAI,QAAQ,KAAK,SAAS,EAAE;iBAC1B,IAAM,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC;iBAC3B,IAAI,IAAI,KAAK,SAAS,EAAE;qBACtB,IAAI,IAAI,CAAC,WAAW,EAAE,KAAK,QAAQ,EAAE;yBACnC,OAAO,CAAC,KAAK,CAAC,oBAAoB,GAAG,GAAG,GAAG,oDAAoD,CAAC,CAAC;yBACjG,OAAO;sBACR;qBACD,IAAI,IAAI,CAAC,WAAW,EAAE,KAAK,OAAO,EAAE;yBAClC,OAAO,CAAC,KAAK,CAAC,oBAAoB,GAAG,GAAG,GAAG,mDAAmD,CAAC,CAAC;yBAChG,OAAO;sBACR;kBACF;cACF;aACD,IAAM,MAAM,GAAQ,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC;aACnD,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,SAAS,CAAC,CAAC;UAC3C,EAAE,UAAU,EAAE,OAAO,CAAC,CAAC;MACzB;KACD,mCAAc,GAAd,UAAe,KAAa;SAC1B,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;MAC1B;KACD,0BAAK,GAAL,UAAM,IAAS,EAAE,WAAmB;SAClC,IAAM,QAAQ,GAAa,IAAI,QAAQ,EAAE,CAAC;SAC1C,IAAM,KAAK,GAAW,CAAC,IAAI,CAAC,KAAK,KAAK,SAAS,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC;SAC1E,UAAU,CAAC,KAAK,CAAC,CAAC;SAClB,SAAS,EAAE,CAAC;SACZ,aAAa,CAAC,KAAK,CAAC,CAAC;SACrB,eAAe,EAAE,CAAC;SAClB,QAAQ,CAAC,kBAAkB,EAAE,CAAC;SAC9B,QAAQ,CAAC,qBAAqB,EAAE,CAAC;SACjC,SAAS,UAAU,CAAC,KAAa;aAC/B,SAAS,QAAQ,CAAC,KAAa,EAAE,QAAgB;iBAC/C,OAAO,KAAK,IAAI,CAAC,IAAI,QAAQ,CAAC,CAAC;cAChC;aACD,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,EACZ,MAAM,EAAE,OAAO,EACf,UAAU,EAAE,WAAW,EAAE,OAAO,EAAE,aAAa,EAC/C,IAAI,EACJ,MAAM,EACN,WAAW,EACX,eAAe,EACf,aAAa,EAAE,mBAAmB,EAClC,YAAY,EAAE,kBAAkB,EAChC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM,EACvC,OAAO,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EACjB,KAAK,GAAG,IAAI,CAAC,KAAK,EAClB,QAAQ,GAAG,IAAI,CAAC,QAAQ,EACxB,OAAO,GAAG,IAAI,CAAC,OAAO,EACtB,MAAM,GAAG,IAAI,CAAC,MAAM,EACpB,SAAS,GAAG,CAAC,CAAC;aACd,IAAI,IAAI,CAAC,GAAG,KAAK,SAAS,EAAE;;iBAE1B,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,EAAG,EAAE;qBACrC,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM;yBAAE,SAAS,EAAG,CAAC;kBACtC;iBACD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,EAAE,CAAC,EAAG,EAAE;qBAC/B,QAAQ,CAAC,aAAa,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;kBAChC;cACF;aACD,MAAM,GAAG,CAAC,CAAC;aACX,OAAO,GAAG,QAAQ,CAAC,MAAM,CAAC;aAC1B,OAAO,MAAM,GAAG,OAAO,EAAE;iBACvB,MAAM,GAAG,IAAI,OAAO,EAAE,CAAC;iBACvB,MAAM,CAAC,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAG,CAAC,GAAG,KAAK,CAAC;iBACvC,MAAM,CAAC,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAG,CAAC,GAAG,KAAK,CAAC;iBACvC,MAAM,CAAC,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAG,CAAC,GAAG,KAAK,CAAC;iBACvC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;cAChC;aACD,MAAM,GAAG,CAAC,CAAC;aACX,OAAO,GAAG,KAAK,CAAC,MAAM,CAAC;aACvB,OAAO,MAAM,GAAG,OAAO,EAAE;iBACvB,IAAI,GAAG,KAAK,CAAC,MAAM,EAAG,CAAC,CAAC;iBACxB,MAAM,GAAgB,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;iBACxC,WAAW,GAAW,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;iBACxC,eAAe,GAAO,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;iBACxC,aAAa,GAAS,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;iBACxC,mBAAmB,GAAG,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;iBACxC,YAAY,GAAU,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;iBACxC,kBAAkB,GAAI,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;;iBAExC,IAAI,MAAM,EAAE;qBACV,KAAK,GAAG,IAAI,KAAK,EAAE,CAAC;qBACpB,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC;qBACxB,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;qBAC5B,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;qBAC5B,KAAK,GAAG,IAAI,KAAK,EAAE,CAAC;qBACpB,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;qBAC5B,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;qBAC5B,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;qBAC5B,MAAM,IAAI,CAAC,CAAC;qBACZ,IAAI,WAAW,EAAE;yBACf,aAAa,GAAG,KAAK,CAAC,MAAM,EAAG,CAAC,CAAC;yBACjC,KAAK,CAAC,aAAa,GAAG,aAAa,CAAC;yBACpC,KAAK,CAAC,aAAa,GAAG,aAAa,CAAC;sBACrC;;qBAED,EAAE,GAAG,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC;qBAC3B,IAAI,eAAe,EAAE;yBACnB,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,EAAE,CAAC,EAAG,EAAE;6BAC/B,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;6BACtB,QAAQ,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC;6BACnC,QAAQ,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;6BACvC,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAG,EAAE;iCACvB,OAAO,GAAG,KAAK,CAAC,MAAM,EAAG,CAAC,CAAC;iCAC3B,CAAC,GAAG,OAAO,CAAC,OAAO,GAAG,CAAC,CAAC,CAAC;iCACzB,CAAC,GAAG,OAAO,CAAC,OAAO,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;iCAC7B,EAAE,GAAG,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;iCACvB,IAAI,CAAC,KAAK,CAAC;qCAAE,QAAQ,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;iCACpD,IAAI,CAAC,KAAK,CAAC;qCAAE,QAAQ,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;8BACzD;0BACF;sBACF;qBACD,IAAI,aAAa,EAAE;yBACjB,WAAW,GAAG,KAAK,CAAC,MAAM,EAAG,CAAC,GAAG,CAAC,CAAC;yBACnC,KAAK,CAAC,MAAM,CAAC,GAAG,CACd,OAAO,CAAC,WAAW,EAAG,CAAC,EACvB,OAAO,CAAC,WAAW,EAAG,CAAC,EACvB,OAAO,CAAC,WAAW,CAAC,CACrB,CAAC;yBACF,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;sBACjC;qBACD,IAAI,mBAAmB,EAAE;yBACvB,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAG,EAAE;6BACvB,WAAW,GAAG,KAAK,CAAC,MAAM,EAAG,CAAC,GAAG,CAAC,CAAC;6BACnC,MAAM,GAAG,IAAI,OAAO,CAClB,OAAO,CAAC,WAAW,EAAG,CAAC,EACvB,OAAO,CAAC,WAAW,EAAG,CAAC,EACvB,OAAO,CAAC,WAAW,CAAC,CACrB,CAAC;6BACF,IAAI,CAAC,KAAK,CAAC;iCAAE,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;6BAC9C,IAAI,CAAC,KAAK,CAAC;iCAAE,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;0BAC/C;sBACF;qBACD,IAAI,YAAY,EAAE;yBAChB,UAAU,GAAG,KAAK,CAAC,MAAM,EAAG,CAAC,CAAC;yBAC9B,GAAG,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC;yBACzB,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;yBACxB,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;sBACzB;qBACD,IAAI,kBAAkB,EAAE;yBACtB,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAG,EAAE;6BACvB,UAAU,GAAG,KAAK,CAAC,MAAM,EAAG,CAAC,CAAC;6BAC9B,GAAG,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC;6BACzB,IAAI,CAAC,KAAK,CAAC;iCAAE,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;6BACrD,IAAI,CAAC,KAAK,CAAC;iCAAE,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;0BACtD;sBACF;qBACD,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;qBAC3B,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;kBAC5B;sBAAM;qBACL,IAAI,GAAG,IAAI,KAAK,EAAE,CAAC;qBACnB,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,MAAM,EAAG,CAAC,CAAC;qBAC1B,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,MAAM,EAAG,CAAC,CAAC;qBAC1B,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,MAAM,EAAG,CAAC,CAAC;qBAC1B,IAAI,WAAW,EAAE;yBACf,aAAa,GAAG,KAAK,CAAC,MAAM,EAAG,CAAC,CAAC;yBACjC,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;sBACpC;;qBAED,EAAE,GAAG,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC;qBAC3B,IAAI,eAAe,EAAE;yBACnB,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,EAAE,CAAC,EAAG,EAAE;6BAC/B,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;6BACtB,QAAQ,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC;6BACnC,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAG,EAAE;iCACvB,OAAO,GAAG,KAAK,CAAC,MAAM,EAAG,CAAC,CAAC;iCAC3B,CAAC,GAAG,OAAO,CAAC,OAAO,GAAG,CAAC,CAAC,CAAC;iCACzB,CAAC,GAAG,OAAO,CAAC,OAAO,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;iCAC7B,EAAE,GAAG,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;iCACvB,QAAQ,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;8BACxC;0BACF;sBACF;qBACD,IAAI,aAAa,EAAE;yBACjB,WAAW,GAAG,KAAK,CAAC,MAAM,EAAG,CAAC,GAAG,CAAC,CAAC;yBACnC,IAAI,CAAC,MAAM,CAAC,GAAG,CACb,OAAO,CAAC,WAAW,EAAG,CAAC,EACvB,OAAO,CAAC,WAAW,EAAG,CAAC,EACvB,OAAO,CAAC,WAAW,CAAC,CACrB,CAAC;sBACH;qBACD,IAAI,mBAAmB,EAAE;yBACvB,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAG,EAAE;6BACvB,WAAW,GAAG,KAAK,CAAC,MAAM,EAAG,CAAC,GAAG,CAAC,CAAC;6BACnC,MAAM,GAAG,IAAI,OAAO,CAClB,OAAO,CAAC,WAAW,EAAG,CAAC,EACvB,OAAO,CAAC,WAAW,EAAG,CAAC,EACvB,OAAO,CAAC,WAAW,CAAC,CACrB,CAAC;6BACF,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;0BACjC;sBACF;qBACD,IAAI,YAAY,EAAE;yBAChB,UAAU,GAAG,KAAK,CAAC,MAAM,EAAG,CAAC,CAAC;yBAC9B,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC;sBACvC;qBACD,IAAI,kBAAkB,EAAE;yBACtB,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAG,EAAE;6BACvB,UAAU,GAAG,KAAK,CAAC,MAAM,EAAG,CAAC,CAAC;6BAC9B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;0BACvD;sBACF;qBACD,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;kBAC3B;cACF;UACF;SACD,SAAS,SAAS;aAChB,IAAM,mBAAmB,GAAW,CAAC,IAAI,CAAC,mBAAmB,KAAK,SAAS,IAAI,IAAI,CAAC,mBAAmB,GAAG,CAAC,CAAC;aAC5G,IAAI,IAAI,CAAC,WAAW,EAAE;iBACpB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,mBAAmB,EAAE;qBAC5E,IAAI,CAAC,GAA+B,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;qBACxD,IAAI,CAAC,GAAG,CAAC,mBAAmB,GAAG,CAAC,IAAI,IAAI,CAAC,WAAW,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;qBAChE,IAAI,CAAC,GAAG,CAAC,mBAAmB,GAAG,CAAC,IAAI,IAAI,CAAC,WAAW,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;qBAChE,IAAI,CAAC,GAAG,CAAC,mBAAmB,GAAG,CAAC,IAAI,IAAI,CAAC,WAAW,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;qBAChE,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;kBACpD;cACF;aACD,IAAI,IAAI,CAAC,WAAW,EAAE;iBACpB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,mBAAmB,EAAE;qBAC5E,IAAI,CAAC,GAA+B,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;qBACxD,IAAI,CAAC,GAAG,CAAC,mBAAmB,GAAG,CAAC,IAAI,IAAI,CAAC,WAAW,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;qBAChE,IAAI,CAAC,GAAG,CAAC,mBAAmB,GAAG,CAAC,IAAI,IAAI,CAAC,WAAW,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;qBAChE,IAAI,CAAC,GAAG,CAAC,mBAAmB,GAAG,CAAC,IAAI,IAAI,CAAC,WAAW,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;qBAChE,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;kBACpD;cACF;aACD,QAAQ,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;aAC5B,IAAI,QAAQ,CAAC,KAAK,IAAI,QAAQ,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,KAAK,QAAQ,CAAC,WAAW,CAAC,MAAM,KAAK,QAAQ,CAAC,WAAW,CAAC,MAAM,IAAI,QAAQ,CAAC,WAAW,CAAC,MAAM,KAAK,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;iBAC5K,OAAO,CAAC,IAAI,CAAC,qCAAqC,GAAG,QAAQ,CAAC,QAAQ,CAAC,MAAM,GAAG,kBAAkB;qBAChG,QAAQ,CAAC,WAAW,CAAC,MAAM,GAAG,sBAAsB,GAAG,QAAQ,CAAC,WAAW,CAAC,MAAM,GAAG,iBAAiB,CAAC,CAAC;cAC3G;UACF;SACD,SAAS,aAAa,CAAC,KAAa;aAClC,IAAI,IAAI,CAAC,YAAY,KAAK,SAAS,EAAE;iBACnC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAG,EAAE;qBACzD,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;qBAC9B,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;qBAC1D,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,QAAQ,GAAG,EAAE,CAAC;qBACvC,IAAI,WAAW,GAAG,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;qBACpD,IAAI,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;qBAChD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,WAAW,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,IAAI,CAAC,EAAE;yBACvD,IAAI,MAAM,GAAG,IAAI,OAAO,EAAE,CAAC;yBAC3B,MAAM,CAAC,CAAC,GAAG,WAAW,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;yBAClC,MAAM,CAAC,CAAC,GAAG,WAAW,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC;yBACtC,MAAM,CAAC,CAAC,GAAG,WAAW,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC;yBACtC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;sBAC1B;kBACF;cACF;aACD,IAAI,IAAI,CAAC,WAAW,KAAK,SAAS,IAAI,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,EAAE;iBACjE,OAAO,CAAC,IAAI,CAAC,iFAAiF,CAAC,CAAC;iBAChG,IAAI,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC;iBAC3B,IAAI,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;iBAC7C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAG,EAAE;qBAC7C,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;kBAC9C;cACF;UACF;SACD,SAAS,eAAe;aACtB,IAAI,gBAAgB,GAAoB,EAAE,CAAC;;aAE3C,IAAI,UAAU,GAAG,EAAE,CAAC;aACpB,IAAI,IAAI,CAAC,SAAS,KAAK,SAAS,EAAE;iBAChC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;cACjC;aACD,IAAI,IAAI,CAAC,UAAU,KAAK,SAAS,EAAE;iBACjC,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE;qBAC1B,UAAU,GAAG,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;kBACjD;sBAAM;qBACL,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;kBAClC;cACF;aACD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,EAAG,EAAE;iBAC3C,IAAM,IAAI,GAAG,aAAa,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,KAAK,CAAC,CAAC;iBACzE,IAAI,IAAI;qBAAE,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;cACvC;;aAED,IAAI,QAAQ,CAAC,YAAY,EAAE;;iBAEzB,IAAM,mBAAmB,GAAG,aAAa,CAAC,mCAAmC,CAAC,QAAQ,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC;iBACzG,gBAAgB,GAAG,gBAAgB,CAAC,MAAM,CAAC,mBAAmB,CAAC,CAAC;cACjE;aACD,IAAI,gBAAgB,CAAC,MAAM,GAAG,CAAC;iBAAE,QAAQ,CAAC,UAAU,GAAG,gBAAgB,CAAC;UACzE;SACD,IAAI,IAAI,CAAC,SAAS,KAAK,SAAS,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,KAAK,CAAC,EAAE;aAC/D,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,CAAC;UAC/B;cAAM;aACL,IAAI,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC,aAAa,CAAC,IAAI,CAAC,SAAS,EAAE,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;aAC9F,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,SAAS,EAAE,CAAC;UACrD;MACF;KACH,iBAAC;CAAD,CAAC;;CCnSD;;;AAGA;KAIE,sBAAY,OAA+C;SAA/C,wBAAA,EAAA,+BAA+C;SAF3D,gBAAW,GAAW,EAAE,CAAC;SAGvB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;MACxB;KACD,2BAAI,GAAJ,UAAK,GAAW,EAAE,MAAkC,EAAE,UAA2C,EAAE,OAAqC;SACtI,IAAI,IAAI,CAAC,WAAW,KAAK,EAAE,EAAE;aAC3B,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC,SAAS,CAAC,CAAC,EAAE,GAAG,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;UAC/D;SACD,IAAM,KAAK,GAAiB,IAAI,CAAC;SACjC,IAAM,MAAM,GAAc,IAAI,SAAS,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;SACvD,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,UAAS,IAAY;aACpC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,MAAM,CAAC,CAAC;UACvC,EAAE,UAAU,EAAE,OAAO,CAAC,CAAC;MACzB;KACD,qCAAc,GAAd,UAAe,KAAa;SAC1B,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;MAC1B;KACD,qCAAc,GAAd,UAAe,KAAa;SAC1B,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;MAC1B;KACD,4BAAK,GAAL,UAAM,IAAS,EAAE,MAAkC;SACjD,IAAM,UAAU,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;SACzD,IAAM,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,EAAE;aAC3C,IAAI,MAAM,KAAK,SAAS;iBAAE,MAAM,CAAC,MAAM,CAAC,CAAC;UAC1C,CAAC,CAAC;SACH,IAAM,QAAQ,GAAI,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;SAC5D,IAAM,SAAS,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;SAChE,IAAM,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,EAAE,UAAU,EAAE,SAAS,CAAC,CAAC;SACpE,IAAI,IAAI,CAAC,UAAU,EAAE;aACnB,MAAM,CAAC,UAAU,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;UAC3D;SACD,IAAI,IAAI,CAAC,MAAM,KAAK,SAAS,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;aACzD,IAAI,MAAM,KAAK,SAAS;iBAAE,MAAM,CAAC,MAAM,CAAC,CAAC;UAC1C;SACD,OAAO,MAAM,CAAC;MACf;KACD,sCAAe,GAAf,UAAgB,IAAW;SACzB,IAAM,UAAU,GAAG,IAAI,GAAG,EAAqC,CAAC;SAChE,IAAI,IAAI,KAAK,SAAS,EAAE;aACtB,IAAM,cAAc,GAAG,IAAI,UAAU,EAAE,CAAC;aACxC,IAAM,oBAAoB,GAAG,IAAI,oBAAoB,EAAE,CAAC;aACxD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAG,EAAE;iBAC5C,IAAI,QAAQ,SAA2B,CAAC;iBACxC,IAAM,IAAI,GAAQ,IAAI,CAAC,CAAC,CAAC,CAAC;iBAC1B,QAAQ,IAAI,CAAC,IAAI;qBACf,KAAK,eAAe,CAAC;qBACrB,KAAK,qBAAqB;yBACxB,QAAQ,GAAG,IAAI,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAClC,IAAI,CAAC,KAAK,EACV,IAAI,CAAC,MAAM,EACX,IAAI,CAAC,aAAa,EAClB,IAAI,CAAC,cAAc,CACpB,CAAC;yBACF,MAAM;qBACR,KAAK,aAAa,CAAC;qBACnB,KAAK,mBAAmB,CAAC;qBACzB,KAAK,cAAc;yBACjB,QAAQ,GAAG,IAAI,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAClC,IAAI,CAAC,KAAK,EACV,IAAI,CAAC,MAAM,EACX,IAAI,CAAC,KAAK,EACV,IAAI,CAAC,aAAa,EAClB,IAAI,CAAC,cAAc,EACnB,IAAI,CAAC,aAAa,CACnB,CAAC;yBACF,MAAM;qBACR,KAAK,gBAAgB,CAAC;qBACtB,KAAK,sBAAsB;yBACzB,QAAQ,GAAG,IAAI,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAClC,IAAI,CAAC,MAAM,EACX,IAAI,CAAC,QAAQ,EACb,IAAI,CAAC,UAAU,EACf,IAAI,CAAC,WAAW,CACjB,CAAC;yBACF,MAAM;qBACR,KAAK,kBAAkB,CAAC;qBACxB,KAAK,wBAAwB;yBAC3B,QAAQ,GAAG,IAAI,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAClC,IAAI,CAAC,SAAS,EACd,IAAI,CAAC,YAAY,EACjB,IAAI,CAAC,MAAM,EACX,IAAI,CAAC,cAAc,EACnB,IAAI,CAAC,cAAc,EACnB,IAAI,CAAC,SAAS,EACd,IAAI,CAAC,UAAU,EACf,IAAI,CAAC,WAAW,CACjB,CAAC;yBACF,MAAM;qBACR,KAAK,cAAc,CAAC;qBACpB,KAAK,oBAAoB;yBACvB,QAAQ,GAAG,IAAI,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAClC,IAAI,CAAC,MAAM,EACX,IAAI,CAAC,MAAM,EACX,IAAI,CAAC,cAAc,EACnB,IAAI,CAAC,cAAc,EACnB,IAAI,CAAC,SAAS,EACd,IAAI,CAAC,UAAU,EACf,IAAI,CAAC,WAAW,CACjB,CAAC;yBACF,MAAM;qBACR,KAAK,gBAAgB,CAAC;qBACtB,KAAK,sBAAsB;yBACzB,QAAQ,GAAG,IAAI,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAClC,IAAI,CAAC,MAAM,EACX,IAAI,CAAC,aAAa,EAClB,IAAI,CAAC,cAAc,EACnB,IAAI,CAAC,QAAQ,EACb,IAAI,CAAC,SAAS,EACd,IAAI,CAAC,UAAU,EACf,IAAI,CAAC,WAAW,CACjB,CAAC;yBACF,MAAM;qBACR,KAAK,sBAAsB,CAAC;qBAC5B,KAAK,qBAAqB,CAAC;qBAC3B,KAAK,oBAAoB,CAAC;qBAC1B,KAAK,qBAAqB;yBACxB,QAAQ,GAAG,IAAI,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAClC,IAAI,CAAC,MAAM,EACX,IAAI,CAAC,MAAM,CACZ,CAAC;yBACF,MAAM;qBACR,KAAK,cAAc,CAAC;qBACpB,KAAK,oBAAoB;yBACvB,QAAQ,GAAG,IAAI,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAClC,IAAI,CAAC,WAAW,EAChB,IAAI,CAAC,WAAW,EAChB,IAAI,CAAC,aAAa,EAClB,IAAI,CAAC,WAAW,EAChB,IAAI,CAAC,UAAU,EACf,IAAI,CAAC,WAAW,CACjB,CAAC;yBACF,MAAM;qBACR,KAAK,eAAe,CAAC;qBACrB,KAAK,qBAAqB;yBACxB,QAAQ,GAAG,IAAI,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAClC,IAAI,CAAC,MAAM,EACX,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,cAAc,EACnB,IAAI,CAAC,eAAe,EACpB,IAAI,CAAC,GAAG,CACT,CAAC;yBACF,MAAM;qBACR,KAAK,mBAAmB,CAAC;qBACzB,KAAK,yBAAyB;yBAC5B,QAAQ,GAAG,IAAI,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAClC,IAAI,CAAC,MAAM,EACX,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,eAAe,EACpB,IAAI,CAAC,cAAc,EACnB,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,CAAC,CACP,CAAC;yBACF,MAAM;qBACR,KAAK,eAAe,CAAC;qBACrB,KAAK,qBAAqB;yBACxB,QAAQ,GAAG,IAAI,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAClC,IAAI,CAAC,MAAM,EACX,IAAI,CAAC,QAAQ,EACb,IAAI,CAAC,QAAQ,EACb,IAAI,CAAC,SAAS,CACf,CAAC;yBACF,MAAM;qBACR,KAAK,gBAAgB;yBACnB,QAAQ,GAAG,oBAAoB,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;yBAC5C,MAAM;qBACR,KAAK,UAAU;yBACb,QAAQ,GAAG,cAAc,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC;yBACtE,MAAM;qBACR;yBACE,OAAO,CAAC,IAAI,CAAC,iDAAiD,GAAG,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC,CAAC;yBAClF,SAAS;kBACZ;iBACD,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;iBAC1B,IAAI,IAAI,CAAC,IAAI,KAAK,SAAS;qBAAE,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;iBACvD,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,QAAQ,CAAC;cAClC;UACF;SACD,OAAO,UAAU,CAAC;MACnB;KACD,qCAAc,GAAd,UAAe,IAAW,EAAE,QAA8B;SACxD,IAAM,SAAS,GAAG,IAAI,GAAG,EAAoB,CAAC;SAC9C,IAAI,IAAI,KAAK,SAAS,EAAE;aACtB,IAAM,MAAM,GAAG,IAAI,cAAc,EAAE,CAAC;aACpC,MAAM,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;aAC7B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAG,EAAE;iBAC5C,IAAM,QAAQ,GAAG,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;iBACvC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,QAAQ,CAAC;cACrC;UACF;SACD,OAAO,SAAS,CAAC;MAClB;KACD,sCAAe,GAAf,UAAgB,IAAW;SACzB,IAAM,UAAU,GAAG,EAAE,CAAC;SACtB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAG,EAAE;aACrC,IAAM,IAAI,GAAG,aAAa,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;aAC1C,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;UACvB;SACD,OAAO,UAAU,CAAC;MACnB;KACD,kCAAW,GAAX,UAAY,IAAW,EAAE,MAAW;SAClC,IAAM,KAAK,GAAiB,IAAI,CAAC;SACjC,IAAM,MAAM,GAAG,IAAI,GAAG,EAA4B,CAAC;SACnD,IAAI,MAAmB,CAAC;SACxB,SAAS,SAAS,CAAC,GAAW;aAC5B,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;aAC7B,OAAO,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE;iBACtB,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;cAC5B,EAAE,SAAS,EAAE;iBACZ,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;cAC9B,CAAC,CAAC;UACJ;SACD,IAAI,IAAI,KAAK,SAAS,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;aACzC,IAAM,OAAO,GAAG,IAAI,cAAc,CAAC,MAAM,CAAC,CAAC;aAC3C,MAAM,GAAG,IAAI,WAAW,CAAC,OAAO,CAAC,CAAC;aAClC,MAAM,CAAC,cAAc,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;aACxC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAG,EAAE;iBAC5C,IAAM,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;iBACtB,IAAM,IAAI,GAAG,2BAA2B,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC,WAAW,GAAG,KAAK,CAAC,GAAG,CAAC;iBACrG,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,SAAS,CAAC,IAAI,CAAC,CAAC;cACtC;UACF;SACD,OAAO,MAAM,CAAC;MACf;KACD,oCAAa,GAAb,UAAc,IAAW,EAAE,MAAW;SACpC,SAAS,aAAa,CAAC,KAAU,EAAE,IAAS;aAC1C,IAAI,QAAO,KAAK,CAAC,KAAK,QAAQ;iBAAE,OAAO,KAAK,CAAC;aAC7C,OAAO,CAAC,IAAI,CAAC,sEAAsE,EAAE,KAAK,CAAC,CAAC;aAC5F,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC;UACpB;SACD,IAAM,QAAQ,GAAG,IAAI,GAAG,EAAmB,CAAC;SAC5C,IAAI,IAAI,KAAK,SAAS,EAAE;aACtB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAG,EAAE;iBAC5C,IAAM,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;iBACrB,IAAI,IAAI,CAAC,KAAK,KAAK,SAAS,EAAE;qBAC5B,OAAO,CAAC,IAAI,CAAC,8CAA8C,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;kBACzE;iBACD,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,SAAS,EAAE;qBACpC,OAAO,CAAC,IAAI,CAAC,qCAAqC,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;kBACjE;iBACD,IAAM,OAAO,GAAG,IAAI,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;iBAChD,OAAO,CAAC,WAAW,GAAG,IAAI,CAAC;iBAC3B,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;iBACzB,IAAI,IAAI,CAAC,IAAI,KAAK,SAAS;qBAAE,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;iBACtD,IAAI,IAAI,CAAC,OAAO,KAAK,SAAS;qBAAE,OAAO,CAAC,OAAO,GAAG,aAAa,CAAC,IAAI,CAAC,OAAO,EAAEO,sBAAc,CAAC,CAAC;iBAC9F,IAAI,IAAI,CAAC,MAAM,KAAK,SAAS;qBAAE,OAAO,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;iBACrE,IAAI,IAAI,CAAC,MAAM,KAAK,SAAS;qBAAE,OAAO,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;iBACrE,IAAI,IAAI,CAAC,IAAI,KAAK,SAAS,EAAE;qBAC3B,OAAO,CAAC,KAAK,GAAG,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAEC,uBAAe,CAAC,CAAC;qBAC7D,OAAO,CAAC,KAAK,GAAG,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAEA,uBAAe,CAAC,CAAC;kBAC9D;iBACD,IAAI,IAAI,CAAC,SAAS,KAAK,SAAS;qBAAE,OAAO,CAAC,SAAS,GAAG,aAAa,CAAC,IAAI,CAAC,SAAS,EAAEC,qBAAa,CAAC,CAAC;iBACnG,IAAI,IAAI,CAAC,SAAS,KAAK,SAAS;qBAAE,OAAO,CAAC,SAAS,GAAG,aAAa,CAAC,IAAI,CAAC,SAAS,EAAEA,qBAAa,CAAC,CAAC;iBACnG,IAAI,IAAI,CAAC,UAAU,KAAK,SAAS;qBAAE,OAAO,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;iBACxE,IAAI,IAAI,CAAC,KAAK,KAAK,SAAS;qBAAE,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;iBACzD,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,OAAO,CAAC;cAC/B;UACF;SACD,OAAO,QAAQ,CAAC;MACjB;KACD,kCAAW,GAAX,UAAY,IAAS,EAAE,UAAmD,EAAE,SAAiC;SAC3G,IAAM,MAAM,GAAG,IAAI,OAAO,EAAE,CAAC;;SAE3B,IAAI,MAAgB,CAAC;SACrB,SAAS,WAAW,CAAC,IAAY;aAC/B,IAAI,UAAU,CAAC,IAAI,CAAC,KAAK,SAAS,EAAE;iBAClC,OAAO,CAAC,IAAI,CAAC,wCAAwC,EAAE,IAAI,CAAC,CAAC;cAC9D;aACD,OAAO,UAAU,CAAC,IAAI,CAAC,CAAC;UACzB;SACD,SAAS,WAAW,CAAC,IAAY;aAC/B,IAAI,IAAI,KAAK,SAAS;iBAAE,OAAO,SAAS,CAAC;aACzC,IAAI,SAAS,CAAC,IAAI,CAAC,KAAK,SAAS,EAAE;iBACjC,OAAO,CAAC,IAAI,CAAC,wCAAwC,EAAE,IAAI,CAAC,CAAC;cAC9D;aACD,OAAO,SAAS,CAAC,IAAI,CAAC,CAAC;UACxB;SACD,QAAQ,IAAI,CAAC,IAAI;aACf,KAAK,OAAO;iBACV,MAAM,GAAG,IAAI,KAAK,EAAE,CAAC;iBACrB,IAAI,IAAI,CAAC,UAAU,KAAK,SAAS,EAAE;qBACjC,IAAI,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE;yBACpC,MAAgB,CAAC,UAAU,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;sBAC3D;kBACF;iBACD,IAAI,IAAI,CAAC,GAAG,KAAK,SAAS,EAAE;qBAC1B,IAAI,IAAI,CAAC,GAAG,CAAC,IAAI,KAAK,KAAK,EAAE;yBAC1B,MAAgB,CAAC,GAAG,GAAG,IAAI,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;sBAC9E;0BAAM,IAAI,IAAI,CAAC,GAAG,CAAC,IAAI,KAAK,SAAS,EAAE;yBACrC,MAAgB,CAAC,GAAG,GAAG,IAAI,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;sBACvE;kBACF;iBACD,MAAM;aACR,KAAK,mBAAmB;iBACtB,MAAM,GAAG,IAAI,iBAAiB,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;iBAC3E,IAAI,IAAI,CAAC,KAAK,KAAK,SAAS;qBAAG,MAA4B,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;iBAC/E,IAAI,IAAI,CAAC,IAAI,KAAK,SAAS;qBAAG,MAA4B,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;iBAC5E,IAAI,IAAI,CAAC,SAAS,KAAK,SAAS;qBAAG,MAA4B,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;iBAC3F,IAAI,IAAI,CAAC,UAAU,KAAK,SAAS;qBAAG,MAA4B,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;iBAC9F,IAAI,IAAI,CAAC,IAAI,KAAK,SAAS;qBAAG,MAA4B,CAAC,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;iBAC/F,MAAM;aACR,KAAK,oBAAoB;iBACvB,MAAM,GAAG,IAAI,kBAAkB,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;iBACnG,MAAM;aACR,KAAK,cAAc;iBACjB,MAAM,GAAG,IAAI,YAAY,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;iBACtD,MAAM;aACR,KAAK,kBAAkB;iBACrB,MAAM,GAAG,IAAI,gBAAgB,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;iBAC1D,MAAM;aACR,KAAK,YAAY;iBACf,MAAM,GAAG,IAAI,UAAU,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;iBAC/E,MAAM;aACR,KAAK,WAAW;iBACd,MAAM,GAAG,IAAI,SAAS,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;iBACzG,MAAM;aACR,KAAK,iBAAiB;iBACpB,MAAM,GAAG,IAAI,eAAe,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;iBAC3E,MAAM;aACR,KAAK,MAAM;iBACT,IAAM,QAAQ,GAAG,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;iBAC5C,IAAM,QAAQ,GAAG,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;iBAC5C,IAAI,QAAQ,CAAC,KAAK,IAAI,QAAQ,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;qBAC/C,MAAM,GAAG,IAAI,WAAW,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;kBAC9C;sBAAM;qBACL,MAAM,GAAG,IAAI,IAAI,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;kBACvC;iBACD,MAAM;aACR,KAAK,KAAK;iBACR,MAAM,GAAG,IAAI,GAAG,EAAE,CAAC;iBACnB,MAAM;aACR,KAAK,MAAM;iBACT,MAAM,GAAG,IAAI,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;iBACrF,MAAM;aACR,KAAK,cAAc;iBACjB,MAAM,GAAG,IAAI,YAAY,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;iBAClF,MAAM;aACR,KAAK,YAAY,CAAC;aAClB,KAAK,QAAQ;iBACX,MAAM,GAAG,IAAI,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;iBAC5E,MAAM;aACR,KAAK,QAAQ;iBACX,MAAM,GAAG,IAAI,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;iBAChD,MAAM;aACR,KAAK,OAAO;iBACV,MAAM,GAAG,IAAI,KAAK,EAAE,CAAC;iBACrB,MAAM;aACR;iBACE,MAAM,GAAG,IAAI,QAAQ,EAAE,CAAC;UAC3B;SACD,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;SACxB,IAAI,IAAI,CAAC,IAAI,KAAK,SAAS;aAAE,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;SACrD,IAAI,IAAI,CAAC,MAAM,KAAK,SAAS,EAAE;aAC7B,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;aAC9B,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,UAAU,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC;UACpE;cAAM;aACL,IAAI,IAAI,CAAC,QAAQ,KAAK,SAAS;iBAAE,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aAC1E,IAAI,IAAI,CAAC,QAAQ,KAAK,SAAS;iBAAE,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aAC1E,IAAI,IAAI,CAAC,UAAU,KAAK,SAAS;iBAAE,MAAM,CAAC,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;aAChF,IAAI,IAAI,CAAC,KAAK,KAAK,SAAS;iBAAE,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;UAClE;SACD,IAAI,IAAI,CAAC,UAAU,KAAK,SAAS;aAAE,MAAM,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;SACvE,IAAI,IAAI,CAAC,aAAa,KAAK,SAAS;aAAE,MAAM,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC;SAChF,IAAI,IAAI,CAAC,MAAM,EAAE;aACf,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,KAAK,SAAS;iBAAE,MAAM,CAAC,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;aAC1E,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,KAAK,SAAS;iBAAE,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;aAChF,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,KAAK,SAAS;iBAAE,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;aAC5F,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,KAAK,SAAS;iBAAE,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;UACnG;SACD,IAAI,IAAI,CAAC,OAAO,KAAK,SAAS;aAAE,MAAM,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;SAC9D,IAAI,IAAI,CAAC,QAAQ,KAAK,SAAS;aAAE,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;SACjE,IAAI,IAAI,CAAC,QAAQ,KAAK,SAAS,EAAE;aAC/B,KAAK,IAAM,KAAK,IAAI,IAAI,CAAC,QAAQ,EAAE;iBACjC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,UAAU,EAAE,SAAS,CAAC,CAAC,CAAC;cAC3E;UACF;SACD,IAAI,IAAI,CAAC,IAAI,KAAK,KAAK,EAAE;aACvB,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;aAC3B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAG,EAAE;iBACvC,IAAM,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;iBACxB,IAAM,KAAK,GAAG,MAAM,CAAC,mBAAmB,CAAC,MAAM,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC;iBAC/D,IAAI,KAAK,KAAK,SAAS,EAAE;qBACtB,MAAc,CAAC,QAAQ,CAAC,KAAK,EAAE,KAAK,CAAC,QAAQ,CAAC,CAAC;kBACjD;cACF;UACF;SACD,OAAO,MAAM,CAAC;;MAEjB;KACH,mBAAC;CAAD,CAAC;;CCzaD;;;AAGA;KAEE,oBAAY,OAA+C;SAA/C,wBAAA,EAAA,+BAA+C;SACzD,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;MACxB;KACD,yBAAI,GAAJ,UAAK,GAAW,EAAE,MAA4B,EAAE,UAA2C,EAAE,OAAqC;SAChI,IAAM,KAAK,GAAe,IAAI,CAAC;SAC/B,IAAM,MAAM,GAAc,IAAI,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SACtD,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,UAAS,IAAY;aACpC,IAAI,IAAS,CAAC;aACd,IAAI;iBACF,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;cACzB;aAAC,OAAO,CAAC,EAAE;iBACV,OAAO,CAAC,IAAI,CAAC,uFAAuF,CAAC,CAAC;iBACtG,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,EAAE,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;cACxD;aACD,IAAM,IAAI,GAAS,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;aACrC,IAAI,MAAM;iBAAE,MAAM,CAAC,IAAI,CAAC,CAAC;UAC1B,EAAE,UAAU,EAAE,OAAO,CAAC,CAAC;MACzB;KACD,0BAAK,GAAL,UAAM,IAAS;SACb,OAAO,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC;MACvB;KACH,iBAAC;CAAD,CAAC;;CC7BD,IAAI,OAAqB,CAAC;AAC1B,UAAgB,eAAe;KAC7B,IAAI,OAAO,KAAK,SAAS,EAAE;;SAEzB,OAAO,GAAG,IAAI,YAAY,EAAE,CAAC;MAC9B;KACD,OAAO,OAAO,CAAC;CACjB,CAAC;;CCJD;;;AAGA;KAEE,qBAAY,OAA+C;SAA/C,wBAAA,EAAA,+BAA+C;SACzD,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;MACxB;KACD,0BAAI,GAAJ,UAAK,GAAW,EAAE,MAA0C,EAAE,UAA2C,EAAE,OAAqC;SAC9I,IAAM,MAAM,GAAc,IAAI,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SACtD,MAAM,CAAC,eAAe,CAAC,aAAa,CAAC,CAAC;SACtC,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,UAAS,MAAmB;aAC3C,IAAM,OAAO,GAAiB,eAAe,EAAE,CAAC;aAChD,OAAO,CAAC,eAAe,CAAC,MAAM,EAAE,UAAS,WAAwB;iBAC/D,MAAM,CAAC,WAAW,CAAC,CAAC;cACrB,CAAC,CAAC;UACJ,EAAE,UAAU,EAAE,OAAO,CAAC,CAAC;MACzB;KACH,kBAAC;CAAD,CAAC;;CClBD;;;AAGA;KAME;SALA,SAAI,GAAW,cAAc,CAAC;SAC9B,WAAM,GAAW,CAAC,CAAC;SACnB,WAAM,GAAW,KAAK,CAAC;SAIrB,IAAI,CAAC,OAAO,GAAG,IAAI,iBAAiB,EAAE,CAAC;SACvC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;SAC9B,IAAI,CAAC,OAAO,CAAC,gBAAgB,GAAG,KAAK,CAAC;SACtC,IAAI,CAAC,OAAO,GAAG,IAAI,iBAAiB,EAAE,CAAC;SACvC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;SAC9B,IAAI,CAAC,OAAO,CAAC,gBAAgB,GAAG,KAAK,CAAC;MACvC;KACD,6BAAM,GAAN,UAAO,MAAyB;SAC9B,IAAI,QAAQ,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,CAAC;SAClD,IAAM,QAAQ,GAAG,IAAI,OAAO,EAAE,CAAC;SAC/B,IAAM,OAAO,GAAG,IAAI,OAAO,EAAE,CAAC;;SAE5B,IAAM,WAAW,GAAG,QAAQ,KAAK,IAAI,IAAI,KAAK,KAAK,MAAM,CAAC,KAAK,IAAI,GAAG,KAAK,MAAM,CAAC,GAAG;aACnE,MAAM,KAAK,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,IAAI,IAAI,KAAK,MAAM,CAAC,IAAI;aAC9D,GAAG,KAAK,MAAM,CAAC,GAAG,IAAI,IAAI,KAAK,MAAM,CAAC,IAAI,CAAC;SAC7D,IAAI,WAAW,EAAE;aACf,QAAQ,GAAG,IAAI,CAAC;aAChB,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;aACrB,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC;aACjB,MAAM,GAAG,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;aACrC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;aACnB,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC;aACjB,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;;;aAGnB,IAAM,gBAAgB,GAAG,MAAM,CAAC,gBAAgB,CAAC,KAAK,EAAE,CAAC;aACzD,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;aAC/B,IAAM,kBAAkB,GAAG,MAAM,GAAG,IAAI,GAAG,KAAK,CAAC;aACjD,IAAM,IAAI,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,GAAG,GAAG,GAAG,GAAG,CAAC,IAAI,IAAI,CAAC;aACjE,IAAI,IAAI,SAAA,EAAE,IAAI,SAAA,CAAC;;aAEf,OAAO,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAE,MAAM,CAAC;aAChC,QAAQ,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC;;aAE/B,IAAI,GAAG,CAAE,IAAI,GAAG,MAAM,GAAG,kBAAkB,CAAC;aAC5C,IAAI,GAAG,IAAI,GAAG,MAAM,GAAG,kBAAkB,CAAC;aAC1C,gBAAgB,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,CAAC,CAAC;aACxD,gBAAgB,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,GAAG,IAAI,KAAK,IAAI,GAAG,IAAI,CAAC,CAAC;aAC7D,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;;aAErD,IAAI,GAAG,CAAE,IAAI,GAAG,MAAM,GAAG,kBAAkB,CAAC;aAC5C,IAAI,GAAG,IAAI,GAAG,MAAM,GAAG,kBAAkB,CAAC;aAC1C,gBAAgB,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,CAAC,CAAC;aACxD,gBAAgB,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,GAAG,IAAI,KAAK,IAAI,GAAG,IAAI,CAAC,CAAC;aAC7D,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;UACtD;SACD,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;SACpE,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;;MAExE;KACH,mBAAC;CAAD,CAAC;;CCzDD;;;;;;AAMA;KAAgCS,8BAAQ;KAQtC,oBAAY,IAAY,EAAE,GAAW,EAAE,cAAsB;SAA7D,YACE,iBAAO,SA6BR;SA5BC,KAAI,CAAC,IAAI,GAAG,YAAY,CAAC;SACzB,IAAM,GAAG,GAAG,EAAE,EAAE,MAAM,GAAG,CAAC,CAAC;SAC3B,KAAI,CAAC,QAAQ,GAAG,IAAI,iBAAiB,CAAC,GAAG,EAAE,MAAM,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC;SAC9D,KAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,CAAC,CAAC;SAChC,KAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;SAC3C,KAAI,CAAC,GAAG,CAAC,KAAI,CAAC,QAAQ,CAAC,CAAC;SACxB,KAAI,CAAC,QAAQ,GAAG,IAAI,iBAAiB,CAAC,GAAG,EAAE,MAAM,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC;SAC9D,KAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,CAAC,CAAC;SAChC,KAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,OAAO,CAAC,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;SAC7C,KAAI,CAAC,GAAG,CAAC,KAAI,CAAC,QAAQ,CAAC,CAAC;SACxB,KAAI,CAAC,QAAQ,GAAG,IAAI,iBAAiB,CAAC,GAAG,EAAE,MAAM,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC;SAC9D,KAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;SAC9B,KAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;SAC3C,KAAI,CAAC,GAAG,CAAC,KAAI,CAAC,QAAQ,CAAC,CAAC;SACxB,KAAI,CAAC,QAAQ,GAAG,IAAI,iBAAiB,CAAC,GAAG,EAAE,MAAM,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC;SAC9D,KAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,CAAC,CAAC;SAChC,KAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,OAAO,CAAC,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;SAC7C,KAAI,CAAC,GAAG,CAAC,KAAI,CAAC,QAAQ,CAAC,CAAC;SACxB,KAAI,CAAC,QAAQ,GAAG,IAAI,iBAAiB,CAAC,GAAG,EAAE,MAAM,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC;SAC9D,KAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,CAAC,CAAC;SAChC,KAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;SAC3C,KAAI,CAAC,GAAG,CAAC,KAAI,CAAC,QAAQ,CAAC,CAAC;SACxB,KAAI,CAAC,QAAQ,GAAG,IAAI,iBAAiB,CAAC,GAAG,EAAE,MAAM,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC;SAC9D,KAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,CAAC,CAAC;SAChC,KAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,CAAC,CAAC,CAAC;SAC7C,KAAI,CAAC,GAAG,CAAC,KAAI,CAAC,QAAQ,CAAC,CAAC;SACxB,IAAM,OAAO,GAAG,EAAE,MAAM,EAAEP,qBAAa,CAAC,GAAG,EAAE,SAAS,EAAEF,qBAAa,CAAC,MAAM,EAAE,SAAS,EAAEA,qBAAa,CAAC,MAAM,EAAE,CAAC;SAChH,KAAI,CAAC,YAAY,GAAG,IAAI,qBAAqB,CAAC,cAAc,EAAE,cAAc,EAAE,OAAO,CAAC,CAAC;;MACxF;KACD,kCAAa,GAAb,UAAc,QAAa,EAAE,KAAY;SACvC,IAAI,IAAI,CAAC,MAAM,KAAK,IAAI;aAAE,IAAI,CAAC,iBAAiB,EAAE,CAAC;SACnD,IAAM,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;SACvC,IAAM,eAAe,GAAG,YAAY,CAAC,OAAO,CAAC,eAAe,CAAC;SAC7D,YAAY,CAAC,OAAO,CAAC,eAAe,GAAG,KAAK,CAAC;SAC7C,YAAY,CAAC,cAAc,GAAG,CAAC,CAAC;SAChC,QAAQ,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,EAAE,YAAY,CAAC,CAAC;SACpD,YAAY,CAAC,cAAc,GAAG,CAAC,CAAC;SAChC,QAAQ,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,EAAE,YAAY,CAAC,CAAC;SACpD,YAAY,CAAC,cAAc,GAAG,CAAC,CAAC;SAChC,QAAQ,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,EAAE,YAAY,CAAC,CAAC;SACpD,YAAY,CAAC,cAAc,GAAG,CAAC,CAAC;SAChC,QAAQ,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,EAAE,YAAY,CAAC,CAAC;SACpD,YAAY,CAAC,cAAc,GAAG,CAAC,CAAC;SAChC,QAAQ,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,EAAE,YAAY,CAAC,CAAC;SACpD,YAAY,CAAC,OAAO,CAAC,eAAe,GAAG,eAAe,CAAC;SACvD,YAAY,CAAC,cAAc,GAAG,CAAC,CAAC;SAChC,QAAQ,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,EAAE,YAAY,CAAC,CAAC;SACpD,QAAQ,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;MAChC;KACH,iBAAC;CAAD,CA3DA,CAAgC,QAAQ;;;KCLLS,iCAAQ;KAIzC;SAAA,YACE,iBAAO,SAMR;SALC,KAAI,CAAC,IAAI,GAAG,eAAe,CAAC;SAC5B,KAAI,CAAC,OAAO,GAAG,eAAe,EAAE,CAAC;SACjC,KAAI,CAAC,IAAI,GAAG,KAAI,CAAC,OAAO,CAAC,UAAU,EAAE,CAAC;SACtC,KAAI,CAAC,IAAI,CAAC,OAAO,CAAC,KAAI,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;SAC5C,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC;;MACpB;KACD,gCAAQ,GAAR;SACE,OAAO,IAAI,CAAC,IAAI,CAAC;MAClB;KACD,oCAAY,GAAZ;SACE,IAAI,IAAI,CAAC,MAAM,KAAK,IAAI,EAAE;aACxB,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;aAClC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;aACjD,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;aAC5C,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;UACpB;MACF;KACD,iCAAS,GAAT;SACE,OAAO,IAAI,CAAC,MAAM,CAAC;MACpB;KACD,iCAAS,GAAT,UAAU,KAAgB;SACxB,IAAI,IAAI,CAAC,MAAM,KAAK,IAAI,EAAE;aACxB,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;aAClC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;UAClD;cAAM;aACL,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;UAChD;SACD,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;SACpB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SAC/B,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;MAC/C;KACD,uCAAe,GAAf;SACE,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;MAC7B;KACD,uCAAe,GAAf,UAAgB,KAAa;SAC3B,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;MAC9B;KACD,yCAAiB,GAAjB,UAAkB,KAAc;SAC9B,IAAM,QAAQ,GAAG,IAAI,OAAO,EAAE,CAAC;SAC/B,IAAM,UAAU,GAAG,IAAI,UAAU,EAAE,CAAC;SACpC,IAAM,KAAK,GAAG,IAAI,OAAO,EAAE,CAAC;SAC5B,IAAM,WAAW,GAAG,IAAI,OAAO,EAAE,CAAC;;SAEhC,iBAAM,iBAAiB,YAAC,KAAK,CAAC,CAAC;SAC/B,IAAM,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;SACvC,IAAM,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;SACnB,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,QAAQ,EAAE,UAAU,EAAE,KAAK,CAAC,CAAC;SACxD,WAAW,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,CAAC,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;SACvD,QAAQ,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC;SACzD,QAAQ,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;;MAE1F;KACH,oBAAC;CAAD,CA1DA,CAAmC,QAAQ;;;KCAhBA,yBAAQ;KAWjC,eAAY,QAAuB;SAAnC,YACE,iBAAO,SAOR;SAfD,cAAQ,GAAY,KAAK,CAAC;SAC1B,eAAS,GAAW,CAAC,CAAC;SACtB,kBAAY,GAAW,CAAC,CAAC;SACzB,eAAS,GAAY,KAAK,CAAC;SAC3B,wBAAkB,GAAY,IAAI,CAAC;SACnC,gBAAU,GAAW,OAAO,CAAC;SAC7B,aAAO,GAAgB,EAAE,CAAC;SAGxB,KAAI,CAAC,IAAI,GAAG,OAAO,CAAC;SACpB,KAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,OAAO,CAAC;SAChC,KAAI,CAAC,MAAM,GAAG,KAAI,CAAC,OAAO,CAAC,kBAAkB,EAAE,CAAC;SAChD,KAAI,CAAC,MAAM,CAAC,OAAO,GAAG,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;SAC9C,KAAI,CAAC,IAAI,GAAG,KAAI,CAAC,OAAO,CAAC,UAAU,EAAE,CAAC;SACtC,KAAI,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAC;;MACxC;KACD,yBAAS,GAAT;SACE,OAAO,IAAI,CAAC,IAAI,CAAC;MAClB;KACD,6BAAa,GAAb,UAAc,SAAgC;SAC5C,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;SAChC,IAAI,CAAC,UAAU,GAAG,WAAW,CAAC;SAC9B,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC;SACxB,IAAI,CAAC,OAAO,EAAE,CAAC;SACf,OAAO,IAAI,CAAC;MACb;KACD,yBAAS,GAAT,UAAU,WAAwB;SAChC,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,WAAW,CAAC;SACjC,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC;SAC3B,IAAI,IAAI,CAAC,QAAQ;aAAE,IAAI,CAAC,IAAI,EAAE,CAAC;SAC/B,OAAO,IAAI,CAAC;MACb;KACD,oBAAI,GAAJ;SACE,IAAI,IAAI,CAAC,SAAS,KAAK,IAAI,EAAE;aAC3B,OAAO,CAAC,IAAI,CAAC,wCAAwC,CAAC,CAAC;aACvD,OAAO,IAAI,CAAC;UACb;SACD,IAAI,IAAI,CAAC,kBAAkB,KAAK,KAAK,EAAE;aACrC,OAAO,CAAC,IAAI,CAAC,kDAAkD,CAAC,CAAC;aACjE,OAAO,IAAI,CAAC;UACb;SACD,IAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,kBAAkB,EAAE,CAAC;SACjD,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;SACnC,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;SAC/B,MAAM,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC;SACrC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;SAChC,MAAM,CAAC,YAAY,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC;SAC9C,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;SACtB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;SACrB,OAAO,IAAI,CAAC,OAAO,EAAE,CAAC;MACvB;KACD,qBAAK,GAAL;SACE,IAAI,IAAI,CAAC,kBAAkB,KAAK,KAAK,EAAE;aACrC,OAAO,CAAC,IAAI,CAAC,kDAAkD,CAAC,CAAC;aACjE,OAAO,IAAI,CAAC;UACb;SACD,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;SACnB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC;SAC1C,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;SACvB,OAAO,IAAI,CAAC;MACb;KACD,oBAAI,GAAJ;SACE,IAAI,IAAI,CAAC,kBAAkB,KAAK,KAAK,EAAE;aACrC,OAAO,CAAC,IAAI,CAAC,kDAAkD,CAAC,CAAC;aACjE,OAAO,IAAI,CAAC;UACb;SACD,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;SACnB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;SACnB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;SACvB,OAAO,IAAI,CAAC;MACb;KACD,uBAAO,GAAP;SACE,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;aAC3B,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;aACrC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAG,EAAE;iBACpD,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;cAC9C;aACD,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;UACjE;cAAM;aACL,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;UACvC;SACD,OAAO,IAAI,CAAC;MACb;KACD,0BAAU,GAAV;SACE,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;aAC3B,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;aACxC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAG,EAAE;iBACpD,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;cACjD;aACD,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;UACpE;cAAM;aACL,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;UAC1C;SACD,OAAO,IAAI,CAAC;MACb;KACD,0BAAU,GAAV;SACE,OAAO,IAAI,CAAC,OAAO,CAAC;MACrB;KACD,0BAAU,GAAV,UAAW,KAAuB;SAAvB,sBAAA,EAAA,UAAuB;SAChC,IAAI,IAAI,CAAC,SAAS,KAAK,IAAI,EAAE;aAC3B,IAAI,CAAC,UAAU,EAAE,CAAC;aAClB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;aACrB,IAAI,CAAC,OAAO,EAAE,CAAC;UAChB;cAAM;aACL,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;UACtB;SACD,OAAO,IAAI,CAAC;MACb;KACD,yBAAS,GAAT;SACE,OAAO,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC,CAAC;MAC7B;KACD,yBAAS,GAAT,UAAU,MAAiB;SACzB,OAAO,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAE,MAAM,CAAE,GAAG,EAAE,CAAC,CAAC;MAClD;KACD,+BAAe,GAAf,UAAgB,KAAa;SAC3B,IAAI,IAAI,CAAC,kBAAkB,KAAK,KAAK,EAAE;aACrC,OAAO,CAAC,IAAI,CAAC,kDAAkD,CAAC,CAAC;aACjE,OAAO,IAAI,CAAC;UACb;SACD,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;SAC1B,IAAI,IAAI,CAAC,SAAS,KAAK,IAAI,EAAE;aAC3B,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC;UACpD;SACD,OAAO,IAAI,CAAC;MACb;KACD,+BAAe,GAAf;SACE,OAAO,IAAI,CAAC,YAAY,CAAC;MAC1B;KACD,uBAAO,GAAP;SACE,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;MACxB;KACD,uBAAO,GAAP;SACE,IAAI,IAAI,CAAC,kBAAkB,KAAK,KAAK,EAAE;aACrC,OAAO,CAAC,IAAI,CAAC,kDAAkD,CAAC,CAAC;aACjE,OAAO,KAAK,CAAC;UACd;SACD,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;MACzB;KACD,uBAAO,GAAP,UAAQ,KAAc;SACpB,IAAI,IAAI,CAAC,kBAAkB,KAAK,KAAK,EAAE;aACrC,OAAO,CAAC,IAAI,CAAC,kDAAkD,CAAC,CAAC;aACjE,OAAO;UACR;SACD,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,KAAK,CAAC;MAC1B;KACD,yBAAS,GAAT;SACE,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;MAC7B;KACD,yBAAS,GAAT,UAAU,KAAa;SACrB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;SAC7B,OAAO,IAAI,CAAC;MACb;KACD,oBAAI,GAAJ,UAAK,IAAY;SACf,OAAO,CAAC,IAAI,CAAC,uEAAuE,CAAC,CAAC;SACtF,IAAM,KAAK,GAAU,IAAI,CAAC;SAC1B,IAAM,WAAW,GAAgB,IAAI,WAAW,EAAE,CAAC;SACnD,WAAW,CAAC,IAAI,CAAC,IAAI,EAAE,UAAS,MAAmB;aACjD,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;UACzB,CAAC,CAAC;SACH,OAAO,IAAI,CAAC;MACb;KACH,YAAC;CAAD,CArKA,CAA2B,QAAQ;;;KCDEA,mCAAK;KAExC,yBAAY,QAAuB;SAAnC,YACE,kBAAM,QAAQ,CAAC,SAGhB;SAFC,KAAI,CAAC,MAAM,GAAG,KAAI,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC;SAC1C,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,KAAI,CAAC,IAAI,CAAC,CAAC;;MAChC;KACD,mCAAS,GAAT;SACE,OAAO,IAAI,CAAC,MAAM,CAAC;MACpB;KACD,wCAAc,GAAd;SACE,OAAO,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC;MAChC;KACD,wCAAc,GAAd,UAAe,KAAa;SAC1B,IAAI,CAAC,MAAM,CAAC,WAAW,GAAG,KAAK,CAAC;MACjC;KACD,0CAAgB,GAAhB;SACE,OAAO,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC;MAClC;KACD,0CAAgB,GAAhB,UAAiB,KAAa;SAC5B,IAAI,CAAC,MAAM,CAAC,aAAa,GAAG,KAAK,CAAC;MACnC;KACD,0CAAgB,GAAhB;SACE,OAAO,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC;MAClC;KACD,0CAAgB,GAAhB,UAAiB,KAAa;SAC5B,IAAI,CAAC,MAAM,CAAC,aAAa,GAAG,KAA0B,CAAC;MACxD;KACD,wCAAc,GAAd;SACE,OAAO,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC;MAChC;KACD,wCAAc,GAAd,UAAe,KAAa;SAC1B,IAAI,CAAC,MAAM,CAAC,WAAW,GAAG,KAAK,CAAC;MACjC;KACD,2CAAiB,GAAjB,UAAkB,KAAc;SAC9B,IAAM,QAAQ,GAAG,IAAI,OAAO,EAAE,CAAC;;SAE7B,iBAAM,iBAAiB,YAAC,KAAK,CAAC,CAAC;SAC/B,QAAQ,CAAC,qBAAqB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;SACjD,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC;;MAE/D;KACH,sBAAC;CAAD,CA1CA,CAAqC,KAAK;;;KCCxC,uBAAY,KAAY,EAAE,OAAsB;SAAtB,wBAAA,EAAA,cAAsB;SAC9C,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,OAAO,CAAC,cAAc,EAAE,CAAC;SAC/C,IAAI,CAAC,QAAQ,CAAC,OAAO,GAAG,OAAO,CAAC;SAChC,IAAI,CAAC,IAAI,GAAG,IAAI,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC,CAAC;SAC5D,KAAK,CAAC,SAAS,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;MAC1C;KACD,wCAAgB,GAAhB;SACE,IAAI,CAAC,QAAQ,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAC9C,OAAO,IAAI,CAAC,IAAI,CAAC;MAClB;KACD,2CAAmB,GAAnB;SACE,IAAI,KAAK,GAAG,CAAC,CAAC;SACd,IAAM,IAAI,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;SACrC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAG,EAAE;aACrC,KAAK,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;UAClB;SACD,OAAO,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC;MAC5B;KACD,+BAAO,GAAP,UAAQ,IAAY;SAClB,OAAO,CAAC,IAAI,CAAC,6DAA6D,CAAC,CAAC;SAC5E,OAAO,IAAI,CAAC,gBAAgB,EAAE,CAAC;MAChC;KACH,oBAAC;CAAD,CAAC;;CC5BD;;;;;;;;;AASA;KAQE,uBAAY,OAAY,EAAE,QAAa,EAAE,SAAc;SACrD,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;SACvB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;SAC3B,IAAI,UAAU,GAA+C,YAAY,EACvE,WAAW,CAAC;SACd,QAAQ,QAAQ;aACd,KAAK,YAAY;iBAAO,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC;iBAAI,MAAM;aAC5D,KAAK,QAAQ,CAAC;aACd,KAAK,MAAM;iBACT,UAAU,GAAG,KAAK,EAAK,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC;iBAAI,MAAM;aAC9D,SAAkB,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC;UAC5C;SACD,IAAI,CAAC,MAAM,GAAG,IAAI,UAAU,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;SAW5C,IAAI,CAAC,gBAAgB,GAAG,WAAW,CAAC;SACpC,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC;SAC1B,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;SAClB,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;MACzB;;KAED,kCAAU,GAAV,UAAW,SAAc,EAAE,MAAW;;;SAGpC,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,EACxB,MAAM,GAAG,IAAI,CAAC,SAAS,EACvB,MAAM,GAAG,SAAS,GAAG,MAAM,GAAG,MAAM,CAAC;SACvC,IAAI,aAAa,GAAG,IAAI,CAAC,gBAAgB,CAAC;SAC1C,IAAI,aAAa,KAAK,CAAC,EAAE;;aAEvB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,KAAK,MAAM,EAAE,EAAG,CAAC,EAAE;iBAClC,MAAM,CAAE,MAAM,GAAG,CAAC,CAAE,GAAG,MAAM,CAAE,CAAC,CAAE,CAAC;cACpC;aACD,aAAa,GAAG,MAAM,CAAC;UACxB;cAAM;;aAEL,aAAa,IAAI,MAAM,CAAC;aACxB,IAAM,GAAG,GAAG,MAAM,GAAG,aAAa,CAAC;aACnC,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE,MAAM,EAAE,CAAC,EAAE,GAAG,EAAE,MAAM,CAAC,CAAC;UACvD;SACD,IAAI,CAAC,gBAAgB,GAAG,aAAa,CAAC;MACvC;;KAED,6BAAK,GAAL,UAAM,SAAc;SAClB,IAAM,MAAM,GAAG,IAAI,CAAC,SAAS,EAC3B,MAAM,GAAG,IAAI,CAAC,MAAM,EACpB,MAAM,GAAG,SAAS,GAAG,MAAM,GAAG,MAAM,EACpC,MAAM,GAAG,IAAI,CAAC,gBAAgB,EAC9B,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;SACzB,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC;SAC1B,IAAI,MAAM,GAAG,CAAC,EAAE;;aAEd,IAAM,mBAAmB,GAAG,MAAM,GAAG,CAAC,CAAC;aACvC,IAAI,CAAC,gBAAgB,CACjB,MAAM,EAAE,MAAM,EAAE,mBAAmB,EAAE,CAAC,GAAG,MAAM,EAAE,MAAM,CAAC,CAAC;UAC9D;SACD,KAAK,IAAI,CAAC,GAAG,MAAM,EAAE,CAAC,GAAG,MAAM,GAAG,MAAM,EAAE,CAAC,KAAK,CAAC,EAAE,EAAG,CAAC,EAAE;aACvD,IAAI,MAAM,CAAE,CAAC,CAAE,KAAK,MAAM,CAAE,CAAC,GAAG,MAAM,CAAE,EAAE;;iBAExC,OAAO,CAAC,QAAQ,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;iBACjC,MAAM;cACP;UACF;MACF;;KAED,yCAAiB,GAAjB;SACE,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;SAC7B,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,EACxB,MAAM,GAAG,IAAI,CAAC,SAAS,EACvB,mBAAmB,GAAG,MAAM,GAAG,CAAC,CAAC;SACnC,OAAO,CAAC,QAAQ,CAAC,MAAM,EAAE,mBAAmB,CAAC,CAAC;;SAE9C,KAAK,IAAI,CAAC,GAAG,MAAM,EAAE,CAAC,GAAG,mBAAmB,EAAE,CAAC,KAAK,CAAC,EAAE,EAAG,CAAC,EAAE;aAC3D,MAAM,CAAE,CAAC,CAAE,GAAG,MAAM,CAAE,mBAAmB,IAAI,CAAC,GAAG,MAAM,CAAC,CAAE,CAAC;UAC5D;SACD,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC;MAC3B;;KAED,4CAAoB,GAApB;SACE,IAAM,mBAAmB,GAAG,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;SAC/C,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,mBAAmB,CAAC,CAAC;MACzD;;KAED,+BAAO,GAAP,UAAQ,MAAW,EAAE,SAAc,EAAE,SAAc,EAAE,CAAM,EAAE,MAAW;SACtE,IAAI,CAAC,IAAI,GAAG,EAAE;aACZ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,KAAK,MAAM,EAAE,EAAG,CAAC,EAAE;iBAClC,MAAM,CAAE,SAAS,GAAG,CAAC,CAAE,GAAG,MAAM,CAAE,SAAS,GAAG,CAAC,CAAE,CAAC;cACnD;UACF;MACF;KACD,8BAAM,GAAN,UAAO,MAAW,EAAE,SAAc,EAAE,SAAc,EAAE,CAAM,EAAE,MAAW;SACrE,UAAU,CAAC,SAAS,CAAC,MAAM,EAAE,SAAS,EAClC,MAAM,EAAE,SAAS,EAAE,MAAM,EAAE,SAAS,EAAE,CAAC,CAAC,CAAC;MAC9C;KACD,6BAAK,GAAL,UAAM,MAAW,EAAE,SAAc,EAAE,SAAc,EAAE,CAAM,EAAE,MAAW;SACpE,IAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;SAChB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,KAAK,MAAM,EAAE,EAAG,CAAC,EAAE;aAClC,IAAM,CAAC,GAAG,SAAS,GAAG,CAAC,CAAC;aACxB,MAAM,CAAE,CAAC,CAAE,GAAG,MAAM,CAAE,CAAC,CAAE,GAAG,CAAC,GAAG,MAAM,CAAE,SAAS,GAAG,CAAC,CAAE,GAAG,CAAC,CAAC;UAC7D;MACF;KACH,oBAAC;CAAD,CAAC;;CC7HD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA;KAWE,8BAAY,QAAa;SACvB,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,YAAY,EAAE,CAAC;;SAEjC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;SACtD,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC;;SAEzB,IAAI,OAAO,GAAG,EAAE,CAAC;SACjB,IAAI,CAAC,cAAc,GAAG,OAAO,CAAC;SAC9B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,KAAK,CAAC,EAAE,EAAG,CAAC,EAAE;aACnD,OAAO,CAAE,SAAS,CAAE,CAAC,CAAE,CAAC,IAAI,CAAE,GAAG,CAAC,CAAC;UACpC;SACD,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;SACjB,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;SACvB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;SACpB,IAAI,CAAC,sBAAsB,GAAG,EAAE,CAAC;SACjC,IAAI,KAAK,GAAG,IAAI,CAAC;SACjB,IAAI,CAAC,KAAK,GAAG;aACX,OAAO,EAAE;iBACP,IAAI,KAAK,KAAK,OAAO,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;iBAC7C,IAAI,KAAK,KAAK,OAAO,KAAK,CAAC,QAAQ,CAAC,MAAM,GAAG,KAAK,CAAC,eAAe,CAAC,EAAE;cACtE;aACD,IAAI,iBAAiB,KAAK,OAAO,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;UAC3D,CAAC;MACH;KACD,kCAAG,GAAH,UAAI,QAAa;SACf,IAAI,OAAO,GAAG,IAAI,CAAC,QAAQ,EACzB,QAAQ,GAAG,OAAO,CAAC,MAAM,EACzB,cAAc,GAAG,IAAI,CAAC,eAAe,EACrC,aAAa,GAAG,IAAI,CAAC,cAAc,EACnC,KAAK,GAAG,IAAI,CAAC,MAAM,EACnB,WAAW,GAAG,IAAI,CAAC,YAAY,EAC/B,QAAQ,GAAG,IAAI,CAAC,SAAS,EACzB,SAAS,GAAG,QAAQ,CAAC,MAAM,EAC3B,WAAW,CAAC;SACd,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,KAAK,CAAC,EAAE,EAAG,CAAC,EAAE;aACnD,IAAI,MAAM,GAAG,SAAS,CAAE,CAAC,CAAE,EACzB,IAAI,GAAG,MAAM,CAAC,IAAI,EAClB,KAAK,GAAG,aAAa,CAAE,IAAI,CAAE,CAAC;aAChC,IAAI,KAAK,KAAK,SAAS,EAAE;;iBAEvB,KAAK,GAAG,QAAQ,EAAG,CAAC;iBACpB,aAAa,CAAE,IAAI,CAAE,GAAG,KAAK,CAAC;iBAC9B,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;;iBAErB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,EAAE,CAAC,KAAK,CAAC,EAAE,EAAG,CAAC,EAAE;qBAC5C,QAAQ,CAAE,CAAC,CAAE,CAAC,IAAI,CACd,IAAI,eAAe,CACjB,MAAM,EAAE,KAAK,CAAE,CAAC,CAAE,EAAE,WAAW,CAAE,CAAC,CAAE,CAAC,CAAC,CAAC;kBAC9C;cACF;kBAAM,IAAI,KAAK,GAAG,cAAc,EAAE;iBACjC,WAAW,GAAG,OAAO,CAAE,KAAK,CAAE,CAAC;;iBAE/B,IAAI,gBAAgB,GAAG,EAAG,cAAc,EACtC,gBAAgB,GAAG,OAAO,CAAE,gBAAgB,CAAE,CAAC;iBACjD,aAAa,CAAE,gBAAgB,CAAC,IAAI,CAAE,GAAG,KAAK,CAAC;iBAC/C,OAAO,CAAE,KAAK,CAAE,GAAG,gBAAgB,CAAC;iBACpC,aAAa,CAAE,IAAI,CAAE,GAAG,gBAAgB,CAAC;iBACzC,OAAO,CAAE,gBAAgB,CAAE,GAAG,MAAM,CAAC;;iBAErC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,EAAE,CAAC,KAAK,CAAC,EAAE,EAAG,CAAC,EAAE;qBAC5C,IAAI,eAAe,GAAG,QAAQ,CAAE,CAAC,CAAE,EACjC,UAAU,GAAG,eAAe,CAAE,gBAAgB,CAAE,EAChD,OAAO,GAAG,eAAe,CAAE,KAAK,CAAE,CAAC;qBACrC,eAAe,CAAE,KAAK,CAAE,GAAG,UAAU,CAAC;qBACtC,IAAI,OAAO,KAAK,SAAS,EAAE;;;;yBAIzB,OAAO,GAAG,IAAI,eAAe,CACzB,MAAM,EAAE,KAAK,CAAE,CAAC,CAAE,EAAE,WAAW,CAAE,CAAC,CAAE,CAAC,CAAC;sBAC3C;qBACD,eAAe,CAAE,gBAAgB,CAAE,GAAG,OAAO,CAAC;kBAC/C;cACF;kBAAM,IAAI,OAAO,CAAE,KAAK,CAAE,KAAK,WAAW,EAAE;iBAC3C,OAAO,CAAC,KAAK,CAAC,uCAAuC;qBACjD,8CAA8C;qBAC9C,yCAAyC,CAAC,CAAC;cAChD;UACF;SACD,IAAI,CAAC,eAAe,GAAG,cAAc,CAAC;MACvC;KACD,qCAAM,GAAN,UAAO,QAAa;SAClB,IAAI,OAAO,GAAG,IAAI,CAAC,QAAQ,EACzB,cAAc,GAAG,IAAI,CAAC,eAAe,EACrC,aAAa,GAAG,IAAI,CAAC,cAAc,EACnC,QAAQ,GAAG,IAAI,CAAC,SAAS,EACzB,SAAS,GAAG,QAAQ,CAAC,MAAM,CAAC;SAC9B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,KAAK,CAAC,EAAE,EAAG,CAAC,EAAE;aACnD,IAAI,MAAM,GAAG,SAAS,CAAE,CAAC,CAAE,EACzB,IAAI,GAAG,MAAM,CAAC,IAAI,EAClB,KAAK,GAAG,aAAa,CAAE,IAAI,CAAE,CAAC;aAChC,IAAI,KAAK,KAAK,SAAS,IAAI,KAAK,IAAI,cAAc,EAAE;;iBAElD,IAAI,eAAe,GAAG,cAAc,EAAG,EACrC,iBAAiB,GAAG,OAAO,CAAE,eAAe,CAAE,CAAC;iBACjD,aAAa,CAAE,iBAAiB,CAAC,IAAI,CAAE,GAAG,KAAK,CAAC;iBAChD,OAAO,CAAE,KAAK,CAAE,GAAG,iBAAiB,CAAC;iBACrC,aAAa,CAAE,IAAI,CAAE,GAAG,eAAe,CAAC;iBACxC,OAAO,CAAE,eAAe,CAAE,GAAG,MAAM,CAAC;;iBAEpC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,EAAE,CAAC,KAAK,CAAC,EAAE,EAAG,CAAC,EAAE;qBAC5C,IAAI,eAAe,GAAG,QAAQ,CAAE,CAAC,CAAE,EACjC,WAAW,GAAG,eAAe,CAAE,eAAe,CAAE,EAChD,OAAO,GAAG,eAAe,CAAE,KAAK,CAAE,CAAC;qBACrC,eAAe,CAAE,KAAK,CAAE,GAAG,WAAW,CAAC;qBACvC,eAAe,CAAE,eAAe,CAAE,GAAG,OAAO,CAAC;kBAC9C;cACF;UACF;SACD,IAAI,CAAC,eAAe,GAAG,cAAc,CAAC;MACvC;;KAED,sCAAO,GAAP,UAAQ,QAAa;SACnB,IAAI,OAAO,GAAG,IAAI,CAAC,QAAQ,EACzB,QAAQ,GAAG,OAAO,CAAC,MAAM,EACzB,cAAc,GAAG,IAAI,CAAC,eAAe,EACrC,aAAa,GAAG,IAAI,CAAC,cAAc,EACnC,QAAQ,GAAG,IAAI,CAAC,SAAS,EACzB,SAAS,GAAG,QAAQ,CAAC,MAAM,CAAC;SAC9B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,KAAK,CAAC,EAAE,EAAG,CAAC,EAAE;aACnD,IAAI,MAAM,GAAG,SAAS,CAAE,CAAC,CAAE,EACzB,IAAI,GAAG,MAAM,CAAC,IAAI,EAClB,KAAK,GAAG,aAAa,CAAE,IAAI,CAAE,CAAC;aAChC,IAAI,KAAK,KAAK,SAAS,EAAE;iBACvB,OAAO,aAAa,CAAE,IAAI,CAAE,CAAC;iBAC7B,IAAI,KAAK,GAAG,cAAc,EAAE;;qBAE1B,IAAI,gBAAgB,GAAG,EAAG,cAAc,EACtC,gBAAgB,GAAG,OAAO,CAAE,gBAAgB,CAAE,EAC9C,SAAS,GAAG,EAAG,QAAQ,EACvB,UAAU,GAAG,OAAO,CAAE,SAAS,CAAE,CAAC;;qBAEpC,aAAa,CAAE,gBAAgB,CAAC,IAAI,CAAE,GAAG,KAAK,CAAC;qBAC/C,OAAO,CAAE,KAAK,CAAE,GAAG,gBAAgB,CAAC;;qBAEpC,aAAa,CAAE,UAAU,CAAC,IAAI,CAAE,GAAG,gBAAgB,CAAC;qBACpD,OAAO,CAAE,gBAAgB,CAAE,GAAG,UAAU,CAAC;qBACzC,OAAO,CAAC,GAAG,EAAE,CAAC;;qBAEd,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,EAAE,CAAC,KAAK,CAAC,EAAE,EAAG,CAAC,EAAE;yBAC5C,IAAI,eAAe,GAAG,QAAQ,CAAE,CAAC,CAAE,EACjC,UAAU,GAAG,eAAe,CAAE,gBAAgB,CAAE,EAChD,IAAI,GAAG,eAAe,CAAE,SAAS,CAAE,CAAC;yBACtC,eAAe,CAAE,KAAK,CAAE,GAAG,UAAU,CAAC;yBACtC,eAAe,CAAE,gBAAgB,CAAE,GAAG,IAAI,CAAC;yBAC3C,eAAe,CAAC,GAAG,EAAE,CAAC;sBACvB;kBACF;sBAAM;;qBAEL,IAAI,SAAS,GAAG,EAAG,QAAQ,EACzB,UAAU,GAAG,OAAO,CAAE,SAAS,CAAE,CAAC;qBACpC,aAAa,CAAE,UAAU,CAAC,IAAI,CAAE,GAAG,KAAK,CAAC;qBACzC,OAAO,CAAE,KAAK,CAAE,GAAG,UAAU,CAAC;qBAC9B,OAAO,CAAC,GAAG,EAAE,CAAC;;qBAEd,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,EAAE,CAAC,KAAK,CAAC,EAAE,EAAG,CAAC,EAAE;yBAC5C,IAAI,eAAe,GAAG,QAAQ,CAAE,CAAC,CAAE,CAAC;yBACpC,eAAe,CAAE,KAAK,CAAE,GAAG,eAAe,CAAE,SAAS,CAAE,CAAC;yBACxD,eAAe,CAAC,GAAG,EAAE,CAAC;sBACvB;kBACF;cACF;UACF;SACD,IAAI,CAAC,eAAe,GAAG,cAAc,CAAC;MACvC;;KAED,yCAAU,GAAV,UAAW,IAAS,EAAE,UAAe;;;SAGnC,IAAI,aAAa,GAAG,IAAI,CAAC,sBAAsB,EAC7C,KAAK,GAAG,aAAa,CAAE,IAAI,CAAE,EAC7B,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC;SAC5B,IAAI,KAAK,KAAK,SAAS;aAAE,OAAO,QAAQ,CAAE,KAAK,CAAE,CAAC;SAClD,IAAI,KAAK,GAAG,IAAI,CAAC,MAAM,EACrB,WAAW,GAAG,IAAI,CAAC,YAAY,EAC/B,OAAO,GAAG,IAAI,CAAC,QAAQ,EACvB,QAAQ,GAAG,OAAO,CAAC,MAAM,EACzB,cAAc,GAAG,IAAI,CAAC,eAAe,EACrC,eAAe,GAAG,IAAI,KAAK,CAAC,QAAQ,CAAC,CAAC;SACxC,KAAK,GAAG,QAAQ,CAAC,MAAM,CAAC;SACxB,aAAa,CAAE,IAAI,CAAE,GAAG,KAAK,CAAC;SAC9B,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACjB,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;SAC7B,QAAQ,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;SAC/B,KAAK,IAAI,CAAC,GAAG,cAAc,EACvB,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,KAAK,CAAC,EAAE,EAAG,CAAC,EAAE;aACrC,IAAI,MAAM,GAAG,OAAO,CAAE,CAAC,CAAE,CAAC;aAC1B,eAAe,CAAE,CAAC,CAAE;iBAChB,IAAI,eAAe,CAAC,MAAM,EAAE,IAAI,EAAE,UAAU,CAAC,CAAC;UACnD;SACD,OAAO,eAAe,CAAC;MACxB;KACD,2CAAY,GAAZ,UAAa,IAAS;;;SAGpB,IAAI,aAAa,GAAG,IAAI,CAAC,sBAAsB,EAC7C,KAAK,GAAG,aAAa,CAAE,IAAI,CAAE,CAAC;SAChC,IAAI,KAAK,KAAK,SAAS,EAAE;aACvB,IAAI,KAAK,GAAG,IAAI,CAAC,MAAM,EACrB,WAAW,GAAG,IAAI,CAAC,YAAY,EAC/B,QAAQ,GAAG,IAAI,CAAC,SAAS,EACzB,iBAAiB,GAAG,QAAQ,CAAC,MAAM,GAAG,CAAC,EACvC,YAAY,GAAG,QAAQ,CAAE,iBAAiB,CAAE,EAC5C,gBAAgB,GAAG,IAAI,CAAE,iBAAiB,CAAE,CAAC;aAC/C,aAAa,CAAE,gBAAgB,CAAE,GAAG,KAAK,CAAC;aAC1C,QAAQ,CAAE,KAAK,CAAE,GAAG,YAAY,CAAC;aACjC,QAAQ,CAAC,GAAG,EAAE,CAAC;aACf,WAAW,CAAE,KAAK,CAAE,GAAG,WAAW,CAAE,iBAAiB,CAAE,CAAC;aACxD,WAAW,CAAC,GAAG,EAAE,CAAC;aAClB,KAAK,CAAE,KAAK,CAAE,GAAG,KAAK,CAAE,iBAAiB,CAAE,CAAC;aAC5C,KAAK,CAAC,GAAG,EAAE,CAAC;UACb;MACF;KArNM,2CAAsB,GAAY,IAAI,CAAC;KAsNhD,2BAAC;EAhOD;;CChCA;;;;;;;;;AASA;KAeE,yBAAY,QAAa,EAAE,IAAY,EAAE,UAAmB;;SAF5D,aAAQ,GAAmB,IAAI,CAAC,iBAAiB,CAAC;SAClD,aAAQ,GAAmB,IAAI,CAAC,iBAAiB,CAAC;SA8LlD,gBAAW,GAAG;aACZ,MAAM,EAAE,CAAC;aACT,WAAW,EAAE,CAAC;aACd,YAAY,EAAE,CAAC;aACf,cAAc,EAAE,CAAC;UAClB,CAAC;SACF,eAAU,GAAG;aACX,IAAI,EAAE,CAAC;aACP,WAAW,EAAE,CAAC;aACd,sBAAsB,EAAE,CAAC;UAC1B,CAAC;SACF,wBAAmB,GAAqB;aACtC,IAAI,CAAC,eAAe;aACpB,IAAI,CAAC,cAAc;aACnB,IAAI,CAAC,qBAAqB;aAC1B,IAAI,CAAC,gBAAgB;UACtB,CAAC;SAgBF,qCAAgC,GAAuB;aACrD;;iBAEE,IAAI,CAAC,eAAe;iBACpB,IAAI,CAAC,8BAA8B;iBACnC,IAAI,CAAC,yCAAyC;cAC/C,EAAE;;iBAED,IAAI,CAAC,cAAc;iBACnB,IAAI,CAAC,6BAA6B;iBAClC,IAAI,CAAC,wCAAwC;cAC9C,EAAE;;iBAED,IAAI,CAAC,qBAAqB;iBAC1B,IAAI,CAAC,oCAAoC;iBACzC,IAAI,CAAC,+CAA+C;cACrD,EAAE;;iBAED,IAAI,CAAC,kBAAkB;iBACvB,IAAI,CAAC,iCAAiC;iBACtC,IAAI,CAAC,4CAA4C;cAClD;UACF,CAAC;SAlPA,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;SACjB,IAAI,CAAC,UAAU,GAAG,UAAU,IAAI,eAAe,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;SACrE,IAAI,CAAC,IAAI,GAAG,eAAe,CAAC,QAAQ,CAAC,QAAQ,EAAE,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,QAAQ,CAAC;SACrF,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;MAC1B;KACO,2CAAiB,GAAzB,UAA0B,WAAgB,EAAE,MAAc;SACxD,IAAI,CAAC,IAAI,EAAE,CAAC;SACZ,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC;;;;;;MAMpC;KACO,2CAAiB,GAAzB,UAA0B,WAAgB,EAAE,MAAc;SACxD,IAAI,CAAC,IAAI,EAAE,CAAC;SACZ,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC;MACpC;;KAED,8BAAI,GAAJ;SACE,IAAI,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC;SAC7B,IAAM,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;SACnC,IAAM,UAAU,GAAG,UAAU,CAAC,UAAU,CAAC;SACzC,IAAM,YAAY,GAAG,UAAU,CAAC,YAAY,CAAC;SAC7C,IAAI,aAAa,GAAG,UAAU,CAAC,aAAa,CAAC;SAC7C,IAAI,CAAE,YAAY,EAAE;aAClB,YAAY,GAAG,eAAe,CAAC,QAAQ,CACnC,IAAI,CAAC,QAAQ,EAAE,UAAU,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC;aACzD,IAAI,CAAC,IAAI,GAAG,YAAY,CAAC;UAC1B;;SAED,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,qBAAqB,CAAC;SAC3C,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,qBAAqB,CAAC;;SAE3C,IAAI,CAAE,YAAY,EAAE;aAClB,OAAO,CAAC,KAAK,CAAC,qCAAqC,GAAG,IAAI,CAAC,IAAI,GAAG,uBAAuB,CAAC,CAAC;aAC3F,OAAO;UACR;SACD,IAAI,UAAU,EAAE;aACd,IAAI,WAAW,GAAG,UAAU,CAAC,WAAW,CAAC;;aAEzC,QAAQ,UAAU;iBAChB,KAAK,WAAW;qBACd,IAAI,CAAE,YAAY,CAAC,QAAQ,EAAE;yBAC3B,OAAO,CAAC,KAAK,CAAC,6DAA6D,EAAE,IAAI,CAAC,CAAC;yBACnF,OAAO;sBACR;qBACD,IAAI,CAAE,YAAY,CAAC,QAAQ,CAAC,SAAS,EAAE;yBACrC,OAAO,CAAC,KAAK,CAAC,uFAAuF,EAAE,IAAI,CAAC,CAAC;yBAC7G,OAAO;sBACR;qBACD,YAAY,GAAG,YAAY,CAAC,QAAQ,CAAC,SAAS,CAAC;qBAC/C,MAAM;iBACR,KAAK,OAAO;qBACV,IAAI,CAAE,YAAY,CAAC,QAAQ,EAAE;yBAC3B,OAAO,CAAC,KAAK,CAAC,0DAA0D,EAAE,IAAI,CAAC,CAAC;yBAChF,OAAO;sBACR;;;qBAGD,YAAY,GAAG,YAAY,CAAC,QAAQ,CAAC,KAAK,CAAC;;qBAE3C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,YAAY,CAAC,MAAM,EAAE,CAAC,EAAG,EAAE;yBAC7C,IAAI,YAAY,CAAE,CAAC,CAAE,CAAC,IAAI,KAAK,WAAW,EAAE;6BAC1C,WAAW,GAAG,CAAC,CAAC;6BAChB,MAAM;0BACP;sBACF;qBACD,MAAM;iBACR;qBACE,IAAI,YAAY,CAAE,UAAU,CAAE,KAAK,SAAS,EAAE;yBAC5C,OAAO,CAAC,KAAK,CAAC,iDAAiD,EAAE,IAAI,CAAC,CAAC;yBACvE,OAAO;sBACR;qBACD,YAAY,GAAG,YAAY,CAAE,UAAU,CAAE,CAAC;cAC7C;aACD,IAAI,WAAW,KAAK,SAAS,EAAE;iBAC7B,IAAI,YAAY,CAAE,WAAW,CAAE,KAAK,SAAS,EAAE;qBAC7C,OAAO,CAAC,KAAK,CAAC,kEAAkE,EAAE,IAAI,EAAE,YAAY,CAAC,CAAC;qBACtG,OAAO;kBACR;iBACD,YAAY,GAAG,YAAY,CAAE,WAAW,CAAE,CAAC;cAC5C;UACF;;SAED,IAAM,YAAY,GAAG,YAAY,CAAE,YAAY,CAAE,CAAC;SAClD,IAAI,YAAY,KAAK,SAAS,EAAE;aAC9B,IAAM,QAAQ,GAAG,UAAU,CAAC,QAAQ,CAAC;aACrC,OAAO,CAAC,KAAK,CAAC,yCAAyC,GAAG,QAAQ;iBAC9D,GAAG,GAAG,YAAY,GAAG,uBAAuB,EAAE,YAAY,CAAC,CAAC;aAChE,OAAO;UACR;;SAED,IAAI,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC;SACtC,IAAI,YAAY,CAAC,WAAW,KAAK,SAAS,EAAE;aAC1C,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC;aACzC,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;UAClC;cAAM,IAAI,YAAY,CAAC,sBAAsB,KAAK,SAAS,EAAE;aAC5D,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,sBAAsB,CAAC;aACpD,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;UAClC;;SAED,IAAI,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;SAC1C,IAAI,aAAa,KAAK,SAAS,EAAE;;aAE/B,IAAI,YAAY,KAAK,uBAAuB,EAAE;;;iBAG5C,IAAI,CAAE,YAAY,CAAC,QAAQ,EAAE;qBAC3B,OAAO,CAAC,KAAK,CAAC,gFAAgF,EAAE,IAAI,CAAC,CAAC;qBACtG,OAAO;kBACR;iBACD,IAAI,CAAE,YAAY,CAAC,QAAQ,CAAC,YAAY,EAAE;qBACxC,OAAO,CAAC,KAAK,CAAC,6FAA6F,EAAE,IAAI,CAAC,CAAC;qBACnH,OAAO;kBACR;iBACD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,EAAG,EAAE;qBAChE,IAAI,YAAY,CAAC,QAAQ,CAAC,YAAY,CAAE,CAAC,CAAE,CAAC,IAAI,KAAK,aAAa,EAAE;yBAClE,aAAa,GAAG,CAAC,CAAC;yBAClB,MAAM;sBACP;kBACF;cACF;aACD,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC;aAC5C,IAAI,CAAC,gBAAgB,GAAG,YAAY,CAAC;aACrC,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;UACpC;cAAM,IAAI,YAAY,CAAC,SAAS,KAAK,SAAS,IAAI,YAAY,CAAC,OAAO,KAAK,SAAS,EAAE;;aAErF,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC;aAC9C,IAAI,CAAC,gBAAgB,GAAG,YAAY,CAAC;UACtC;cAAM,IAAI,YAAY,CAAC,MAAM,KAAK,SAAS,EAAE;aAC5C,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC;aAC3C,IAAI,CAAC,gBAAgB,GAAG,YAAY,CAAC;UACtC;cAAM;aACL,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;UAClC;;SAED,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,mBAAmB,CAAE,WAAW,CAAE,CAAC;SACxD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,gCAAgC,CAAE,WAAW,CAAE,CAAE,UAAU,CAAE,CAAC;MACpF;KACD,gCAAM,GAAN;SACE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;;;SAGjB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,iBAAiB,CAAC;SACvC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,iBAAiB,CAAC;MACxC;;KAwCO,+CAAqB,GAA7B,UAA8B,WAAgB,EAAE,MAAc,KAAU;KAChE,+CAAqB,GAA7B,UAA8B,WAAgB,EAAE,MAAc,KAAU;KAkBhE,yCAAe,GAAvB,UAAwB,MAAW,EAAE,MAAc;SACjD,MAAM,CAAE,MAAM,CAAE,GAAG,IAAI,CAAC,IAAI,CAAE,IAAI,CAAC,YAAY,CAAE,CAAC;MACnD;KACO,wCAAc,GAAtB,UAAuB,MAAW,EAAE,MAAc;SAChD,IAAM,MAAM,GAAG,IAAI,CAAC,gBAAgB,CAAC;SACrC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,KAAK,CAAC,EAAE,EAAG,CAAC,EAAE;aAChD,MAAM,CAAE,MAAM,EAAG,CAAE,GAAG,MAAM,CAAE,CAAC,CAAE,CAAC;UACnC;MACF;KACO,+CAAqB,GAA7B,UAA8B,MAAW,EAAE,MAAc;SACvD,MAAM,CAAE,MAAM,CAAE,GAAG,IAAI,CAAC,gBAAgB,CAAE,IAAI,CAAC,aAAa,CAAE,CAAC;MAChE;KACO,0CAAgB,GAAxB,UAAyB,MAAW,EAAE,MAAc;SAClD,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;MAC/C;;KAyBO,yCAAe,GAAvB,UAAwB,MAAW,EAAE,MAAc;SACjD,IAAI,CAAC,IAAI,CAAE,IAAI,CAAC,YAAY,CAAE,GAAG,MAAM,CAAE,MAAM,CAAE,CAAC;MACnD;KACO,wDAA8B,GAAtC,UAAuC,MAAW,EAAE,MAAc;SAChE,IAAI,CAAC,IAAI,CAAE,IAAI,CAAC,YAAY,CAAE,GAAG,MAAM,CAAE,MAAM,CAAE,CAAC;SAClD,IAAI,CAAC,YAAY,CAAC,WAAW,GAAG,IAAI,CAAC;MACtC;KACO,mEAAyC,GAAjD,UAAkD,MAAW,EAAE,MAAc;SAC3E,IAAI,CAAC,IAAI,CAAE,IAAI,CAAC,YAAY,CAAE,GAAG,MAAM,CAAE,MAAM,CAAE,CAAC;SAClD,IAAI,CAAC,YAAY,CAAC,sBAAsB,GAAG,IAAI,CAAC;MACjD;;KAEO,wCAAc,GAAtB,UAAuB,MAAW,EAAE,MAAc;SAChD,IAAM,IAAI,GAAG,IAAI,CAAC,gBAAgB,CAAC;SACnC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,KAAK,CAAC,EAAE,EAAG,CAAC,EAAE;aAC9C,IAAI,CAAE,CAAC,CAAE,GAAG,MAAM,CAAE,MAAM,EAAG,CAAE,CAAC;UACjC;MACF;KACO,uDAA6B,GAArC,UAAsC,MAAW,EAAE,MAAc;SAC/D,IAAM,IAAI,GAAG,IAAI,CAAC,gBAAgB,CAAC;SACnC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,KAAK,CAAC,EAAE,EAAG,CAAC,EAAE;aAC9C,IAAI,CAAE,CAAC,CAAE,GAAG,MAAM,CAAE,MAAM,EAAG,CAAE,CAAC;UACjC;SACD,IAAI,CAAC,YAAY,CAAC,WAAW,GAAG,IAAI,CAAC;MACtC;KACO,kEAAwC,GAAhD,UAAiD,MAAW,EAAE,MAAc;SAC1E,IAAM,IAAI,GAAG,IAAI,CAAC,gBAAgB,CAAC;SACnC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,KAAK,CAAC,EAAE,EAAG,CAAC,EAAE;aAC9C,IAAI,CAAE,CAAC,CAAE,GAAG,MAAM,CAAE,MAAM,EAAG,CAAE,CAAC;UACjC;SACD,IAAI,CAAC,YAAY,CAAC,sBAAsB,GAAG,IAAI,CAAC;MACjD;;KAEO,+CAAqB,GAA7B,UAA8B,MAAW,EAAE,MAAc;SACvD,IAAI,CAAC,gBAAgB,CAAE,IAAI,CAAC,aAAa,CAAE,GAAG,MAAM,CAAE,MAAM,CAAE,CAAC;MAChE;KACO,8DAAoC,GAA5C,UAA6C,MAAW,EAAE,MAAc;SACtE,IAAI,CAAC,gBAAgB,CAAE,IAAI,CAAC,aAAa,CAAE,GAAG,MAAM,CAAE,MAAM,CAAE,CAAC;SAC/D,IAAI,CAAC,YAAY,CAAC,WAAW,GAAG,IAAI,CAAC;MACtC;KACO,yEAA+C,GAAvD,UAAwD,MAAW,EAAE,MAAc;SACjF,IAAI,CAAC,gBAAgB,CAAE,IAAI,CAAC,aAAa,CAAE,GAAG,MAAM,CAAE,MAAM,CAAE,CAAC;SAC/D,IAAI,CAAC,YAAY,CAAC,sBAAsB,GAAG,IAAI,CAAC;MACjD;;KAEO,4CAAkB,GAA1B,UAA2B,MAAW,EAAE,MAAc;SACpD,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;MACjD;KACO,2DAAiC,GAAzC,UAA0C,MAAW,EAAE,MAAc;SACnE,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;SAChD,IAAI,CAAC,YAAY,CAAC,WAAW,GAAG,IAAI,CAAC;MACtC;KACO,sEAA4C,GAApD,UAAqD,MAAW,EAAE,MAAc;SAC9E,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;SAChD,IAAI,CAAC,YAAY,CAAC,sBAAsB,GAAG,IAAI,CAAC;MACjD;KACM,sBAAM,GAAb,UAAc,IAAS,EAAE,IAAS,EAAE,UAAe;SACjD,IAAI,GAAI,IAAI,IAAI,IAAI,YAAY,oBAAoB,EAAE,EAAE;aACtD,OAAO,IAAI,eAAe,CAAC,IAAI,EAAE,IAAI,EAAE,UAAU,CAAC,CAAC;UACpD;cAAM;aACL,OAAO,IAAI,eAAe,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,EAAE,UAAU,CAAC,CAAC;UAC9D;MACF;KACM,8BAAc,GAArB,UAAsB,SAAiB;;;;;;;;;;;;SAYrC,IAAM,EAAE,GAAW,sEAAsE,CAAC;SAC1F,IAAM,OAAO,GAAG,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;SACnC,IAAI,CAAE,OAAO,EAAE;aACb,MAAM,IAAI,KAAK,CAAC,iCAAiC,GAAG,SAAS,CAAC,CAAC;UAChE;SACD,IAAM,OAAO,GAAG;;aAEd,QAAQ,EAAE,OAAO,CAAE,CAAC,CAAE;aACtB,UAAU,EAAE,OAAO,CAAE,CAAC,CAAE;aACxB,WAAW,EAAE,OAAO,CAAE,CAAC,CAAE;aACzB,YAAY,EAAE,OAAO,CAAE,CAAC,CAAE;aAC1B,aAAa,EAAE,OAAO,CAAE,CAAC,CAAE;UAC5B,CAAC;SACF,IAAI,OAAO,CAAC,YAAY,KAAK,IAAI,IAAI,OAAO,CAAC,YAAY,CAAC,MAAM,KAAK,CAAC,EAAE;aACtE,MAAM,IAAI,KAAK,CAAC,6CAA6C,GAAG,SAAS,CAAC,CAAC;UAC5E;SACD,OAAO,OAAO,CAAC;MAChB;KACM,wBAAQ,GAAf,UAAgB,IAAS,EAAE,QAAyB;SAClD,IAAI,CAAE,QAAQ,IAAI,QAAQ,KAAK,EAAE,IAAI,QAAQ,KAAK,MAAM,IAAI,QAAQ,KAAK,GAAG,IAAI,QAAQ,KAAK,CAAC,CAAC,IAAI,QAAQ,KAAK,IAAI,CAAC,IAAI,IAAI,QAAQ,KAAK,IAAI,CAAC,IAAI,EAAE;aACnJ,OAAO,IAAI,CAAC;UACb;;SAED,IAAI,IAAI,CAAC,QAAQ,EAAE;aACjB,IAAM,cAAc,GAAG,UAAS,QAAa;iBAC3C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAG,EAAE;qBAC/C,IAAM,MAAI,GAAG,QAAQ,CAAC,KAAK,CAAE,CAAC,CAAE,CAAC;qBACjC,IAAI,MAAI,CAAC,IAAI,KAAK,QAAQ,EAAE;yBAC1B,OAAO,MAAI,CAAC;sBACb;kBACF;iBACD,OAAO,IAAI,CAAC;cACb,CAAC;aACF,IAAM,IAAI,GAAG,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aAC3C,IAAI,IAAI,EAAE;iBACR,OAAO,IAAI,CAAC;cACb;UACF;;SAED,IAAI,IAAI,CAAC,QAAQ,EAAE;aACjB,IAAM,mBAAiB,GAAG,UAAS,QAAa;iBAC9C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAG,EAAE;qBACzC,IAAM,SAAS,GAAG,QAAQ,CAAE,CAAC,CAAE,CAAC;qBAChC,IAAI,SAAS,CAAC,IAAI,KAAK,QAAQ,IAAI,SAAS,CAAC,IAAI,KAAK,QAAQ,EAAE;yBAC9D,OAAO,SAAS,CAAC;sBAClB;qBACD,IAAM,MAAM,GAAG,mBAAiB,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;qBACrD,IAAI,MAAM;yBAAE,OAAO,MAAM,CAAC;kBAC3B;iBACD,OAAO,IAAI,CAAC;cACb,CAAC;aACF,IAAM,WAAW,GAAG,mBAAiB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aACrD,IAAI,WAAW,EAAE;iBACf,OAAO,WAAW,CAAC;cACpB;UACF;SACD,OAAO,IAAI,CAAC;MACb;KArOM,yBAAS;SAGd,iBAAY,WAAgB,EAAE,IAAY,EAAE,kBAA0B;aACpE,IAAM,UAAU,GAAG,kBAAkB;iBACjC,eAAe,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;aACzC,IAAI,CAAC,YAAY,GAAG,WAAW,CAAC;aAChC,IAAI,CAAC,SAAS,GAAG,WAAW,CAAC,UAAU,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;UAC3D;SACD,0BAAQ,GAAR,UAAS,KAAU,EAAE,MAAc;aACjC,IAAI,CAAC,IAAI,EAAE,CAAC;aACZ,IAAM,eAAe,GAAG,IAAI,CAAC,YAAY,CAAC,eAAe,EACvD,OAAO,GAAG,IAAI,CAAC,SAAS,CAAE,eAAe,CAAE,CAAC;;aAE9C,IAAI,OAAO,KAAK,SAAS;iBAAE,OAAO,CAAC,QAAQ,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;UAC5D;SACD,0BAAQ,GAAR,UAAS,KAAU,EAAE,MAAc;aACjC,IAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC;aAChC,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,eAAe,EAC1C,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,KAAK,CAAC,EAAE,EAAG,CAAC,EAAE;iBACtC,QAAQ,CAAE,CAAC,CAAE,CAAC,QAAQ,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;cACvC;UACF;SACD,sBAAI,GAAJ;aACE,IAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC;aAChC,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,eAAe,EAC1C,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,KAAK,CAAC,EAAE,EAAG,CAAC,EAAE;iBACtC,QAAQ,CAAE,CAAC,CAAE,CAAC,IAAI,EAAE,CAAC;cACtB;UACF;SACD,wBAAM,GAAN;aACE,IAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC;aAChC,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,eAAe,EAC1C,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,KAAK,CAAC,EAAE,EAAG,CAAC,EAAE;iBACtC,QAAQ,CAAE,CAAC,CAAE,CAAC,MAAM,EAAE,CAAC;cACxB;UACF;SACH,cAAC;MAAA,IAAC;KAiMJ,sBAAC;EAtYD;;CCXA;;;;;;;;;;CAUA;KA0BE,yBAAY,KAAU,EAAE,IAAS,EAAE,SAAc;SAC/C,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;SACpB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;SAClB,IAAI,CAAC,UAAU,GAAG,SAAS,IAAI,IAAI,CAAC;SACpC,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,EACtB,OAAO,GAAG,MAAM,CAAC,MAAM,EACvB,YAAY,GAAG,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC;SACpC,IAAI,mBAAmB,GAAG;aACtB,WAAW,EAAIJ,kBAAU,CAAC,aAAa;aACvC,SAAS,EAAKA,kBAAU,CAAC,aAAa;UACzC,CAAC;SACF,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,KAAK,OAAO,EAAE,EAAG,CAAC,EAAE;aACnC,IAAI,WAAW,GAAG,MAAM,CAAE,CAAC,CAAE,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;aACtD,YAAY,CAAE,CAAC,CAAE,GAAG,WAAW,CAAC;aAChC,WAAW,CAAC,QAAQ,GAAG,mBAAmB,CAAC;UAC5C;SACD,IAAI,CAAC,oBAAoB,GAAG,mBAAmB,CAAC;SAChD,IAAI,CAAC,aAAa,GAAG,YAAY,CAAC;;SAElC,IAAI,CAAC,iBAAiB,GAAG,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC;SAC5C,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;SACxB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;SAC9B,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC;SAClC,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;SAC/B,IAAI,CAAC,IAAI,GAAGF,gBAAQ,CAAC,MAAM,CAAC;SAC5B,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC;;;SAGrB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;;;SAGvB,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;SACd,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;SACnB,IAAI,CAAC,mBAAmB,GAAG,CAAC,CAAC;SAC7B,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;SAChB,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC;SAC1B,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC;SAC5B,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;SACpB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;SACpB,IAAI,CAAC,iBAAiB,GAAK,KAAK,CAAC;SACjC,IAAI,CAAC,gBAAgB,GAAK,IAAI,CAAC;SAC/B,IAAI,CAAC,cAAc,GAAM,IAAI,CAAC;MAC/B;;KAED,8BAAI,GAAJ;SACE,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;SAClC,OAAO,IAAI,CAAC;MACb;KACD,8BAAI,GAAJ;SACE,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;SACpC,OAAO,IAAI,CAAC,KAAK,EAAE,CAAC;MACrB;KACD,+BAAK,GAAL;SACE,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;SACpB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;SACpB,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;SACd,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC;SACrB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;SACvB,OAAO,IAAI,CAAC,UAAU,EAAE,CAAC,WAAW,EAAE,CAAC;MACxC;KACD,mCAAS,GAAT;SACE,OAAO,IAAI,CAAC,OAAO,IAAI,CAAE,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,SAAS,KAAK,CAAC;aACxD,IAAI,CAAC,UAAU,KAAK,IAAI,IAAI,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;MACnE;;KAED,qCAAW,GAAX;SACE,OAAO,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;MAC1C;KACD,iCAAO,GAAP,UAAQ,IAAY;SAClB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;SACvB,OAAO,IAAI,CAAC;MACb;KACD,iCAAO,GAAP,UAAQ,IAAS,EAAE,WAAmB;SACpC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;SACjB,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;SAC/B,OAAO,IAAI,CAAC;MACb;;;;;KAKD,4CAAkB,GAAlB,UAAmB,MAAc;SAC/B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;;SAErB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,OAAO,GAAG,MAAM,GAAG,CAAC,CAAC;SAClD,OAAO,IAAI,CAAC,UAAU,EAAE,CAAC;MAC1B;;KAED,4CAAkB,GAAlB;SACE,OAAO,IAAI,CAAC,gBAAgB,CAAC;MAC9B;KACD,gCAAM,GAAN,UAAO,QAAgB;SACrB,OAAO,IAAI,CAAC,eAAe,CAAC,QAAQ,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;MAC7C;KACD,iCAAO,GAAP,UAAQ,QAAgB;SACtB,OAAO,IAAI,CAAC,eAAe,CAAC,QAAQ,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;MAC7C;KACD,uCAAa,GAAb,UAAc,aAAkB,EAAE,QAAgB,EAAE,IAAa;SAC/D,aAAa,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;SAChC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;SACtB,IAAI,IAAI,EAAE;aACR,IAAI,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,EACtC,eAAe,GAAG,aAAa,CAAC,KAAK,CAAC,QAAQ,EAC9C,aAAa,GAAG,eAAe,GAAG,cAAc,EAChD,aAAa,GAAG,cAAc,GAAG,eAAe,CAAC;aACnD,aAAa,CAAC,IAAI,CAAC,GAAG,EAAE,aAAa,EAAE,QAAQ,CAAC,CAAC;aACjD,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,GAAG,EAAE,QAAQ,CAAC,CAAC;UACzC;SACD,OAAO,IAAI,CAAC;MACb;KACD,qCAAW,GAAX,UAAY,YAAiB,EAAE,QAAgB,EAAE,IAAa;SAC5D,OAAO,YAAY,CAAC,aAAa,CAAC,IAAI,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAC;MACzD;KACD,oCAAU,GAAV;SACE,IAAI,iBAAiB,GAAG,IAAI,CAAC,kBAAkB,CAAC;SAChD,IAAI,iBAAiB,KAAK,IAAI,EAAE;aAC9B,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;aAC/B,IAAI,CAAC,MAAM,CAAC,2BAA2B,CAAC,iBAAiB,CAAC,CAAC;UAC5D;SACD,OAAO,IAAI,CAAC;MACb;;;;;KAKD,+CAAqB,GAArB,UAAsB,SAAiB;SACrC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;SAC3B,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,SAAS,CAAC;SACvD,OAAO,IAAI,CAAC,WAAW,EAAE,CAAC;MAC3B;;KAED,+CAAqB,GAArB;SACE,OAAO,IAAI,CAAC,mBAAmB,CAAC;MACjC;KACD,qCAAW,GAAX,UAAY,QAAgB;SAC1B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,QAAQ,CAAC;SAChD,OAAO,IAAI,CAAC,WAAW,EAAE,CAAC;MAC3B;KACD,kCAAQ,GAAR,UAAS,MAAW;SAClB,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;SACxB,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;SAClC,OAAO,IAAI,CAAC,WAAW,EAAE,CAAC;MAC3B;KACD,8BAAI,GAAJ,UAAK,QAAgB;SACnB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,mBAAmB,EAAE,CAAC,EAAE,QAAQ,CAAC,CAAC;MACzD;KACD,8BAAI,GAAJ,UAAK,cAAsB,EAAE,YAAoB,EAAE,QAAgB;SACjE,IAAI,KAAK,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,KAAK,CAAC,IAAI,EACvC,WAAW,GAAG,IAAI,CAAC,qBAAqB,EACxC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;SAC7B,IAAI,WAAW,KAAK,IAAI,EAAE;aACxB,WAAW,GAAG,KAAK,CAAC,uBAAuB,EAAE;iBAC7C,IAAI,CAAC,qBAAqB,GAAG,WAAW,CAAC;UAC1C;SACD,IAAI,KAAK,GAAG,WAAW,CAAC,kBAAkB,EACxC,MAAM,GAAG,WAAW,CAAC,YAAY,CAAC;SACpC,KAAK,CAAE,CAAC,CAAE,GAAG,GAAG,CAAC;SACjB,KAAK,CAAE,CAAC,CAAE,GAAG,GAAG,GAAG,QAAQ,CAAC;SAC5B,MAAM,CAAE,CAAC,CAAE,GAAG,cAAc,GAAG,SAAS,CAAC;SACzC,MAAM,CAAE,CAAC,CAAE,GAAG,YAAY,GAAG,SAAS,CAAC;SACvC,OAAO,IAAI,CAAC;MACb;KACD,qCAAW,GAAX;SACE,IAAI,oBAAoB,GAAG,IAAI,CAAC,qBAAqB,CAAC;SACtD,IAAI,oBAAoB,KAAK,IAAI,EAAE;aACjC,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC;aAClC,IAAI,CAAC,MAAM,CAAC,2BAA2B,CAAC,oBAAoB,CAAC,CAAC;UAC/D;SACD,OAAO,IAAI,CAAC;MACb;;KAED,kCAAQ,GAAR;SACE,OAAO,IAAI,CAAC,MAAM,CAAC;MACpB;KACD,iCAAO,GAAP;SACE,OAAO,IAAI,CAAC,KAAK,CAAC;MACnB;KACD,iCAAO,GAAP;SACE,OAAO,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC;MAC7C;;KAED,iCAAO,GAAP,UAAQ,IAAY,EAAE,SAAiB,EAAE,aAAqB,EAAE,SAAiB;;SAE/E,IAAI,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC;SAChC,IAAI,SAAS,KAAK,IAAI,EAAE;;aAEtB,IAAI,WAAW,GAAG,CAAC,IAAI,GAAG,SAAS,IAAI,aAAa,CAAC;aACrD,IAAI,WAAW,GAAG,CAAC,IAAI,aAAa,KAAK,CAAC,EAAE;iBAC1C,OAAO;cACR;;aAED,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;aACvB,SAAS,GAAG,aAAa,GAAG,WAAW,CAAC;UACzC;;SAED,SAAS,IAAI,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;SACzC,IAAI,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;;;SAG3C,IAAI,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;SACtC,IAAI,MAAM,GAAG,CAAC,EAAE;aACd,IAAI,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC;aACtC,IAAI,cAAc,GAAG,IAAI,CAAC,iBAAiB,CAAC;aAC5C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,YAAY,CAAC,MAAM,EAAE,CAAC,KAAK,CAAC,EAAE,EAAG,CAAC,EAAE;iBACtD,YAAY,CAAE,CAAC,CAAE,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;iBACrC,cAAc,CAAE,CAAC,CAAE,CAAC,UAAU,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;cACnD;UACF;MACF;KACO,uCAAa,GAArB,UAAsB,IAAY;SAChC,IAAI,MAAM,GAAG,CAAC,CAAC;SACf,IAAI,IAAI,CAAC,OAAO,EAAE;aAChB,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;aACrB,IAAI,WAAW,GAAG,IAAI,CAAC,kBAAkB,CAAC;aAC1C,IAAI,WAAW,KAAK,IAAI,EAAE;iBACxB,IAAI,gBAAgB,GAAG,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAE,CAAC,CAAE,CAAC;iBACvD,MAAM,IAAI,gBAAgB,CAAC;iBAC3B,IAAI,IAAI,GAAG,WAAW,CAAC,kBAAkB,CAAE,CAAC,CAAE,EAAE;qBAC9C,IAAI,CAAC,UAAU,EAAE,CAAC;qBAClB,IAAI,gBAAgB,KAAK,CAAC,EAAE;;yBAE1B,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;sBACtB;kBACF;cACF;UACF;SACD,IAAI,CAAC,gBAAgB,GAAG,MAAM,CAAC;SAC/B,OAAO,MAAM,CAAC;MACf;KACO,0CAAgB,GAAxB,UAAyB,IAAY;SACnC,IAAI,SAAS,GAAG,CAAC,CAAC;SAClB,IAAI,CAAE,IAAI,CAAC,MAAM,EAAE;aACjB,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;aAC3B,IAAI,WAAW,GAAG,IAAI,CAAC,qBAAqB,CAAC;aAC7C,IAAI,WAAW,KAAK,IAAI,EAAE;iBACxB,IAAI,gBAAgB,GAAG,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAE,CAAC,CAAE,CAAC;iBACvD,SAAS,IAAI,gBAAgB,CAAC;iBAC9B,IAAI,IAAI,GAAG,WAAW,CAAC,kBAAkB,CAAE,CAAC,CAAE,EAAE;qBAC9C,IAAI,CAAC,WAAW,EAAE,CAAC;qBACnB,IAAI,SAAS,KAAK,CAAC,EAAE;;yBAEnB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;sBACpB;0BAAM;;yBAEL,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;sBAC5B;kBACF;cACF;UACF;SACD,IAAI,CAAC,mBAAmB,GAAG,SAAS,CAAC;SACrC,OAAO,SAAS,CAAC;MAClB;KACO,qCAAW,GAAnB,UAAoB,SAAiB;SACnC,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC;SACjC,IAAI,SAAS,KAAK,CAAC;aAAE,OAAO,IAAI,CAAC;SACjC,IAAI,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,EAChC,IAAI,GAAG,IAAI,CAAC,IAAI,EAChB,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC;SAC9B,IAAI,IAAI,KAAKA,gBAAQ,CAAC,IAAI,EAAE;aAC1B,IAAI,SAAS,KAAK,CAAC,CAAC,EAAE;;iBAEpB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;iBACnB,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;cACrC;aACD,WAAW,EAAE;iBACX,IAAI,IAAI,IAAI,QAAQ,EAAE;qBACpB,IAAI,GAAG,QAAQ,CAAC;kBACjB;sBAAM,IAAI,IAAI,GAAG,CAAC,EAAE;qBACnB,IAAI,GAAG,CAAC,CAAC;kBACV;;qBAAM,MAAM,WAAW,CAAC;iBACzB,IAAI,IAAI,CAAC,iBAAiB;qBAAE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;;qBAC1C,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;iBAC1B,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC;qBACxB,IAAI,EAAE,UAAU,EAAE,MAAM,EAAE,IAAI;qBAC9B,SAAS,EAAE,SAAS,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;kBAClC,CAAC,CAAC;cACJ;UACF;cAAM;aACL,IAAI,QAAQ,IAAI,IAAI,KAAKA,gBAAQ,CAAC,QAAQ,CAAC,CAAC;aAC5C,IAAI,SAAS,KAAK,CAAC,CAAC,EAAE;;iBAEpB,IAAI,SAAS,IAAI,CAAC,EAAE;qBAClB,SAAS,GAAG,CAAC,CAAC;qBACd,IAAI,CAAC,WAAW,CACZ,IAAI,EAAE,IAAI,CAAC,WAAW,KAAK,CAAC,EAAE,QAAQ,CAAC,CAAC;kBAC7C;sBAAM;;;;qBAIL,IAAI,CAAC,WAAW,CACZ,IAAI,CAAC,WAAW,KAAK,CAAC,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC;kBAC7C;cACF;aACD,IAAI,IAAI,IAAI,QAAQ,IAAI,IAAI,GAAG,CAAC,EAAE;;iBAEhC,IAAI,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,QAAQ,CAAC,CAAC;iBAC5C,IAAI,IAAI,QAAQ,GAAG,SAAS,CAAC;iBAC7B,SAAS,IAAI,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;iBACjC,IAAI,OAAO,GAAG,IAAI,CAAC,WAAW,GAAG,SAAS,CAAC;iBAC3C,IAAI,OAAO,GAAG,CAAC,EAAE;;qBAEf,IAAI,IAAI,CAAC,iBAAiB;yBAAE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;;yBAC1C,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;qBAC1B,IAAI,GAAG,SAAS,GAAG,CAAC,GAAG,QAAQ,GAAG,CAAC,CAAC;qBACpC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC;yBACxB,IAAI,EAAE,UAAU,EAAE,MAAM,EAAE,IAAI;yBAC9B,SAAS,EAAE,SAAS,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;sBAClC,CAAC,CAAC;kBACJ;sBAAM;;qBAEL,IAAI,OAAO,KAAK,CAAC,EAAE;;yBAEjB,IAAI,OAAO,GAAG,SAAS,GAAG,CAAC,CAAC;yBAC5B,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAE,OAAO,EAAE,QAAQ,CAAC,CAAC;sBAChD;0BAAM;yBACL,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC;sBAC1C;qBACD,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;qBAC5B,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC;yBACxB,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS;sBACjD,CAAC,CAAC;kBACJ;cACF;aACD,IAAI,QAAQ,IAAI,CAAC,SAAS,GAAG,CAAC,MAAM,CAAC,EAAE;;iBAErC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;iBACjB,OAAO,QAAQ,GAAG,IAAI,CAAC;cACxB;UACF;SACD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;SACjB,OAAO,IAAI,CAAC;MACb;KACO,qCAAW,GAAnB,UAAoB,OAAgB,EAAE,KAAc,EAAE,QAAiB;SACrE,IAAI,QAAQ,GAAG,IAAI,CAAC,oBAAoB,CAAC;SACzC,IAAI,QAAQ,EAAE;aACZ,QAAQ,CAAC,WAAW,GAAKE,kBAAU,CAAC,SAAS,CAAC;aAC9C,QAAQ,CAAC,SAAS,GAAMA,kBAAU,CAAC,SAAS,CAAC;UAC9C;cAAM;;aAEL,IAAI,OAAO,EAAE;iBACX,QAAQ,CAAC,WAAW,GAAG,IAAI,CAAC,gBAAgB;qBACxCA,kBAAU,CAAC,SAAS,GAAGA,kBAAU,CAAC,aAAa,CAAC;cACrD;kBAAM;iBACL,QAAQ,CAAC,WAAW,GAAGA,kBAAU,CAAC,UAAU,CAAC;cAC9C;aACD,IAAI,KAAK,EAAE;iBACT,QAAQ,CAAC,SAAS,GAAG,IAAI,CAAC,cAAc;qBACpCA,kBAAU,CAAC,SAAS,GAAGA,kBAAU,CAAC,aAAa,CAAC;cACrD;kBAAM;iBACL,QAAQ,CAAC,SAAS,GAAMA,kBAAU,CAAC,UAAU,CAAC;cAC/C;UACF;MACF;KACO,yCAAe,GAAvB,UAAwB,QAAgB,EAAE,SAAiB,EAAE,UAAkB;SAC7E,IAAI,KAAK,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,KAAK,CAAC,IAAI,EACvC,WAAW,GAAG,IAAI,CAAC,kBAAkB,CAAC;SACxC,IAAI,WAAW,KAAK,IAAI,EAAE;aACxB,WAAW,GAAG,KAAK,CAAC,uBAAuB,EAAE;iBAC7C,IAAI,CAAC,kBAAkB,GAAG,WAAW,CAAC;UACvC;SACD,IAAI,KAAK,GAAG,WAAW,CAAC,kBAAkB,EACxC,MAAM,GAAG,WAAW,CAAC,YAAY,CAAC;SACpC,KAAK,CAAE,CAAC,CAAE,GAAG,GAAG,CAAC;SAAS,MAAM,CAAE,CAAC,CAAE,GAAG,SAAS,CAAC;SAClD,KAAK,CAAE,CAAC,CAAE,GAAG,GAAG,GAAG,QAAQ,CAAC;SAAE,MAAM,CAAE,CAAC,CAAE,GAAG,UAAU,CAAC;SACvD,OAAO,IAAI,CAAC;MACb;KACH,sBAAC;CAAD,CAAC,IAAA;;CC7YD;;;;;;;;;AASA;KAAoCI,kCAAe;KAcjD,wBAAY,IAAS;SAArB,YACE,iBAAO,SAMR;SAuaD,sCAAgC,GAAG,IAAI,YAAY,CAAC,CAAC,CAAC,CAAC;SA5arD,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC;SAClB,KAAI,CAAC,kBAAkB,EAAE,CAAC;SAC1B,KAAI,CAAC,UAAU,GAAG,CAAC,CAAC;SACpB,KAAI,CAAC,IAAI,GAAG,CAAC,CAAC;SACd,KAAI,CAAC,SAAS,GAAG,GAAG,CAAC;;MACtB;;;;KAID,mCAAU,GAAV,UAAW,IAAS,EAAE,YAAiB;SACrC,IAAI,IAAI,GAAG,YAAY,IAAI,IAAI,CAAC,KAAK,EACnC,QAAQ,GAAG,IAAI,CAAC,IAAI,EACpB,UAAU,GAAG,OAAO,IAAI,KAAK,QAAQ;aACjC,aAAa,CAAC,UAAU,CAAC,IAAI,EAAE,IAAI,CAAC,GAAG,IAAI,EAC/C,QAAQ,GAAG,UAAU,KAAK,IAAI,GAAG,UAAU,CAAC,IAAI,GAAG,IAAI,EACvD,cAAc,GAAG,IAAI,CAAC,cAAc,CAAE,QAAQ,CAAE,EAChD,eAAe,GAAG,IAAI,CAAC;SACzB,IAAI,cAAc,KAAK,SAAS,EAAE;aAChC,IAAI,cAAc,GACd,cAAc,CAAC,YAAY,CAAE,QAAQ,CAAE,CAAC;aAC5C,IAAI,cAAc,KAAK,SAAS,EAAE;iBAChC,OAAO,cAAc,CAAC;cACvB;;;aAGD,eAAe,GAAG,cAAc,CAAC,YAAY,CAAE,CAAC,CAAE,CAAC;;aAEnD,IAAI,UAAU,KAAK,IAAI;iBACrB,UAAU,GAAG,eAAe,CAAC,KAAK,CAAC;UACtC;;SAED,IAAI,UAAU,KAAK,IAAI;aAAE,OAAO,IAAI,CAAC;;SAErC,IAAI,SAAS,GAAG,IAAI,eAAe,CAAC,IAAI,EAAE,UAAU,EAAE,YAAY,CAAC,CAAC;SACpE,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,eAAe,CAAC,CAAC;;SAE7C,IAAI,CAAC,kBAAkB,CAAC,SAAS,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;SACvD,OAAO,SAAS,CAAC;MAClB;;KAED,uCAAc,GAAd,UAAe,IAAS,EAAE,YAAiB;SACzC,IAAI,IAAI,GAAG,YAAY,IAAI,IAAI,CAAC,KAAK,EACnC,QAAQ,GAAG,IAAI,CAAC,IAAI,EACpB,UAAU,GAAG,OAAO,IAAI,KAAK,QAAQ;aACjC,aAAa,CAAC,UAAU,CAAC,IAAI,EAAE,IAAI,CAAC,GAAG,IAAI,EAC/C,QAAQ,GAAG,UAAU,GAAG,UAAU,CAAC,IAAI,GAAG,IAAI,EAC9C,cAAc,GAAG,IAAI,CAAC,cAAc,CAAE,QAAQ,CAAE,CAAC;SACnD,IAAI,cAAc,KAAK,SAAS,EAAE;aAChC,OAAO,cAAc,CAAC,YAAY,CAAE,QAAQ,CAAE,IAAI,IAAI,CAAC;UACxD;SACD,OAAO,IAAI,CAAC;MACb;;KAED,sCAAa,GAAb;SACE,IAAI,OAAO,GAAG,IAAI,CAAC,QAAQ,EACzB,QAAQ,GAAG,IAAI,CAAC,eAAe,EAC/B,QAAQ,GAAG,IAAI,CAAC,SAAS,EACzB,SAAS,GAAG,IAAI,CAAC,gBAAgB,CAAC;SACpC,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC;SACzB,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC;SAC1B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,KAAK,QAAQ,EAAE,EAAG,CAAC,EAAE;aACpC,OAAO,CAAE,CAAC,CAAE,CAAC,KAAK,EAAE,CAAC;UACtB;SACD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,KAAK,SAAS,EAAE,EAAG,CAAC,EAAE;aACrC,QAAQ,CAAE,CAAC,CAAE,CAAC,QAAQ,GAAG,CAAC,CAAC;UAC5B;SACD,OAAO,IAAI,CAAC;MACb;;KAED,+BAAM,GAAN,UAAO,SAAc;SACnB,SAAS,IAAI,IAAI,CAAC,SAAS,CAAC;SAC5B,IAAI,OAAO,GAAG,IAAI,CAAC,QAAQ,EACzB,QAAQ,GAAG,IAAI,CAAC,eAAe,EAC/B,IAAI,GAAG,IAAI,CAAC,IAAI,IAAI,SAAS,EAC7B,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EACpC,SAAS,GAAG,IAAI,CAAC,UAAU,IAAI,CAAC,CAAC;;SAEnC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,KAAK,QAAQ,EAAE,EAAG,CAAC,EAAE;aACpC,IAAI,MAAM,GAAG,OAAO,CAAE,CAAC,CAAE,CAAC;aAC1B,IAAI,MAAM,CAAC,OAAO,EAAE;iBAClB,MAAM,CAAC,OAAO,CAAC,IAAI,EAAE,SAAS,EAAE,aAAa,EAAE,SAAS,CAAC,CAAC;cAC3D;UACF;;SAED,IAAI,QAAQ,GAAG,IAAI,CAAC,SAAS,EAC3B,SAAS,GAAG,IAAI,CAAC,gBAAgB,CAAC;SACpC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,KAAK,SAAS,EAAE,EAAG,CAAC,EAAE;aACrC,QAAQ,CAAE,CAAC,CAAE,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;UAChC;SACD,OAAO,IAAI,CAAC;MACb;;KAED,gCAAO,GAAP;SACE,OAAO,IAAI,CAAC,KAAK,CAAC;MACnB;;KAED,oCAAW,GAAX,UAAY,IAAS;SACnB,IAAI,OAAO,GAAG,IAAI,CAAC,QAAQ,EACzB,QAAQ,GAAG,IAAI,CAAC,IAAI,EACpB,aAAa,GAAG,IAAI,CAAC,cAAc,EACnC,cAAc,GAAG,aAAa,CAAE,QAAQ,CAAE,CAAC;SAC7C,IAAI,cAAc,KAAK,SAAS,EAAE;;;;aAIhC,IAAI,eAAe,GAAG,cAAc,CAAC,YAAY,CAAC;aAClD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,eAAe,CAAC,MAAM,EAAE,CAAC,KAAK,CAAC,EAAE,EAAG,CAAC,EAAE;iBACzD,IAAI,MAAM,GAAG,eAAe,CAAE,CAAC,CAAE,CAAC;iBAClC,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC;iBAC/B,IAAI,UAAU,GAAG,MAAM,CAAC,WAAW,EACjC,kBAAkB,GAAG,OAAO,CAAE,OAAO,CAAC,MAAM,GAAG,CAAC,CAAE,CAAC;iBACrD,MAAM,CAAC,WAAW,GAAG,IAAI,CAAC;iBAC1B,MAAM,CAAC,iBAAiB,GAAG,IAAI,CAAC;iBAChC,kBAAkB,CAAC,WAAW,GAAG,UAAU,CAAC;iBAC5C,OAAO,CAAE,UAAU,CAAE,GAAG,kBAAkB,CAAC;iBAC3C,OAAO,CAAC,GAAG,EAAE,CAAC;iBACd,IAAI,CAAC,gCAAgC,CAAC,MAAM,CAAC,CAAC;cAC/C;aACD,OAAO,aAAa,CAAE,QAAQ,CAAE,CAAC;UAClC;MACF;;KAED,oCAAW,GAAX,UAAY,IAAS;SACnB,IAAI,QAAQ,GAAG,IAAI,CAAC,IAAI,EACtB,aAAa,GAAG,IAAI,CAAC,cAAc,CAAC;SACtC,KAAK,IAAI,QAAQ,IAAI,aAAa,EAAE;aAClC,IAAI,YAAY,GAAG,aAAa,CAAE,QAAQ,CAAE,CAAC,YAAY,EACvD,MAAM,GAAG,YAAY,CAAE,QAAQ,CAAE,CAAC;aACpC,IAAI,MAAM,KAAK,SAAS,EAAE;iBACxB,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC;iBAC/B,IAAI,CAAC,qBAAqB,CAAC,MAAM,CAAC,CAAC;cACpC;UACF;SACD,IAAI,cAAc,GAAG,IAAI,CAAC,sBAAsB,EAC9C,aAAa,GAAG,cAAc,CAAE,QAAQ,CAAE,CAAC;SAC7C,IAAI,aAAa,KAAK,SAAS,EAAE;aAC/B,KAAK,IAAI,SAAS,IAAI,aAAa,EAAE;iBACnC,IAAI,OAAO,GAAG,aAAa,CAAE,SAAS,CAAE,CAAC;iBACzC,OAAO,CAAC,oBAAoB,EAAE,CAAC;iBAC/B,IAAI,CAAC,sBAAsB,CAAC,OAAO,CAAC,CAAC;cACtC;UACF;MACF;;KAED,sCAAa,GAAb,UAAc,IAAS,EAAE,YAAiB;SACxC,IAAI,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;SACrD,IAAI,MAAM,KAAK,IAAI,EAAE;aACnB,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC;aAC/B,IAAI,CAAC,qBAAqB,CAAC,MAAM,CAAC,CAAC;UACpC;MACF;;KAED,oCAAW,GAAX,UAAY,MAAW,EAAE,eAAoB;SAC3C,IAAI,IAAI,GAAG,MAAM,CAAC,UAAU,IAAI,IAAI,CAAC,KAAK,EACxC,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,MAAM,EAC5B,OAAO,GAAG,MAAM,CAAC,MAAM,EACvB,QAAQ,GAAG,MAAM,CAAC,iBAAiB,EACnC,YAAY,GAAG,MAAM,CAAC,aAAa,EACnC,QAAQ,GAAG,IAAI,CAAC,IAAI,EACpB,cAAc,GAAG,IAAI,CAAC,sBAAsB,EAC5C,cAAc,GAAG,cAAc,CAAE,QAAQ,CAAE,CAAC;SAC9C,IAAI,cAAc,KAAK,SAAS,EAAE;aAChC,cAAc,GAAG,EAAE,CAAC;aACpB,cAAc,CAAE,QAAQ,CAAE,GAAG,cAAc,CAAC;UAC7C;SACD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,KAAK,OAAO,EAAE,EAAG,CAAC,EAAE;aACnC,IAAI,KAAK,GAAG,MAAM,CAAE,CAAC,CAAE,EACrB,SAAS,GAAG,KAAK,CAAC,IAAI,EACtB,OAAO,GAAG,cAAc,CAAE,SAAS,CAAE,CAAC;aACxC,IAAI,OAAO,KAAK,SAAS,EAAE;iBACzB,QAAQ,CAAE,CAAC,CAAE,GAAG,OAAO,CAAC;cACzB;kBAAM;iBACL,OAAO,GAAG,QAAQ,CAAE,CAAC,CAAE,CAAC;iBACxB,IAAI,OAAO,KAAK,SAAS,EAAE;;qBAEzB,IAAI,OAAO,CAAC,WAAW,KAAK,IAAI,EAAE;yBAChC,EAAG,OAAO,CAAC,cAAc,CAAC;yBAC1B,IAAI,CAAC,mBAAmB,CAAC,OAAO,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC;sBACxD;qBACD,SAAS;kBACV;iBACD,IAAI,IAAI,GAAG,eAAe,IAAI,eAAe;qBACzC,iBAAiB,CAAE,CAAC,CAAE,CAAC,OAAO,CAAC,UAAU,CAAC;iBAC9C,OAAO,GAAG,IAAI,aAAa,CACvB,eAAe,CAAC,MAAM,CAAC,IAAI,EAAE,SAAS,EAAE,IAAI,CAAC,EAC7C,KAAK,CAAC,aAAa,EAAE,KAAK,CAAC,YAAY,EAAE,CAAC,CAAC;iBAC/C,EAAG,OAAO,CAAC,cAAc,CAAC;iBAC1B,IAAI,CAAC,mBAAmB,CAAC,OAAO,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC;iBACvD,QAAQ,CAAE,CAAC,CAAE,GAAG,OAAO,CAAC;cACzB;aACD,YAAY,CAAE,CAAC,CAAE,CAAC,YAAY,GAAG,OAAO,CAAC,MAAM,CAAC;UACjD;MACF;KACD,wCAAe,GAAf,UAAgB,MAAW;SACzB,IAAI,CAAE,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,EAAE;aAClC,IAAI,MAAM,CAAC,WAAW,KAAK,IAAI,EAAE;;;iBAG/B,IAAI,QAAQ,GAAG,CAAC,MAAM,CAAC,UAAU,IAAI,IAAI,CAAC,KAAK,EAAE,IAAI,EACnD,QAAQ,GAAG,MAAM,CAAC,KAAK,CAAC,IAAI,EAC5B,cAAc,GAAG,IAAI,CAAC,cAAc,CAAE,QAAQ,CAAE,CAAC;iBACnD,IAAI,CAAC,WAAW,CAAC,MAAM,EACnB,cAAc,IAAI,cAAc,CAAC,YAAY,CAAE,CAAC,CAAE,CAAC,CAAC;iBACxD,IAAI,CAAC,kBAAkB,CAAC,MAAM,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;cACrD;aACD,IAAI,QAAQ,GAAG,MAAM,CAAC,iBAAiB,CAAC;;aAExC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,KAAK,CAAC,EAAE,EAAG,CAAC,EAAE;iBAClD,IAAI,OAAO,GAAG,QAAQ,CAAE,CAAC,CAAE,CAAC;iBAC5B,IAAI,OAAO,CAAC,QAAQ,EAAG,KAAK,CAAC,EAAE;qBAC7B,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;qBAC3B,OAAO,CAAC,iBAAiB,EAAE,CAAC;kBAC7B;cACF;aACD,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;UAC1B;MACF;KACD,0CAAiB,GAAjB,UAAkB,MAAW;SAC3B,IAAI,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,EAAE;aAChC,IAAI,QAAQ,GAAG,MAAM,CAAC,iBAAiB,CAAC;;aAExC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,KAAK,CAAC,EAAE,EAAG,CAAC,EAAE;iBAClD,IAAI,OAAO,GAAG,QAAQ,CAAE,CAAC,CAAE,CAAC;iBAC5B,IAAI,EAAG,OAAO,CAAC,QAAQ,KAAK,CAAC,EAAE;qBAC7B,OAAO,CAAC,oBAAoB,EAAE,CAAC;qBAC/B,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC;kBAChC;cACF;aACD,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;UAC9B;MACF;;KAED,2CAAkB,GAAlB;SACE,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;SACnB,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC;SACzB,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;;;;;;SAMzB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;SACpB,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC;SAC1B,IAAI,CAAC,sBAAsB,GAAG,EAAE,CAAC;SACjC,IAAI,CAAC,oBAAoB,GAAG,EAAE,CAAC;SAC/B,IAAI,CAAC,2BAA2B,GAAG,CAAC,CAAC;SACrC,IAAI,KAAK,GAAG,IAAI,CAAC;SACjB,IAAI,CAAC,KAAK,GAAG;aACX,OAAO,EAAE;iBACP,IAAI,KAAK,KAAK,OAAO,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;iBAC7C,IAAI,KAAK,KAAK,OAAO,KAAK,CAAC,eAAe,CAAC,EAAE;cAC9C;aACD,QAAQ,EAAE;iBACR,IAAI,KAAK,KAAK,OAAO,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;iBAC9C,IAAI,KAAK,KAAK,OAAO,KAAK,CAAC,gBAAgB,CAAC,EAAE;cAC/C;aACD,mBAAmB,EAAE;iBACnB,IAAI,KAAK,KAAK,OAAO,KAAK,CAAC,oBAAoB,CAAC,MAAM,CAAC,EAAE;iBACzD,IAAI,KAAK,KAAK,OAAO,KAAK,CAAC,2BAA2B,CAAC,EAAE;cAC1D;UACF,CAAC;MACH;;KAED,wCAAe,GAAf,UAAgB,MAAW;SACzB,IAAI,KAAK,GAAG,MAAM,CAAC,WAAW,CAAC;SAC/B,OAAO,KAAK,KAAK,IAAI,IAAI,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC;MACvD;KACD,2CAAkB,GAAlB,UAAmB,MAAW,EAAE,QAAa,EAAE,QAAa;SAC1D,IAAI,OAAO,GAAG,IAAI,CAAC,QAAQ,EACzB,aAAa,GAAG,IAAI,CAAC,cAAc,EACnC,cAAc,GAAG,aAAa,CAAE,QAAQ,CAAE,CAAC;SAC7C,IAAI,cAAc,KAAK,SAAS,EAAE;aAChC,cAAc,GAAG;iBACf,YAAY,EAAE,CAAE,MAAM,CAAE;iBACxB,YAAY,EAAE,EAAE;cACjB,CAAC;aACF,MAAM,CAAC,iBAAiB,GAAG,CAAC,CAAC;aAC7B,aAAa,CAAE,QAAQ,CAAE,GAAG,cAAc,CAAC;UAC5C;cAAM;aACL,IAAI,YAAY,GAAG,cAAc,CAAC,YAAY,CAAC;aAC/C,MAAM,CAAC,iBAAiB,GAAG,YAAY,CAAC,MAAM,CAAC;aAC/C,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;UAC3B;SACD,MAAM,CAAC,WAAW,GAAG,OAAO,CAAC,MAAM,CAAC;SACpC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SACrB,cAAc,CAAC,YAAY,CAAE,QAAQ,CAAE,GAAG,MAAM,CAAC;MAClD;KACD,8CAAqB,GAArB,UAAsB,MAAW;SAC/B,IAAI,OAAO,GAAG,IAAI,CAAC,QAAQ,EACzB,kBAAkB,GAAG,OAAO,CAAE,OAAO,CAAC,MAAM,GAAG,CAAC,CAAE,EAClD,UAAU,GAAG,MAAM,CAAC,WAAW,CAAC;SAClC,kBAAkB,CAAC,WAAW,GAAG,UAAU,CAAC;SAC5C,OAAO,CAAE,UAAU,CAAE,GAAG,kBAAkB,CAAC;SAC3C,OAAO,CAAC,GAAG,EAAE,CAAC;SACd,MAAM,CAAC,WAAW,GAAG,IAAI,CAAC;SAC1B,IAAI,QAAQ,GAAG,MAAM,CAAC,KAAK,CAAC,IAAI,EAC9B,aAAa,GAAG,IAAI,CAAC,cAAc,EACnC,cAAc,GAAG,aAAa,CAAE,QAAQ,CAAE,EAC1C,mBAAmB,GAAG,cAAc,CAAC,YAAY,EACjD,eAAe,GACb,mBAAmB,CAAE,mBAAmB,CAAC,MAAM,GAAG,CAAC,CAAE,EACvD,gBAAgB,GAAG,MAAM,CAAC,iBAAiB,CAAC;SAC9C,eAAe,CAAC,iBAAiB,GAAG,gBAAgB,CAAC;SACrD,mBAAmB,CAAE,gBAAgB,CAAE,GAAG,eAAe,CAAC;SAC1D,mBAAmB,CAAC,GAAG,EAAE,CAAC;SAC1B,MAAM,CAAC,iBAAiB,GAAG,IAAI,CAAC;SAChC,IAAI,YAAY,GAAG,cAAc,CAAC,YAAY,EAC5C,QAAQ,GAAG,CAAC,OAAO,CAAC,UAAU,IAAI,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC;SACrD,OAAO,YAAY,CAAE,QAAQ,CAAE,CAAC;SAChC,IAAI,mBAAmB,CAAC,MAAM,KAAK,CAAC,EAAE;aACpC,OAAO,aAAa,CAAE,QAAQ,CAAE,CAAC;UAClC;SACD,IAAI,CAAC,gCAAgC,CAAC,MAAM,CAAC,CAAC;MAC/C;KACD,yDAAgC,GAAhC,UAAiC,MAAW;SAC1C,IAAI,QAAQ,GAAG,MAAM,CAAC,iBAAiB,CAAC;SACxC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,KAAK,CAAC,EAAE,EAAG,CAAC,EAAE;aAClD,IAAI,OAAO,GAAG,QAAQ,CAAE,CAAC,CAAE,CAAC;aAC5B,IAAI,EAAG,OAAO,CAAC,cAAc,KAAK,CAAC,EAAE;iBACnC,IAAI,CAAC,sBAAsB,CAAC,OAAO,CAAC,CAAC;cACtC;UACF;MACF;KACD,oCAAW,GAAX,UAAY,MAAW;;;;;;SAMrB,IAAI,OAAO,GAAG,IAAI,CAAC,QAAQ,EACzB,SAAS,GAAG,MAAM,CAAC,WAAW,EAC9B,eAAe,GAAG,IAAI,CAAC,eAAe,EAAG,EACzC,mBAAmB,GAAG,OAAO,CAAE,eAAe,CAAE,CAAC;SACnD,MAAM,CAAC,WAAW,GAAG,eAAe,CAAC;SACrC,OAAO,CAAE,eAAe,CAAE,GAAG,MAAM,CAAC;SACpC,mBAAmB,CAAC,WAAW,GAAG,SAAS,CAAC;SAC5C,OAAO,CAAE,SAAS,CAAE,GAAG,mBAAmB,CAAC;MAC5C;KACD,wCAAe,GAAf,UAAgB,MAAW;;;;;;SAMzB,IAAI,OAAO,GAAG,IAAI,CAAC,QAAQ,EACzB,SAAS,GAAG,MAAM,CAAC,WAAW,EAC9B,kBAAkB,GAAG,EAAG,IAAI,CAAC,eAAe,EAC5C,gBAAgB,GAAG,OAAO,CAAE,kBAAkB,CAAE,CAAC;SACnD,MAAM,CAAC,WAAW,GAAG,kBAAkB,CAAC;SACxC,OAAO,CAAE,kBAAkB,CAAE,GAAG,MAAM,CAAC;SACvC,gBAAgB,CAAC,WAAW,GAAG,SAAS,CAAC;SACzC,OAAO,CAAE,SAAS,CAAE,GAAG,gBAAgB,CAAC;MACzC;;KAED,4CAAmB,GAAnB,UAAoB,OAAY,EAAE,QAAa,EAAE,SAAc;SAC7D,IAAI,cAAc,GAAG,IAAI,CAAC,sBAAsB,EAC9C,aAAa,GAAG,cAAc,CAAE,QAAQ,CAAE,EAC1C,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC;SAC5B,IAAI,aAAa,KAAK,SAAS,EAAE;aAC/B,aAAa,GAAG,EAAE,CAAC;aACnB,cAAc,CAAE,QAAQ,CAAE,GAAG,aAAa,CAAC;UAC5C;SACD,aAAa,CAAE,SAAS,CAAE,GAAG,OAAO,CAAC;SACrC,OAAO,CAAC,WAAW,GAAG,QAAQ,CAAC,MAAM,CAAC;SACtC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;MACxB;KACD,+CAAsB,GAAtB,UAAuB,OAAY;SACjC,IAAI,QAAQ,GAAG,IAAI,CAAC,SAAS,EAC3B,WAAW,GAAG,OAAO,CAAC,OAAO,EAC7B,QAAQ,GAAG,WAAW,CAAC,QAAQ,CAAC,IAAI,EACpC,SAAS,GAAG,WAAW,CAAC,IAAI,EAC5B,cAAc,GAAG,IAAI,CAAC,sBAAsB,EAC5C,aAAa,GAAG,cAAc,CAAE,QAAQ,CAAE,EAC1C,mBAAmB,GAAG,QAAQ,CAAE,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAE,EACrD,UAAU,GAAG,OAAO,CAAC,WAAW,CAAC;SACnC,mBAAmB,CAAC,WAAW,GAAG,UAAU,CAAC;SAC7C,QAAQ,CAAE,UAAU,CAAE,GAAG,mBAAmB,CAAC;SAC7C,QAAQ,CAAC,GAAG,EAAE,CAAC;SACf,OAAO,aAAa,CAAE,SAAS,CAAE,CAAC;SAClC,gBAAgB,EAAE;aAChB,KAAK,IAAI,CAAC,IAAI,aAAa;iBAAE,MAAM,gBAAgB,CAAC;aACpD,OAAO,cAAc,CAAE,QAAQ,CAAE,CAAC;UACnC;MACF;KACD,qCAAY,GAAZ,UAAa,OAAY;SACvB,IAAI,QAAQ,GAAG,IAAI,CAAC,SAAS,EAC3B,SAAS,GAAG,OAAO,CAAC,WAAW,EAC/B,eAAe,GAAG,IAAI,CAAC,gBAAgB,EAAG,EAC1C,oBAAoB,GAAG,QAAQ,CAAE,eAAe,CAAE,CAAC;SACrD,OAAO,CAAC,WAAW,GAAG,eAAe,CAAC;SACtC,QAAQ,CAAE,eAAe,CAAE,GAAG,OAAO,CAAC;SACtC,oBAAoB,CAAC,WAAW,GAAG,SAAS,CAAC;SAC7C,QAAQ,CAAE,SAAS,CAAE,GAAG,oBAAoB,CAAC;MAC9C;KACD,yCAAgB,GAAhB,UAAiB,OAAY;SAC3B,IAAI,QAAQ,GAAG,IAAI,CAAC,SAAS,EAC3B,SAAS,GAAG,OAAO,CAAC,WAAW,EAC/B,kBAAkB,GAAG,EAAG,IAAI,CAAC,gBAAgB,EAC7C,iBAAiB,GAAG,QAAQ,CAAE,kBAAkB,CAAE,CAAC;SACrD,OAAO,CAAC,WAAW,GAAG,kBAAkB,CAAC;SACzC,QAAQ,CAAE,kBAAkB,CAAE,GAAG,OAAO,CAAC;SACzC,iBAAiB,CAAC,WAAW,GAAG,SAAS,CAAC;SAC1C,QAAQ,CAAE,SAAS,CAAE,GAAG,iBAAiB,CAAC;MAC3C;;KAED,gDAAuB,GAAvB;SACE,IAAI,YAAY,GAAG,IAAI,CAAC,oBAAoB,EAC1C,eAAe,GAAG,IAAI,CAAC,2BAA2B,EAAG,EACrD,WAAW,GAAG,YAAY,CAAE,eAAe,CAAE,CAAC;SAChD,IAAI,WAAW,KAAK,SAAS,EAAE;aAC7B,WAAW,GAAG,IAAI,iBAAiB,CAC/B,IAAI,YAAY,CAAC,CAAC,CAAC,EAAE,IAAI,YAAY,CAAC,CAAC,CAAC,EACtC,CAAC,EAAE,IAAI,CAAC,gCAAgC,CAAC,CAAC;aAChD,WAAW,CAAC,YAAY,GAAG,eAAe,CAAC;aAC3C,YAAY,CAAE,eAAe,CAAE,GAAG,WAAW,CAAC;UAC/C;SACD,OAAO,WAAW,CAAC;MACpB;KACD,oDAA2B,GAA3B,UAA4B,WAAgB;SAC1C,IAAI,YAAY,GAAG,IAAI,CAAC,oBAAoB,EAC1C,SAAS,GAAG,WAAW,CAAC,YAAY,EACpC,kBAAkB,GAAG,EAAG,IAAI,CAAC,2BAA2B,EACxD,qBAAqB,GAAG,YAAY,CAAE,kBAAkB,CAAE,CAAC;SAC7D,WAAW,CAAC,YAAY,GAAG,kBAAkB,CAAC;SAC9C,YAAY,CAAE,kBAAkB,CAAE,GAAG,WAAW,CAAC;SACjD,qBAAqB,CAAC,YAAY,GAAG,SAAS,CAAC;SAC/C,YAAY,CAAE,SAAS,CAAE,GAAG,qBAAqB,CAAC;MACnD;KAEH,qBAAC;CAAD,CA7bA,CAAoC,eAAe;;CCfnD;;;AAGA;KAEE,iBAAY,KAAU;SACpB,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;aAC7B,OAAO,CAAC,IAAI,CAAC,oDAAoD,CAAC,CAAC;aACnE,KAAK,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;UACtB;SACD,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;MACpB;KACD,sBAAI,4BAAO;cAAX,UAAY,KAAK;aACf,OAAO,CAAC,IAAI,CAAC,gFAAgF,CAAC,CAAC;UAChG;;;QAAA;KACD,0BAAQ,GAAR,UAAS,QAAoB;SAC3B,OAAO,CAAC,IAAI,CAAC,mFAAmF,CAAC,CAAC;SAClG,OAAO,IAAI,CAAC;MACb;KACH,cAAC;CAAD,CAAC;;CCXD;;;;;AAKA;KAAA;MASC;KAAD,gBAAC;CAAD,CAAC,IAAA;;KAOC,mBAAY,MAAgB,EAAE,SAAmB,EAAE,IAAa,EAAE,GAAY;SAD9E,kBAAa,GAAW,CAAC,CAAC;SAExB,IAAI,CAAC,GAAG,GAAG,IAAI,GAAG,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;;SAEtC,IAAI,CAAC,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC;SACtB,IAAI,CAAC,GAAG,GAAG,GAAG,IAAI,QAAQ,CAAC;SAC3B,IAAI,CAAC,MAAM,GAAG;aACZ,IAAI,EAAE,EAAE;aACR,IAAI,EAAE,EAAE;aACR,GAAG,EAAE,EAAE;aACP,MAAM,EAAE,EAAE,SAAS,EAAE,CAAC,EAAE;aACxB,MAAM,EAAE,EAAE;UACX,CAAC;;;;;;;;;MASH;KACD,uBAAG,GAAH,UAAI,MAAe,EAAE,SAAkB;;SAErC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;MACjC;KACD,iCAAa,GAAb,UAAc,MAAe,EAAE,MAAc;SAC3C,KAAK,MAAM,IAAI,MAAM,YAAY,iBAAiB,GAAG;aACnD,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,qBAAqB,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;aAC1D,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,SAAS,EAAE,CAAC;UACpG;cAAM,KAAK,MAAM,IAAI,MAAM,YAAY,kBAAkB,GAAG;aAC3D,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,GAAG,MAAM,CAAC,GAAG,KAAK,MAAM,CAAC,IAAI,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;aACnH,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,CAAC,CAAC,kBAAkB,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;UAC1E;cAAM;aACL,OAAO,CAAC,KAAK,CAAC,2CAA2C,CAAC,CAAC;UAC5D;MACF;KACD,mCAAe,GAAf,UAAgB,MAAgB,EAAE,SAAkB;SAClD,IAAM,UAAU,GAAgB,EAAE,CAAC;SACnC,eAAe,CAAC,MAAM,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,CAAC,CAAC;SACrD,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SACzB,OAAO,UAAU,CAAC;MACnB;KACD,oCAAgB,GAAhB,UAAiB,OAAmB,EAAE,SAAmB;SACvD,IAAM,UAAU,GAAgB,EAAE,CAAC;SACnC,IAAI,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,KAAK,EAAE;aACpC,OAAO,CAAC,IAAI,CAAC,4DAA4D,CAAC,CAAC;aAC3E,OAAO,UAAU,CAAC;UACnB;SACD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAG,EAAE;aAC/C,eAAe,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,CAAC,CAAC;UAC1D;SACD,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SACzB,OAAO,UAAU,CAAC;MACnB;KACH,gBAAC;CAAD,CAAC,IAAA;CACD,SAAS,OAAO,CAAC,CAAY,EAAE,CAAY;KACzC,OAAO,CAAC,CAAC,QAAQ,GAAG,CAAC,CAAC,QAAQ,CAAC;CACjC,CAAC;CACD,SAAS,eAAe,CAAC,MAAgB,EAAE,SAAoB,EAAE,UAAuB,EAAE,SAAkB;KAC1G,IAAI,MAAM,CAAC,OAAO,KAAK,KAAK;SAAE,OAAO;KACrC,MAAM,CAAC,OAAO,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;KACtC,IAAI,SAAS,KAAK,IAAI,EAAE;SACtB,IAAM,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;SACjC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAG,EAAE;aAChD,eAAe,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,SAAS,EAAE,UAAU,EAAE,IAAI,CAAC,CAAC;UAC3D;MACF;CACH,CAAC;;CChGD;;;AAGA;KAME,eAAY,SAAyB;SAAzB,0BAAA,EAAA,gBAAyB;SAJrC,cAAS,GAAW,CAAC,CAAC;SACtB,YAAO,GAAW,CAAC,CAAC;SACpB,gBAAW,GAAW,CAAC,CAAC;SACxB,YAAO,GAAY,KAAK,CAAC;SAEvB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;MAC5B;KACD,qBAAK,GAAL;SACE,IAAI,CAAC,SAAS,GAAG,CAAC,WAAW,IAAI,IAAI,EAAE,GAAG,EAAE,CAAC;SAC7C,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC;SAC9B,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;SACrB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;MACrB;KACD,oBAAI,GAAJ;SACE,IAAI,CAAC,cAAc,EAAE,CAAC;SACtB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;MACtB;KACD,8BAAc,GAAd;SACE,IAAI,CAAC,QAAQ,EAAE,CAAC;SAChB,OAAO,IAAI,CAAC,WAAW,CAAC;MACzB;KACD,wBAAQ,GAAR;SACE,IAAI,IAAI,GAAW,CAAC,CAAC;SACrB,IAAI,IAAI,CAAC,SAAS,IAAI,CAAE,IAAI,CAAC,OAAO,EAAE;aACpC,IAAI,CAAC,KAAK,EAAE,CAAC;UACd;SACD,IAAI,IAAI,CAAC,OAAO,EAAE;aAChB,IAAM,OAAO,GAAW,CAAC,WAAW,IAAI,IAAI,EAAE,GAAG,EAAE,CAAC;aACpD,IAAI,GAAG,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC;aACvC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;aACvB,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC;UAC1B;SACD,OAAO,IAAI,CAAC;MACb;KACH,YAAC;CAAD,CAAC;;CCtCD;;;;;;;AAOA;KAEE,gBAAY,MAAa;SACvB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;MACtB;KACD,8BAAa,GAAb,UAAc,CAAQ;SACpB,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;SACjB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,EAAG,EAAE;aAClC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;UACzD;MACF;KACD,yBAAQ,GAAR,UAAS,CAAS;SAChB,IAAM,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;SACxC,IAAI,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAE,EAAE,EAAE,EAAE,EACnC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;SACf,KAAK,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,CAAC;SACrC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;SAC7B,MAAM,GAAG,KAAK,GAAG,QAAQ,CAAC;SAC1B,CAAC,CAAC,CAAC,CAAC,GAAG,QAAQ,KAAK,CAAC,GAAG,QAAQ,GAAG,QAAQ,GAAG,CAAC,CAAC;SAChD,CAAC,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC;SAChB,CAAC,CAAC,CAAC,CAAC,GAAG,QAAQ,GAAI,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,GAAG,QAAQ,GAAG,CAAC,CAAC;SAClF,CAAC,CAAC,CAAC,CAAC,GAAG,QAAQ,GAAI,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,GAAG,QAAQ,GAAG,CAAC,CAAC;SAClF,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SACvB,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SACvB,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SACvB,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SACvB,EAAE,GAAG,MAAM,GAAG,MAAM,CAAC;SACrB,EAAE,GAAG,MAAM,GAAG,EAAE,CAAC;SACjB,EAAE,CAAC,CAAC,GAAG,MAAM,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,MAAM,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;SAClE,EAAE,CAAC,CAAC,GAAG,MAAM,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,MAAM,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;SAClE,EAAE,CAAC,CAAC,GAAG,MAAM,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,MAAM,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;SAClE,OAAO,EAAE,CAAC;MACX;KACD,sCAAqB,GAArB;SACE,IAAM,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAC1B,MAAM,GAAG,EAAE,CAAC;SACd,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAG,EAAE;aAC3B,IAAM,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;aACzB,MAAM,CAAC,CAAC,CAAC,GAAG,CAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAE,CAAC;UAC/B;SACD,OAAO,MAAM,CAAC;MACf;;KAED,0BAAS,GAAT,UAAU,aAA2B;SAA3B,8BAAA,EAAA,mBAA2B;SACnC,IAAI,WAAW,GAAG,CAAC,CAAC;SACpB,IAAM,WAAW,GAAG,IAAI,OAAO,EAAE,CAAC;SAClC,IAAM,MAAM,GAAG,IAAI,OAAO,EAAE,CAAC;SAC7B,IAAM,YAAY,GAAG,EAAE,CAAC;SACxB,IAAI,WAAW,GAAG,CAAC,CAAC;;SAEpB,YAAY,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;SACpB,IAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,aAAa,CAAC;SACpD,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;SACjC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,EAAE,CAAC,EAAG,EAAE;aAClC,IAAM,KAAK,GAAG,CAAC,GAAG,QAAQ,CAAC;aAC3B,IAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;aACtC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aACtB,WAAW,IAAI,MAAM,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;aAC9C,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aAC3B,IAAM,KAAK,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,IAAI,KAAK,CAAC;aAC/C,IAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;aACnC,IAAI,QAAQ,KAAK,WAAW,EAAE;iBAC5B,YAAY,CAAC,QAAQ,CAAC,GAAG,WAAW,CAAC;iBACrC,WAAW,GAAG,QAAQ,CAAC;cACxB;UACF;;SAED,YAAY,CAAC,YAAY,CAAC,MAAM,CAAC,GAAG,WAAW,CAAC;SAChD,OAAO,EAAE,MAAM,EAAE,YAAY,EAAE,KAAK,EAAE,WAAW,EAAE,CAAC;MACrD;KACD,yCAAwB,GAAxB,UAAyB,YAAoB;SAC3C,IAAM,SAAS,GAAG,EAAE,CAAC;SACrB,IAAM,MAAM,GAAG,IAAI,OAAO,EAAE,CAAC;SAC7B,IAAM,EAAE,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;SAC5B,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC;SACpD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAG,EAAE;;;aAG5C,IAAM,YAAY,GAAG,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;aACrD,IAAM,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,GAAG,YAAY,GAAG,EAAE,CAAC,KAAK,CAAC,CAAC;aACnE,IAAM,YAAY,GAAG,CAAC,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;aACxD,IAAM,SAAS,GAAG,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;aAC/C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,GAAG,CAAC,EAAE,CAAC,EAAG,EAAE;iBACtC,IAAM,KAAK,GAAG,YAAY,GAAG,CAAC,IAAI,CAAC,GAAG,QAAQ,CAAC,IAAI,SAAS,GAAG,YAAY,CAAC,CAAC;iBAC7E,IAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;iBACtC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC;cAC/C;aACD,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC;UACrD;SACD,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC;MACzB;;KAEM,kBAAW,GAAlB,UAAmB,EAAU,EAAE,EAAU,EAAE,EAAU,EAAE,EAAU,EAAE,CAAS,EAAE,EAAU,EAAE,EAAU;SAClG,IAAM,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,IAAI,GAAG,CAAC;SAC3B,IAAM,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,IAAI,GAAG,CAAC;SAC3B,OAAO,CAAC,CAAC,IAAI,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,CAAC,CAAE,CAAC,IAAI,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,CAAC;MAC5F;KACH,aAAC;CAAD,CAAC;;CCvGD;;;;;;;;;AASA;KAIE,mBAAY,MAAoB,EAAE,GAAe,EAAE,KAAiB;SAAxD,uBAAA,EAAA,YAAoB;SAAE,oBAAA,EAAA,OAAe;SAAE,sBAAA,EAAA,SAAiB;SAClE,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;SACrB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;SACf,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;MACpB;KACD,uBAAG,GAAH,UAAI,MAAc,EAAE,GAAW,EAAE,KAAa;SAC5C,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;SACrB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;SACf,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;SACnB,OAAO,IAAI,CAAC;MACb;KACD,yBAAK,GAAL;SACE,OAAO,IAAK,IAAI,CAAC,WAAmB,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;MACnD;KACD,wBAAI,GAAJ,UAAK,KAAgB;SACnB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;SAC3B,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC;SACrB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;SACzB,OAAO,IAAI,CAAC;MACb;;KAED,4BAAQ,GAAR;SACE,IAAM,GAAG,GAAG,QAAQ,CAAC;SACrB,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;SAC5D,OAAO,IAAI,CAAC;MACb;KACD,kCAAc,GAAd,UAAe,IAAa;SAC1B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC;SAC5B,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;aACrB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;aACf,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC;UACd;cAAM;aACL,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;aACxC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;UACjE;SACD,OAAO,IAAI,CAAC;MACb;KACH,gBAAC;CAAD,CAAC;;CClDD;;;AAGA;KAAoCA,kCAAI;KAItC,wBAAY,QAAa,EAAE,QAAa;SAAxC,YACE,kBAAM,QAAQ,EAAE,QAAQ,CAAC,SAY1B;SAXC,KAAI,CAAC,aAAa,GAAG,EAAE,CAAC;SACxB,KAAI,CAAC,cAAc,GAAG,EAAE,CAAC;;;SAGzB,IAAI,SAAS,GAAG,KAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,MAAM,CAAC;SAClD,IAAI,IAAI,GAAG,WAAW,CAAC;SACvB,IAAI,UAAU,GAAG,CAAC,CAAC;SACnB,IAAI,QAAQ,GAAG,SAAS,GAAG,CAAC,CAAC;SAC7B,IAAI,GAAG,GAAG,SAAS,GAAG,CAAC,CAAC;SACxB,KAAI,CAAC,eAAe,CAAC,IAAI,EAAE,UAAU,EAAE,QAAQ,EAAE,GAAG,CAAC,CAAC;SACtD,KAAI,CAAC,kBAAkB,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;;MAClC;KACD,wCAAe,GAAf,UAAgB,IAAY,EAAE,KAAa,EAAE,GAAW,EAAE,GAAW;SACnE,IAAI,SAAS,GAAG;aACd,KAAK,EAAE,KAAK;aACZ,GAAG,EAAE,GAAG;aACR,MAAM,EAAE,GAAG,GAAG,KAAK,GAAG,CAAC;aACvB,GAAG,EAAE,GAAG;aACR,QAAQ,EAAE,CAAC,GAAG,GAAG,KAAK,IAAI,GAAG;aAC7B,SAAS,EAAE,CAAC;aACZ,YAAY,EAAE,CAAC;aACf,MAAM,EAAE,KAAK;aACb,IAAI,EAAE,CAAC;aACP,SAAS,EAAE,CAAC;aACZ,MAAM,EAAE,CAAC;aACT,kBAAkB,EAAE,KAAK;aACzB,YAAY,EAAE,KAAK;UACpB,CAAC;SACF,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG,SAAS,CAAC;SACrC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;MACrC;KACD,6CAAoB,GAApB,UAAqB,GAAW;SAC9B,IAAI,OAAO,GAAG,kBAAkB,CAAC;SACjC,IAAI,cAAc,EAAE,WAAW,GAAG,EAAE,CAAC;SACrC,IAAI,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;SAC7B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,QAAQ,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAG,EAAE;aAC/D,IAAI,KAAK,GAAG,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;aACrC,IAAI,MAAM,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;aACvC,IAAI,MAAM,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;iBAC/B,IAAI,IAAI,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;iBACrB,IAAI,CAAE,WAAW,CAAC,IAAI,CAAC;qBAAE,WAAW,CAAC,IAAI,CAAC,GAAG,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG,EAAE,CAAE,QAAQ,EAAE,CAAC;iBAClF,IAAI,KAAK,GAAG,WAAW,CAAC,IAAI,CAAC,CAAC;iBAC9B,IAAI,CAAC,GAAG,KAAK,CAAC,KAAK;qBAAE,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC;iBACrC,IAAI,CAAC,GAAG,KAAK,CAAC,GAAG;qBAAE,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC;iBACjC,IAAI,CAAE,cAAc;qBAAE,cAAc,GAAG,IAAI,CAAC;cAC7C;UACF;SACD,KAAK,IAAI,IAAI,IAAI,WAAW,EAAE;aAC5B,IAAI,KAAK,GAAG,WAAW,CAAC,IAAI,CAAC,CAAC;aAC9B,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;UACzD;SACD,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;MACtC;KACD,qDAA4B,GAA5B,UAA6B,IAAY;SACvC,IAAI,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;SACzC,IAAI,SAAS,EAAE;aACb,SAAS,CAAC,SAAS,GAAG,CAAC,CAAC;aACxB,SAAS,CAAC,kBAAkB,GAAG,KAAK,CAAC;UACtC;MACF;KACD,sDAA6B,GAA7B,UAA8B,IAAY;SACxC,IAAI,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;SACzC,IAAI,SAAS,EAAE;aACb,SAAS,CAAC,SAAS,GAAG,CAAE,CAAC,CAAC;aAC1B,SAAS,CAAC,kBAAkB,GAAG,IAAI,CAAC;UACrC;MACF;KACD,wCAAe,GAAf,UAAgB,IAAY,EAAE,GAAW;SACvC,IAAI,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;SACzC,IAAI,SAAS,EAAE;aACb,SAAS,CAAC,GAAG,GAAG,GAAG,CAAC;aACpB,SAAS,CAAC,QAAQ,GAAG,CAAC,SAAS,CAAC,GAAG,GAAG,SAAS,CAAC,KAAK,IAAI,SAAS,CAAC,GAAG,CAAC;UACxE;MACF;KACD,6CAAoB,GAApB,UAAqB,IAAY,EAAE,QAAgB;SACjD,IAAI,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;SACzC,IAAI,SAAS,EAAE;aACb,SAAS,CAAC,QAAQ,GAAG,QAAQ,CAAC;aAC9B,SAAS,CAAC,GAAG,GAAG,CAAC,SAAS,CAAC,GAAG,GAAG,SAAS,CAAC,KAAK,IAAI,SAAS,CAAC,QAAQ,CAAC;UACxE;MACF;KACD,2CAAkB,GAAlB,UAAmB,IAAY,EAAE,MAAc;SAC7C,IAAI,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;SACzC,IAAI,SAAS,EAAE;aACb,SAAS,CAAC,MAAM,GAAG,MAAM,CAAC;UAC3B;MACF;KACD,yCAAgB,GAAhB,UAAiB,IAAY,EAAE,IAAY;SACzC,IAAI,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;SACzC,IAAI,SAAS,EAAE;aACb,SAAS,CAAC,IAAI,GAAG,IAAI,CAAC;UACvB;MACF;KACD,yCAAgB,GAAhB,UAAiB,IAAY;SAC3B,IAAI,IAAI,GAAG,CAAC,CAAC;SACb,IAAI,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;SACzC,IAAI,SAAS,EAAE;aACb,IAAI,GAAG,SAAS,CAAC,IAAI,CAAC;UACvB;SACD,OAAO,IAAI,CAAC;MACb;KACD,6CAAoB,GAApB,UAAqB,IAAY;SAC/B,IAAI,QAAQ,GAAG,CAAE,CAAC,CAAC;SACnB,IAAI,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;SACzC,IAAI,SAAS,EAAE;aACb,QAAQ,GAAG,SAAS,CAAC,QAAQ,CAAC;UAC/B;SACD,OAAO,QAAQ,CAAC;MACjB;KACD,sCAAa,GAAb,UAAc,IAAY;SACxB,IAAI,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;SACzC,IAAI,SAAS,EAAE;aACb,SAAS,CAAC,IAAI,GAAG,CAAC,CAAC;aACnB,SAAS,CAAC,MAAM,GAAG,IAAI,CAAC;UACzB;cAAM;aACL,OAAO,CAAC,IAAI,CAAC,kCAAkC,GAAG,IAAI,GAAG,iCAAiC,CAAC,CAAC;UAC7F;MACF;KACD,sCAAa,GAAb,UAAc,IAAY;SACxB,IAAI,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;SACzC,IAAI,SAAS,EAAE;aACb,SAAS,CAAC,MAAM,GAAG,KAAK,CAAC;UAC1B;MACF;KACD,+BAAM,GAAN,UAAO,KAAa;SAClB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAG,EAAE;aAC7D,IAAI,SAAS,GAAG,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;aACvC,IAAI,CAAE,SAAS,CAAC,MAAM;iBAAE,SAAS;aACjC,IAAI,SAAS,GAAG,SAAS,CAAC,QAAQ,GAAG,SAAS,CAAC,MAAM,CAAC;aACtD,SAAS,CAAC,IAAI,IAAI,SAAS,CAAC,SAAS,GAAG,KAAK,CAAC;aAC9C,IAAI,SAAS,CAAC,YAAY,EAAE;iBAC1B,IAAI,SAAS,CAAC,IAAI,GAAG,SAAS,CAAC,QAAQ,IAAI,SAAS,CAAC,IAAI,GAAG,CAAC,EAAE;qBAC7D,SAAS,CAAC,SAAS,IAAI,CAAE,CAAC,CAAC;qBAC3B,IAAI,SAAS,CAAC,IAAI,GAAG,SAAS,CAAC,QAAQ,EAAE;yBACvC,SAAS,CAAC,IAAI,GAAG,SAAS,CAAC,QAAQ,CAAC;yBACpC,SAAS,CAAC,kBAAkB,GAAG,IAAI,CAAC;sBACrC;qBACD,IAAI,SAAS,CAAC,IAAI,GAAG,CAAC,EAAE;yBACtB,SAAS,CAAC,IAAI,GAAG,CAAC,CAAC;yBACnB,SAAS,CAAC,kBAAkB,GAAG,KAAK,CAAC;sBACtC;kBACF;cACF;kBAAM;iBACL,SAAS,CAAC,IAAI,GAAG,SAAS,CAAC,IAAI,GAAG,SAAS,CAAC,QAAQ,CAAC;iBACrD,IAAI,SAAS,CAAC,IAAI,GAAG,CAAC;qBAAE,SAAS,CAAC,IAAI,IAAI,SAAS,CAAC,QAAQ,CAAC;cAC9D;aACD,IAAI,QAAQ,GAAG,SAAS,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,GAAG,SAAS,CAAC,EAAE,CAAC,EAAE,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;aAC9G,IAAI,MAAM,GAAG,SAAS,CAAC,MAAM,CAAC;aAC9B,IAAI,QAAQ,KAAK,SAAS,CAAC,YAAY,EAAE;iBACvC,IAAI,CAAC,qBAAqB,CAAC,SAAS,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;iBACpD,IAAI,CAAC,qBAAqB,CAAC,SAAS,CAAC,YAAY,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC;iBAChE,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;iBACzC,SAAS,CAAC,SAAS,GAAG,SAAS,CAAC,YAAY,CAAC;iBAC7C,SAAS,CAAC,YAAY,GAAG,QAAQ,CAAC;cACnC;aACD,IAAI,GAAG,GAAG,CAAC,SAAS,CAAC,IAAI,GAAG,SAAS,IAAI,SAAS,CAAC;aACnD,IAAI,SAAS,CAAC,kBAAkB;iBAAE,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC;aAChD,IAAI,SAAS,CAAC,YAAY,KAAK,SAAS,CAAC,SAAS,EAAE;iBAClD,IAAI,CAAC,qBAAqB,CAAC,SAAS,CAAC,YAAY,CAAC,GAAG,GAAG,GAAG,MAAM,CAAC;iBAClE,IAAI,CAAC,qBAAqB,CAAC,SAAS,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,IAAI,MAAM,CAAC;cACtE;kBAAM;iBACL,IAAI,CAAC,qBAAqB,CAAC,SAAS,CAAC,YAAY,CAAC,GAAG,MAAM,CAAC;cAC7D;UACF;MACF;KACH,qBAAC;CAAD,CA3KA,CAAoC,IAAI;;CCGxC;;;;AAIA;KAAyCA,uCAAY;KAGnD,6BAAY,MAAgB,EAAE,IAAQ,EAAE,KAAgB,EAAE,SAAa;SAAzC,qBAAA,EAAA,QAAQ;SAAE,sBAAA,EAAA,gBAAgB;SAAE,0BAAA,EAAA,aAAa;SAAvE,iBAqBC;;;;SAjBC,IAAI,QAAQ,GAAG,CAAC,CAAC;SACjB,IAAI,WAAW,GAAG,MAAM,CAAC,QAAQ,CAAC;SAClC,KAAK,WAAW,IAAI,WAAW,YAAY,QAAQ,GAAG;aACpD,QAAQ,GAAG,WAAW,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;UACzC;cAAM,KAAK,WAAW,IAAI,WAAW,YAAY,cAAc,GAAG;aACjE,QAAQ,GAAG,WAAW,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC;UAChD;;SAED,IAAI,QAAQ,GAAG,IAAI,cAAc,EAAE,CAAC;SACpC,IAAI,SAAS,GAAG,gBAAgB,CAAC,QAAQ,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;SACtD,QAAQ,CAAC,YAAY,CAAC,UAAU,EAAE,SAAS,CAAC,CAAC;SAC7C,QAAA,kBAAM,QAAQ,EAAE,IAAI,iBAAiB,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,SAAS,EAAE,SAAS,EAAE,CAAC,CAAC,SAAC;;SAE/E,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC;SACrB,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC;SACjB,KAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;SAC9B,KAAI,CAAC,MAAM,EAAE,CAAC;;MACf;KACD,oCAAM,GAAN;SACE,IAAI,EAAE,GAAG,IAAI,OAAO,EAAE,CAAC;SACvB,IAAI,EAAE,GAAG,IAAI,OAAO,EAAE,CAAC;SACvB,IAAI,YAAY,GAAG,IAAI,OAAO,EAAE,CAAC;;SAE/B,IAAI,IAAI,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;SAC3B,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;SACpC,YAAY,CAAC,eAAe,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;SACtD,IAAI,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC;SAC1C,IAAI,QAAQ,GAAI,IAAI,CAAC,QAA2B,CAAC,UAAU,CAAC,QAAQ,CAAC;;SAErE,IAAI,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC;SACvC,KAAK,WAAW,IAAI,WAAW,YAAY,QAAQ,GAAG;aACpD,IAAI,QAAQ,GAAG,WAAW,CAAC,QAAQ,CAAC;aACpC,IAAI,KAAK,GAAG,WAAW,CAAC,KAAK,CAAC;aAC9B,IAAI,GAAG,GAAG,CAAC,CAAC;aACZ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAG,EAAE;iBAC7C,IAAI,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;iBACpB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAG,EAAE;qBAC5D,IAAI,MAAM,GAAG,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;qBACrC,IAAI,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;qBACnC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC;qBAC1C,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC,SAAS,EAAE,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;qBACzF,QAAQ,CAAC,MAAM,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;qBACvC,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;qBACd,QAAQ,CAAC,MAAM,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;qBACvC,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;kBACf;cACF;UACF;cAAM,KAAK,WAAW,IAAI,WAAW,YAAY,cAAc,GAAG;aACjE,IAAI,MAAM,GAAG,WAAW,CAAC,UAAU,CAAC,QAAQ,CAAC;aAC7C,IAAI,OAAO,GAAG,WAAW,CAAC,UAAU,CAAC,MAAM,CAAC;aAC5C,IAAI,GAAG,GAAG,CAAC,CAAC;;aAEZ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAG,EAAE;iBAC/C,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC;iBACjF,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;iBAC1D,EAAE,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC,SAAS,EAAE,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;iBAC5E,QAAQ,CAAC,MAAM,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;iBACvC,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;iBACd,QAAQ,CAAC,MAAM,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;iBACvC,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;cACf;UACF;SACD,QAAQ,CAAC,WAAW,GAAG,IAAI,CAAC;SAC5B,OAAO,IAAI,CAAC;;MAEf;KACH,0BAAC;CAAD,CAzEA,CAAyC,YAAY;;CCLrD;;;;;AAKA;KAAqCA,mCAAQ;KAG3C,yBAAY,KAAgB;SAA5B,YACE,iBAAO,SA0BR;SAzBC,KAAI,CAAC,KAAK,GAAG,KAAK,CAAC;SACnB,KAAI,CAAC,KAAK,CAAC,iBAAiB,EAAE,CAAC;SAC/B,KAAI,CAAC,MAAM,GAAG,KAAK,CAAC,WAAW,CAAC;SAChC,KAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;SAC9B,IAAI,QAAQ,GAAG,IAAI,cAAc,EAAE,CAAC;SACpC,IAAI,SAAS,GAAG;aACd,CAAC,EAAE,CAAC,EAAE,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC;aACtB,CAAC,EAAE,CAAC,EAAE,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC;aACtB,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAI,CAAC,EAAI,CAAC;aACtB,CAAC,EAAE,CAAC,EAAE,CAAC,EAAI,CAAC,EAAI,CAAC,EAAI,CAAC;aACtB,CAAC,EAAE,CAAC,EAAE,CAAC,EAAI,CAAC,EAAE,CAAE,CAAC,EAAI,CAAC;UACvB,CAAC;SACF,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAG,EAAE,CAAC,EAAG,EAAE;aAChD,IAAI,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;aAC/B,IAAI,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;aAC/B,SAAS,CAAC,IAAI,CACZ,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAC7B,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,CAC9B,CAAC;UACH;SACD,QAAQ,CAAC,YAAY,CAAC,UAAU,EAAE,gBAAgB,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC;SAClE,IAAI,QAAQ,GAAG,IAAI,iBAAiB,CAAC,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC,CAAC;SACrD,KAAI,CAAC,IAAI,GAAG,IAAI,YAAY,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;SACjD,KAAI,CAAC,GAAG,CAAC,KAAI,CAAC,IAAI,CAAC,CAAC;SACpB,KAAI,CAAC,MAAM,EAAE,CAAC;;MACf;KACD,iCAAO,GAAP;SACE,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;SAC7B,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;MAC9B;KACD,gCAAM,GAAN;SACE,IAAI,MAAM,GAAG,IAAI,OAAO,EAAE,CAAC;SAC3B,IAAI,OAAO,GAAG,IAAI,OAAO,EAAE,CAAC;;SAE1B,IAAI,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC;SAClE,IAAI,SAAS,GAAG,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;SACxD,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,SAAS,EAAE,SAAS,EAAE,UAAU,CAAC,CAAC;SACtD,MAAM,CAAC,qBAAqB,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;SACrD,OAAO,CAAC,qBAAqB,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;SAC7D,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC;SACtC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;;MAExF;KACH,sBAAC;CAAD,CAhDA,CAAqC,QAAQ;;CCF7C;;;;;;AAMA;KAAoCA,kCAAY;KAG9C,wBAAY,MAAgB;SAA5B,iBAoBC;SAnBC,IAAM,KAAK,GAAW,cAAc,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;SACzD,IAAM,QAAQ,GAAa,IAAI,QAAQ,EAAE,CAAC;SAC1C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAG,EAAE;aACtC,IAAM,IAAI,GAAS,KAAK,CAAC,CAAC,CAAC,CAAC;aAC5B,KAAK,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,YAAY,IAAI,GAAG;iBAChD,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,OAAO,EAAE,CAAC,CAAC;iBACtC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,OAAO,EAAE,CAAC,CAAC;iBACtC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;iBACzC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;cAC1C;UACF;SACD,QAAQ,CAAC,OAAO,GAAG,IAAI,CAAC;SACxB,IAAM,QAAQ,GAAG,IAAI,iBAAiB,CAAC,EAAE,YAAY,EAAElB,kBAAU,CAAC,MAAM,EAAE,SAAS,EAAE,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE,WAAW,EAAE,IAAI,EAAE,CAAC,CAAC;SACpI,QAAA,kBAAM,QAAQ,EAAE,QAAQ,CAAC,SAAC;SAC1B,KAAI,CAAC,KAAK,GAAG,KAAK,CAAC;SACnB,KAAI,CAAC,IAAI,GAAG,MAAM,CAAC;SACnB,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC,WAAW,CAAC;SACjC,KAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;SAC9B,KAAI,CAAC,MAAM,EAAE,CAAC;;MACf;KACM,0BAAW,GAAlB,UAAmB,MAAgB;SACjC,IAAM,QAAQ,GAAW,EAAE,CAAC;SAC5B,KAAK,MAAM,IAAI,MAAM,YAAY,IAAI,GAAG;aACtC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;UACvB;SACD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAG,EAAE;aAChD,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,cAAc,CAAC,WAAW,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UAC/E;SACD,OAAO,QAAQ,CAAC;MACjB;KACD,qCAAY,GAAZ,UAAa,MAAgB;SAC3B,OAAO,cAAc,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;MAC3C;KACD,+BAAM,GAAN;SACE,IAAM,QAAQ,GAA8B,IAAI,CAAC,QAAQ,CAAC;SAC1D,IAAI,QAAQ,YAAY,QAAQ,EAAE;aAChC,IAAM,cAAc,GAAG,IAAI,OAAO,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;aACvE,IAAM,UAAU,GAAG,IAAI,OAAO,EAAE,CAAC;aACjC,IAAI,CAAC,GAAG,CAAC,CAAC;aACV,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAG,EAAE;iBAC3C,IAAM,IAAI,GAAS,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;iBACjC,KAAK,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,YAAY,IAAI,GAAG;qBAChD,UAAU,CAAC,gBAAgB,CAAC,cAAc,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;qBAC9D,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,qBAAqB,CAAC,UAAU,CAAC,CAAC;qBACvD,UAAU,CAAC,gBAAgB,CAAC,cAAc,EAAE,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;qBACrE,QAAQ,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,qBAAqB,CAAC,UAAU,CAAC,CAAC;qBAC3D,CAAC,IAAI,CAAC,CAAC;kBACR;cACF;aACD,QAAQ,CAAC,kBAAkB,GAAG,IAAI,CAAC;aACnC,QAAQ,CAAC,qBAAqB,EAAE,CAAC;UAClC;MACF;KACH,qBAAC;CAAD,CAzDA,CAAoC,YAAY;;CCZhD;;;;AAIA;KAAsCkB,oCAAI;KAExC,0BAAY,KAAiB,EAAE,UAAkB;SAAjD,iBAsBC;SArBC,KAAK,CAAC,iBAAiB,EAAE,CAAC;SAC1B,IAAI,QAAQ,GAAG,IAAI,oBAAoB,CAAC,UAAU,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;SAC1D,IAAI,QAAQ,GAAG,IAAI,iBAAiB,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC,CAAC;SACtE,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,cAAc,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;SACjE,QAAA,kBAAM,QAAQ,EAAE,QAAQ,CAAC,SAAC;SAC1B,KAAI,CAAC,KAAK,GAAG,KAAK,CAAC;SACnB,KAAI,CAAC,MAAM,GAAG,KAAI,CAAC,KAAK,CAAC,WAAW,CAAC;SACrC,KAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;;;;;;;;;;;;;;;MAc/B;KACD,kCAAO,GAAP;SACE,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;SACxB,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;MACzB;KACD,iCAAM,GAAN;SACE,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;;;;;;;;;;MAUjF;KACH,uBAAC;CAAD,CAzCA,CAAsC,IAAI;;CCA1C;;;;AAIA;KAA2CA,yCAAQ;KAIjD,+BAAY,KAAU,EAAE,UAAkB;SAA1C,YACE,iBAAO,SAeR;SAdC,KAAI,CAAC,KAAK,GAAG,KAAK,CAAC;SACnB,KAAI,CAAC,KAAK,CAAC,iBAAiB,EAAE,CAAC;SAC/B,KAAI,CAAC,MAAM,GAAG,KAAK,CAAC,WAAW,CAAC;SAChC,KAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;SAC9B,KAAI,CAAC,MAAM,GAAG,CAAE,IAAI,KAAK,EAAE,EAAE,IAAI,KAAK,EAAE,CAAE,CAAC;SAC3C,IAAI,QAAQ,GAAG,IAAI,cAAc,CAAC,UAAU,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;SACpD,QAAQ,CAAC,OAAO,CAAC,CAAE,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;SAChC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAG,EAAE;aACpC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,KAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;UACtD;SACD,IAAI,QAAQ,GAAG,IAAI,iBAAiB,CAAC,EAAE,YAAY,EAAElB,kBAAU,CAAC,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC;SACzF,KAAI,CAAC,WAAW,GAAG,IAAI,IAAI,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;SAChD,KAAI,CAAC,GAAG,CAAC,KAAI,CAAC,WAAW,CAAC,CAAC;SAC3B,KAAI,CAAC,MAAM,EAAE,CAAC;;MACf;KACD,uCAAO,GAAP;SACE,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;SACpC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;MACrC;KACD,sCAAM,GAAN;SACE,IAAI,MAAM,GAAG,IAAI,OAAO,EAAE,CAAC;;SAEzB,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;SAC3E,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;SACjF,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,qBAAqB,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC;SACtF,IAAI,CAAC,WAAW,CAAC,QAA2B,CAAC,gBAAgB,GAAG,IAAI,CAAC;;MAEzE;KACH,4BAAC;CAAD,CAlCA,CAA2C,QAAQ;;CCNnD;;;AAGA;KAAgCkB,8BAAY;KAC1C,oBAAY,IAAY,EAAE,SAAa,EAAE,MAAiB,EAAE,MAAiB;SAAnD,0BAAA,EAAA,aAAa;SAAE,uBAAA,EAAA,iBAAiB;SAAE,uBAAA,EAAA,iBAAiB;SAA7E,iBAoBC;SAnBC,IAAM,OAAO,GAAG,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC;SAClC,IAAM,OAAO,GAAG,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC;SAClC,IAAI,MAAM,GAAG,SAAS,GAAG,CAAC,CAAC;SAC3B,IAAI,IAAI,GAAG,CAAC,IAAI,GAAG,CAAC,IAAI,SAAS,CAAC;SAClC,IAAI,QAAQ,GAAG,EAAE,EAAE,MAAM,GAAa,EAAE,CAAC;SACzC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAE,IAAI,EAAE,CAAC,IAAI,SAAS,EAAE,CAAC,EAAG,EAAE,CAAC,IAAI,IAAI,EAAE;aAClE,QAAQ,CAAC,IAAI,CAAC,CAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;aACxC,QAAQ,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;aACxC,IAAI,KAAK,GAAG,CAAC,KAAK,MAAM,GAAG,OAAO,GAAG,OAAO,CAAC;aAC7C,KAAK,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;aAAC,CAAC,IAAI,CAAC,CAAC;aACjC,KAAK,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;aAAC,CAAC,IAAI,CAAC,CAAC;aACjC,KAAK,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;aAAC,CAAC,IAAI,CAAC,CAAC;aACjC,KAAK,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;aAAC,CAAC,IAAI,CAAC,CAAC;UAClC;SACD,IAAI,QAAQ,GAAG,IAAI,cAAc,EAAE,CAAC;SACpC,QAAQ,CAAC,YAAY,CAAC,UAAU,EAAE,gBAAgB,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC;SACjE,QAAQ,CAAC,YAAY,CAAC,OAAO,EAAE,gBAAgB,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC;SAC5D,IAAI,QAAQ,GAAG,IAAI,iBAAiB,CAAC,EAAE,YAAY,EAAElB,kBAAU,CAAC,MAAM,EAAE,CAAC,CAAC;SAC1E,QAAA,kBAAM,QAAQ,EAAE,QAAQ,CAAC,SAAC;;MAC3B;KACD,8BAAS,GAAT;SACE,OAAO,CAAC,KAAK,CAAC,0FAA0F,CAAC,CAAC;MAC3G;KACH,iBAAC;CAAD,CAzBA,CAAgC,YAAY;;CCD5C;;;;AAIA;KAAuCkB,qCAAY;KAGjD,2BAAY,MAAgB,EAAE,IAAgB,EAAE,KAAwB,EAAE,SAAqB;SAAjE,qBAAA,EAAA,QAAgB;SAAE,sBAAA,EAAA,gBAAwB;SAAE,0BAAA,EAAA,aAAqB;SAA/F,iBAsBC;;;;;SAjBC,IAAI,QAAQ,GAAG,CAAC,CAAC;SACjB,IAAI,WAAW,GAAG,MAAM,CAAC,QAAQ,CAAC;SAClC,KAAK,WAAW,IAAI,WAAW,YAAY,QAAQ,GAAG;aACpD,QAAQ,GAAG,WAAW,CAAC,KAAK,CAAC,MAAM,CAAC;UACrC;cAAM;aACL,OAAO,CAAC,IAAI,CAAC,oGAAoG,CAAC,CAAC;UACpH;;SAED,IAAI,QAAQ,GAAG,IAAI,cAAc,EAAE,CAAC;SACpC,IAAI,SAAS,GAAG,gBAAgB,CAAC,QAAQ,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;SACtD,QAAQ,CAAC,YAAY,CAAC,UAAU,EAAE,SAAS,CAAC,CAAC;SAC7C,QAAA,kBAAM,QAAQ,EAAE,IAAI,iBAAiB,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,SAAS,EAAE,SAAS,EAAE,CAAC,CAAC,SAAC;;SAE/E,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC;SACrB,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC;SACjB,KAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;SAC9B,KAAI,CAAC,MAAM,EAAE,CAAC;;MACf;KACD,kCAAM,GAAN;SACE,IAAI,EAAE,GAAG,IAAI,OAAO,EAAE,CAAC;SACvB,IAAI,EAAE,GAAG,IAAI,OAAO,EAAE,CAAC;SACvB,IAAI,YAAY,GAAG,IAAI,OAAO,EAAE,CAAC;;SAE/B,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;SACpC,YAAY,CAAC,eAAe,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;SACtD,IAAI,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC;SAC1C,IAAI,QAAQ,GAAI,IAAI,CAAC,QAA2B,CAAC,UAAU,CAAC,QAAQ,CAAC;;SAErE,IAAI,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC;SACvC,IAAI,QAAQ,GAAI,WAAwB,CAAC,QAAQ,CAAC;SAClD,IAAI,KAAK,GAAI,WAAwB,CAAC,KAAK,CAAC;SAC5C,IAAI,GAAG,GAAG,CAAC,CAAC;SACZ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAG,EAAE;aAC7C,IAAI,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;aACpB,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;aACzB,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;kBACtB,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;kBACrB,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;kBACrB,YAAY,CAAC,CAAC,CAAC;kBACf,YAAY,CAAC,WAAW,CAAC,CAAC;aAC7B,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC,SAAS,EAAE,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;aACzF,QAAQ,CAAC,MAAM,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;aACvC,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;aACd,QAAQ,CAAC,MAAM,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;aACvC,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;UACf;SACD,QAAQ,CAAC,WAAW,GAAG,IAAI,CAAC;SAC5B,OAAO,IAAI,CAAC;;MAEf;KACH,wBAAC;CAAD,CA1DA,CAAuC,YAAY;;CCLnD;;;;;AAKA;KAA4CA,0CAAQ;KAElD,gCAAY,KAAY,EAAE,IAAgB;SAAhB,qBAAA,EAAA,QAAgB;SAA1C,YACE,iBAAO,SAmBR;SAlBC,KAAI,CAAC,KAAK,GAAG,KAAK,CAAC;SACnB,KAAI,CAAC,KAAK,CAAC,iBAAiB,EAAE,CAAC;SAC/B,KAAI,CAAC,MAAM,GAAG,KAAK,CAAC,WAAW,CAAC;SAChC,KAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;SAC9B,IAAI,QAAQ,GAAG,IAAI,cAAc,EAAE,CAAC;SACpC,QAAQ,CAAC,YAAY,CAAC,UAAU,EAAE,gBAAgB,CAAC;aACjD,CAAE,IAAI,EAAI,IAAI,EAAE,CAAC;aACf,IAAI,EAAI,IAAI,EAAE,CAAC;aACf,IAAI,EAAE,CAAE,IAAI,EAAE,CAAC;aACjB,CAAE,IAAI,EAAE,CAAE,IAAI,EAAE,CAAC;aACjB,CAAE,IAAI,EAAI,IAAI,EAAE,CAAC;UAClB,EAAE,CAAC,CAAC,CAAC,CAAC;SACP,IAAI,QAAQ,GAAG,IAAI,iBAAiB,CAAC,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC,CAAC;SACrD,KAAI,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC,CAAC;SACvC,QAAQ,GAAG,IAAI,cAAc,EAAE,CAAC;SAChC,QAAQ,CAAC,YAAY,CAAC,UAAU,EAAE,gBAAgB,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;SAC3E,KAAI,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC,CAAC;SACvC,KAAI,CAAC,MAAM,EAAE,CAAC;;MACf;KACD,wCAAO,GAAP;SACE,IAAI,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;SAClC,IAAI,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;SAClC,UAAU,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;SAC9B,UAAU,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;SAC9B,UAAU,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;SAC9B,UAAU,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;MAC/B;KACD,uCAAM,GAAN;SACE,IAAI,EAAE,GAAG,IAAI,OAAO,EAAE,CAAC;SACvB,IAAI,EAAE,GAAG,IAAI,OAAO,EAAE,CAAC;SACvB,IAAI,EAAE,GAAG,IAAI,OAAO,EAAE,CAAC;;SAErB,EAAE,CAAC,qBAAqB,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;SACjD,EAAE,CAAC,qBAAqB,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;SACxD,EAAE,CAAC,UAAU,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;SACtB,IAAI,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;SAClC,IAAI,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;SAClC,UAAU,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;SACtB,UAAU,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;SACtF,UAAU,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;SACtB,UAAU,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,CAAC,MAAM,EAAE,CAAC;;MAEpC;KACH,6BAAC;CAAD,CA/CA,CAA4C,QAAQ;;CCLpD;;;;;;;;AAQA;KAAkCA,gCAAY;KAG5C,sBAAY,MAAc;SAA1B,iBA6DC;SA5DC,IAAI,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC;SAC9B,IAAI,QAAQ,GAAG,IAAI,iBAAiB,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE,YAAY,EAAElB,kBAAU,CAAC,IAAI,EAAE,CAAC,CAAC;SACzF,IAAI,QAAQ,GAAG,EAAE,CAAC;;SAElB,IAAI,UAAU,GAAG,QAAQ,CAAC;SAC1B,IAAI,OAAO,GAAG,QAAQ,CAAC;SACvB,IAAI,KAAK,GAAG,QAAQ,CAAC;SACrB,IAAI,SAAS,GAAG,QAAQ,CAAC;SACzB,IAAI,QAAQ,GAAG,QAAQ,CAAC;;SAExB,OAAO,CAAC,IAAI,EAAE,IAAI,EAAE,UAAU,CAAC,CAAC;SAChC,OAAO,CAAC,IAAI,EAAE,IAAI,EAAE,UAAU,CAAC,CAAC;SAChC,OAAO,CAAC,IAAI,EAAE,IAAI,EAAE,UAAU,CAAC,CAAC;SAChC,OAAO,CAAC,IAAI,EAAE,IAAI,EAAE,UAAU,CAAC,CAAC;;SAEhC,OAAO,CAAC,IAAI,EAAE,IAAI,EAAE,UAAU,CAAC,CAAC;SAChC,OAAO,CAAC,IAAI,EAAE,IAAI,EAAE,UAAU,CAAC,CAAC;SAChC,OAAO,CAAC,IAAI,EAAE,IAAI,EAAE,UAAU,CAAC,CAAC;SAChC,OAAO,CAAC,IAAI,EAAE,IAAI,EAAE,UAAU,CAAC,CAAC;;SAEhC,OAAO,CAAC,IAAI,EAAE,IAAI,EAAE,UAAU,CAAC,CAAC;SAChC,OAAO,CAAC,IAAI,EAAE,IAAI,EAAE,UAAU,CAAC,CAAC;SAChC,OAAO,CAAC,IAAI,EAAE,IAAI,EAAE,UAAU,CAAC,CAAC;SAChC,OAAO,CAAC,IAAI,EAAE,IAAI,EAAE,UAAU,CAAC,CAAC;;SAEhC,OAAO,CAAC,GAAG,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;SAC5B,OAAO,CAAC,GAAG,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;SAC5B,OAAO,CAAC,GAAG,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;SAC5B,OAAO,CAAC,GAAG,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;;SAE5B,OAAO,CAAC,IAAI,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;SAC3B,OAAO,CAAC,IAAI,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;SAC3B,OAAO,CAAC,IAAI,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;;SAE3B,OAAO,CAAC,GAAG,EAAE,GAAG,EAAE,SAAS,CAAC,CAAC;SAC7B,OAAO,CAAC,GAAG,EAAE,GAAG,EAAE,QAAQ,CAAC,CAAC;;SAE5B,OAAO,CAAC,KAAK,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC;SAChC,OAAO,CAAC,KAAK,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC;SAChC,OAAO,CAAC,KAAK,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC;SAChC,OAAO,CAAC,KAAK,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC;SAChC,SAAS,OAAO,CAAC,CAAS,EAAE,CAAS,EAAE,GAAW;aAChD,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;aACjB,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;UAClB;SACD,SAAS,QAAQ,CAAC,EAAU,EAAE,GAAW;aACvC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,OAAO,EAAE,CAAC,CAAC;aACtC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;aACrC,IAAI,QAAQ,CAAC,EAAE,CAAC,KAAK,SAAS,EAAE;iBAC9B,QAAQ,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC;cACnB;aACD,QAAQ,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;UACjD;SACD,QAAA,kBAAM,QAAQ,EAAE,QAAQ,CAAC,SAAC;SAC1B,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC;SACrB,KAAI,CAAC,MAAM,CAAC,sBAAsB,EAAE,CAAC;SACrC,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC,WAAW,CAAC;SACjC,KAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;SAC9B,KAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;SACzB,KAAI,CAAC,MAAM,EAAE,CAAC;;MACf;KACD,6BAAM,GAAN;SACE,IAAI,QAAa,EAAE,QAAa,CAAC;SACjC,IAAI,MAAM,GAAG,IAAI,OAAO,EAAE,CAAC;SAC3B,IAAI,MAAM,GAAG,IAAI,MAAM,EAAE,CAAC;SAC1B,SAAS,QAAQ,CAAC,KAAa,EAAE,CAAS,EAAE,CAAS,EAAE,CAAS;aAC9D,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;aACtC,IAAI,MAAM,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC;aAC7B,IAAI,MAAM,KAAK,SAAS,EAAE;iBACxB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAG,EAAE;qBAChD,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;kBAC3C;cACF;UACF;;SAEC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;SACzB,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;SACzB,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;;;SAGjB,MAAM,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC;;SAE3D,QAAQ,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,CAAC,CAAC;SACzB,QAAQ,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,EAAG,CAAC,CAAC,CAAC;;SAExB,QAAQ,CAAC,IAAI,EAAE,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAE,CAAC,CAAC,CAAC;SAC9B,QAAQ,CAAC,IAAI,EAAI,CAAC,EAAE,CAAE,CAAC,EAAE,CAAE,CAAC,CAAC,CAAC;SAC9B,QAAQ,CAAC,IAAI,EAAE,CAAE,CAAC,EAAI,CAAC,EAAE,CAAE,CAAC,CAAC,CAAC;SAC9B,QAAQ,CAAC,IAAI,EAAI,CAAC,EAAI,CAAC,EAAE,CAAE,CAAC,CAAC,CAAC;;SAE9B,QAAQ,CAAC,IAAI,EAAE,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,CAAC,CAAC;SAC5B,QAAQ,CAAC,IAAI,EAAI,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,CAAC,CAAC;SAC5B,QAAQ,CAAC,IAAI,EAAE,CAAE,CAAC,EAAI,CAAC,EAAE,CAAC,CAAC,CAAC;SAC5B,QAAQ,CAAC,IAAI,EAAI,CAAC,EAAI,CAAC,EAAE,CAAC,CAAC,CAAC;;SAE5B,QAAQ,CAAC,IAAI,EAAI,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAE,CAAC,CAAC,CAAC;SACxC,QAAQ,CAAC,IAAI,EAAE,CAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAE,CAAC,CAAC,CAAC;SACxC,QAAQ,CAAC,IAAI,EAAU,CAAC,EAAE,CAAC,GAAG,CAAC,EAAI,CAAE,CAAC,CAAC,CAAC;;SAExC,QAAQ,CAAC,KAAK,EAAE,CAAE,CAAC,EAAI,CAAC,EAAE,CAAC,CAAC,CAAC;SAC7B,QAAQ,CAAC,KAAK,EAAI,CAAC,EAAI,CAAC,EAAE,CAAC,CAAC,CAAC;SAC7B,QAAQ,CAAC,KAAK,EAAI,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,CAAC,CAAC;SAC7B,QAAQ,CAAC,KAAK,EAAI,CAAC,EAAI,CAAC,EAAE,CAAC,CAAC,CAAC;SAC7B,QAAQ,CAAC,KAAK,EAAE,CAAE,CAAC,EAAI,CAAC,EAAE,CAAE,CAAC,CAAC,CAAC;SAC/B,QAAQ,CAAC,KAAK,EAAI,CAAC,EAAI,CAAC,EAAE,CAAE,CAAC,CAAC,CAAC;SAC/B,QAAQ,CAAC,KAAK,EAAI,CAAC,EAAE,CAAE,CAAC,EAAE,CAAE,CAAC,CAAC,CAAC;SAC/B,QAAQ,CAAC,KAAK,EAAI,CAAC,EAAI,CAAC,EAAE,CAAE,CAAC,CAAC,CAAC;SAC/B,QAAQ,CAAC,kBAAkB,GAAG,IAAI,CAAC;;MAEtC;KACH,mBAAC;CAAD,CAlHA,CAAkC,YAAY;;CCV9C;;;CAGA;AACA;KAAuCkB,qCAAI;KAGzC,2BAAY,MAAgB,EAAE,KAAwB;SAAxB,sBAAA,EAAA,gBAAwB;SAAtD,YACE,kBAAM,IAAI,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,iBAAiB,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC,SAG1F;SAFC,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC;SACrB,KAAI,CAAC,GAAG,GAAG,IAAI,IAAI,EAAE,CAAC;;MACvB;KACD,kCAAM,GAAN;SACE,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SACpC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SAC7B,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;MACnC;KACH,wBAAC;CAAD,CAbA,CAAuC,IAAI;;CCH3C;;;AAGA;KAA+BA,6BAAY;KACzC,mBAAY,MAAgB,EAAE,KAAwB;SAAxB,sBAAA,EAAA,gBAAwB;SAAtD,iBAUC;SATC,IAAM,OAAO,GAAG,IAAI,WAAW,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;SAC1G,IAAM,SAAS,GAAG,IAAI,YAAY,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;SAC1C,IAAM,QAAQ,GAAG,IAAI,cAAc,EAAE,CAAC;SACtC,QAAQ,CAAC,QAAQ,CAAC,IAAI,eAAe,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,CAAC;SACnD,QAAQ,CAAC,YAAY,CAAC,UAAU,EAAE,IAAI,eAAe,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC;SACrE,QAAA,kBAAM,QAAQ,EAAE,IAAI,iBAAiB,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC,SAAC;SACzD,IAAI,MAAM,KAAK,SAAS,EAAE;aACxB,KAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;UACrB;;MACF;KACD,0BAAM,GAAN,UAAO,MAAgB;SACrB,IAAM,GAAG,GAAG,IAAI,IAAI,EAAE,CAAC;;SAErB,KAAK,MAAM,IAAI,MAAM,YAAY,IAAI,GAAG;aACtC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;UAClB;cAAM;aACL,GAAG,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;UAC3B;SACD,IAAI,GAAG,CAAC,OAAO,EAAE;aAAE,OAAO;SAC1B,IAAM,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC;SACpB,IAAM,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC;;;;;;;;;;;;;;;SAepB,IAAM,QAAQ,GAAI,IAAI,CAAC,QAA2B,CAAC,UAAU,CAAC,QAAQ,CAAC;SACvE,IAAM,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC;SAC7B,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;SAAC,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;SAAC,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;SACrD,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;SAAC,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;SAAC,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;SACrD,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;SAAC,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;SAAC,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;SACrD,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;SAAC,KAAK,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;SAAC,KAAK,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;SACvD,KAAK,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;SAAC,KAAK,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;SAAC,KAAK,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;SACxD,KAAK,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;SAAC,KAAK,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;SAAC,KAAK,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;SACxD,KAAK,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;SAAC,KAAK,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;SAAC,KAAK,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;SACxD,KAAK,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;SAAC,KAAK,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;SAAC,KAAK,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;SACxD,QAAQ,CAAC,WAAW,GAAG,IAAI,CAAC;SAC5B,IAAI,CAAC,QAAQ,CAAC,qBAAqB,EAAE,CAAC;;MAEzC;KACH,gBAAC;CAAD,CAnDA,CAA+B,YAAY;;CCe3C,IAAM,YAAY,GAAG,IAAI,cAAc,EAAE,CAAC;CAC1C,YAAY,CAAC,YAAY,CAAC,UAAU,EAAE,gBAAgB,CAAC,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,EAAE,CAAC,CAAC,CAAC,CAAC;CACjF,IAAM,YAAY,GAAG,IAAI,sBAAsB,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;CACjE,YAAY,CAAC,SAAS,CAAC,CAAC,EAAE,CAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AACpC;KAAiCA,+BAAQ;KAGvC,qBAAY,GAAY,EAAE,MAAe,EAAE,MAAe,EAAE,KAAc,EAAE,UAAmB,EAAE,SAAkB;SAAnH;;SAEE,iBAAO,SAcR;SAbC,IAAI,KAAK,KAAK,SAAS;aAAE,KAAK,GAAG,QAAQ,CAAC;SAC1C,IAAI,MAAM,KAAK,SAAS;aAAE,MAAM,GAAG,CAAC,CAAC;SACrC,IAAI,UAAU,KAAK,SAAS;aAAE,UAAU,GAAG,GAAG,GAAG,MAAM,CAAC;SACxD,IAAI,SAAS,KAAK,SAAS;aAAE,SAAS,GAAG,GAAG,GAAG,UAAU,CAAC;SAC1D,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SAC3B,KAAI,CAAC,IAAI,GAAG,IAAI,IAAI,CAAC,YAAY,EAAE,IAAI,iBAAiB,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;SAC5E,KAAI,CAAC,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;SACnC,KAAI,CAAC,GAAG,CAAC,KAAI,CAAC,IAAI,CAAC,CAAC;SACpB,KAAI,CAAC,IAAI,GAAG,IAAI,IAAI,CAAC,YAAY,EAAE,IAAI,iBAAiB,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;SAC5E,KAAI,CAAC,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;SACnC,KAAI,CAAC,GAAG,CAAC,KAAI,CAAC,IAAI,CAAC,CAAC;SACpB,KAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;SACvB,KAAI,CAAC,SAAS,CAAC,MAAM,EAAE,UAAU,EAAE,SAAS,CAAC,CAAC;;MAC/C;KACD,kCAAY,GAAZ,UAAa,GAAY;SACvB,IAAM,IAAI,GAAG,IAAI,OAAO,EAAE,CAAC;;;SAGzB,IAAI,GAAG,CAAC,CAAC,GAAG,OAAO,EAAE;aACnB,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;UACjC;cAAM,IAAI,GAAG,CAAC,CAAC,GAAG,CAAE,OAAO,EAAE;aAC5B,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;UACjC;cAAM;aACL,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAE,GAAG,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC;aACxC,IAAM,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;aACjC,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;UACjD;;MAEJ;KACD,+BAAS,GAAT,UAAU,MAAc,EAAE,UAAkB,EAAE,SAAiB;SAC7D,IAAI,UAAU,KAAK,SAAS;aAAE,UAAU,GAAG,GAAG,GAAG,MAAM,CAAC;SACxD,IAAI,SAAS,KAAK,SAAS;aAAE,SAAS,GAAG,GAAG,GAAG,UAAU,CAAC;SAC1D,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,MAAM,GAAG,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC;SAC5D,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC;SACzB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,SAAS,EAAE,UAAU,EAAE,SAAS,CAAC,CAAC;SACtD,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,MAAM,CAAC;SAC9B,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC;MAC1B;KACD,8BAAQ,GAAR,UAAS,KAAa;SACpB,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SACrC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;MACtC;KACH,kBAAC;CAAD,CAhDA,CAAiC,QAAQ;;CCvBzC;;;;AAIA;KAAgCA,8BAAY;KAC1C,oBAAY,IAAgB;SAAhB,qBAAA,EAAA,QAAgB;SAA5B,iBAgBC;SAfC,IAAM,QAAQ,GAAG,IAAI,YAAY,CAAC;aAChC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAG,IAAI,EAAE,CAAC,EAAE,CAAC;aACpB,CAAC,EAAE,CAAC,EAAE,CAAC,EAAG,CAAC,EAAE,IAAI,EAAE,CAAC;aACpB,CAAC,EAAE,CAAC,EAAE,CAAC,EAAG,CAAC,EAAE,CAAC,EAAE,IAAI;UACrB,CAAC,CAAC;SACH,IAAM,MAAM,GAAG,IAAI,YAAY,CAAC;aAC9B,CAAC,EAAE,CAAC,EAAE,CAAC,EAAG,CAAC,EAAE,GAAG,EAAE,CAAC;aACnB,CAAC,EAAE,CAAC,EAAE,CAAC,EAAG,GAAG,EAAE,CAAC,EAAE,CAAC;aACnB,CAAC,EAAE,CAAC,EAAE,CAAC,EAAG,CAAC,EAAE,GAAG,EAAE,CAAC;UACpB,CAAC,CAAC;SACH,IAAM,QAAQ,GAAG,IAAI,cAAc,EAAE,CAAC;SACtC,QAAQ,CAAC,YAAY,CAAC,UAAU,EAAE,IAAI,eAAe,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC;SACpE,QAAQ,CAAC,YAAY,CAAC,OAAO,EAAE,IAAI,eAAe,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC;SAC/D,IAAM,QAAQ,GAAG,IAAI,iBAAiB,CAAC,EAAE,YAAY,EAAElB,kBAAU,CAAC,MAAM,EAAE,CAAC,CAAC;SAC5E,QAAA,kBAAM,QAAQ,EAAE,QAAQ,CAAC,SAAC;;MAC3B;KACH,iBAAC;CAAD,CAlBA,CAAgC,YAAY;;CCP5C;;;;;;;;;;AAUA;KAAsCkB,oCAAc;KAKlD,0BAAY,CAAiB;SAAjB,kBAAA,EAAA,MAAiB;SAA7B,YACE,iBAAO,SAGR;SAND,YAAM,GAAY,KAAK,CAAC;SACxB,aAAO,GAAW,GAAG,CAAC;SAGpB,KAAI,CAAC,MAAM,GAAG,CAAC,CAAC;SAChB,KAAI,CAAC,MAAM,GAAG,KAAK,CAAC;;MACrB;KACD,mCAAQ,GAAR,UAAS,CAAS;SAChB,IAAM,GAAG,GAAY,IAAI,OAAO,EAAE,CAAC;SACnC,IAAM,EAAE,GAAc,IAAI,SAAS,EAAE,CAAC;SACtC,IAAM,EAAE,GAAc,IAAI,SAAS,EAAE,CAAC;SACtC,IAAM,EAAE,GAAc,IAAI,SAAS,EAAE,CAAC;SACtC,IAAM,MAAM,GAAc,IAAI,CAAC,MAAM,CAAC;SACtC,IAAM,CAAC,GAAW,MAAM,CAAC,MAAM,CAAC;SAChC,IAAI,CAAC,GAAG,CAAC;aAAE,OAAO,CAAC,GAAG,CAAC,iCAAiC,CAAC,CAAC;SAC1D,IAAM,KAAK,GAAW,CAAC,CAAC,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC;SACtD,IAAI,QAAQ,GAAW,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;SACzC,IAAI,MAAM,GAAW,KAAK,GAAG,QAAQ,CAAC;SACtC,IAAI,IAAI,CAAC,MAAM,EAAE;aACf,QAAQ,IAAI,QAAQ,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,MAAM,CAAC,MAAM,CAAC;UACrG;cAAM,IAAI,MAAM,KAAK,CAAC,IAAI,QAAQ,KAAK,CAAC,GAAG,CAAC,EAAE;aAC7C,QAAQ,GAAG,CAAC,GAAG,CAAC,CAAC;aACjB,MAAM,GAAG,CAAC,CAAC;UACZ;SACD,IAAI,EAAW,EAAE,EAAW,EAAE,EAAW,EAAE,EAAW,CAAC;SACvD,IAAI,IAAI,CAAC,MAAM,IAAI,QAAQ,GAAG,CAAC,EAAE;aAC/B,EAAE,GAAG,MAAM,CAAC,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;UACjC;cAAM;;aAEL,GAAG,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;aACpD,EAAE,GAAG,GAAG,CAAC;UACV;SACD,EAAE,GAAG,MAAM,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC;SAC1B,EAAE,GAAG,MAAM,CAAC,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;SAChC,IAAI,IAAI,CAAC,MAAM,IAAI,QAAQ,GAAG,CAAC,GAAG,CAAC,EAAE;aACnC,EAAE,GAAG,MAAM,CAAC,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;UACjC;cAAM;;aAEL,GAAG,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;aAChE,EAAE,GAAG,GAAG,CAAC;UACV;SACD,IAAI,IAAI,CAAC,IAAI,KAAK,SAAS,IAAI,IAAI,CAAC,IAAI,KAAK,aAAa,IAAI,IAAI,CAAC,IAAI,KAAK,SAAS,EAAE;;aAErF,IAAM,GAAG,GAAW,IAAI,CAAC,IAAI,KAAK,SAAS,GAAG,GAAG,GAAG,IAAI,CAAC;aACzD,IAAI,GAAG,GAAW,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,iBAAiB,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;aAC1D,IAAI,GAAG,GAAW,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,iBAAiB,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;aAC1D,IAAI,GAAG,GAAW,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,iBAAiB,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;;aAE1D,IAAI,GAAG,GAAG,IAAI;iBAAE,GAAG,GAAG,GAAG,CAAC;aAC1B,IAAI,GAAG,GAAG,IAAI;iBAAE,GAAG,GAAG,GAAG,CAAC;aAC1B,IAAI,GAAG,GAAG,IAAI;iBAAE,GAAG,GAAG,GAAG,CAAC;aAC1B,EAAE,CAAC,wBAAwB,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;aACnE,EAAE,CAAC,wBAAwB,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;aACnE,EAAE,CAAC,wBAAwB,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;UACpE;cAAM,IAAI,IAAI,CAAC,IAAI,KAAK,YAAY,EAAE;aACrC,IAAM,OAAO,GAAW,IAAI,CAAC,OAAO,CAAC;aACrC,EAAE,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC;aACnD,EAAE,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC;aACnD,EAAE,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC;UACpD;SACD,IAAM,CAAC,GAAY,IAAI,OAAO,CAC5B,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,EACf,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,EACf,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,CAChB,CAAC;SACF,OAAO,CAAC,CAAC;MACV;KACH,uBAAC;CAAD,CAtEA,CAAsC,KAAK,GAsE1C;CACD;;;;;;;;CAQA;KAAA;MAsCC;;;;;;;;;KAzBC,wBAAI,GAAJ,UAAK,EAAU,EAAE,EAAU,EAAE,EAAU,EAAE,EAAU;SACjD,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;SACb,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;SACb,IAAI,CAAC,EAAE,GAAG,CAAE,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC;SAC1C,IAAI,CAAC,EAAE,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;MACrC;KACD,4CAAwB,GAAxB,UAAyB,EAAU,EAAE,EAAU,EAAE,EAAU,EAAE,EAAU,EAAE,GAAW,EAAE,GAAW,EAAE,GAAW;;SAE5G,IAAI,EAAE,GAAW,CAAC,EAAE,GAAG,EAAE,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,EAAE,KAAK,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,IAAI,GAAG,CAAC;SAC7E,IAAI,EAAE,GAAW,CAAC,EAAE,GAAG,EAAE,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,EAAE,KAAK,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,IAAI,GAAG,CAAC;;SAE7E,EAAE,IAAI,GAAG,CAAC;SACV,EAAE,IAAI,GAAG,CAAC;;SAEV,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;MAC3B;;KAED,kCAAc,GAAd,UAAe,EAAU,EAAE,EAAU,EAAE,EAAU,EAAE,EAAU,EAAE,OAAe;SAC5E,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE,OAAO,IAAI,EAAE,GAAG,EAAE,CAAC,EAAE,OAAO,IAAI,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;MAC7D;KACD,wBAAI,GAAJ,UAAK,CAAS;SACZ,IAAM,EAAE,GAAW,CAAC,GAAG,CAAC,CAAC;SACzB,IAAM,EAAE,GAAW,EAAE,GAAG,CAAC,CAAC;SAC1B,OAAO,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,GAAG,CAAC,GAAG,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;MAC5D;KACH,gBAAC;CAAD,CAAC,IAAA;;CC/HD;;;AAGA;KAAwCA,sCAAgB;KACtD,4BAAY,MAAiB;SAA7B,iBAKC;SAJC,OAAO,CAAC,IAAI,CAAC,kFAAkF,CAAC,CAAC;SACjG,QAAA,kBAAM,MAAM,CAAC,SAAC;SACd,KAAI,CAAC,IAAI,GAAG,YAAY,CAAC;SACzB,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC;;MACpB;KACH,yBAAC;CAAD,CAPA,CAAwC,gBAAgB;;CCFxD;;;AAGA;KAAkCA,gCAAc;KAE9C,sBAAY,MAAsB;SAAtB,uBAAA,EAAA,WAAsB;SAAlC,YACE,iBAAO,SAGR;SAFC,OAAO,CAAC,IAAI,CAAC,0EAA0E,CAAC,CAAC;SACzF,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC;;MACtB;KACD,+BAAQ,GAAR,UAAS,CAAS;SAChB,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;SACzB,IAAI,KAAK,GAAG,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,CAAC;SACpC,IAAI,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;SACjC,IAAI,MAAM,GAAG,KAAK,GAAG,QAAQ,CAAC;SAC9B,IAAI,MAAM,GAAG,MAAM,CAAC,QAAQ,KAAK,CAAC,GAAG,QAAQ,GAAG,QAAQ,GAAG,CAAC,CAAC,CAAC;SAC9D,IAAI,MAAM,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC;SAC9B,IAAI,MAAM,GAAG,MAAM,CAAC,QAAQ,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC,GAAG,QAAQ,GAAG,CAAC,CAAC,CAAC;SACrF,IAAI,MAAM,GAAG,MAAM,CAAC,QAAQ,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC,GAAG,QAAQ,GAAG,CAAC,CAAC,CAAC;SACrF,IAAI,WAAW,GAAG,UAAU,CAAC,WAAW,CAAC;SACzC,OAAO,IAAI,OAAO,CAChB,WAAW,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,EAC3D,WAAW,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,EAC3D,WAAW,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAC5D,CAAC;MACH;KACH,mBAAC;CAAD,CAvBA,CAAkC,KAAK;;CCHvC;;;AAGA;KAAuCA,qCAAc;KAKnD,2BAAY,EAAW,EAAE,EAAW,EAAE,EAAW,EAAE,EAAW;SAA9D,YACE,iBAAO,SAKR;SAJC,KAAI,CAAC,EAAE,GAAG,EAAE,CAAC;SACb,KAAI,CAAC,EAAE,GAAG,EAAE,CAAC;SACb,KAAI,CAAC,EAAE,GAAG,EAAE,CAAC;SACb,KAAI,CAAC,EAAE,GAAG,EAAE,CAAC;;MACd;KACD,oCAAQ,GAAR,UAAS,CAAS;SAChB,IAAI,EAAE,GAAG,UAAU,CAAC,EAAE,CAAC;SACvB,OAAO,IAAI,OAAO,CAChB,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,EACjD,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,EACjD,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAClD,CAAC;MACH;KACH,wBAAC;CAAD,CApBA,CAAuC,KAAK;;CCH5C;;;AAGA;KAA2CA,yCAAc;KAIvD,+BAAY,EAAW,EAAE,EAAW,EAAE,EAAW;SAAjD,YACE,iBAAO,SAIR;SAHC,KAAI,CAAC,EAAE,GAAG,EAAE,CAAC;SACb,KAAI,CAAC,EAAE,GAAG,EAAE,CAAC;SACb,KAAI,CAAC,EAAE,GAAG,EAAE,CAAC;;MACd;KACD,wCAAQ,GAAR,UAAS,CAAS;SAChB,IAAI,EAAE,GAAG,UAAU,CAAC,EAAE,CAAC;SACvB,OAAO,IAAI,OAAO,CAChB,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,EACtC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,EACtC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CACvC,CAAC;MACH;KACH,4BAAC;CAAD,CAlBA,CAA2C,KAAK;;CCJhD;;;AAGA;KAAgCA,8BAAc;KAG5C,oBAAY,EAAW,EAAE,EAAW;SAApC,YACE,iBAAO,SAGR;SAFC,KAAI,CAAC,EAAE,GAAG,EAAE,CAAC;SACb,KAAI,CAAC,EAAE,GAAG,EAAE,CAAC;;MACd;KACD,6BAAQ,GAAR,UAAS,CAAS;SAChB,IAAI,CAAC,KAAK,CAAC,EAAE;aACX,OAAO,IAAI,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC;UACxB;SACD,IAAI,MAAM,GAAG,IAAI,OAAO,EAAE,CAAC;SAC3B,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC;SACpC,MAAM,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;SACzB,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;SACpB,OAAO,MAAM,CAAC;MACf;KACH,iBAAC;CAAD,CAlBA,CAAgC,KAAK;;CCJrC;;;AAGA;KAA8BA,4BAAY;KACxC,kBAAY,EAAU,EAAE,EAAU,EAAE,OAAe,EAAE,WAAmB,EAAE,SAAiB,EAAE,UAAmB;gBAC9G,kBAAM,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,WAAW,EAAE,SAAS,EAAE,UAAU,CAAC;MACpE;KACH,eAAC;CAAD,CAJA,CAA8B,YAAY;;CCD1C;;;AAGA;KAAA;MAoBC;KAnBQ,oCAAyB,GAAhC,UAAiC,QAAa,EAAE,SAAc;SAC5D,IAAI,KAAK,GAAG,IAAI,KAAK,EAAE,CAAC;SACxB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAG,EAAE;aACjD,KAAK,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UAC7C;SACD,OAAO,KAAK,CAAC;MACd;KACM,iBAAM,GAAb,UAAc,KAAU,EAAE,MAAW,EAAE,KAAU;SAC/C,KAAK,CAAC,WAAW,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;SACtC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;SACrB,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;MAClB;KACM,iBAAM,GAAb,UAAc,KAAU,EAAE,KAAU,EAAE,MAAW;SAC/C,IAAI,kBAAkB,GAAG,IAAI,OAAO,EAAE,CAAC;SACvC,kBAAkB,CAAC,UAAU,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;SAClD,KAAK,CAAC,WAAW,CAAC,kBAAkB,CAAC,CAAC;SACtC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;SACpB,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;MACnB;KACH,iBAAC;CAAD,CAAC;;;KCJ0BA,yBAAK;KAC9B,eAAY,CAAS,EAAE,CAAS,EAAE,CAAS,EAAE,CAAS,EAAE,MAAe,EAAE,KAAY,EAAE,aAAqB;SAA5G,iBAGC;SAFC,OAAO,CAAC,IAAI,CAAC,sEAAsE,CAAC,CAAC;SACrF,QAAA,kBAAM,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,MAAM,EAAE,KAAK,EAAE,aAAa,CAAC,SAAC;;MAC9C;KACH,YAAC;CAAD,CALA,CAA2B,KAAK,GAK/B;KACY,SAAS,GAAG,CAAC,CAAC;AAC3B,KAAa,UAAU,GAAG,CAAC,CAAC;AAC5B;KACgCA,8BAAM;KACpC,oBAAY,QAAa,EAAE,QAAa;SAAxC,iBAGC;SAFC,OAAO,CAAC,IAAI,CAAC,oDAAoD,CAAC,CAAC;SACnE,QAAA,kBAAM,QAAQ,EAAE,QAAQ,CAAC,SAAC;;MAC3B;KACH,iBAAC;CAAD,CALA,CAAgC,MAAM,GAKrC;;KAEmCA,kCAAM;KACxC,wBAAY,QAAa,EAAE,QAAa;SAAxC,iBAGC;SAFC,OAAO,CAAC,IAAI,CAAC,wDAAwD,CAAC,CAAC;SACvE,QAAA,kBAAM,QAAQ,EAAE,QAAQ,CAAC,SAAC;;MAC3B;KACH,qBAAC;CAAD,CALA,CAAoC,MAAM,GAKzC;;KACuCA,sCAAc;KACpD,4BAAY,UAAe;SAA3B,iBAGC;SAFC,OAAO,CAAC,IAAI,CAAC,oEAAoE,CAAC,CAAC;SACnF,QAAA,kBAAM,UAAU,CAAC,SAAC;;MACnB;KACH,yBAAC;CAAD,CALA,CAAwC,cAAc,GAKrD;;KAC0CA,yCAAc;KACvD,+BAAY,UAAe;SAA3B,iBAGC;SAFC,OAAO,CAAC,IAAI,CAAC,uEAAuE,CAAC,CAAC;SACtF,QAAA,kBAAM,UAAU,CAAC,SAAC;;MACnB;KACH,4BAAC;CAAD,CALA,CAA2C,cAAc,GAKxD;;KAC2CA,0CAAc;KACxD,gCAAY,UAAe;SAA3B,iBAGC;SAFC,OAAO,CAAC,IAAI,CAAC,wEAAwE,CAAC,CAAC;SACvF,QAAA,kBAAM,UAAU,CAAC,SAAC;;MACnB;KACH,6BAAC;CAAD,CALA,CAA4C,cAAc,GAKzD;;KAC2BA,0BAAO;KACjC,gBAAY,CAAS,EAAE,CAAS,EAAE,CAAS;SAA3C,iBAGC;SAFC,OAAO,CAAC,IAAI,CAAC,2DAA2D,CAAC,CAAC;SAC1E,QAAA,kBAAM,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,SAAC;;MAChB;KACH,aAAC;CAAD,CALA,CAA4B,OAAO,GAKlC;CACD;AACA;KAAiCA,+BAAY;KAC3C,qBAAY,MAAW,EAAE,GAAsB;SAAtB,oBAAA,EAAA,cAAsB;SAA/C,iBAGC;SAFC,OAAO,CAAC,IAAI,CAAC,sEAAsE,CAAC,CAAC;SACrF,QAAA,kBAAM,IAAI,aAAa,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,IAAI,iBAAiB,CAAC,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC,CAAC,SAAC;;MAClF;KACH,kBAAC;CAAD,CALA,CAAiC,YAAY,GAK5C;;KACoCA,mCAAY;KAC/C,yBAAY,MAAW,EAAE,GAAsB;SAAtB,oBAAA,EAAA,cAAsB;SAA/C,iBAGC;SAFC,OAAO,CAAC,IAAI,CAAC,8EAA8E,CAAC,CAAC;SAC7F,QAAA,kBAAM,IAAI,iBAAiB,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,IAAI,iBAAiB,CAAC,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC,CAAC,SAAC;;MACtF;KACH,sBAAC;CAAD,CALA,CAAqC,YAAY,GAKhD;CACD;AACA;KAAA;MAeC;KAdQ,mBAAK,GAAZ,UAAa,SAAc,EAAE,SAAc,EAAE,mBAA2B;SACtE,OAAO,CAAC,IAAI,CAAC,+HAA+H,CAAC,CAAC;SAC9I,IAAI,MAAM,CAAC;SACX,IAAI,SAAS,YAAY,IAAI,EAAE;aAC7B,SAAS,CAAC,gBAAgB,IAAI,SAAS,CAAC,YAAY,EAAE,CAAC;aACvD,MAAM,GAAG,SAAS,CAAC,MAAM,CAAC;aAC1B,SAAS,GAAG,SAAS,CAAC,QAAQ,CAAC;UAChC;SACD,SAAS,CAAC,KAAK,CAAC,SAAS,EAAE,MAAM,EAAE,mBAAmB,CAAC,CAAC;MACzD;KACM,oBAAM,GAAb,UAAc,QAAa;SACzB,OAAO,CAAC,IAAI,CAAC,2FAA2F,CAAC,CAAC;SAC1G,OAAO,QAAQ,CAAC,MAAM,EAAE,CAAC;MAC1B;KACH,oBAAC;CAAD,CAAC,IAAA;;KACD;MAwBC;KAtBQ,sBAAW,GAAlB,UAAmB,GAAW,EAAE,OAAe,EAAE,MAAW,EAAE,OAAY;SACxE,OAAO,CAAC,IAAI,CAAC,sFAAsF,CAAC,CAAC;SACrG,IAAM,MAAM,GAAG,IAAI,aAAa,EAAE,CAAC;SACnC,MAAM,CAAC,cAAc,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;SACxC,IAAM,OAAO,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,MAAM,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;SAC7D,IAAI,OAAO;aAAE,OAAO,CAAC,OAAO,GAAG,OAAO,CAAC;SACvC,OAAO,OAAO,CAAC;MAChB;KACD,oCAAe,GAAf,UAAgB,IAAc,EAAE,OAAe,EAAE,MAAW,EAAE,OAAY;SACxE,OAAO,CAAC,IAAI,CAAC,8FAA8F,CAAC,CAAC;SAC7G,IAAM,MAAM,GAAG,IAAI,iBAAiB,EAAE,CAAC;SACvC,MAAM,CAAC,cAAc,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;SAC9C,IAAM,OAAO,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;SAC9D,IAAI,OAAO;aAAE,OAAO,CAAC,OAAO,GAAG,OAAO,CAAC;SACvC,OAAO,OAAO,CAAC;MAChB;KACD,0CAAqB,GAArB;SACE,OAAO,CAAC,KAAK,CAAC,uFAAuF,CAAC,CAAC;MACxG;KACD,8CAAyB,GAAzB;SACE,OAAO,CAAC,KAAK,CAAC,2FAA2F,CAAC,CAAC;MAC5G;KACH,iBAAC;CAAD,CAAC,IAAA;CACD;AACA;KACE;SACE,OAAO,CAAC,KAAK,CAAC,wEAAwE,CAAC,CAAC;MACzF;KACD,iCAAa,GAAb,UAAc,MAAe,EAAE,MAAc;SAC3C,OAAO,CAAC,IAAI,CAAC,4DAA4D,CAAC,CAAC;SAC3E,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;MACxB;KACD,mCAAe,GAAf,UAAgB,MAAe,EAAE,MAAc;SAC7C,OAAO,CAAC,IAAI,CAAC,gEAAgE,CAAC,CAAC;SAC/E,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;MAC1B;KACD,8BAAU,GAAV,UAAW,MAAe,EAAE,MAAc;SACxC,OAAO,CAAC,KAAK,CAAC,kEAAkE,CAAC,CAAC;MACnF;KACH,gBAAC;CAAD,CAAC,IAAA;CACD;AACA;KAEE;SACE,OAAO,CAAC,KAAK,CAAC,iFAAiF,CAAC,CAAC;SACjG,IAAI,CAAC,UAAU,GAAuB,QAAQ,CAAC,eAAe,CAAC,8BAA8B,EAAE,QAAQ,CAAC,CAAC;MAC1G;KACD,8BAAK,GAAL,eAAU;KACV,+BAAM,GAAN,eAAW;KACX,sCAAa,GAAb,eAAkB;KAClB,gCAAO,GAAP,eAAY;KACd,qBAAC;CAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}